### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.IList`1
  id: IList`1
  children:
  - Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)
  - Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  - Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)
  - Microsoft.VisualC.StlClr.IList`1.back
  - Microsoft.VisualC.StlClr.IList`1.back_item
  - Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  - Microsoft.VisualC.StlClr.IList`1.clear
  - Microsoft.VisualC.StlClr.IList`1.empty
  - Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  - Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IList`1.front
  - Microsoft.VisualC.StlClr.IList`1.front_item
  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)
  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)
  - Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)
  - Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  - Microsoft.VisualC.StlClr.IList`1.pop_back
  - Microsoft.VisualC.StlClr.IList`1.pop_front
  - Microsoft.VisualC.StlClr.IList`1.push_back(`0)
  - Microsoft.VisualC.StlClr.IList`1.push_front(`0)
  - Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  - Microsoft.VisualC.StlClr.IList`1.remove(`0)
  - Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  - Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)
  - Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)
  - Microsoft.VisualC.StlClr.IList`1.reverse
  - Microsoft.VisualC.StlClr.IList`1.size
  - Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  - Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1)
  - Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList`1)
  - Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  langs:
  - csharp
  - vb
  name: IList<TValue>
  nameWithType: IList<TValue>
  fullName: Microsoft.VisualC.StlClr.IList<TValue>
  type: Interface
  syntax:
    content: 'public interface IList<TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>, System.Collections.ICollection'
    typeParameters:
    - id: TValue
      description: Parameter description to be filled
  implements:
  - Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>
  - System.Collections.ICollection
  - System.ICloneable
- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)
  id: assign(System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: assign(IEnumerable)
  nameWithType: IList<TValue>.assign(IEnumerable)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.assign(IEnumerable)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void assign (System.Collections.IEnumerable _Right);
    parameters:
    - id: _Right
      type: System.Collections.IEnumerable
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.assign*
- uid: Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  id: assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: assign(IInputIterator,IInputIterator)
  nameWithType: IList<TValue>.assign(IInputIterator,IInputIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.assign(IInputIterator,IInputIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void assign (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);
    parameters:
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator{TValue}
      description: Parameter description to be filled
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.assign*
- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)
  id: assign(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: assign(Int32,TValue)
  nameWithType: IList<TValue>.assign(Int32,TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.assign(Int32,TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void assign (int _Count, TValue _Val);
    parameters:
    - id: _Count
      type: System.Int32
      description: Parameter description to be filled
    - id: _Val
      type: TValue
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.assign*
- uid: Microsoft.VisualC.StlClr.IList`1.back
  id: back
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: back()
  nameWithType: IList<TValue>.back()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.back()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public TValue back ();
    parameters: []
    return:
      type: TValue@
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.back_item
  id: back_item
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: back_item
  nameWithType: IList<TValue>.back_item
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.back_item
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public TValue back_item { get; set; }
    return:
      type: TValue
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: begin(ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.begin(ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.begin(ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.clear
  id: clear
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: clear()
  nameWithType: IList<TValue>.clear()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.clear()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.empty
  id: empty
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: empty()
  nameWithType: IList<TValue>.empty()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.empty()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public bool empty ();
    parameters: []
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  id: end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: end(ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.end(ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.end(ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.erase*
- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    - id: _First_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Last_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.erase*
- uid: Microsoft.VisualC.StlClr.IList`1.front
  id: front
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: front()
  nameWithType: IList<TValue>.front()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.front()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public TValue front ();
    parameters: []
    return:
      type: TValue@
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.front_item
  id: front_item
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: front_item
  nameWithType: IList<TValue>.front_item
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.front_item
  type: Property
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public TValue front_item { get; set; }
    return:
      type: TValue
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: insert(ContainerBidirectionalIterator,IEnumerable)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator,IEnumerable)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.insert(ContainerBidirectionalIterator,IEnumerable)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where_iter, System.Collections.IEnumerable _Right);
    parameters:
    - id: _Where_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Right
      type: System.Collections.IEnumerable
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.insert*
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: insert(ContainerBidirectionalIterator,IInputIterator,IInputIterator)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator,IInputIterator,IInputIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.insert(ContainerBidirectionalIterator,IInputIterator,IInputIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator{TValue}
      description: Parameter description to be filled
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.insert*
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: insert(ContainerBidirectionalIterator,Int32,TValue)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator,Int32,TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.insert(ContainerBidirectionalIterator,Int32,TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, int _Count, TValue _Val);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Count
      type: System.Int32
      description: Parameter description to be filled
    - id: _Val
      type: TValue
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.insert*
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: insert(ContainerBidirectionalIterator,ContainerBidirectionalIterator,TValue)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator,ContainerBidirectionalIterator,TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.insert(ContainerBidirectionalIterator,ContainerBidirectionalIterator,TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Val
      type: TValue
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.insert*
- uid: Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  id: merge(Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: merge(IList,BinaryDelegate)
  nameWithType: IList<TValue>.merge(IList,BinaryDelegate)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.merge(IList,BinaryDelegate)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void merge (Microsoft.VisualC.StlClr.IList<TValue> _Right, Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> _Pred);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList{TValue}
      description: Parameter description to be filled
    - id: _Pred
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.pop_back
  id: pop_back
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: pop_back()
  nameWithType: IList<TValue>.pop_back()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.pop_back()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void pop_back ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.pop_front
  id: pop_front
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: pop_front()
  nameWithType: IList<TValue>.pop_front()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.pop_front()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void pop_front ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.push_back(`0)
  id: push_back(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: push_back(TValue)
  nameWithType: IList<TValue>.push_back(TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.push_back(TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void push_back (TValue _Val);
    parameters:
    - id: _Val
      type: TValue
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.push_front(`0)
  id: push_front(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: push_front(TValue)
  nameWithType: IList<TValue>.push_front(TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.push_front(TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void push_front (TValue _Val);
    parameters:
    - id: _Val
      type: TValue
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: rbegin(ReverseBidirectionalIterator)
  nameWithType: IList<TValue>.rbegin(ReverseBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.rbegin(ReverseBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.remove(`0)
  id: remove(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: remove(TValue)
  nameWithType: IList<TValue>.remove(TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.remove(TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void remove (TValue _Val);
    parameters:
    - id: _Val
      type: TValue
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: rend(ReverseBidirectionalIterator)
  nameWithType: IList<TValue>.rend(ReverseBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.rend(ReverseBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)
  id: resize(System.Int32)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: resize(Int32)
  nameWithType: IList<TValue>.resize(Int32)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.resize(Int32)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void resize (int _Newsize);
    parameters:
    - id: _Newsize
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.resize*
- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)
  id: resize(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: resize(Int32,TValue)
  nameWithType: IList<TValue>.resize(Int32,TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.resize(Int32,TValue)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void resize (int _Newsize, TValue _Val);
    parameters:
    - id: _Newsize
      type: System.Int32
      description: Parameter description to be filled
    - id: _Val
      type: TValue
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.resize*
- uid: Microsoft.VisualC.StlClr.IList`1.reverse
  id: reverse
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: reverse()
  nameWithType: IList<TValue>.reverse()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.reverse()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void reverse ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.size
  id: size
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: size()
  nameWithType: IList<TValue>.size()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.size()
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public int size ();
    parameters: []
    return:
      type: System.Int32
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  id: sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: sort(BinaryDelegate)
  nameWithType: IList<TValue>.sort(BinaryDelegate)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.sort(BinaryDelegate)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void sort (Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> _Pred);
    parameters:
    - id: _Pred
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1)
  id: splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: splice(ContainerBidirectionalIterator,IList)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator,IList)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.splice(ContainerBidirectionalIterator,IList)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList<TValue> _Right);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.splice*
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  id: splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList<TValue> _Right, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList{TValue}
      description: Parameter description to be filled
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.splice*
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  id: splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void splice (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, Microsoft.VisualC.StlClr.IList<TValue> _Right, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last);
    parameters:
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList{TValue}
      description: Parameter description to be filled
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.IList`1.splice*
- uid: Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList`1)
  id: swap(Microsoft.VisualC.StlClr.IList`1)
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: swap(IList)
  nameWithType: IList<TValue>.swap(IList)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.swap(IList)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void swap (Microsoft.VisualC.StlClr.IList<TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.IList{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  id: unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  langs:
  - csharp
  - vb
  name: unique(BinaryDelegate)
  nameWithType: IList<TValue>.unique(BinaryDelegate)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.unique(BinaryDelegate)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void unique (Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> _Pred);
    parameters:
    - id: _Pred
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
references:
- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: assign(IEnumerable)
  nameWithType: IList<TValue>.assign(IEnumerable)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.assign(IEnumerable)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: assign(IInputIterator,IInputIterator)
  nameWithType: IList<TValue>.assign(IInputIterator,IInputIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.assign(IInputIterator,IInputIterator)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: assign(Int32,TValue)
  nameWithType: IList<TValue>.assign(Int32,TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.assign(Int32,TValue)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.IList`1.back
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: back()
  nameWithType: IList<TValue>.back()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.back()
- uid: Microsoft.VisualC.StlClr.IList`1.back_item
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: back_item
  nameWithType: IList<TValue>.back_item
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.back_item
- uid: Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: begin(ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.begin(ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.begin(ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.clear
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: clear()
  nameWithType: IList<TValue>.clear()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.clear()
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1.empty
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: empty()
  nameWithType: IList<TValue>.empty()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.empty()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: end(ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.end(ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.end(ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.erase(ContainerBidirectionalIterator,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.front
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: front()
  nameWithType: IList<TValue>.front()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.front()
- uid: Microsoft.VisualC.StlClr.IList`1.front_item
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: front_item
  nameWithType: IList<TValue>.front_item
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.front_item
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Collections.IEnumerable)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: insert(ContainerBidirectionalIterator,IEnumerable)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator,IEnumerable)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.insert(ContainerBidirectionalIterator,IEnumerable)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: insert(ContainerBidirectionalIterator,IInputIterator,IInputIterator)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator,IInputIterator,IInputIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.insert(ContainerBidirectionalIterator,IInputIterator,IInputIterator)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: insert(ContainerBidirectionalIterator,Int32,TValue)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator,Int32,TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.insert(ContainerBidirectionalIterator,Int32,TValue)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: insert(ContainerBidirectionalIterator,ContainerBidirectionalIterator,TValue)
  nameWithType: IList<TValue>.insert(ContainerBidirectionalIterator,ContainerBidirectionalIterator,TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.insert(ContainerBidirectionalIterator,ContainerBidirectionalIterator,TValue)
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: merge(IList,BinaryDelegate)
  nameWithType: IList<TValue>.merge(IList,BinaryDelegate)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.merge(IList,BinaryDelegate)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: IList<TValue>
  nameWithType: IList<TValue>
  fullName: Microsoft.VisualC.StlClr.IList<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.pop_back
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: pop_back()
  nameWithType: IList<TValue>.pop_back()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.pop_back()
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1.pop_front
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: pop_front()
  nameWithType: IList<TValue>.pop_front()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.pop_front()
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1.push_back(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: push_back(TValue)
  nameWithType: IList<TValue>.push_back(TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.push_back(TValue)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1.push_front(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: push_front(TValue)
  nameWithType: IList<TValue>.push_front(TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.push_front(TValue)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: rbegin(ReverseBidirectionalIterator)
  nameWithType: IList<TValue>.rbegin(ReverseBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.rbegin(ReverseBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.remove(`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: remove(TValue)
  nameWithType: IList<TValue>.remove(TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.remove(TValue)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: rend(ReverseBidirectionalIterator)
  nameWithType: IList<TValue>.rend(ReverseBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.rend(ReverseBidirectionalIterator)
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: resize(Int32)
  nameWithType: IList<TValue>.resize(Int32)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.resize(Int32)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: resize(Int32,TValue)
  nameWithType: IList<TValue>.resize(Int32,TValue)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.resize(Int32,TValue)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.IList`1.reverse
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: reverse()
  nameWithType: IList<TValue>.reverse()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.reverse()
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1.size
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: size()
  nameWithType: IList<TValue>.size()
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.size()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: sort(BinaryDelegate)
  nameWithType: IList<TValue>.sort(BinaryDelegate)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.sort(BinaryDelegate)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: splice(ContainerBidirectionalIterator,IList)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator,IList)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.splice(ContainerBidirectionalIterator,IList)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: IList<TValue>
  nameWithType: IList<TValue>
  fullName: Microsoft.VisualC.StlClr.IList<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: IList<TValue>
  nameWithType: IList<TValue>
  fullName: Microsoft.VisualC.StlClr.IList<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.IList`1,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  nameWithType: IList<TValue>.splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.splice(ContainerBidirectionalIterator,IList,ContainerBidirectionalIterator,ContainerBidirectionalIterator)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: IList<TValue>
  nameWithType: IList<TValue>
  fullName: Microsoft.VisualC.StlClr.IList<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList`1)
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: swap(IList)
  nameWithType: IList<TValue>.swap(IList)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.swap(IList)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: IList<TValue>
  nameWithType: IList<TValue>
  fullName: Microsoft.VisualC.StlClr.IList<TValue>
- uid: Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  name: unique(BinaryDelegate)
  nameWithType: IList<TValue>.unique(BinaryDelegate)
  fullName: Microsoft.VisualC.StlClr.IList<TValue>.unique(BinaryDelegate)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.IList`1.assign*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  nameWithType: IList<TValue>.
- uid: Microsoft.VisualC.StlClr.IList`1.erase*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  nameWithType: IList<TValue>.
- uid: Microsoft.VisualC.StlClr.IList`1.insert*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  nameWithType: IList<TValue>.
- uid: Microsoft.VisualC.StlClr.IList`1.resize*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  nameWithType: IList<TValue>.
- uid: Microsoft.VisualC.StlClr.IList`1.splice*
  parent: Microsoft.VisualC.StlClr.IList`1
  isExternal: false
  nameWithType: IList<TValue>.
