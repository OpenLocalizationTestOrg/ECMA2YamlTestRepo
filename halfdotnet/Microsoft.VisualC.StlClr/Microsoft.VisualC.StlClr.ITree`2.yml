### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.ITree`2
  id: ITree`2
  children:
  - Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  - Microsoft.VisualC.StlClr.ITree`2.clear
  - Microsoft.VisualC.StlClr.ITree`2.count(`0)
  - Microsoft.VisualC.StlClr.ITree`2.empty
  - Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  - Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  - Microsoft.VisualC.StlClr.ITree`2.erase(`0)
  - Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  - Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  - Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})
  - Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})
  - Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  - Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  - Microsoft.VisualC.StlClr.ITree`2.key_comp
  - Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  - Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  - Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  - Microsoft.VisualC.StlClr.ITree`2.size
  - Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})
  - Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  - Microsoft.VisualC.StlClr.ITree`2.value_comp
  langs:
  - csharp
  - vb
  name: ITree<TKey,TValue>
  nameWithType: ITree<TKey,TValue>
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>
  type: Interface
  syntax:
    content: >-
      [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005")]

      public interface ITree<TKey,TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>, System.Collections.ICollection
    typeParameters:
    - id: TKey
      description: Parameter description to be filled
    - id: TValue
      description: Parameter description to be filled
  implements:
  - Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>
  - System.Collections.ICollection
  - System.ICloneable
- uid: Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: begin
  nameWithType: ITree<TKey,TValue>.begin
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.begin
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.clear
  id: clear
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: clear
  nameWithType: ITree<TKey,TValue>.clear
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.clear
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.count(`0)
  id: count(`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: count
  nameWithType: ITree<TKey,TValue>.count
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.count
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public int count (TKey _Keyval);
    parameters:
    - id: _Keyval
      type: TKey
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.empty
  id: empty
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: empty
  nameWithType: ITree<TKey,TValue>.empty
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.empty
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public bool empty ();
    parameters: []
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  id: end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: end
  nameWithType: ITree<TKey,TValue>.end
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.end
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  id: equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: equal_range
  nameWithType: ITree<TKey,TValue>.equal_range
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.equal_range
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) equal_range (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}}
      description: Parameter description to be filled
    - id: _Keyval
      type: TKey
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(`0)
  id: erase(`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: erase
  nameWithType: ITree<TKey,TValue>.erase
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.erase
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public int erase (TKey _Keyval);
    parameters:
    - id: _Keyval
      type: TKey
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.ITree`2.erase*
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: erase
  nameWithType: ITree<TKey,TValue>.erase
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.erase
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.ITree`2.erase*
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: erase
  nameWithType: ITree<TKey,TValue>.erase
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.erase
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    - id: _First_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Last_iter
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.ITree`2.erase*
- uid: Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  id: find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: find
  nameWithType: ITree<TKey,TValue>.find
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.find
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    - id: _Keyval
      type: TKey
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})
  id: insert(System.Collections.Generic.IEnumerable{`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.insert
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (System.Collections.Generic.IEnumerable<TValue> _Right);
    parameters:
    - id: _Right
      type: System.Collections.Generic.IEnumerable{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.ITree`2.insert*
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})
  id: insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.insert
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);
    parameters:
    - id: _First
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator{TValue}
      description: Parameter description to be filled
    - id: _Last
      type: Microsoft.VisualC.StlClr.Generic.IInputIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.ITree`2.insert*
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  id: insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.insert
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,bool> , TValue _Val);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},System.Boolean}
      description: Parameter description to be filled
    - id: _Val
      type: TValue
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.ITree`2.insert*
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.insert
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    - id: _Where
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator
      description: Parameter description to be filled
    - id: _Val
      type: TValue
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
  overload: Microsoft.VisualC.StlClr.ITree`2.insert*
- uid: Microsoft.VisualC.StlClr.ITree`2.key_comp
  id: key_comp
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: key_comp
  nameWithType: ITree<TKey,TValue>.key_comp
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.key_comp
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TKey,TKey,bool> key_comp ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TKey,TKey,System.Boolean}
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  id: lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: lower_bound
  nameWithType: ITree<TKey,TValue>.lower_bound
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.lower_bound
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    - id: _Keyval
      type: TKey
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: rbegin
  nameWithType: ITree<TKey,TValue>.rbegin
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.rbegin
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: rend
  nameWithType: ITree<TKey,TValue>.rend
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.rend
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{TValue}
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.size
  id: size
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: size
  nameWithType: ITree<TKey,TValue>.size
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.size
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public int size ();
    parameters: []
    return:
      type: System.Int32
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})
  id: swap(Microsoft.VisualC.StlClr.ITree{`0,`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: swap
  nameWithType: ITree<TKey,TValue>.swap
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.swap
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void swap (Microsoft.VisualC.StlClr.ITree<TKey,TValue> _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.ITree{TKey,TValue}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  id: upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: upper_bound
  nameWithType: ITree<TKey,TValue>.upper_bound
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.upper_bound
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);
    parameters:
    - id: ''
      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}
      description: Parameter description to be filled
    - id: _Keyval
      type: TKey
      description: Parameter description to be filled
    return:
      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)
      description: Return description to be filled
- uid: Microsoft.VisualC.StlClr.ITree`2.value_comp
  id: value_comp
  parent: Microsoft.VisualC.StlClr.ITree`2
  langs:
  - csharp
  - vb
  name: value_comp
  nameWithType: ITree<TKey,TValue>.value_comp
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.value_comp
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> value_comp ();
    parameters: []
    return:
      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}
      description: Return description to be filled
references:
- uid: Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: begin
  nameWithType: ITree<TKey,TValue>.begin
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.begin
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.clear
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: clear
  nameWithType: ITree<TKey,TValue>.clear
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.ITree`2.count(`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: count
  nameWithType: ITree<TKey,TValue>.count
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.ITree`2.empty
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: empty
  nameWithType: ITree<TKey,TValue>.empty
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.empty
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: end
  nameWithType: ITree<TKey,TValue>.end
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.end
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: equal_range
  nameWithType: ITree<TKey,TValue>.equal_range
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.equal_range
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: erase
  nameWithType: ITree<TKey,TValue>.erase
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.erase
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: erase
  nameWithType: ITree<TKey,TValue>.erase
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.erase
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: erase
  nameWithType: ITree<TKey,TValue>.erase
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.erase
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: find
  nameWithType: ITree<TKey,TValue>.find
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.find
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.insert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.insert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: IInputIterator<TValue>
  nameWithType: IInputIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.insert
- uid: Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.insert
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.key_comp
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: key_comp
  nameWithType: ITree<TKey,TValue>.key_comp
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.key_comp
- uid: Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: lower_bound
  nameWithType: ITree<TKey,TValue>.lower_bound
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.lower_bound
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: rbegin
  nameWithType: ITree<TKey,TValue>.rbegin
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.rbegin
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: rend
  nameWithType: ITree<TKey,TValue>.rend
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.rend
- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ReverseBidirectionalIterator<TValue>
  nameWithType: ReverseBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.size
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: size
  nameWithType: ITree<TKey,TValue>.size
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.size
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: swap
  nameWithType: ITree<TKey,TValue>.swap
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.swap
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.VisualC.StlClr.ITree`2
  parent: Microsoft.VisualC.StlClr
  isExternal: false
  name: ITree<TKey,TValue>
  nameWithType: ITree<TKey,TValue>
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: upper_bound
  nameWithType: ITree<TKey,TValue>.upper_bound
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.upper_bound
- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1
  parent: Microsoft.VisualC.StlClr.Generic
  isExternal: false
  name: ContainerBidirectionalIterator<TValue>
  nameWithType: ContainerBidirectionalIterator<TValue>
  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>
- uid: Microsoft.VisualC.StlClr.ITree`2.value_comp
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: value_comp
  nameWithType: ITree<TKey,TValue>.value_comp
  fullName: Microsoft.VisualC.StlClr.ITree<TKey,TValue>.value_comp
- uid: Microsoft.VisualC.StlClr.ITree`2.erase*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: erase
  nameWithType: ITree<TKey,TValue>.erase
- uid: Microsoft.VisualC.StlClr.ITree`2.insert*
  parent: Microsoft.VisualC.StlClr.ITree`2
  isExternal: false
  name: insert
  nameWithType: ITree<TKey,TValue>.insert
