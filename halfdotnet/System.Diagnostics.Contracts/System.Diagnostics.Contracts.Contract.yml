### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Contracts.Contract
  id: Contract
  children:
  - System.Diagnostics.Contracts.Contract.Assert(System.Boolean)
  - System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)
  - System.Diagnostics.Contracts.Contract.Assume(System.Boolean)
  - System.Diagnostics.Contracts.Contract.Assume(System.Boolean,System.String)
  - System.Diagnostics.Contracts.Contract.ContractFailed
  - System.Diagnostics.Contracts.Contract.EndContractBlock
  - System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)
  - System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)
  - System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)
  - System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)
  - System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})
  - System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  - System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})
  - System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  - System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)
  - System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)
  - System.Diagnostics.Contracts.Contract.OldValue``1(``0)
  - System.Diagnostics.Contracts.Contract.Requires(System.Boolean)
  - System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)
  - System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)
  - System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)
  - System.Diagnostics.Contracts.Contract.Result``1
  - System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)
  langs:
  - csharp
  - vb
  name: Contract
  nameWithType: Contract
  fullName: System.Diagnostics.Contracts.Contract
  type: Class
  syntax:
    content: public static class Contract
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Diagnostics.Contracts.Contract.Assert(System.Boolean)
  id: Assert(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Assert
  nameWithType: Contract.Assert
  fullName: System.Diagnostics.Contracts.Contract.Assert
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Assert (bool condition);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Assert*
- uid: System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)
  id: Assert(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Assert
  nameWithType: Contract.Assert
  fullName: System.Diagnostics.Contracts.Contract.Assert
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Assert (bool condition, string userMessage);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    - id: userMessage
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Assert*
- uid: System.Diagnostics.Contracts.Contract.Assume(System.Boolean)
  id: Assume(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Assume
  nameWithType: Contract.Assume
  fullName: System.Diagnostics.Contracts.Contract.Assume
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Assume (bool condition);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Assume*
- uid: System.Diagnostics.Contracts.Contract.Assume(System.Boolean,System.String)
  id: Assume(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Assume
  nameWithType: Contract.Assume
  fullName: System.Diagnostics.Contracts.Contract.Assume
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Assume (bool condition, string userMessage);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    - id: userMessage
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Assume*
- uid: System.Diagnostics.Contracts.Contract.ContractFailed
  id: ContractFailed
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: ContractFailed
  nameWithType: Contract.ContractFailed
  fullName: System.Diagnostics.Contracts.Contract.ContractFailed
  type: Event
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static event EventHandler<System.Diagnostics.Contracts.ContractFailedEventArgs> ContractFailed;
    return:
      type: System.EventHandler{System.Diagnostics.Contracts.ContractFailedEventArgs}
      description: Return description to be filled
- uid: System.Diagnostics.Contracts.Contract.EndContractBlock
  id: EndContractBlock
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: EndContractBlock
  nameWithType: Contract.EndContractBlock
  fullName: System.Diagnostics.Contracts.Contract.EndContractBlock
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void EndContractBlock ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)
  id: Ensures(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Ensures
  nameWithType: Contract.Ensures
  fullName: System.Diagnostics.Contracts.Contract.Ensures
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Ensures (bool condition);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Ensures*
- uid: System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)
  id: Ensures(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Ensures
  nameWithType: Contract.Ensures
  fullName: System.Diagnostics.Contracts.Contract.Ensures
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Ensures (bool condition, string userMessage);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    - id: userMessage
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Ensures*
- uid: System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)
  id: EnsuresOnThrow``1(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: EnsuresOnThrow<TException>
  nameWithType: Contract.EnsuresOnThrow<TException>
  fullName: System.Diagnostics.Contracts.Contract.EnsuresOnThrow<TException>
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: 'public static void EnsuresOnThrow<TException> (bool condition) where TException : Exception;'
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.EnsuresOnThrow<TException>*
- uid: System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)
  id: EnsuresOnThrow``1(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: EnsuresOnThrow<TException>
  nameWithType: Contract.EnsuresOnThrow<TException>
  fullName: System.Diagnostics.Contracts.Contract.EnsuresOnThrow<TException>
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: 'public static void EnsuresOnThrow<TException> (bool condition, string userMessage) where TException : Exception;'
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    - id: userMessage
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.EnsuresOnThrow<TException>*
- uid: System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})
  id: Exists(System.Int32,System.Int32,System.Predicate{System.Int32})
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: Contract.Exists
  fullName: System.Diagnostics.Contracts.Contract.Exists
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static bool Exists (int fromInclusive, int toExclusive, Predicate<int> predicate);
    parameters:
    - id: fromInclusive
      type: System.Int32
      description: Parameter description to be filled
    - id: toExclusive
      type: System.Int32
      description: Parameter description to be filled
    - id: predicate
      type: System.Predicate{System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  id: Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Exists<T>
  nameWithType: Contract.Exists<T>
  fullName: System.Diagnostics.Contracts.Contract.Exists<T>
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static bool Exists<T> (System.Collections.Generic.IEnumerable<T> collection, Predicate<T> predicate);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    - id: predicate
      type: System.Predicate{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})
  id: ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: ForAll
  nameWithType: Contract.ForAll
  fullName: System.Diagnostics.Contracts.Contract.ForAll
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static bool ForAll (int fromInclusive, int toExclusive, Predicate<int> predicate);
    parameters:
    - id: fromInclusive
      type: System.Int32
      description: Parameter description to be filled
    - id: toExclusive
      type: System.Int32
      description: Parameter description to be filled
    - id: predicate
      type: System.Predicate{System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  id: ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: ForAll<T>
  nameWithType: Contract.ForAll<T>
  fullName: System.Diagnostics.Contracts.Contract.ForAll<T>
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static bool ForAll<T> (System.Collections.Generic.IEnumerable<T> collection, Predicate<T> predicate);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    - id: predicate
      type: System.Predicate{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)
  id: Invariant(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Invariant
  nameWithType: Contract.Invariant
  fullName: System.Diagnostics.Contracts.Contract.Invariant
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Invariant (bool condition);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Invariant*
- uid: System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)
  id: Invariant(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Invariant
  nameWithType: Contract.Invariant
  fullName: System.Diagnostics.Contracts.Contract.Invariant
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Invariant (bool condition, string userMessage);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    - id: userMessage
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Invariant*
- uid: System.Diagnostics.Contracts.Contract.OldValue``1(``0)
  id: OldValue``1(``0)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: OldValue<T>
  nameWithType: Contract.OldValue<T>
  fullName: System.Diagnostics.Contracts.Contract.OldValue<T>
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static T OldValue<T> (T value);
    parameters:
    - id: value
      type: T
      description: Parameter description to be filled
    return:
      type: T
      description: Return description to be filled
- uid: System.Diagnostics.Contracts.Contract.Requires(System.Boolean)
  id: Requires(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Requires
  nameWithType: Contract.Requires
  fullName: System.Diagnostics.Contracts.Contract.Requires
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Requires (bool condition);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Requires*
- uid: System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)
  id: Requires(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Requires
  nameWithType: Contract.Requires
  fullName: System.Diagnostics.Contracts.Contract.Requires
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static void Requires (bool condition, string userMessage);
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    - id: userMessage
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Requires*
- uid: System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)
  id: Requires``1(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Requires<TException>
  nameWithType: Contract.Requires<TException>
  fullName: System.Diagnostics.Contracts.Contract.Requires<TException>
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: 'public static void Requires<TException> (bool condition) where TException : Exception;'
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Requires<TException>*
- uid: System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)
  id: Requires``1(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Requires<TException>
  nameWithType: Contract.Requires<TException>
  fullName: System.Diagnostics.Contracts.Contract.Requires<TException>
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: 'public static void Requires<TException> (bool condition, string userMessage) where TException : Exception;'
    parameters:
    - id: condition
      type: System.Boolean
      description: Parameter description to be filled
    - id: userMessage
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Diagnostics.Contracts.Contract.Requires<TException>*
- uid: System.Diagnostics.Contracts.Contract.Result``1
  id: Result``1
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: Result<T>
  nameWithType: Contract.Result<T>
  fullName: System.Diagnostics.Contracts.Contract.Result<T>
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static T Result<T> ();
    parameters: []
    return:
      type: T
      description: Return description to be filled
- uid: System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)
  id: ValueAtReturn``1(``0@)
  parent: System.Diagnostics.Contracts.Contract
  langs:
  - csharp
  - vb
  name: ValueAtReturn<T>
  nameWithType: Contract.ValueAtReturn<T>
  fullName: System.Diagnostics.Contracts.Contract.ValueAtReturn<T>
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Contracts
  syntax:
    content: public static T ValueAtReturn<T> (out T value);
    parameters:
    - id: value
      type: T
      description: Parameter description to be filled
    return:
      type: T
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Contracts.Contract.Assert(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assert
  nameWithType: Contract.Assert
  fullName: System.Diagnostics.Contracts.Contract.Assert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assert
  nameWithType: Contract.Assert
  fullName: System.Diagnostics.Contracts.Contract.Assert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Contracts.Contract.Assume(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assume
  nameWithType: Contract.Assume
  fullName: System.Diagnostics.Contracts.Contract.Assume
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Contracts.Contract.Assume(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assume
  nameWithType: Contract.Assume
  fullName: System.Diagnostics.Contracts.Contract.Assume
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Contracts.Contract.ContractFailed
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: ContractFailed
  nameWithType: Contract.ContractFailed
  fullName: System.Diagnostics.Contracts.Contract.ContractFailed
- uid: System.Diagnostics.Contracts.Contract.EndContractBlock
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: EndContractBlock
  nameWithType: Contract.EndContractBlock
  fullName: System.Diagnostics.Contracts.Contract.EndContractBlock
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Ensures
  nameWithType: Contract.Ensures
  fullName: System.Diagnostics.Contracts.Contract.Ensures
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Ensures
  nameWithType: Contract.Ensures
  fullName: System.Diagnostics.Contracts.Contract.Ensures
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: EnsuresOnThrow<TException>
  nameWithType: Contract.EnsuresOnThrow<TException>
  fullName: System.Diagnostics.Contracts.Contract.EnsuresOnThrow<TException>
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: EnsuresOnThrow<TException>
  nameWithType: Contract.EnsuresOnThrow<TException>
  fullName: System.Diagnostics.Contracts.Contract.EnsuresOnThrow<TException>
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Exists
  nameWithType: Contract.Exists
  fullName: System.Diagnostics.Contracts.Contract.Exists
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Exists<T>
  nameWithType: Contract.Exists<T>
  fullName: System.Diagnostics.Contracts.Contract.Exists<T>
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Predicate`1
  parent: System
  isExternal: false
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: ForAll
  nameWithType: Contract.ForAll
  fullName: System.Diagnostics.Contracts.Contract.ForAll
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: ForAll<T>
  nameWithType: Contract.ForAll<T>
  fullName: System.Diagnostics.Contracts.Contract.ForAll<T>
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Predicate`1
  parent: System
  isExternal: false
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Invariant
  nameWithType: Contract.Invariant
  fullName: System.Diagnostics.Contracts.Contract.Invariant
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Invariant
  nameWithType: Contract.Invariant
  fullName: System.Diagnostics.Contracts.Contract.Invariant
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Contracts.Contract.OldValue``1(``0)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: OldValue<T>
  nameWithType: Contract.OldValue<T>
  fullName: System.Diagnostics.Contracts.Contract.OldValue<T>
- uid: System.Diagnostics.Contracts.Contract.Requires(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Requires
  nameWithType: Contract.Requires
  fullName: System.Diagnostics.Contracts.Contract.Requires
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Requires
  nameWithType: Contract.Requires
  fullName: System.Diagnostics.Contracts.Contract.Requires
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Requires<TException>
  nameWithType: Contract.Requires<TException>
  fullName: System.Diagnostics.Contracts.Contract.Requires<TException>
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Requires<TException>
  nameWithType: Contract.Requires<TException>
  fullName: System.Diagnostics.Contracts.Contract.Requires<TException>
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Contracts.Contract.Result``1
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Result<T>
  nameWithType: Contract.Result<T>
  fullName: System.Diagnostics.Contracts.Contract.Result<T>
- uid: System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: ValueAtReturn<T>
  nameWithType: Contract.ValueAtReturn<T>
  fullName: System.Diagnostics.Contracts.Contract.ValueAtReturn<T>
- uid: System.Diagnostics.Contracts.Contract.Assert
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assert
  nameWithType: Contract.Assert
- uid: System.Diagnostics.Contracts.Contract.Assume
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assert
  nameWithType: Contract.Assert
- uid: System.Diagnostics.Contracts.Contract.Ensures
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assert
  nameWithType: Contract.Assert
- uid: System.Diagnostics.Contracts.Contract.EnsuresOnThrow<TException>
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assert
  nameWithType: Contract.Assert
- uid: System.Diagnostics.Contracts.Contract.Invariant
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assert
  nameWithType: Contract.Assert
- uid: System.Diagnostics.Contracts.Contract.Requires
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assert
  nameWithType: Contract.Assert
- uid: System.Diagnostics.Contracts.Contract.Requires<TException>
  parent: System.Diagnostics.Contracts.Contract
  isExternal: false
  name: Assert
  nameWithType: Contract.Assert
