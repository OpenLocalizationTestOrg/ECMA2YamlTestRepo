### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.BuildManager
  id: BuildManager
  children:
  - Microsoft.Build.Execution.BuildManager.#ctor
  - Microsoft.Build.Execution.BuildManager.#ctor(System.String)
  - Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters)
  - Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)
  - Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData)
  - Microsoft.Build.Execution.BuildManager.CancelAllSubmissions
  - Microsoft.Build.Execution.BuildManager.DefaultBuildManager
  - Microsoft.Build.Execution.BuildManager.Dispose
  - Microsoft.Build.Execution.BuildManager.EndBuild
  - Microsoft.Build.Execution.BuildManager.Finalize
  - Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project)
  - Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)
  - Microsoft.Build.Execution.BuildManager.ResetCaches
  langs:
  - csharp
  - vb
  name: BuildManager
  nameWithType: BuildManager
  fullName: Microsoft.Build.Execution.BuildManager
  type: Class
  syntax:
    content: 'public class BuildManager : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Microsoft.Build.Execution.BuildManager.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: BuildManager..ctor
  fullName: Microsoft.Build.Execution.BuildManager..ctor
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public BuildManager ();
    parameters: []
- uid: Microsoft.Build.Execution.BuildManager.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: BuildManager..ctor
  fullName: Microsoft.Build.Execution.BuildManager..ctor
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public BuildManager (string hostName);
    parameters:
    - id: hostName
      type: System.String
      description: Parameter description to be filled
- uid: Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters)
  id: BeginBuild(Microsoft.Build.Execution.BuildParameters)
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: BeginBuild
  nameWithType: BuildManager.BeginBuild
  fullName: Microsoft.Build.Execution.BuildManager.BeginBuild
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public void BeginBuild (Microsoft.Build.Execution.BuildParameters parameters);
    parameters:
    - id: parameters
      type: Microsoft.Build.Execution.BuildParameters
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)
  id: Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: Build
  nameWithType: BuildManager.Build
  fullName: Microsoft.Build.Execution.BuildManager.Build
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public Microsoft.Build.Execution.BuildResult Build (Microsoft.Build.Execution.BuildParameters parameters, Microsoft.Build.Execution.BuildRequestData requestData);
    parameters:
    - id: parameters
      type: Microsoft.Build.Execution.BuildParameters
      description: Parameter description to be filled
    - id: requestData
      type: Microsoft.Build.Execution.BuildRequestData
      description: Parameter description to be filled
    return:
      type: Microsoft.Build.Execution.BuildResult
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData)
  id: BuildRequest(Microsoft.Build.Execution.BuildRequestData)
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: BuildRequest
  nameWithType: BuildManager.BuildRequest
  fullName: Microsoft.Build.Execution.BuildManager.BuildRequest
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public Microsoft.Build.Execution.BuildResult BuildRequest (Microsoft.Build.Execution.BuildRequestData requestData);
    parameters:
    - id: requestData
      type: Microsoft.Build.Execution.BuildRequestData
      description: Parameter description to be filled
    return:
      type: Microsoft.Build.Execution.BuildResult
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.CancelAllSubmissions
  id: CancelAllSubmissions
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: CancelAllSubmissions
  nameWithType: BuildManager.CancelAllSubmissions
  fullName: Microsoft.Build.Execution.BuildManager.CancelAllSubmissions
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public void CancelAllSubmissions ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.DefaultBuildManager
  id: DefaultBuildManager
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: DefaultBuildManager
  nameWithType: BuildManager.DefaultBuildManager
  fullName: Microsoft.Build.Execution.BuildManager.DefaultBuildManager
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public static Microsoft.Build.Execution.BuildManager DefaultBuildManager { get; }
    return:
      type: Microsoft.Build.Execution.BuildManager
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.Dispose
  id: Dispose
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: Dispose
  nameWithType: BuildManager.Dispose
  fullName: Microsoft.Build.Execution.BuildManager.Dispose
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public void Dispose ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.EndBuild
  id: EndBuild
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: EndBuild
  nameWithType: BuildManager.EndBuild
  fullName: Microsoft.Build.Execution.BuildManager.EndBuild
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public void EndBuild ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.Finalize
  id: Finalize
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: Finalize
  nameWithType: BuildManager.Finalize
  fullName: Microsoft.Build.Execution.BuildManager.Finalize
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: ~BuildManager ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project)
  id: GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project)
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: GetProjectInstanceForBuild
  nameWithType: BuildManager.GetProjectInstanceForBuild
  fullName: Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance GetProjectInstanceForBuild (Microsoft.Build.Evaluation.Project project);
    parameters:
    - id: project
      type: Microsoft.Build.Evaluation.Project
      description: Parameter description to be filled
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)
  id: PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: PendBuildRequest
  nameWithType: BuildManager.PendBuildRequest
  fullName: Microsoft.Build.Execution.BuildManager.PendBuildRequest
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public Microsoft.Build.Execution.BuildSubmission PendBuildRequest (Microsoft.Build.Execution.BuildRequestData requestData);
    parameters:
    - id: requestData
      type: Microsoft.Build.Execution.BuildRequestData
      description: Parameter description to be filled
    return:
      type: Microsoft.Build.Execution.BuildSubmission
      description: Return description to be filled
- uid: Microsoft.Build.Execution.BuildManager.ResetCaches
  id: ResetCaches
  parent: Microsoft.Build.Execution.BuildManager
  langs:
  - csharp
  - vb
  name: ResetCaches
  nameWithType: BuildManager.ResetCaches
  fullName: Microsoft.Build.Execution.BuildManager.ResetCaches
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  syntax:
    content: public void ResetCaches ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Execution.BuildManager.#ctor
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: .ctor
  nameWithType: BuildManager..ctor
  fullName: Microsoft.Build.Execution.BuildManager..ctor
- uid: Microsoft.Build.Execution.BuildManager.#ctor(System.String)
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: .ctor
  nameWithType: BuildManager..ctor
  fullName: Microsoft.Build.Execution.BuildManager..ctor
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters)
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: BeginBuild
  nameWithType: BuildManager.BeginBuild
  fullName: Microsoft.Build.Execution.BuildManager.BeginBuild
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.Build.Execution.BuildParameters
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildParameters
  nameWithType: BuildParameters
  fullName: Microsoft.Build.Execution.BuildParameters
- uid: Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: Build
  nameWithType: BuildManager.Build
  fullName: Microsoft.Build.Execution.BuildManager.Build
- uid: Microsoft.Build.Execution.BuildResult
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildResult
  nameWithType: BuildResult
  fullName: Microsoft.Build.Execution.BuildResult
- uid: Microsoft.Build.Execution.BuildParameters
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildParameters
  nameWithType: BuildParameters
  fullName: Microsoft.Build.Execution.BuildParameters
- uid: Microsoft.Build.Execution.BuildRequestData
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildRequestData
  nameWithType: BuildRequestData
  fullName: Microsoft.Build.Execution.BuildRequestData
- uid: Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData)
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: BuildRequest
  nameWithType: BuildManager.BuildRequest
  fullName: Microsoft.Build.Execution.BuildManager.BuildRequest
- uid: Microsoft.Build.Execution.BuildResult
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildResult
  nameWithType: BuildResult
  fullName: Microsoft.Build.Execution.BuildResult
- uid: Microsoft.Build.Execution.BuildRequestData
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildRequestData
  nameWithType: BuildRequestData
  fullName: Microsoft.Build.Execution.BuildRequestData
- uid: Microsoft.Build.Execution.BuildManager.CancelAllSubmissions
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: CancelAllSubmissions
  nameWithType: BuildManager.CancelAllSubmissions
  fullName: Microsoft.Build.Execution.BuildManager.CancelAllSubmissions
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.Build.Execution.BuildManager.DefaultBuildManager
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: DefaultBuildManager
  nameWithType: BuildManager.DefaultBuildManager
  fullName: Microsoft.Build.Execution.BuildManager.DefaultBuildManager
- uid: Microsoft.Build.Execution.BuildManager
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildManager
  nameWithType: BuildManager
  fullName: Microsoft.Build.Execution.BuildManager
- uid: Microsoft.Build.Execution.BuildManager.Dispose
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: Dispose
  nameWithType: BuildManager.Dispose
  fullName: Microsoft.Build.Execution.BuildManager.Dispose
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.Build.Execution.BuildManager.EndBuild
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: EndBuild
  nameWithType: BuildManager.EndBuild
  fullName: Microsoft.Build.Execution.BuildManager.EndBuild
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.Build.Execution.BuildManager.Finalize
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: Finalize
  nameWithType: BuildManager.Finalize
  fullName: Microsoft.Build.Execution.BuildManager.Finalize
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project)
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: GetProjectInstanceForBuild
  nameWithType: BuildManager.GetProjectInstanceForBuild
  fullName: Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild
- uid: Microsoft.Build.Execution.ProjectInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
- uid: Microsoft.Build.Evaluation.Project
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
- uid: Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: PendBuildRequest
  nameWithType: BuildManager.PendBuildRequest
  fullName: Microsoft.Build.Execution.BuildManager.PendBuildRequest
- uid: Microsoft.Build.Execution.BuildSubmission
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildSubmission
  nameWithType: BuildSubmission
  fullName: Microsoft.Build.Execution.BuildSubmission
- uid: Microsoft.Build.Execution.BuildRequestData
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildRequestData
  nameWithType: BuildRequestData
  fullName: Microsoft.Build.Execution.BuildRequestData
- uid: Microsoft.Build.Execution.BuildManager.ResetCaches
  parent: Microsoft.Build.Execution.BuildManager
  isExternal: false
  name: ResetCaches
  nameWithType: BuildManager.ResetCaches
  fullName: Microsoft.Build.Execution.BuildManager.ResetCaches
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
