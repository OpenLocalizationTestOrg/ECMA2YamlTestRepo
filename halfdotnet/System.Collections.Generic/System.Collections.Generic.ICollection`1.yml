### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.ICollection`1
  id: ICollection`1
  children:
  - System.Collections.Generic.ICollection`1.Add(`0)
  - System.Collections.Generic.ICollection`1.Clear
  - System.Collections.Generic.ICollection`1.Contains(`0)
  - System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.ICollection`1.Count
  - System.Collections.Generic.ICollection`1.IsReadOnly
  - System.Collections.Generic.ICollection`1.Remove(`0)
  langs:
  - csharp
  - vb
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  type: Interface
  syntax:
    content: 'public interface ICollection<T> : System.Collections.Generic.IEnumerable<T>'
    typeParameters:
    - id: T
      description: Parameter description to be filled
  implements:
  - System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  id: Add(`0)
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: ICollection<T>.Add
  fullName: System.Collections.Generic.ICollection<T>.Add
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Add (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.ICollection`1.Clear
  id: Clear
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  - vb
  name: Clear
  nameWithType: ICollection<T>.Clear
  fullName: System.Collections.Generic.ICollection<T>.Clear
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: ICollection<T>.Contains
  fullName: System.Collections.Generic.ICollection<T>.Contains
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool Contains (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  - vb
  name: CopyTo
  nameWithType: ICollection<T>.CopyTo
  fullName: System.Collections.Generic.ICollection<T>.CopyTo
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo (T[] array, int arrayIndex);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.ICollection`1.Count
  id: Count
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.ICollection`1
  langs:
  - csharp
  - vb
  name: Remove
  nameWithType: ICollection<T>.Remove
  fullName: System.Collections.Generic.ICollection<T>.Remove
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool Remove (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
references:
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Add
  nameWithType: ICollection<T>.Add
  fullName: System.Collections.Generic.ICollection<T>.Add
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.ICollection`1.Clear
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Clear
  nameWithType: ICollection<T>.Clear
  fullName: System.Collections.Generic.ICollection<T>.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Contains
  nameWithType: ICollection<T>.Contains
  fullName: System.Collections.Generic.ICollection<T>.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: CopyTo
  nameWithType: ICollection<T>.CopyTo
  fullName: System.Collections.Generic.ICollection<T>.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  name: Remove
  nameWithType: ICollection<T>.Remove
  fullName: System.Collections.Generic.ICollection<T>.Remove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
