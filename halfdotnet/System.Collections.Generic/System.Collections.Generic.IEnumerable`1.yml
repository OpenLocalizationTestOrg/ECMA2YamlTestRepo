### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.IEnumerable`1
  id: IEnumerable`1
  children:
  - System.Collections.Generic.IEnumerable`1.GetEnumerator
  langs:
  - csharp
  - vb
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  type: Interface
  syntax:
    content: 'public interface IEnumerable<out T> : System.Collections.IEnumerable'
    typeParameters:
    - id: T
      description: Parameter description to be filled
  implements:
  - System.Collections.IEnumerable
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.IEnumerator<out T> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{T}
      description: Return description to be filled
references:
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
