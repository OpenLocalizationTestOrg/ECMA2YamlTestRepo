### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.HashSet`1
  id: HashSet`1
  children:
  - System.Collections.Generic.HashSet`1.#ctor
  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  - System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.HashSet`1.Add(`0)
  - System.Collections.Generic.HashSet`1.Clear
  - System.Collections.Generic.HashSet`1.Comparer
  - System.Collections.Generic.HashSet`1.Contains(`0)
  - System.Collections.Generic.HashSet`1.CopyTo(`0[])
  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  - System.Collections.Generic.HashSet`1.Count
  - System.Collections.Generic.HashSet`1.CreateSetComparer
  - System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.GetEnumerator
  - System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
  - System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.Remove(`0)
  - System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
  - System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.HashSet`1.TrimExcess
  - System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  langs:
  - csharp
  - vb
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  type: Class
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.HashSetDebugView`1))]

      public class HashSet<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.ISet<T>, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
    typeParameters:
    - id: T
      description: Parameter description to be filled
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<T>
  - System.Collections.Generic.IEnumerable<T>
  - System.Collections.Generic.IReadOnlyCollection<T>
  - System.Collections.Generic.ISet<T>
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Collections.Generic.HashSet`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public HashSet ();
    parameters: []
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public HashSet (System.Collections.Generic.IEnumerable<T> collection);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public HashSet (System.Collections.Generic.IEqualityComparer<T> comparer);
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{T}
      description: Parameter description to be filled
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public HashSet (System.Collections.Generic.IEnumerable<T> collection, System.Collections.Generic.IEqualityComparer<T> comparer);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{T}
      description: Parameter description to be filled
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: protected HashSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Parameter description to be filled
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Parameter description to be filled
- uid: System.Collections.Generic.HashSet`1.Add(`0)
  id: Add(`0)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: HashSet<T>.Add
  fullName: System.Collections.Generic.HashSet<T>.Add
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool Add (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.Clear
  id: Clear
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: Clear
  nameWithType: HashSet<T>.Clear
  fullName: System.Collections.Generic.HashSet<T>.Clear
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.Comparer
  id: Comparer
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: Comparer
  nameWithType: HashSet<T>.Comparer
  fullName: System.Collections.Generic.HashSet<T>.Comparer
  type: Property
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.IEqualityComparer<T> Comparer { get; }
    return:
      type: System.Collections.Generic.IEqualityComparer{T}
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: HashSet<T>.Contains
  fullName: System.Collections.Generic.HashSet<T>.Contains
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool Contains (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
  id: CopyTo(`0[])
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: CopyTo
  nameWithType: HashSet<T>.CopyTo
  fullName: System.Collections.Generic.HashSet<T>.CopyTo
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo (T[] array);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Collections.Generic.HashSet`1.CopyTo*
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: CopyTo
  nameWithType: HashSet<T>.CopyTo
  fullName: System.Collections.Generic.HashSet<T>.CopyTo
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo (T[] array, int arrayIndex);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Collections.Generic.HashSet`1.CopyTo*
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  id: CopyTo(`0[],System.Int32,System.Int32)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: CopyTo
  nameWithType: HashSet<T>.CopyTo
  fullName: System.Collections.Generic.HashSet<T>.CopyTo
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo (T[] array, int arrayIndex, int count);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Collections.Generic.HashSet`1.CopyTo*
- uid: System.Collections.Generic.HashSet`1.Count
  id: Count
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: HashSet<T>.Count
  fullName: System.Collections.Generic.HashSet<T>.Count
  type: Property
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.CreateSetComparer
  id: CreateSetComparer
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: CreateSetComparer
  nameWithType: HashSet<T>.CreateSetComparer
  fullName: System.Collections.Generic.HashSet<T>.CreateSetComparer
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public static System.Collections.Generic.IEqualityComparer<System.Collections.Generic.HashSet<T>> CreateSetComparer ();
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.HashSet{T}}
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  id: ExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: ExceptWith
  nameWithType: HashSet<T>.ExceptWith
  fullName: System.Collections.Generic.HashSet<T>.ExceptWith
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void ExceptWith (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: GetEnumerator
  nameWithType: HashSet<T>.GetEnumerator
  fullName: System.Collections.Generic.HashSet<T>.GetEnumerator
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.HashSet<T>.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{T}+Enumerator
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: GetObjectData
  nameWithType: HashSet<T>.GetObjectData
  fullName: System.Collections.Generic.HashSet<T>.GetObjectData
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Parameter description to be filled
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  id: IntersectWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: IntersectWith
  nameWithType: HashSet<T>.IntersectWith
  fullName: System.Collections.Generic.HashSet<T>.IntersectWith
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void IntersectWith (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: IsProperSubsetOf
  nameWithType: HashSet<T>.IsProperSubsetOf
  fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: IsProperSupersetOf
  nameWithType: HashSet<T>.IsProperSupersetOf
  fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: IsSubsetOf
  nameWithType: HashSet<T>.IsSubsetOf
  fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool IsSubsetOf (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  id: IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: IsSupersetOf
  nameWithType: HashSet<T>.IsSupersetOf
  fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool IsSupersetOf (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
  id: OnDeserialization(System.Object)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: OnDeserialization
  nameWithType: HashSet<T>.OnDeserialization
  fullName: System.Collections.Generic.HashSet<T>.OnDeserialization
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public virtual void OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  id: Overlaps(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: Overlaps
  nameWithType: HashSet<T>.Overlaps
  fullName: System.Collections.Generic.HashSet<T>.Overlaps
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool Overlaps (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: Remove
  nameWithType: HashSet<T>.Remove
  fullName: System.Collections.Generic.HashSet<T>.Remove
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool Remove (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
  id: RemoveWhere(System.Predicate{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: RemoveWhere
  nameWithType: HashSet<T>.RemoveWhere
  fullName: System.Collections.Generic.HashSet<T>.RemoveWhere
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public int RemoveWhere (Predicate<T> match);
    parameters:
    - id: match
      type: System.Predicate{T}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  id: SetEquals(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: SetEquals
  nameWithType: HashSet<T>.SetEquals
  fullName: System.Collections.Generic.HashSet<T>.SetEquals
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool SetEquals (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  id: SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: SymmetricExceptWith
  nameWithType: HashSet<T>.SymmetricExceptWith
  fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void SymmetricExceptWith (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  id: System#Collections#Generic#ICollection{T}#Add(`0)
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<T>.Add
  nameWithType: HashSet<T>.System.Collections.Generic.ICollection<T>.Add
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.Add
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection<T>.Add (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: HashSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType: HashSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{T}
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HashSet<T>.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.TrimExcess
  id: TrimExcess
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: TrimExcess
  nameWithType: HashSet<T>.TrimExcess
  fullName: System.Collections.Generic.HashSet<T>.TrimExcess
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void TrimExcess ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  id: UnionWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  - vb
  name: UnionWith
  nameWithType: HashSet<T>.UnionWith
  fullName: System.Collections.Generic.HashSet<T>.UnionWith
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void UnionWith (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable{T}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Collections.Generic.HashSet`1.#ctor
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: .ctor
  nameWithType: HashSet<T>..ctor
  fullName: System.Collections.Generic.HashSet<T>..ctor
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Generic.HashSet`1.Add(`0)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Add
  nameWithType: HashSet<T>.Add
  fullName: System.Collections.Generic.HashSet<T>.Add
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.HashSet`1.Clear
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Clear
  nameWithType: HashSet<T>.Clear
  fullName: System.Collections.Generic.HashSet<T>.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.HashSet`1.Comparer
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Comparer
  nameWithType: HashSet<T>.Comparer
  fullName: System.Collections.Generic.HashSet<T>.Comparer
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Generic.HashSet`1.Contains(`0)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Contains
  nameWithType: HashSet<T>.Contains
  fullName: System.Collections.Generic.HashSet<T>.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: CopyTo
  nameWithType: HashSet<T>.CopyTo
  fullName: System.Collections.Generic.HashSet<T>.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: CopyTo
  nameWithType: HashSet<T>.CopyTo
  fullName: System.Collections.Generic.HashSet<T>.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: CopyTo
  nameWithType: HashSet<T>.CopyTo
  fullName: System.Collections.Generic.HashSet<T>.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.HashSet`1.Count
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Count
  nameWithType: HashSet<T>.Count
  fullName: System.Collections.Generic.HashSet<T>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.HashSet`1.CreateSetComparer
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: CreateSetComparer
  nameWithType: HashSet<T>.CreateSetComparer
  fullName: System.Collections.Generic.HashSet<T>.CreateSetComparer
- uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: ExceptWith
  nameWithType: HashSet<T>.ExceptWith
  fullName: System.Collections.Generic.HashSet<T>.ExceptWith
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.GetEnumerator
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: GetEnumerator
  nameWithType: HashSet<T>.GetEnumerator
  fullName: System.Collections.Generic.HashSet<T>.GetEnumerator
- uid: System.Collections.Generic.HashSet`1+Enumerator
  parent: System.Collections.Generic
  isExternal: false
  name: HashSet<T>+Enumerator
  nameWithType: HashSet<T>+Enumerator
  fullName: System.Collections.Generic.HashSet<T>+Enumerator
- uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: GetObjectData
  nameWithType: HashSet<T>.GetObjectData
  fullName: System.Collections.Generic.HashSet<T>.GetObjectData
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IntersectWith
  nameWithType: HashSet<T>.IntersectWith
  fullName: System.Collections.Generic.HashSet<T>.IntersectWith
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IsProperSubsetOf
  nameWithType: HashSet<T>.IsProperSubsetOf
  fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IsProperSupersetOf
  nameWithType: HashSet<T>.IsProperSupersetOf
  fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IsSubsetOf
  nameWithType: HashSet<T>.IsSubsetOf
  fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IsSupersetOf
  nameWithType: HashSet<T>.IsSupersetOf
  fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: OnDeserialization
  nameWithType: HashSet<T>.OnDeserialization
  fullName: System.Collections.Generic.HashSet<T>.OnDeserialization
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Overlaps
  nameWithType: HashSet<T>.Overlaps
  fullName: System.Collections.Generic.HashSet<T>.Overlaps
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.Remove(`0)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Remove
  nameWithType: HashSet<T>.Remove
  fullName: System.Collections.Generic.HashSet<T>.Remove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: RemoveWhere
  nameWithType: HashSet<T>.RemoveWhere
  fullName: System.Collections.Generic.HashSet<T>.RemoveWhere
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Predicate`1
  parent: System
  isExternal: false
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: SetEquals
  nameWithType: HashSet<T>.SetEquals
  fullName: System.Collections.Generic.HashSet<T>.SetEquals
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: SymmetricExceptWith
  nameWithType: HashSet<T>.SymmetricExceptWith
  fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.Add
  nameWithType: HashSet<T>.System.Collections.Generic.ICollection<T>.Add
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.Add
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: HashSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType: HashSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HashSet<T>.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Generic.HashSet`1.TrimExcess
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: TrimExcess
  nameWithType: HashSet<T>.TrimExcess
  fullName: System.Collections.Generic.HashSet<T>.TrimExcess
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: UnionWith
  nameWithType: HashSet<T>.UnionWith
  fullName: System.Collections.Generic.HashSet<T>.UnionWith
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.CopyTo*
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: CopyTo
  nameWithType: HashSet<T>.CopyTo
