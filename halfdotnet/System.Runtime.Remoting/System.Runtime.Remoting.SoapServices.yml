### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.SoapServices
  id: SoapServices
  children:
  - System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  - System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  - System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  - System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  - System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  - System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  - System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  - System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  - System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  - System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  - System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  - System.Runtime.Remoting.SoapServices.XmlNsForClrType
  - System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  - System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  - System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  langs:
  - csharp
  name: SoapServices
  nameWithType: SoapServices
  fullName: System.Runtime.Remoting.SoapServices
  type: Class
  summary: Provides several methods for using and publishing remoted objects in SOAP format.
  remarks: This class makes a link demand. A security exception is thrown if the immediate caller does not have infrastructure permission. See [Link Demands](../Topic/Link%20Demands.md) for more information.
  example:
  - "The following code example shows how to use the members in the SoapServices class to convert between a <xref:System.Type> object and an XML type.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#100](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#100)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class SoapServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  id: CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: CodeXmlNamespaceForClrTypeNamespace(String,String)
  nameWithType: SoapServices.CodeXmlNamespaceForClrTypeNamespace(String,String)
  fullName: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns the common language runtime type namespace name from the provided namespace and assembly names.
  remarks: "The current method is used by the .NET Framework and the SoapSuds tool to create an XML namespace name for a common language runtime object type.  \n  \n For more information about SoapSuds, see [Soapsuds Tool (Soapsuds.exe)](http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5)."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#101](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#101)]"
  syntax:
    content: public static string CodeXmlNamespaceForClrTypeNamespace (string typeNamespace, string assemblyName);
    parameters:
    - id: typeNamespace
      type: System.String
      description: The namespace that is to be coded.
    - id: assemblyName
      type: System.String
      description: The name of the assembly that is to be coded.
    return:
      type: System.String
      description: The common language runtime type namespace name from the provided namespace and assembly names.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  id: DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  nameWithType: SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  fullName: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Decodes the XML namespace and assembly names from the provided common language runtime namespace.
  remarks: 'When the .NET Framework is parsing an XML stream, it needs to know how to convert the XML read from the stream into common language runtime types. The information that specifies how the .NET Framework should generate and parse an XML stream is stored in custom attributes that are located in the <xref:System.Runtime.Remoting.Metadata> namespace. There are two ways to specify this information in a configuration file: either by explicitly specifying the mappings, or by specifying which object types to preload. The current method supports the retrieval of such mappings.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#102](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#102)]"
  syntax:
    content: public static bool DecodeXmlNamespaceForClrTypeNamespace (string inNamespace, out string typeNamespace, out string assemblyName);
    parameters:
    - id: inNamespace
      type: System.String
      description: The common language runtime namespace.
    - id: typeNamespace
      type: System.String
      description: When this method returns, contains a <see cref="T:System.String"> that holds the decoded namespace name. This parameter is passed uninitialized.
    - id: assemblyName
      type: System.String
      description: When this method returns, contains a <see cref="T:System.String"> that holds the decoded assembly name. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the namespace and assembly names were successfully decoded; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  id: GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves field type from XML attribute name, namespace, and the <see cref="T:System.Type"> of the containing object.
  remarks: Given the type of the containing object and the XML attribute and XML namespace that is read in by the .NET Framework, the current method returns the actual common language runtime field name and type of the field. The .NET Framework then uses this information to populate that field with the data read in from the XML stream.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#150](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#150)]"
  syntax:
    content: public static void GetInteropFieldTypeAndNameFromXmlAttribute (Type containingType, string xmlAttribute, string xmlNamespace, out Type type, out string name);
    parameters:
    - id: containingType
      type: System.Type
      description: The <see cref="T:System.Type"> of the object that contains the field.
    - id: xmlAttribute
      type: System.String
      description: The XML attribute name of the field type.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace of the field type.
    - id: type
      type: System.Type
      description: When this method returns, contains a <see cref="T:System.Type"> of the field. This parameter is passed uninitialized.
    - id: name
      type: System.String
      description: When this method returns, contains a <see cref="T:System.String"> that holds the name of the field. This parameter is passed uninitialized.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  id: GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the <see cref="T:System.Type"> and name of a field from the provided XML element name, namespace, and the containing type.
  remarks: Given the type of the containing object and the XML element and XML namespace that is read in by the .NET Framework, this method returns the actual common language runtime field name and type of the field. The .NET Framework then uses this information to populate that field with the data read in from the XML stream.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#150](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#150)]"
  syntax:
    content: public static void GetInteropFieldTypeAndNameFromXmlElement (Type containingType, string xmlElement, string xmlNamespace, out Type type, out string name);
    parameters:
    - id: containingType
      type: System.Type
      description: The <see cref="T:System.Type"> of the object that contains the field.
    - id: xmlElement
      type: System.String
      description: The XML element name of field.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace of the field type.
    - id: type
      type: System.Type
      description: When this method returns, contains a <see cref="T:System.Type"> of the field. This parameter is passed uninitialized.
    - id: name
      type: System.String
      description: When this method returns, contains a <see cref="T:System.String"> that holds the name of the field. This parameter is passed uninitialized.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  id: GetInteropTypeFromXmlElement(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropTypeFromXmlElement(String,String)
  nameWithType: SoapServices.GetInteropTypeFromXmlElement(String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the <see cref="T:System.Type"> that should be used during deserialization of an unrecognized object type with the given XML element name and namespace.
  remarks: The current method returns values set up through <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement%2A> and <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#160](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#160)]"
  syntax:
    content: public static Type GetInteropTypeFromXmlElement (string xmlElement, string xmlNamespace);
    parameters:
    - id: xmlElement
      type: System.String
      description: The XML element name of the unknown object type.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace of the unknown object type.
    return:
      type: System.Type
      description: The <see cref="T:System.Type"> of object associated with the specified XML element name and namespace.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  id: GetInteropTypeFromXmlType(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetInteropTypeFromXmlType(String,String)
  nameWithType: SoapServices.GetInteropTypeFromXmlType(String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the object <see cref="T:System.Type"> that should be used during deserialization of an unrecognized object type with the given XML type name and namespace.
  remarks: The current method returns values set up through <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlType%2A> and <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#160](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#160)]"
  syntax:
    content: public static Type GetInteropTypeFromXmlType (string xmlType, string xmlTypeNamespace);
    parameters:
    - id: xmlType
      type: System.String
      description: The XML type of the unknown object type.
    - id: xmlTypeNamespace
      type: System.String
      description: The XML type namespace of the unknown object type.
    return:
      type: System.Type
      description: The <see cref="T:System.Type"> of object associated with the specified XML type name and namespace.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  id: GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetSoapActionFromMethodBase(MethodBase)
  nameWithType: SoapServices.GetSoapActionFromMethodBase(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns the SOAPAction value associated with the method specified in the given <see cref="T:System.Reflection.MethodBase">.
  remarks: If the given <xref:System.Reflection.MethodBase> has not been registered with any SOAPAction value, the GetSoapActionFromMethodBase method returns the SOAPAction automatically cached with the <xref:System.Reflection.MethodBase>.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#140](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#140)]"
  syntax:
    content: public static string GetSoapActionFromMethodBase (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <see cref="T:System.Reflection.MethodBase"> that contains the method for which a SOAPAction is requested.
    return:
      type: System.String
      description: The SOAPAction value associated with the method specified in the given <see cref="T:System.Reflection.MethodBase">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  id: GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetTypeAndMethodNameFromSoapAction(String,String,String)
  nameWithType: SoapServices.GetTypeAndMethodNameFromSoapAction(String,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Determines the type and method name of the method associated with the specified SOAPAction value.
  remarks: '`true` if the type and method name lookups were successful; otherwise, `false`.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#140](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#140)]"
  syntax:
    content: public static bool GetTypeAndMethodNameFromSoapAction (string soapAction, out string typeName, out string methodName);
    parameters:
    - id: soapAction
      type: System.String
      description: The SOAPAction of the method for which the type and method names were requested.
    - id: typeName
      type: System.String
      description: When this method returns, contains a <see cref="T:System.String"> that holds the type name of the method in question. This parameter is passed uninitialized.
    - id: methodName
      type: System.String
      description: When this method returns, contains a <see cref="T:System.String"> that holds the method name of the method in question. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the type and method name were successfully recovered; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  id: GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlElementForInteropType(Type,String,String)
  nameWithType: SoapServices.GetXmlElementForInteropType(Type,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns XML element information that should be used when serializing the given type.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#103](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#103)]"
  syntax:
    content: public static bool GetXmlElementForInteropType (Type type, out string xmlElement, out string xmlNamespace);
    parameters:
    - id: type
      type: System.Type
      description: The object <see cref="T:System.Type"> for which the XML element and namespace names were requested.
    - id: xmlElement
      type: System.String
      description: When this method returns, contains a <see cref="T:System.String"> that holds the XML element name of the specified object type. This parameter is passed uninitialized.
    - id: xmlNamespace
      type: System.String
      description: When this method returns, contains a <see cref="T:System.String"> that holds the XML namespace name of the specified object type. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if the requested values have been set flagged with <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute">; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  id: GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlNamespaceForMethodCall(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the XML namespace used during remote calls of the method specified in the given <see cref="T:System.Reflection.MethodBase">.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#105](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#105)]"
  syntax:
    content: public static string GetXmlNamespaceForMethodCall (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <see cref="T:System.Reflection.MethodBase"> of the method for which the XML namespace was requested.
    return:
      type: System.String
      description: The XML namespace used during remote calls of the specified method.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  id: GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlNamespaceForMethodResponse(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Retrieves the XML namespace used during the generation of responses to the remote call to the method specified in the given <see cref="T:System.Reflection.MethodBase">.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#105](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#105)]"
  syntax:
    content: public static string GetXmlNamespaceForMethodResponse (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <see cref="T:System.Reflection.MethodBase"> of the method for which the XML namespace was requested.
    return:
      type: System.String
      description: The XML namespace used during the generation of responses to a remote method call.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  id: GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: GetXmlTypeForInteropType(Type,String,String)
  nameWithType: SoapServices.GetXmlTypeForInteropType(Type,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns XML type information that should be used when serializing the given <see cref="T:System.Type">.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#104](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#104)]"
  syntax:
    content: public static bool GetXmlTypeForInteropType (Type type, out string xmlType, out string xmlTypeNamespace);
    parameters:
    - id: type
      type: System.Type
      description: The object <see cref="T:System.Type"> for which the XML element and namespace names were requested.
    - id: xmlType
      type: System.String
      description: The XML type of the specified object <see cref="T:System.Type">.
    - id: xmlTypeNamespace
      type: System.String
      description: The XML type namespace of the specified object <see cref="T:System.Type">.
    return:
      type: System.Boolean
      description: '`true` if the requested values have been set flagged with <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute">; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  id: IsClrTypeNamespace(System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: IsClrTypeNamespace(String)
  nameWithType: SoapServices.IsClrTypeNamespace(String)
  fullName: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Returns a Boolean value that indicates whether the specified namespace is native to the common language runtime.
  remarks: "The current method is used by the SoapSuds tool to determine whether an XML namespace represents a common language runtime type or a type from a non-common language runtime system.  \n  \n For more information about SoapSuds, see [Soapsuds Tool (Soapsuds.exe)](http://msdn.microsoft.com/en-us/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5)."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#106](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#106)]"
  syntax:
    content: public static bool IsClrTypeNamespace (string namespaceString);
    parameters:
    - id: namespaceString
      type: System.String
      description: The namespace to check in the common language runtime.
    return:
      type: System.Boolean
      description: '`true` if the given namespace is native to the common language runtime; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  id: IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: IsSoapActionValidForMethodBase(String,MethodBase)
  nameWithType: SoapServices.IsSoapActionValidForMethodBase(String,MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(String,MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Determines if the specified SOAPAction is acceptable for a given <see cref="T:System.Reflection.MethodBase">.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#140](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#140)]"
  syntax:
    content: public static bool IsSoapActionValidForMethodBase (string soapAction, System.Reflection.MethodBase mb);
    parameters:
    - id: soapAction
      type: System.String
      description: The SOAPAction to check against the given <see cref="T:System.Reflection.MethodBase">.
    - id: mb
      type: System.Reflection.MethodBase
      description: The <see cref="T:System.Reflection.MethodBase"> the specified SOAPAction is checked against.
    return:
      type: System.Boolean
      description: '`true` if the specified SOAPAction is acceptable for a given <see cref="T:System.Reflection.MethodBase">; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  id: PreLoad(System.Reflection.Assembly)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: PreLoad(Assembly)
  nameWithType: SoapServices.PreLoad(Assembly)
  fullName: System.Runtime.Remoting.SoapServices.PreLoad(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Preloads every <see cref="T:System.Type"> found in the specified <xref:System.Reflection.Assembly> from the information found in the <xref:System.Runtime.Remoting.Metadata.SoapTypeAttribute> associated with each type.
  remarks: 'When the .NET Framework is parsing an XML stream, it needs to know how to convert the XML read from the stream into common language runtime types. The information that specifies how the .NET Framework should generate and parse an XML stream is stored in custom attributes that are located in the <xref:System.Runtime.Remoting.Metadata> namespace. There are two ways to specify this information in a configuration file: either by explicitly specifying the mappings, or by specifying which object types to preload. The custom attributes are read during the preloading process and the information in them is made available to the SOAP parser.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#120](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#120)]"
  syntax:
    content: public static void PreLoad (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The <see cref="T:System.Reflection.Assembly"> for each type of which to call <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.
  overload: System.Runtime.Remoting.SoapServices.PreLoad*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  id: PreLoad(System.Type)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: PreLoad(Type)
  nameWithType: SoapServices.PreLoad(Type)
  fullName: System.Runtime.Remoting.SoapServices.PreLoad(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Preloads the given <see cref="T:System.Type"> based on values set in a <xref:System.Runtime.Remoting.Metadata.SoapTypeAttribute> on the type.
  remarks: 'When the .NET Framework is parsing an XML stream, it needs to know how to convert the XML read from the stream into common language runtime types. The information that specifies how the .NET Framework should generate and parse an XML stream is stored in custom attributes that are located in the <xref:System.Runtime.Remoting.Metadata> namespace. There are two ways to specify this information in a configuration file: either by explicitly specifying the mappings, or by specifying which object types to preload. The custom attributes are read during the preloading process and the information in them is made available to the SOAP parser.'
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#121](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#121)]"
  syntax:
    content: public static void PreLoad (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The <see cref="T:System.Type"> to preload.
  overload: System.Runtime.Remoting.SoapServices.PreLoad*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  id: RegisterInteropXmlElement(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterInteropXmlElement(String,String,Type)
  nameWithType: SoapServices.RegisterInteropXmlElement(String,String,Type)
  fullName: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(String,String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Associates the given XML element name and namespace with a run-time type that should be used for deserialization.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#180](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#180)]"
  syntax:
    content: public static void RegisterInteropXmlElement (string xmlElement, string xmlNamespace, Type type);
    parameters:
    - id: xmlElement
      type: System.String
      description: The XML element name to use in deserialization.
    - id: xmlNamespace
      type: System.String
      description: The XML namespace to use in deserialization.
    - id: type
      type: System.Type
      description: The run-time <see cref="T:System.Type"> to use in deserialization.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  id: RegisterInteropXmlType(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterInteropXmlType(String,String,Type)
  nameWithType: SoapServices.RegisterInteropXmlType(String,String,Type)
  fullName: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(String,String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Associates the given XML type name and namespace with the run-time type that should be used for deserialization.
  remarks: ''
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#190](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#190)]"
  syntax:
    content: public static void RegisterInteropXmlType (string xmlType, string xmlTypeNamespace, Type type);
    parameters:
    - id: xmlType
      type: System.String
      description: The XML type to use in deserialization.
    - id: xmlTypeNamespace
      type: System.String
      description: The XML namespace to use in deserialization.
    - id: type
      type: System.Type
      description: The run-time <see cref="T:System.Type"> to use in deserialization.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  id: RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterSoapActionForMethodBase(MethodBase)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(MethodBase)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Associates the specified <see cref="T:System.Reflection.MethodBase"> with the SOAPAction cached with it.
  remarks: "The SOAPAction of the specified method is contained in the <xref:System.Runtime.Remoting.Metadata.SoapMethodAttribute.SoapAction%2A?displayProperty=fullName> property, or is read off the wire. The current method associates the SOAPAction with the <xref:System.Reflection.MethodBase> for use in channel sinks.  \n  \n The SOAPAction HTTP request header field indicates the intent of the SOAP HTTP request. The value is a URI identifying the intent. SOAP places no restrictions on the format or specificity of the URI or that it is resolvable. An HTTP client must use this header field when issuing a SOAP HTTP request."
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#170](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#170)]"
  syntax:
    content: public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <see cref="T:System.Reflection.MethodBase"> of the method to associate with the SOAPAction cached with it.
  overload: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  id: RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: RegisterSoapActionForMethodBase(MethodBase,String)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase,String)
  fullName: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(MethodBase,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Associates the provided SOAPAction value with the given <see cref="T:System.Reflection.MethodBase"> for use in channel sinks.
  remarks: The SOAPAction HTTP request header field indicates the intent of the SOAP HTTP request. The value is a URI identifying the intent. SOAP places no restrictions on the format or specificity of the URI or that it is resolvable. An HTTP client must use this header field when issuing a SOAP HTTP request.
  example:
  - "The following code example shows how to use this method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#170](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#170)]"
  syntax:
    content: public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb, string soapAction);
    parameters:
    - id: mb
      type: System.Reflection.MethodBase
      description: The <see cref="T:System.Reflection.MethodBase"> to associate with the provided SOAPAction.
    - id: soapAction
      type: System.String
      description: The SOAPAction value to associate with the given <see cref="T:System.Reflection.MethodBase">.
  overload: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrType
  id: XmlNsForClrType
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrType
  nameWithType: SoapServices.XmlNsForClrType
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Gets the XML namespace prefix for common language runtime types.
  remarks: WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. All XML namespaces for a common language runtime class start with the <xref:System.String> that the current property returns.
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#130](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#130)]"
  syntax:
    content: public static string XmlNsForClrType { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  id: XmlNsForClrTypeWithAssembly
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrTypeWithAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithAssembly
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Gets the default XML namespace prefix that should be used for XML encoding of a common language runtime class that has an assembly, but no native namespace.
  remarks: WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. If a common language runtime class has an assembly but no namespace, the current property returns the default XML namespace that is used.
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#131](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#131)]"
  syntax:
    content: public static string XmlNsForClrTypeWithAssembly { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  id: XmlNsForClrTypeWithNs
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrTypeWithNs
  nameWithType: SoapServices.XmlNsForClrTypeWithNs
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Gets the XML namespace prefix that should be used for XML encoding of a common language runtime class that is part of the mscorlib.dll file.
  remarks: WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. If a common language runtime class is part of the mscorlib assembly, the XML namespace returned by the current property is used.
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#132](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#132)]"
  syntax:
    content: public static string XmlNsForClrTypeWithNs { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  id: XmlNsForClrTypeWithNsAndAssembly
  parent: System.Runtime.Remoting.SoapServices
  langs:
  - csharp
  name: XmlNsForClrTypeWithNsAndAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithNsAndAssembly
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: Gets the default XML namespace prefix that should be used for XML encoding of a common language runtime class that has both a common language runtime namespace and an assembly.
  remarks: WSDL and SOAP protocols encode common language runtime classes into XML namespaces. The current property specifies the format for the XML namespaces. If a common language runtime class has an assembly and a common language runtime namespace, the current property returns the default XML namespace that is used.
  example:
  - "The following code example shows how to use this property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.SoapServices> class.  \n  \n [!CODE [System.Runtime.Remoting.SoapServices#133](../CodeSnippet/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices#133)]"
  syntax:
    content: public static string XmlNsForClrTypeWithNsAndAssembly { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: CodeXmlNamespaceForClrTypeNamespace(String,String)
  nameWithType: SoapServices.CodeXmlNamespaceForClrTypeNamespace(String,String)
  fullName: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  nameWithType: SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
  fullName: System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(String,String,String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(Type,String,String,Type,String)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  nameWithType: SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(Type,String,String,Type,String)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlElement(String,String)
  nameWithType: SoapServices.GetInteropTypeFromXmlElement(String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(String,String)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetInteropTypeFromXmlType(String,String)
  nameWithType: SoapServices.GetInteropTypeFromXmlType(String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(String,String)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetSoapActionFromMethodBase(MethodBase)
  nameWithType: SoapServices.GetSoapActionFromMethodBase(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(MethodBase)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetTypeAndMethodNameFromSoapAction(String,String,String)
  nameWithType: SoapServices.GetTypeAndMethodNameFromSoapAction(String,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(String,String,String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlElementForInteropType(Type,String,String)
  nameWithType: SoapServices.GetXmlElementForInteropType(Type,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(Type,String,String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodCall(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(MethodBase)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlNamespaceForMethodResponse(MethodBase)
  nameWithType: SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(MethodBase)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: GetXmlTypeForInteropType(Type,String,String)
  nameWithType: SoapServices.GetXmlTypeForInteropType(Type,String,String)
  fullName: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(Type,String,String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsClrTypeNamespace(String)
  nameWithType: SoapServices.IsClrTypeNamespace(String)
  fullName: System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: IsSoapActionValidForMethodBase(String,MethodBase)
  nameWithType: SoapServices.IsSoapActionValidForMethodBase(String,MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(String,MethodBase)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: PreLoad(Assembly)
  nameWithType: SoapServices.PreLoad(Assembly)
  fullName: System.Runtime.Remoting.SoapServices.PreLoad(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.Remoting.SoapServices.PreLoad(System.Type)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: PreLoad(Type)
  nameWithType: SoapServices.PreLoad(Type)
  fullName: System.Runtime.Remoting.SoapServices.PreLoad(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlElement(String,String,Type)
  nameWithType: SoapServices.RegisterInteropXmlElement(String,String,Type)
  fullName: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(String,String,Type)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterInteropXmlType(String,String,Type)
  nameWithType: SoapServices.RegisterInteropXmlType(String,String,Type)
  fullName: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(String,String,Type)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterSoapActionForMethodBase(MethodBase)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase)
  fullName: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(MethodBase)
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: RegisterSoapActionForMethodBase(MethodBase,String)
  nameWithType: SoapServices.RegisterSoapActionForMethodBase(MethodBase,String)
  fullName: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(MethodBase,String)
- uid: System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: false
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrType
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrType
  nameWithType: SoapServices.XmlNsForClrType
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrType
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithAssembly
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNs
  nameWithType: SoapServices.XmlNsForClrTypeWithNs
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  name: XmlNsForClrTypeWithNsAndAssembly
  nameWithType: SoapServices.XmlNsForClrTypeWithNsAndAssembly
  fullName: System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.SoapServices.PreLoad*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  nameWithType: SoapServices.
- uid: System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase*
  parent: System.Runtime.Remoting.SoapServices
  isExternal: false
  nameWithType: SoapServices.
