### YamlMime:ManagedReference
items:
- uid: System.Collections.ObjectModel.Collection`1
  id: Collection`1
  children:
  - System.Collections.ObjectModel.Collection`1.#ctor
  - System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})
  - System.Collections.ObjectModel.Collection`1.Add(`0)
  - System.Collections.ObjectModel.Collection`1.Clear
  - System.Collections.ObjectModel.Collection`1.ClearItems
  - System.Collections.ObjectModel.Collection`1.Contains(`0)
  - System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  - System.Collections.ObjectModel.Collection`1.Count
  - System.Collections.ObjectModel.Collection`1.GetEnumerator
  - System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  - System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  - System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  - System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  - System.Collections.ObjectModel.Collection`1.Items
  - System.Collections.ObjectModel.Collection`1.Remove(`0)
  - System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  - System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  - vb
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  type: Class
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))]

      [System.Runtime.InteropServices.ComVisible(false)]

      public class Collection<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.IReadOnlyList<T>, System.Collections.IList
    typeParameters:
    - id: T
      description: Parameter description to be filled
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<T>
  - System.Collections.Generic.IEnumerable<T>
  - System.Collections.Generic.IList<T>
  - System.Collections.Generic.IReadOnlyCollection<T>
  - System.Collections.Generic.IReadOnlyList<T>
  - System.Collections.IList
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Collections.ObjectModel.Collection`1.#ctor
  id: '#ctor'
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: Collection<T>..ctor
  fullName: System.Collections.ObjectModel.Collection<T>..ctor
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public Collection ();
    parameters: []
- uid: System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})
  id: '#ctor(System.Collections.Generic.IList{`0})'
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: Collection<T>..ctor
  fullName: System.Collections.ObjectModel.Collection<T>..ctor
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public Collection (System.Collections.Generic.IList<T> list);
    parameters:
    - id: list
      type: System.Collections.Generic.IList{T}
      description: Parameter description to be filled
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  id: Add(`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: Collection<T>.Add
  fullName: System.Collections.ObjectModel.Collection<T>.Add
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public void Add (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.Clear
  id: Clear
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: Clear
  nameWithType: Collection<T>.Clear
  fullName: System.Collections.ObjectModel.Collection<T>.Clear
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public void Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.ClearItems
  id: ClearItems
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: ClearItems
  nameWithType: Collection<T>.ClearItems
  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: protected virtual void ClearItems ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: Collection<T>.Contains
  fullName: System.Collections.ObjectModel.Collection<T>.Contains
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public bool Contains (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: CopyTo
  nameWithType: Collection<T>.CopyTo
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public void CopyTo (T[] array, int index);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.Count
  id: Count
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: GetEnumerator
  nameWithType: Collection<T>.GetEnumerator
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{T}
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: IndexOf
  nameWithType: Collection<T>.IndexOf
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public int IndexOf (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: Insert
  nameWithType: Collection<T>.Insert
  fullName: System.Collections.ObjectModel.Collection<T>.Insert
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public void Insert (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  id: InsertItem(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: InsertItem
  nameWithType: Collection<T>.InsertItem
  fullName: System.Collections.ObjectModel.Collection<T>.InsertItem
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: protected virtual void InsertItem (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: Collection<T>.Item
  fullName: System.Collections.ObjectModel.Collection<T>.Item
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: T
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.Items
  id: Items
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: protected System.Collections.Generic.IList<T> Items { get; }
    return:
      type: System.Collections.Generic.IList{T}
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: Remove
  nameWithType: Collection<T>.Remove
  fullName: System.Collections.ObjectModel.Collection<T>.Remove
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public bool Remove (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: RemoveAt
  nameWithType: Collection<T>.RemoveAt
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: RemoveItem
  nameWithType: Collection<T>.RemoveItem
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: protected virtual void RemoveItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  id: SetItem(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: SetItem
  nameWithType: Collection<T>.SetItem
  fullName: System.Collections.ObjectModel.Collection<T>.SetItem
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: protected virtual void SetItem (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.CopyTo
  nameWithType: Collection<T>.System.Collections.ICollection.CopyTo
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: Collection<T>.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.SyncRoot
  nameWithType: Collection<T>.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Collection<T>.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Add
  nameWithType: Collection<T>.System.Collections.IList.Add
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Contains
  nameWithType: Collection<T>.System.Collections.IList.Contains
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.IndexOf
  nameWithType: Collection<T>.System.Collections.IList.IndexOf
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Insert
  nameWithType: Collection<T>.System.Collections.IList.Insert
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.IsFixedSize
  nameWithType: Collection<T>.System.Collections.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.IsReadOnly
  nameWithType: Collection<T>.System.Collections.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Item
  nameWithType: Collection<T>.System.Collections.IList.Item
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Object
      description: Return description to be filled
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Collections.ObjectModel.Collection`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Remove
  nameWithType: Collection<T>.System.Collections.IList.Remove
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Collections.ObjectModel.Collection`1.#ctor
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: .ctor
  nameWithType: Collection<T>..ctor
  fullName: System.Collections.ObjectModel.Collection<T>..ctor
- uid: System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: .ctor
  nameWithType: Collection<T>..ctor
  fullName: System.Collections.ObjectModel.Collection<T>..ctor
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Collections.ObjectModel.Collection`1.Add(`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Add
  nameWithType: Collection<T>.Add
  fullName: System.Collections.ObjectModel.Collection<T>.Add
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.ObjectModel.Collection`1.Clear
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Clear
  nameWithType: Collection<T>.Clear
  fullName: System.Collections.ObjectModel.Collection<T>.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.ObjectModel.Collection`1.ClearItems
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: ClearItems
  nameWithType: Collection<T>.ClearItems
  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Contains
  nameWithType: Collection<T>.Contains
  fullName: System.Collections.ObjectModel.Collection<T>.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: CopyTo
  nameWithType: Collection<T>.CopyTo
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.Count
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: GetEnumerator
  nameWithType: Collection<T>.GetEnumerator
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: IndexOf
  nameWithType: Collection<T>.IndexOf
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Insert
  nameWithType: Collection<T>.Insert
  fullName: System.Collections.ObjectModel.Collection<T>.Insert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: InsertItem
  nameWithType: Collection<T>.InsertItem
  fullName: System.Collections.ObjectModel.Collection<T>.InsertItem
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Item
  nameWithType: Collection<T>.Item
  fullName: System.Collections.ObjectModel.Collection<T>.Item
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.Items
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: Remove
  nameWithType: Collection<T>.Remove
  fullName: System.Collections.ObjectModel.Collection<T>.Remove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: RemoveAt
  nameWithType: Collection<T>.RemoveAt
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: RemoveItem
  nameWithType: Collection<T>.RemoveItem
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: SetItem
  nameWithType: Collection<T>.SetItem
  fullName: System.Collections.ObjectModel.Collection<T>.SetItem
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: Collection<T>.System.Collections.ICollection.CopyTo
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: Collection<T>.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: Collection<T>.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Collection<T>.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: Collection<T>.System.Collections.IList.Add
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: Collection<T>.System.Collections.IList.Contains
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: Collection<T>.System.Collections.IList.IndexOf
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: Collection<T>.System.Collections.IList.Insert
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: Collection<T>.System.Collections.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: Collection<T>.System.Collections.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: Collection<T>.System.Collections.IList.Item
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: Collection<T>.System.Collections.IList.Remove
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
