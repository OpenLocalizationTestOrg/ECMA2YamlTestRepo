### YamlMime:ManagedReference
items:
- uid: System.Dynamic.ExpandoObject
  id: ExpandoObject
  children:
  - System.Dynamic.ExpandoObject.#ctor
  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear
  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count
  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)
  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)
  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)
  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys
  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)
  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue(System.String,System.Object@)
  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Values
  - System.Dynamic.ExpandoObject.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  - System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator
  - System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: ExpandoObject
  nameWithType: ExpandoObject
  fullName: System.Dynamic.ExpandoObject
  type: Class
  syntax:
    content: 'public sealed class ExpandoObject : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,object>>, System.Collections.Generic.IDictionary<string,object>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>, System.ComponentModel.INotifyPropertyChanged, System.Dynamic.IDynamicMetaObjectProvider'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - System.Collections.Generic.IDictionary<System.String,System.Object>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - System.ComponentModel.INotifyPropertyChanged
  - System.Dynamic.IDynamicMetaObjectProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Dynamic.ExpandoObject.#ctor
  id: '#ctor'
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: ExpandoObject..ctor
  fullName: System.Dynamic.ExpandoObject..ctor
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: public ExpandoObject ();
    parameters: []
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: void ICollection<KeyValuePair<string,object>>.Add (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: void ICollection<KeyValuePair<string,object>>.Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: bool ICollection<KeyValuePair<string,object>>.Contains (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: void ICollection<KeyValuePair<string,object>>.CopyTo (System.Collections.Generic.KeyValuePair<string,object>[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count
  type: Property
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: int System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly
  type: Property
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: bool ICollection<KeyValuePair<string,object>>.Remove (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)
  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Add
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Add
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Add
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: void IDictionary<string,object>.Add (string key, object value);
    parameters:
    - id: key
      type: System.String
      description: Parameter description to be filled
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)
  id: System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.ContainsKey
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.ContainsKey
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.ContainsKey
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: bool IDictionary<string,object>.ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)
  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Item
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Item
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Item
  type: Property
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: object System.Collections.Generic.IDictionary<System.String,System.Object>.Item[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Object
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys
  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Keys
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Keys
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Keys
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Keys
  type: Property
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: System.Collections.Generic.ICollection<string> System.Collections.Generic.IDictionary<System.String,System.Object>.Keys { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)
  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Remove
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Remove
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Remove
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: bool IDictionary<string,object>.Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue(System.String,System.Object@)
  id: System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue(System.String,System.Object@)
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: bool IDictionary<string,object>.TryGetValue (string key, out object value);
    parameters:
    - id: key
      type: System.String
      description: Parameter description to be filled
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Values
  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Values
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Values
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Values
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Values
  type: Property
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: System.Collections.Generic.ICollection<object> System.Collections.Generic.IDictionary<System.String,System.Object>.Values { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Object}
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  nameWithType: ExpandoObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> IEnumerable<KeyValuePair<string,object>>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ExpandoObject.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Dynamic.ExpandoObject.System.Collections.IEnumerable.GetEnumerator
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Return description to be filled
- uid: System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  id: System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  isEii: true
  parent: System.Dynamic.ExpandoObject
  langs:
  - csharp
  - vb
  name: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  nameWithType: ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  fullName: System.Dynamic.ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  type: Method
  assemblies:
  - System.Core
  namespace: System.Dynamic
  syntax:
    content: System.Dynamic.DynamicMetaObject IDynamicMetaObjectProvider.GetMetaObject (System.Linq.Expressions.Expression parameter);
    parameters:
    - id: parameter
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Dynamic.DynamicMetaObject
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Dynamic.ExpandoObject.#ctor
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: .ctor
  nameWithType: ExpandoObject..ctor
  fullName: System.Dynamic.ExpandoObject..ctor
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
  nameWithType: ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Add
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Add
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Add
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.ContainsKey
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.ContainsKey
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.ContainsKey
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Item
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Item
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Item
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Keys
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Keys
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Keys
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Remove
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Remove
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Remove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue(System.String,System.Object@)
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Values
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.IDictionary<System.String,System.Object>.Values
  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Values
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary<System.String,System.Object>.Values
- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  nameWithType: ExpandoObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
- uid: System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ExpandoObject.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Dynamic.ExpandoObject.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  parent: System.Dynamic.ExpandoObject
  isExternal: false
  name: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  nameWithType: ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  fullName: System.Dynamic.ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
- uid: System.Dynamic.DynamicMetaObject
  parent: System.Dynamic
  isExternal: false
  name: DynamicMetaObject
  nameWithType: DynamicMetaObject
  fullName: System.Dynamic.DynamicMetaObject
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
