### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  id: DisplayFormatAttribute
  children:
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode
  - System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText
  langs:
  - csharp
  name: DisplayFormatAttribute
  nameWithType: DisplayFormatAttribute
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  type: Class
  summary: Specifies how data fields are displayed and formatted by ASP.NET Dynamic Data.
  remarks: When you apply this attribute to a data field, you must follow the guidelines for the use of the attributes. For more information, see [ASP.NET Dynamic Data Guidelines](http://msdn.microsoft.com/en-us/c563bbf3-feb9-484e-81d1-a585f1b0e192).
  example:
  - "See an online example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DisplayFormatAttribute).  \n  \n The following example shows how to use the DisplayFormatAttribute to customize formatting for a data field. The example performs the following steps:  \n  \n-   Implements a metadata partial class and an associated metadata class.  \n  \n-   In the associated metadata class, it applies the DisplayFormatAttribute attribute to specify the following results:  \n  \n    -   Display the text \"[Null]\" when a data field is empty.  \n  \n    -   Display currency data in locale specific currency format.  \n  \n    -   Display date information in short format (mm/dd/yy). This format also applies in edit mode.  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute#1)]  \n  \n To compile the example, you need the following:  \n  \n-   [!INCLUDE[vs_orcas_ext](../../add/includes/vs-orcas-ext-md.md)] Service Pack 1 or [!INCLUDE[vwd_exp_orcas_long](../../add/includes/vwd-exp-orcas-long-md.md)] Service Pack 1.  \n  \n-   The AdventureWorksLT sample database. For information about how to download and install the SQL Server sample database, see [Microsoft SQL Server Product Samples: Database](http://go.microsoft.com/fwlink/?LinkId=117483) on the CodePlex site. Make sure that you install the correct version of the sample database for the version of SQL Server that you are running ([!INCLUDE[sqprsqext](../../add/includes/sqprsqext-md.md)] or [!INCLUDE[ssKatmai_long](../../add/includes/sskatmai-long-md.md)]).  \n  \n-   A data-driven Web site. This enables you to create a data context for the database and the class that contains the data field to customize. For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]

      public class DisplayFormatAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  name: DisplayFormatAttribute()
  nameWithType: DisplayFormatAttribute.DisplayFormatAttribute()
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DisplayFormatAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute"> class.
  remarks: To be added.
  syntax:
    content: public DisplayFormatAttribute ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DisplayFormatAttribute.ApplyFormatInEditMode
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or sets a value that indicates whether the formatting string that is specified by the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is applied to the field value when the data field is in edit mode.
  remarks: By default, the formatting string that is specified by the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.
  example:
  - "The following example shows how to use the ApplyFormatInEditMode property to set the display format for date information when the data field is in edit mode. The data field format to use for the data field is specified by setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A> property.  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4)]"
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DisplayFormatAttribute.ConvertEmptyStringToNull
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or sets a value that indicates whether empty string values ("") are automatically converted to `null` when the data field is updated in the data source.
  remarks: "Users might enter an empty string for a field value. Use the ConvertEmptyStringToNull property to specify whether an empty string value is automatically converted to `null` when the data field is updated in the database.  \n  \n> [!NOTE]\n>  By default, a <xref:System.Web.DynamicData.DynamicField> object displays `null` values as empty strings. To display a different value, set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A> property."
  example:
  - "The following example shows how to use the ConvertEmptyStringToNull to enable the conversion of empty string values to `null`.  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2)]"
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
  id: DataFormatString
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DisplayFormatAttribute.DataFormatString
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or sets the display format for the field value.
  remarks: "Use the DataFormatString property to specify a custom display format for the values that are displayed in the <xref:System.Web.DynamicData.DynamicField> object. If the DataFormatString property is not set, the field's value is displayed without any special formatting. For more information, see [Formatting Types](../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md).  \n  \n> [!NOTE]\n>  When the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property is `true`, the value of the field is HTML encoded to its string representation before the formatting string is applied. For some objects, such as dates, you might want to control how the object is displayed with a formatting string. In those cases, you must set the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A?displayProperty=fullName> property to `false`.  \n  \n By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode. To apply the formatting string to field values when they are in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.  \n  \n The formatting string can be any literal string and usually includes a placeholder for the field's value. For example, in the formatting string \"Item Value: {0}\", the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.DynamicData.DynamicField> object. The remainder of the formatting string is displayed as literal text.  \n  \n> [!NOTE]\n>  If the formatting string does not include a placeholder, the field's value from the data source is not included in the final display text."
  example:
  - "The following examples show how to use the DataFormatString property to set the display format of data fields. The first example sets the display format for a currency type data field. The second example sets the display format for a date type data field.  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute#3)]  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute#4)]"
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode
  id: HtmlEncode
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DisplayFormatAttribute.HtmlEncode
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or sets a value that indicates whether the field should be HTML-encoded.
  remarks: To be added.
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText
  id: NullDisplayText
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DisplayFormatAttribute.NullDisplayText
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or sets the text that is displayed for a field when the field's value is `null`.
  remarks: "Sometimes a data field's value is stored as null values in the source. You can specify custom text to display for data fields that have a null value by setting the NullDisplayText property. If this property is not set, null field values are displayed as empty strings (\"\").  \n  \n> [!NOTE]\n>  To convert an empty string field value to a null value, you must set the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A> property to `true`."
  example:
  - "The following example shows how to use the NullDisplayText to define a caption to display when the data field is `null`.  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DisplayFormatAttribute#2)]"
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  isExternal: false
  name: DisplayFormatAttribute()
  nameWithType: DisplayFormatAttribute.DisplayFormatAttribute()
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DisplayFormatAttribute()
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DisplayFormatAttribute.ApplyFormatInEditMode
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DisplayFormatAttribute.ConvertEmptyStringToNull
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  isExternal: false
  name: DataFormatString
  nameWithType: DisplayFormatAttribute.DataFormatString
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  isExternal: false
  name: HtmlEncode
  nameWithType: DisplayFormatAttribute.HtmlEncode
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.HtmlEncode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText
  parent: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  isExternal: false
  name: NullDisplayText
  nameWithType: DisplayFormatAttribute.NullDisplayText
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
