### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute
  id: DataTypeAttribute
  children:
  - System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
  - System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType
  - System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType
  - System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat
  - System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName
  - System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)
  langs:
  - csharp
  name: DataTypeAttribute
  nameWithType: DataTypeAttribute
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute
  type: Class
  summary: Specifies the name of an additional type to associate with a data field.
  remarks: "The DataTypeAttribute attribute enables you to mark fields by using a type that is more specific than the database intrinsic type. The type name is selected from the <xref:System.ComponentModel.DataAnnotations.DataType> enumeration type. For example, a string data field that contains e-mail addresses can be specified as the <xref:System.ComponentModel.DataAnnotations.DataType> type. This information is then accessed by the field templates to modify how the data field is processed.  \n  \n You use the DataTypeAttribute attribute for the following reasons:  \n  \n-   To provide additional type information for a data field. You do this by applying the DataTypeAttribute attribute to a data field in the data model and by specifying the additional type name from the <xref:System.ComponentModel.DataAnnotations.DataType> enumeration. The field template that processes the data field can access this additional metadata type information to determine how to process the field. For example, the text field template can generate hyperlinks for e-mail addresses whose intrinsic type is `String`.  \n  \n-   To associate a custom field template with a data field. The specified custom field template will then be used to process the data field. This is an alternative to using the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute.  \n  \n When you apply the DataTypeAttribute attribute to a data field you must do the following:  \n  \n-   Follow the attribute usage rules.  \n  \n-   Implement the metadata class that contains the data fields to which you want to apply the attribute.  \n  \n-   Issue validation errors as appropriate.  \n  \n For more information, see [ASP.NET Dynamic Data Guidelines](http://msdn.microsoft.com/en-us/c563bbf3-feb9-484e-81d1-a585f1b0e192).  \n  \n See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.ComponentModel.DataAnnotations.DataTypeAttribute)."
  example:
  - "The following example uses the DataTypeAttribute attribute to customize the display of the EmailAddress data field. The e-mail addresses are shown as hyperlinks instead of as simple text, which is what Dynamic Data would infer from the intrinsic data type. The example code is in three parts, and it performs the following steps:  \n  \n-   It implements a metadata partial class and the associated metadata class.  \n  \n-   In the associated metadata class, it applies the DataTypeAttribute attribute to the EmailAddress data field by specifying the <xref:System.ComponentModel.DataAnnotations.DataType> enumerated value. This indicates to the Text.ascx field template that it should customize the display of e-mail addresses.  \n  \n-   It modifies the Text.ascx field template to customize the display of the EmailAddress data fields.  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DataTypeAttribute#1](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DataTypeAttribute#1)]  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DataTypeAttribute#2](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DataTypeAttribute#2)]  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DataTypeAttribute#3](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DataTypeAttribute#3)]  \n  \n To compile and run the example code, you need the following:  \n  \n-   Visual Studio 2008 Service Pack 1 or Visual Developer 2008 Express Edition Service Pack 1.  \n  \n-   The AdventureWorksLT sample database. For information about how to download and install the SQL Server sample database, see [Microsoft SQL Server Product Samples: Database](http://go.microsoft.com/fwlink/?LinkId=117483) on the CodePlex site. Make sure that you install the correct version of the sample database for the version of SQL Server that you are running (SQL Server 2005 or SQL Server 2008).  \n  \n-   A data-driven Web site. This enables you to create a data context for the database and to create the class that contains the data field to customize. For more information, see `Walkthrough: Creating a New Dynamic Data Web Site using Scaffolding`."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false)]

      public class DataTypeAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute
  inheritance:
  - System.Object
  - System.Attribute
  - System.ComponentModel.DataAnnotations.ValidationAttribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  - System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
  id: '#ctor(System.ComponentModel.DataAnnotations.DataType)'
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  langs:
  - csharp
  name: DataTypeAttribute(DataType)
  nameWithType: DataTypeAttribute.DataTypeAttribute(DataType)
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataTypeAttribute(DataType)
  type: Constructor
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute"> class by using the specified type name.
  remarks: The name is one of the values that are defined by the <xref:System.ComponentModel.DataAnnotations.DataType?displayProperty=fullName> enumeration.
  example:
  - "The following example shows how to use the DataTypeAttribute constructor to specify an alternative type for a data field.  \n  \n [!CODE [System.ComponentModel.DataAnnotations.DataTypeAttribute#11](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.DataTypeAttribute#11)]"
  syntax:
    content: public DataTypeAttribute (System.ComponentModel.DataAnnotations.DataType dataType);
    parameters:
    - id: dataType
      type: System.ComponentModel.DataAnnotations.DataType
      description: The name of the type to associate with the data field.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  langs:
  - csharp
  name: DataTypeAttribute(String)
  nameWithType: DataTypeAttribute.DataTypeAttribute(String)
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataTypeAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute"> class by using the specified field template name.
  remarks: This method provides an alternative to using the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute.
  syntax:
    content: public DataTypeAttribute (string customDataType);
    parameters:
    - id: customDataType
      type: System.String
      description: The name of the custom field template to associate with the data field.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType
  id: CustomDataType
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  langs:
  - csharp
  name: CustomDataType
  nameWithType: DataTypeAttribute.CustomDataType
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets the name of custom field template that is associated with the data field.
  remarks: To be added.
  syntax:
    content: public string CustomDataType { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType
  id: DataType
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  langs:
  - csharp
  name: DataType
  nameWithType: DataTypeAttribute.DataType
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets the type that is associated with the data field.
  remarks: To be added.
  syntax:
    content: public System.ComponentModel.DataAnnotations.DataType DataType { get; }
    return:
      type: System.ComponentModel.DataAnnotations.DataType
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat
  id: DisplayFormat
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  langs:
  - csharp
  name: DisplayFormat
  nameWithType: DataTypeAttribute.DisplayFormat
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets a data-field display format.
  remarks: To be added.
  syntax:
    content: public System.ComponentModel.DataAnnotations.DisplayFormatAttribute DisplayFormat { get; protected set; }
    return:
      type: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName
  id: GetDataTypeName
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  langs:
  - csharp
  name: GetDataTypeName()
  nameWithType: DataTypeAttribute.GetDataTypeName()
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName()
  type: Method
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Returns the name of the type that is associated with the data field.
  remarks: The name of the type that is associated with the data field.
  syntax:
    content: public virtual string GetDataTypeName ();
    parameters: []
    return:
      type: System.String
      description: The name of the type associated with the data field.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  langs:
  - csharp
  name: IsValid(Object)
  nameWithType: DataTypeAttribute.IsValid(Object)
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(Object)
  type: Method
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Checks that the value of the data field is valid.
  remarks: This method implements validation logic that is specific to the <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute.
  syntax:
    content: public override bool IsValid (object value);
    parameters:
    - id: value
      type: System.Object
      description: The data field value to validate.
    return:
      type: System.Boolean
      description: '`true` always.'
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: System.ComponentModel.DataAnnotations.ValidationAttribute
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  isExternal: false
  name: DataTypeAttribute(DataType)
  nameWithType: DataTypeAttribute.DataTypeAttribute(DataType)
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataTypeAttribute(DataType)
- uid: System.ComponentModel.DataAnnotations.DataType
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: DataType
  nameWithType: DataType
  fullName: System.ComponentModel.DataAnnotations.DataType
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.String)
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  isExternal: false
  name: DataTypeAttribute(String)
  nameWithType: DataTypeAttribute.DataTypeAttribute(String)
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataTypeAttribute(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  isExternal: false
  name: CustomDataType
  nameWithType: DataTypeAttribute.CustomDataType
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.CustomDataType
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  isExternal: false
  name: DataType
  nameWithType: DataTypeAttribute.DataType
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DataType
- uid: System.ComponentModel.DataAnnotations.DataType
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: DataType
  nameWithType: DataType
  fullName: System.ComponentModel.DataAnnotations.DataType
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  isExternal: false
  name: DisplayFormat
  nameWithType: DataTypeAttribute.DisplayFormat
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.DisplayFormat
- uid: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  name: DisplayFormatAttribute
  nameWithType: DisplayFormatAttribute
  fullName: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  isExternal: false
  name: GetDataTypeName()
  nameWithType: DataTypeAttribute.GetDataTypeName()
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.GetDataTypeName()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(System.Object)
  parent: System.ComponentModel.DataAnnotations.DataTypeAttribute
  isExternal: false
  name: IsValid(Object)
  nameWithType: DataTypeAttribute.IsValid(Object)
  fullName: System.ComponentModel.DataAnnotations.DataTypeAttribute.IsValid(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
