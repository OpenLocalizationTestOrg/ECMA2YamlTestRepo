### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  id: RegularExpressionAttribute
  children:
  - System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
  - System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)
  - System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)
  - System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds
  - System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern
  langs:
  - csharp
  name: RegularExpressionAttribute
  nameWithType: RegularExpressionAttribute
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  type: Class
  summary: Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.
  remarks: You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression. The regular expression enables you to specify very precisely the format of valid values. The Pattern property contains the regular expression.If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute. To validate that the value is not `null` or an empty string, use the **RequiredAttribute** attribute.
  example:
  - "The following example shows how to use the RegularExpressionAttribute attribute to validate the FirstName and LastName data fields. The regular expression allows up to 40 uppercase and lowercase characters. The example performs the following tasks:  \n  \n-   Implements a metadata partial class and the associated metadata class.  \n  \n-   In the associated metadata class, applies the RegularExpressionAttribute attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.  \n  \n [!CODE [System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false)]

      public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute
  inheritance:
  - System.Object
  - System.Attribute
  - System.ComponentModel.DataAnnotations.ValidationAttribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType
  - System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString
  - System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object,System.String)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  langs:
  - csharp
  name: RegularExpressionAttribute(String)
  nameWithType: RegularExpressionAttribute.RegularExpressionAttribute(String)
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.RegularExpressionAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute"> class.
  remarks: ''
  example:
  - "The following example shows how to apply the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> to a data field. If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.  \n  \n [!CODE [System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](../CodeSnippet/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2)]"
  syntax:
    content: public RegularExpressionAttribute (string pattern);
    parameters:
    - id: pattern
      type: System.String
      description: The regular expression that is used to validate the data field value.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)
  id: FormatErrorMessage(System.String)
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  langs:
  - csharp
  name: FormatErrorMessage(String)
  nameWithType: RegularExpressionAttribute.FormatErrorMessage(String)
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(String)
  type: Method
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Formats the error message to display if the regular expression validation fails.
  remarks: The FormatErrorMessage creates the error message by using the name of the data field that caused the validation failure. You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.
  syntax:
    content: public override string FormatErrorMessage (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the field that caused the validation failure.
    return:
      type: System.String
      description: The formatted error message.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  langs:
  - csharp
  name: IsValid(Object)
  nameWithType: RegularExpressionAttribute.IsValid(Object)
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(Object)
  type: Method
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Checks whether the value entered by the user matches the regular expression pattern.
  remarks: To be added.
  syntax:
    content: public override bool IsValid (object value);
    parameters:
    - id: value
      type: System.Object
      description: The data field value to validate.
    return:
      type: System.Boolean
      description: '`true` if validation is successful; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds
  id: MatchTimeoutInMilliseconds
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  langs:
  - csharp
  name: MatchTimeoutInMilliseconds
  nameWithType: RegularExpressionAttribute.MatchTimeoutInMilliseconds
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or set the amount of time in milliseconds to execute a single matching operation before the operation times out.
  remarks: To be added.
  syntax:
    content: public int MatchTimeoutInMilliseconds { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern
  id: Pattern
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  langs:
  - csharp
  name: Pattern
  nameWithType: RegularExpressionAttribute.Pattern
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern
  type: Property
  assemblies:
  - System.ComponentModel.DataAnnotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets the regular expression pattern.
  remarks: To be added.
  syntax:
    content: public string Pattern { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute
  isExternal: false
  name: System.ComponentModel.DataAnnotations.ValidationAttribute
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  isExternal: false
  name: RegularExpressionAttribute(String)
  nameWithType: RegularExpressionAttribute.RegularExpressionAttribute(String)
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.RegularExpressionAttribute(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  isExternal: false
  name: FormatErrorMessage(String)
  nameWithType: RegularExpressionAttribute.FormatErrorMessage(String)
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  isExternal: false
  name: IsValid(Object)
  nameWithType: RegularExpressionAttribute.IsValid(Object)
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  isExternal: false
  name: MatchTimeoutInMilliseconds
  nameWithType: RegularExpressionAttribute.MatchTimeoutInMilliseconds
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern
  parent: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
  isExternal: false
  name: Pattern
  nameWithType: RegularExpressionAttribute.Pattern
  fullName: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
