### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Audio
  id: Audio
  children:
  - Microsoft.VisualBasic.Devices.Audio.#ctor
  - Microsoft.VisualBasic.Devices.Audio.Play(System.String)
  - Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)
  - Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)
  - Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)
  - Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)
  - Microsoft.VisualBasic.Devices.Audio.Stop
  langs:
  - csharp
  name: Audio
  nameWithType: Audio
  fullName: Microsoft.VisualBasic.Devices.Audio
  type: Class
  summary: Provides methods for playing sounds.
  remarks: "You can use the `My.Computer.Audio.Play` and `My.Computer.Audio.PlaySystemSound` methods to play .wav sound files and system sounds.  \n  \n For more information, see [Playing Sounds](../Topic/Playing%20Sounds%20\\(Visual%20Basic\\).md).  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "The `My.Computer.Audio.Play` method plays the specified sound in the background when `AudioPlayMode.Background` is specified.  \n  \n [!code-vb[VbVbalrMyComputer#15](../../add/codesnippet/VisualBasic/VbVbalrMyComputer/Class1.vb#15)]  \n  \n This code can run only within a Windows Forms application.  \n  \n The file name should reference a .wav sound file on your system.  \n  \n To simplify the management of your sound files, consider storing the files as application resources. The files can then be accessed through the `My.Resources` object."
  syntax:
    content: public class Audio
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Audio.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Audio
  langs:
  - csharp
  name: Audio()
  nameWithType: Audio.Audio()
  fullName: Microsoft.VisualBasic.Devices.Audio.Audio()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Audio"> class.
  remarks: ''
  example:
  - '[Objects](../Topic/Objects%20\(Visual%20Basic\).md)'
  syntax:
    content: public Audio ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Audio.Play(System.String)
  id: Play(System.String)
  parent: Microsoft.VisualBasic.Devices.Audio
  langs:
  - csharp
  name: Play(String)
  nameWithType: Audio.Play(String)
  fullName: Microsoft.VisualBasic.Devices.Audio.Play(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Plays a .wav sound file.
  remarks: "The `Play` method plays the .wav sound file stored as a file at , as a byte array in , or as a stream in .  \n  \n If the overload that takes only the  parameter is used, the `Play` method plays the sound in the background. Otherwise, the  parameter determines how the sound will play.  \n  \n|||  \n|-|-|  \n||Description|  \n|`AudioPlayMode.Background`|Plays the sound in the background. The calling code continues to execute.|  \n|`AudioPlayMode.BackgroundLoop`|Plays the sound in the background until the <xref:Microsoft.VisualBasic.Devices.Audio.Stop%2A> method is called. The calling code continues to execute.|  \n|`AudioPlayMode.WaitToComplete`|Plays the sound and waits until it completes before the calling code continues.|  \n  \n Background playing lets the application execute other code while the sound plays.  \n  \n For more information, see [Playing Sounds](../Topic/Playing%20Sounds%20\\(Visual%20Basic\\).md).  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "The `My.Computer.Audio.Play` method plays the specified sound in the background when `PlayMode.Background` is specified.  \n  \n [!code-vb[VbVbalrMyComputer#15](../../add/codesnippet/VisualBasic/VbVbalrMyComputer/Class1.vb#15)]  \n  \n This code example can only run within a Windows Forms application.  \n  \n The file name should reference a .wav sound file on your system.  \n  \n To simplify the management of your sound files, consider storing the files as application resources. They can then be accessed through the `My.Resources` object."
  syntax:
    content: public void Play (string location);
    parameters:
    - id: location
      type: System.String
      description: A `String` containing the name of the sound file
  overload: Microsoft.VisualBasic.Devices.Audio.Play*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)
  id: Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)
  parent: Microsoft.VisualBasic.Devices.Audio
  langs:
  - csharp
  name: Play(Byte[],AudioPlayMode)
  nameWithType: Audio.Play(Byte[],AudioPlayMode)
  fullName: Microsoft.VisualBasic.Devices.Audio.Play(Byte[],AudioPlayMode)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Plays a .wav sound file.
  remarks: "The `Play` method plays the .wav sound file stored as a file at , as a byte array in , or as a stream in .  \n  \n If the overload that takes only the  parameter is used, the `Play` method plays the sound in the background. Otherwise, the  parameter determines how the sound will play.  \n  \n|||  \n|-|-|  \n||Description|  \n|`AudioPlayMode.Background`|Plays the sound in the background. The calling code continues to execute.|  \n|`AudioPlayMode.BackgroundLoop`|Plays the sound in the background until the <xref:Microsoft.VisualBasic.Devices.Audio.Stop%2A> method is called. The calling code continues to execute.|  \n|`AudioPlayMode.WaitToComplete`|Plays the sound and waits until it completes before the calling code continues.|  \n  \n Background playing lets the application execute other code while the sound plays.  \n  \n For more information, see [Playing Sounds](../Topic/Playing%20Sounds%20\\(Visual%20Basic\\).md).  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "The `My.Computer.Audio.Play` method plays the specified sound in the background when `PlayMode.Background` is specified.  \n  \n [!code-vb[VbVbalrMyComputer#15](../../add/codesnippet/VisualBasic/VbVbalrMyComputer/Class1.vb#15)]  \n  \n This code example can only run within a Windows Forms application.  \n  \n The file name should reference a .wav sound file on your system.  \n  \n To simplify the management of your sound files, consider storing the files as application resources. They can then be accessed through the `My.Resources` object."
  syntax:
    content: public void Play (byte[] data, Microsoft.VisualBasic.AudioPlayMode playMode);
    parameters:
    - id: data
      type: System.Byte[]
      description: '`Byte` array that represents the sound file.'
    - id: playMode
      type: Microsoft.VisualBasic.AudioPlayMode
      description: <see cref="T:Microsoft.VisualBasic.AudioPlayMode"> mode for playing the sound. By default, `AudioPlayMode.Background`.
  overload: Microsoft.VisualBasic.Devices.Audio.Play*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)
  id: Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)
  parent: Microsoft.VisualBasic.Devices.Audio
  langs:
  - csharp
  name: Play(Stream,AudioPlayMode)
  nameWithType: Audio.Play(Stream,AudioPlayMode)
  fullName: Microsoft.VisualBasic.Devices.Audio.Play(Stream,AudioPlayMode)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Plays a .wav sound file.
  remarks: "The `Play` method plays the .wav sound file stored as a file at , as a byte array in , or as a stream in .  \n  \n If the overload that takes only the  parameter is used, the `Play` method plays the sound in the background. Otherwise, the  parameter determines how the sound will play.  \n  \n|||  \n|-|-|  \n||Description|  \n|`AudioPlayMode.Background`|Plays the sound in the background. The calling code continues to execute.|  \n|`AudioPlayMode.BackgroundLoop`|Plays the sound in the background until the <xref:Microsoft.VisualBasic.Devices.Audio.Stop%2A> method is called. The calling code continues to execute.|  \n|`AudioPlayMode.WaitToComplete`|Plays the sound and waits until it completes before the calling code continues.|  \n  \n Background playing lets the application execute other code while the sound plays.  \n  \n For more information, see [Playing Sounds](../Topic/Playing%20Sounds%20\\(Visual%20Basic\\).md).  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "The `My.Computer.Audio.Play` method plays the specified sound in the background when `PlayMode.Background` is specified.  \n  \n [!code-vb[VbVbalrMyComputer#15](../../add/codesnippet/VisualBasic/VbVbalrMyComputer/Class1.vb#15)]  \n  \n This code example can only run within a Windows Forms application.  \n  \n The file name should reference a .wav sound file on your system.  \n  \n To simplify the management of your sound files, consider storing the files as application resources. They can then be accessed through the `My.Resources` object."
  syntax:
    content: public void Play (System.IO.Stream stream, Microsoft.VisualBasic.AudioPlayMode playMode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: <see cref="T:System.IO.Stream"> that represents the sound file.
    - id: playMode
      type: Microsoft.VisualBasic.AudioPlayMode
      description: <see cref="T:Microsoft.VisualBasic.AudioPlayMode"> mode for playing the sound. By default, `AudioPlayMode.Background`.
  overload: Microsoft.VisualBasic.Devices.Audio.Play*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)
  id: Play(System.String,Microsoft.VisualBasic.AudioPlayMode)
  parent: Microsoft.VisualBasic.Devices.Audio
  langs:
  - csharp
  name: Play(String,AudioPlayMode)
  nameWithType: Audio.Play(String,AudioPlayMode)
  fullName: Microsoft.VisualBasic.Devices.Audio.Play(String,AudioPlayMode)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Plays a .wav sound file.
  remarks: "The `Play` method plays the .wav sound file stored as a file at , as a byte array in , or as a stream in .  \n  \n If the overload that takes only the  parameter is used, the `Play` method plays the sound in the background. Otherwise, the  parameter determines how the sound will play.  \n  \n|||  \n|-|-|  \n||Description|  \n|`AudioPlayMode.Background`|Plays the sound in the background. The calling code continues to execute.|  \n|`AudioPlayMode.BackgroundLoop`|Plays the sound in the background until the <xref:Microsoft.VisualBasic.Devices.Audio.Stop%2A> method is called. The calling code continues to execute.|  \n|`AudioPlayMode.WaitToComplete`|Plays the sound and waits until it completes before the calling code continues.|  \n  \n Background playing lets the application execute other code while the sound plays.  \n  \n For more information, see [Playing Sounds](../Topic/Playing%20Sounds%20\\(Visual%20Basic\\).md).  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "The `My.Computer.Audio.Play` method plays the specified sound in the background when `PlayMode.Background` is specified.  \n  \n [!code-vb[VbVbalrMyComputer#15](../../add/codesnippet/VisualBasic/VbVbalrMyComputer/Class1.vb#15)]  \n  \n This code example can only run within a Windows Forms application.  \n  \n The file name should reference a .wav sound file on your system.  \n  \n To simplify the management of your sound files, consider storing the files as application resources. They can then be accessed through the `My.Resources` object."
  syntax:
    content: public void Play (string location, Microsoft.VisualBasic.AudioPlayMode playMode);
    parameters:
    - id: location
      type: System.String
      description: A `String` containing the name of the sound file
    - id: playMode
      type: Microsoft.VisualBasic.AudioPlayMode
      description: <see cref="T:Microsoft.VisualBasic.AudioPlayMode"> mode for playing the sound. By default, `AudioPlayMode.Background`.
  overload: Microsoft.VisualBasic.Devices.Audio.Play*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)
  id: PlaySystemSound(System.Media.SystemSound)
  parent: Microsoft.VisualBasic.Devices.Audio
  langs:
  - csharp
  name: PlaySystemSound(SystemSound)
  nameWithType: Audio.PlaySystemSound(SystemSound)
  fullName: Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(SystemSound)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Plays a system sound.
  remarks: "The `PlaySystemSound` method plays the system sound described by ; the sound is played once, in the background.  \n  \n The value of  must be one of the shared members from the <xref:System.Media.SystemSounds> class:  \n  \n-   <xref:System.Media.SystemSounds.Asterisk%2A>  \n  \n-   <xref:System.Media.SystemSounds.Beep%2A>  \n  \n-   <xref:System.Media.SystemSounds.Exclamation%2A>  \n  \n-   <xref:System.Media.SystemSounds.Hand%2A>  \n  \n-   <xref:System.Media.SystemSounds.Question%2A>  \n  \n For more information, see [Playing Sounds](../Topic/Playing%20Sounds%20\\(Visual%20Basic\\).md).  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example uses the `My.Computer.Audio.PlaySystemSound` method to play a system sound.  \n  \n [!code-vb[VbVbalrMyComputer#17](../../add/codesnippet/VisualBasic/VbVbalrMyComputer/Class1.vb#17)]  \n  \n This code example can run only within a Windows Forms application."
  syntax:
    content: public void PlaySystemSound (System.Media.SystemSound systemSound);
    parameters:
    - id: systemSound
      type: System.Media.SystemSound
      description: <xref:System.Media.SystemSound> object representing the system sound to play.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Audio.Stop
  id: Stop
  parent: Microsoft.VisualBasic.Devices.Audio
  langs:
  - csharp
  name: Stop()
  nameWithType: Audio.Stop()
  fullName: Microsoft.VisualBasic.Devices.Audio.Stop()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: Stops a sound playing in the background.
  remarks: "The `My.Computer.Audio.Stop` method stops a sound playing in the background that was started by the `My.Computer.Audio.Play` method.  \n  \n In general, when an application plays a looping sound, it should stop the sound at some point.  \n  \n For more information, see [Playing Sounds](../Topic/Playing%20Sounds%20\\(Visual%20Basic\\).md).  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example uses the `My.Computer.Audio.Stop` method to stop the application currently playing background or looping sound and uses the `My.Computer.Audio.Play` method to play a looping sound in the background.  \n  \n [!code-vb[VbVbalrMyComputer#19](../../add/codesnippet/VisualBasic/VbVbalrMyComputer/Class1.vb#19)]  \n  \n This code example can run only within a Windows Forms application.  \n  \n The file name should reference a .wav sound file on your system.  \n  \n To simplify the management of your sound files, consider storing the files as application resources. These files can then be accessed through the `My.Resources` object."
  syntax:
    content: public void Stop ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.Devices.Audio.#ctor
  parent: Microsoft.VisualBasic.Devices.Audio
  isExternal: false
  name: Audio()
  nameWithType: Audio.Audio()
  fullName: Microsoft.VisualBasic.Devices.Audio.Audio()
- uid: Microsoft.VisualBasic.Devices.Audio.Play(System.String)
  parent: Microsoft.VisualBasic.Devices.Audio
  isExternal: false
  name: Play(String)
  nameWithType: Audio.Play(String)
  fullName: Microsoft.VisualBasic.Devices.Audio.Play(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Audio.Play(System.Byte[],Microsoft.VisualBasic.AudioPlayMode)
  parent: Microsoft.VisualBasic.Devices.Audio
  isExternal: false
  name: Play(Byte[],AudioPlayMode)
  nameWithType: Audio.Play(Byte[],AudioPlayMode)
  fullName: Microsoft.VisualBasic.Devices.Audio.Play(Byte[],AudioPlayMode)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: Microsoft.VisualBasic.AudioPlayMode
  parent: Microsoft.VisualBasic
  isExternal: false
  name: AudioPlayMode
  nameWithType: AudioPlayMode
  fullName: Microsoft.VisualBasic.AudioPlayMode
- uid: Microsoft.VisualBasic.Devices.Audio.Play(System.IO.Stream,Microsoft.VisualBasic.AudioPlayMode)
  parent: Microsoft.VisualBasic.Devices.Audio
  isExternal: false
  name: Play(Stream,AudioPlayMode)
  nameWithType: Audio.Play(Stream,AudioPlayMode)
  fullName: Microsoft.VisualBasic.Devices.Audio.Play(Stream,AudioPlayMode)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.VisualBasic.AudioPlayMode
  parent: Microsoft.VisualBasic
  isExternal: false
  name: AudioPlayMode
  nameWithType: AudioPlayMode
  fullName: Microsoft.VisualBasic.AudioPlayMode
- uid: Microsoft.VisualBasic.Devices.Audio.Play(System.String,Microsoft.VisualBasic.AudioPlayMode)
  parent: Microsoft.VisualBasic.Devices.Audio
  isExternal: false
  name: Play(String,AudioPlayMode)
  nameWithType: Audio.Play(String,AudioPlayMode)
  fullName: Microsoft.VisualBasic.Devices.Audio.Play(String,AudioPlayMode)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.AudioPlayMode
  parent: Microsoft.VisualBasic
  isExternal: false
  name: AudioPlayMode
  nameWithType: AudioPlayMode
  fullName: Microsoft.VisualBasic.AudioPlayMode
- uid: Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(System.Media.SystemSound)
  parent: Microsoft.VisualBasic.Devices.Audio
  isExternal: false
  name: PlaySystemSound(SystemSound)
  nameWithType: Audio.PlaySystemSound(SystemSound)
  fullName: Microsoft.VisualBasic.Devices.Audio.PlaySystemSound(SystemSound)
- uid: System.Media.SystemSound
  parent: System.Media
  isExternal: true
  name: SystemSound
  nameWithType: SystemSound
  fullName: System.Media.SystemSound
- uid: Microsoft.VisualBasic.Devices.Audio.Stop
  parent: Microsoft.VisualBasic.Devices.Audio
  isExternal: false
  name: Stop()
  nameWithType: Audio.Stop()
  fullName: Microsoft.VisualBasic.Devices.Audio.Stop()
- uid: Microsoft.VisualBasic.Devices.Audio.Play*
  parent: Microsoft.VisualBasic.Devices.Audio
  isExternal: false
  nameWithType: Audio.
