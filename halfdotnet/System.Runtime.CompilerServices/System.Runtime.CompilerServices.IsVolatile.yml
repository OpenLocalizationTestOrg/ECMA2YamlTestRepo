### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.IsVolatile
  id: IsVolatile
  children: []
  langs:
  - csharp
  name: IsVolatile
  nameWithType: IsVolatile
  fullName: System.Runtime.CompilerServices.IsVolatile
  type: Class
  summary: Marks a field as volatile. This class cannot be inherited.
  remarks: "`IsVolatile` is used only in custom modifiers of method signatures to indicate that the field it marks is volatile. Any compiler that imports metadata with one or more fields marked as volatile must use instructions prefixed with `volatile.` to access such fields.  \n  \n The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.  \n  \n Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.  When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.  Compilers can apply custom modifiers to methods, parameters, and return values.  The JIT compiler must respond to required modifiers but can ignore optional modifiers.  A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.  \n  \n You can emit custom modifiers into metadata using one of the following techniques:  \n  \n-   Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.  \n  \n-   Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](../Topic/Ilasm.exe%20\\(IL%20Assembler\\).md).  \n  \n-   Using the unmanaged reflection API."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class IsVolatile
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
