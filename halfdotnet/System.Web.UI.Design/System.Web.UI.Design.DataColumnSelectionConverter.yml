### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.DataColumnSelectionConverter
  id: DataColumnSelectionConverter
  children:
  - System.Web.UI.Design.DataColumnSelectionConverter.#ctor
  - System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: DataColumnSelectionConverter
  nameWithType: DataColumnSelectionConverter
  fullName: System.Web.UI.Design.DataColumnSelectionConverter
  type: Class
  summary: Provides a type converter for a property representing the field name of a bound column field in a <xref:System.Web.UI.WebControls.GridView> control.
  remarks: "Use the DataColumnSelectionConverter class to convert object types before assignment to a control property. In general, the DataColumnSelectionConverter class supports converting string object types and supplies a list of standard values available for assignment to the associated control property. The standard values collection is the list of field names for bound column fields for the current <xref:System.Web.UI.WebControls.GridView> control.  \n  \n To support converting additional object types, derive a class from DataColumnSelectionConverter and override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> and <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> methods for the additional object types. To support a custom list of standard assignable values, override the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.  \n  \n Apply the <xref:System.ComponentModel.TypeConverterAttribute> attribute to specify the DataColumnSelectionConverter class as the type converter for a control property. For example, the <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> property of the <xref:System.Web.UI.WebControls.GridView> control specifies DataColumnSelectionConverter as its type converter.  \n  \n> [!NOTE]\n>  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.  \n  \n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method indicates that the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method indicates that the list is not an exclusive list of possible values."
  syntax:
    content: 'public class DataColumnSelectionConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: DataColumnSelectionConverter()
  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter()
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.DataColumnSelectionConverter()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataColumnSelectionConverter"> class.
  remarks: >-
    > [!NOTE]

    >  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.
  syntax:
    content: public DataColumnSelectionConverter ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: Indicates whether the specified source type can be converted to the type of the associated control property.
  remarks: "Call the CanConvertFrom method to determine whether the <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method supports converting the source type.  \n  \n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> method can convert only from a string, so the CanConvertFrom method returns `true` when  is a string."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> implementation that can be used to gain additional context information.
    - id: sourceType
      type: System.Type
      description: The type to convert from.
    return:
      type: System.Boolean
      description: '`true` if the converter can perform the conversion; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: Converts the specified object to the type of the associated control property.
  remarks: "If  is a string, then the string representation of  is returned. If  is `null`, an empty string (\"\") is returned. For all other values, a <xref:System.NotSupportedException> exception is thrown.  \n  \n Call the <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> method to determine whether the ConvertFrom method supports converting the source type."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> implementation that can be used to gain additional context information.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <see cref="T:System.Globalization.CultureInfo"> object that can be used to support localization features.
    - id: value
      type: System.Object
      description: The object to convert.
    return:
      type: System.Object
      description: An <see cref="T:System.Object"> instance that represents the converted object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: Returns a list of available values that can be assigned to the associated control property.
  remarks: "The GetStandardValues method uses the <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property of the specified  object to obtain an <xref:System.ComponentModel.IComponent> implementation. If the <xref:System.ComponentModel.IComponent> implementation is available, it is used to access the associated control at design time and retrieve the list of available values from the associated <xref:System.Web.UI.WebControls.GridView> component.  \n  \n The collection of available values is built from the bound column fields in the <xref:System.Web.UI.WebControls.GridView> control. The bound column fields consist of <xref:System.Web.UI.WebControls.BoundField> objects in the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection, and from the bound column fields automatically generated for fields in the data source."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> implementation that can be used to gain additional context information.
    return:
      type: System.ComponentModel.TypeConverter+StandardValuesCollection
      description: A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> instance containing available values for assignment to the associated control property.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.
  remarks: The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> method for a <xref:System.Web.UI.Design.DataColumnSelectionConverter> instance returns `false`, indicating that the list returned by the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method is not an exclusive list of all possible assignable values.
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> implementation that can be used to gain additional context information.
    return:
      type: System.Boolean
      description: '`true` if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.
  remarks: "The GetStandardValuesSupported method indicates whether the converter supports returning a list of available values through the <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method.  \n  \n The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> method for the <xref:System.Web.UI.Design.DataColumnSelectionConverter> object returns `true` if the specified  object supplies an <xref:System.ComponentModel.IComponent> implementation in its <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property. The <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> method uses the <xref:System.ComponentModel.IComponent> implementation to access the associated control at design time and retrieve the list of available bound column fields from the associated <xref:System.Web.UI.WebControls.GridView> component."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> implementation that can be used to gain additional context information.
    return:
      type: System.Boolean
      description: '`true` if this converter returns a standard set of available values for assignment to the associated control property; otherwise `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Web.UI.Design.DataColumnSelectionConverter.#ctor
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: DataColumnSelectionConverter()
  nameWithType: DataColumnSelectionConverter.DataColumnSelectionConverter()
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.DataColumnSelectionConverter()
- uid: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: true
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.DataColumnSelectionConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
