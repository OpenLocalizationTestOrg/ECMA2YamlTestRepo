### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.TextRange
  id: TextRange
  children:
  - System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.Documents.TextRange.CanLoad(System.String)
  - System.Windows.Documents.TextRange.CanSave(System.String)
  - System.Windows.Documents.TextRange.Changed
  - System.Windows.Documents.TextRange.ClearAllProperties
  - System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.End
  - System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  - System.Windows.Documents.TextRange.IsEmpty
  - System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  - System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  - System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.TextRange.Start
  - System.Windows.Documents.TextRange.Text
  langs:
  - csharp
  name: TextRange
  nameWithType: TextRange
  fullName: System.Windows.Documents.TextRange
  type: Class
  summary: Represents a selection of content between two <see cref="T:System.Windows.Documents.TextPointer"> positions.
  remarks: "The TextRange class introduces the following terminology.  \n  \n-   **Selection** - A TextRange is a selection of content between two positions indicated by **TextPointers**.  One of these positions a fixed anchor with respect to the selection, while the other position is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.  \n  \n-   **Current Selection** - Because a TextRange always indicates a selection in content, it makes sense to simply refer to the selection indicated by a TextRange as the *current selection*.  \n  \n-   **Text Container** - A *text container* is the element that forms the ultimate border for the flow content at hand; the selection indicated by a TextRange always falls within a text container.  Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.  \n  \n-   **Document** - The content collectively contained within a text container is referred to as a *document*.  \n  \n For more information about other related terms like *position*, see <xref:System.Windows.Documents.TextPointer>."
  example:
  - "The following example demonstrates using the <xref:System.Windows.Documents.TextRange.Text%2A> property of a TextRange to return the plain text representation of a specified <xref:System.Windows.Documents.FlowDocument>.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public class TextRange
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  id: '#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)'
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: TextRange(TextPointer,TextPointer)
  nameWithType: TextRange.TextRange(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Initializes a new instance of the <see cref="T:System.Windows.Documents.TextRange"> class, taking two specified <xref:System.Windows.Documents.TextPointer> positions as the beginning and end positions for the new range.
  remarks: "A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**.  One of these positions (indicated by ) is fixed with respect to the selection, while the other position (indicated by ) is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.  \n  \n The actual ends of the new <xref:System.Windows.Documents.TextRange> may be adjusted to match any selection heuristics that are applicable to the document that contains the new <xref:System.Windows.Documents.TextRange>."
  example:
  - "The following example demonstrates the use of the <xref:System.Windows.Documents.TextRange> constructor.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public TextRange (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);
    parameters:
    - id: position1
      type: System.Windows.Documents.TextPointer
      description: A fixed anchor position that marks one end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange">.
    - id: position2
      type: System.Windows.Documents.TextPointer
      description: A movable position that marks the other end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  id: ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: ApplyPropertyValue(DependencyProperty,Object)
  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)
  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Applies a specified formatting property and value to the current selection.
  remarks: This method applies formatting by inserting the appropriate <xref:System.Windows.Documents.Inline> elements, such as <xref:System.Windows.Documents.Bold> and <xref:System.Windows.Documents.Italic>, into the selection indicated by this <xref:System.Windows.Documents.TextRange>.
  example:
  - "The following example demonstrates the use of the ApplyPropertyValue method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void ApplyPropertyValue (System.Windows.DependencyProperty formattingProperty, object value);
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: A formatting property to apply.
    - id: value
      type: System.Object
      description: The value for the formatting property.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.CanLoad(System.String)
  id: CanLoad(System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: CanLoad(String)
  nameWithType: TextRange.CanLoad(String)
  fullName: System.Windows.Documents.TextRange.CanLoad(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Checks whether the current selection can be loaded with content in a specified data format.
  remarks: Use the corresponding <xref:System.Windows.Documents.TextRange.Load%2A> method to actually load content into the current selection in a specified data format.
  example:
  - "The following example demonstrates the use of the CanLoad method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool CanLoad (string dataFormat);
    parameters:
    - id: dataFormat
      type: System.String
      description: A data format to check for load-compatibility into the current selection.  See <see cref="T:System.Windows.DataFormats"> for a list of predefined data formats.
    return:
      type: System.Boolean
      description: '`true` if the current selection can be loaded with content in the specified data format; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.CanSave(System.String)
  id: CanSave(System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: CanSave(String)
  nameWithType: TextRange.CanSave(String)
  fullName: System.Windows.Documents.TextRange.CanSave(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Checks whether the current selection can be saved as a specified data format.
  remarks: Use the corresponding <xref:System.Windows.Documents.TextRange.Save%2A> method to actually save the current selection in a specified data format.
  example:
  - "The following example demonstrates the use of the CanSave method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool CanSave (string dataFormat);
    parameters:
    - id: dataFormat
      type: System.String
      description: A data format to check for save compatibility with the current selection.  See <see cref="T:System.Windows.DataFormats"> for a list of predefined data formats.
    return:
      type: System.Boolean
      description: '`true` if the current selection can be saved as the specified data format; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.Changed
  id: Changed
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Changed
  nameWithType: TextRange.Changed
  fullName: System.Windows.Documents.TextRange.Changed
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Occurs when the range is repositioned to cover a new span of content.
  remarks: To be added.
  syntax:
    content: public event EventHandler Changed;
    return:
      type: System.EventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.ClearAllProperties
  id: ClearAllProperties
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: ClearAllProperties()
  nameWithType: TextRange.ClearAllProperties()
  fullName: System.Windows.Documents.TextRange.ClearAllProperties()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Removes all formatting properties (represented by <see cref="T:System.Windows.Documents.Inline"> elements) from the current selection.
  remarks: This method only affects any <xref:System.Windows.Documents.Inline> formatting elements, such as <xref:System.Windows.Documents.Bold> or <xref:System.Windows.Documents.Italic>. Properties set on paragraphs and other enclosing <xref:System.Windows.Documents.Block> elements are not changed.
  syntax:
    content: public void ClearAllProperties ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  id: Contains(System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Contains(TextPointer)
  nameWithType: TextRange.Contains(TextPointer)
  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Checks whether a position (specified by a <see cref="T:System.Windows.Documents.TextPointer">) is located within the current selection.
  remarks: Positions at either end of the current selection (indicated by <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>) are considered to be part of the current selection.
  example:
  - "The following example demonstrates the use of the Contains method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public bool Contains (System.Windows.Documents.TextPointer textPointer);
    parameters:
    - id: textPointer
      type: System.Windows.Documents.TextPointer
      description: A position to test for inclusion in the current selection.
    return:
      type: System.Boolean
      description: '`true` if the specified position is located within the current selection; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.End
  id: End
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: End
  nameWithType: TextRange.End
  fullName: System.Windows.Documents.TextRange.End
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Get the position that marks the end of the current selection.
  remarks: ''
  example:
  - "The following example demonstrates the use of the End property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public System.Windows.Documents.TextPointer End { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  id: GetPropertyValue(System.Windows.DependencyProperty)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: GetPropertyValue(DependencyProperty)
  nameWithType: TextRange.GetPropertyValue(DependencyProperty)
  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Returns the effective value of a specified formatting property on the current selection.
  remarks: In order to return a property value, the entire <xref:System.Windows.Documents.TextRange> must extend over text with only one value for the . If the <xref:System.Windows.Documents.TextRange> extends over text with two or more different values for the , <xref:System.Windows.DependencyProperty.UnsetValue> is returned.
  syntax:
    content: public object GetPropertyValue (System.Windows.DependencyProperty formattingProperty);
    parameters:
    - id: formattingProperty
      type: System.Windows.DependencyProperty
      description: A formatting property to get the value of with respect to the current selection.
    return:
      type: System.Object
      description: An object specifying the value of the specified formatting property.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.IsEmpty
  id: IsEmpty
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
  fullName: System.Windows.Documents.TextRange.IsEmpty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets a value indicating whether or not the current selection is empty.
  remarks: A <xref:System.Windows.Documents.TextRange> is considered empty if the <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A> positions are equal.
  example:
  - "The following example demonstrates the use of the IsEmpty property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  id: Load(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Load(Stream,String)
  nameWithType: TextRange.Load(Stream,String)
  fullName: System.Windows.Documents.TextRange.Load(Stream,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Loads the current selection in a specified data format from a specified stream.
  remarks: "If <xref:System.IO.Stream.CanSeek%2A> is `true` for , content will be loaded from the beginning of the stream to the end of the stream.  Otherwise, content will be read from the current <xref:System.IO.Stream.Position%2A> to the end of the stream.  When this method returns,  is left open, and the current position within  is undefined.  \n  \n A load operation replaces the current selection with the newly loaded content."
  example:
  - "The following example demonstrates the use of the Load method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void Load (System.IO.Stream stream, string dataFormat);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: A readable stream that contains data to load into the current selection.
    - id: dataFormat
      type: System.String
      description: A data format to load the data as.  Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf">, <xref:System.Windows.DataFormats.Text>, <xref:System.Windows.DataFormats.Xaml>, and <xref:System.Windows.DataFormats.XamlPackage>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  id: Save(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Save(Stream,String)
  nameWithType: TextRange.Save(Stream,String)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Saves the current selection to a specified stream in a specified data format.
  remarks: "When this method returns,  is left open, and the current position within  is undefined.  \n  \n As part of the save operation, content in the current selection may be converted to the data format specified by ."
  example:
  - "The following example demonstrates the use of the Save method.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_loadsave)]\n [!code-vb[TextPointer_Snippets#_TextRange_LoadSave](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_loadsave)]"
  syntax:
    content: public void Save (System.IO.Stream stream, string dataFormat);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: An empty, writable stream to save the current selection to.
    - id: dataFormat
      type: System.String
      description: A data format to save the current selection as.  Currently supported data formats are <xref:System.Windows.DataFormats.Rtf?displayProperty=fullName>, <xref:System.Windows.DataFormats.Text?displayProperty=fullName>, <xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>, and <xref:System.Windows.DataFormats.XamlPackage?displayProperty=fullName>.
  overload: System.Windows.Documents.TextRange.Save*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  id: Save(System.IO.Stream,System.String,System.Boolean)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Save(Stream,String,Boolean)
  nameWithType: TextRange.Save(Stream,String,Boolean)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Saves the current selection to a specified stream in a specified data format, with the option of preserving custom <see cref="T:System.Windows.Documents.TextElement"> objects.
  remarks: "When  is `false`, custom <xref:System.Windows.Documents.TextElement> objects are saved as known <xref:System.Windows.Documents.TextElement> types.  For example, suppose you create a custom <xref:System.Windows.Documents.TextElement> called `Heading1`, which inherits from <xref:System.Windows.Documents.Paragraph>. When you call this method with  set to `false`, `Heading1` is converted to a <xref:System.Windows.Documents.Paragraph> when the <xref:System.Windows.Documents.TextRange> is saved.  When you call this method with  set to `true`, `Heading1` is saved without being converted. To preserve custom text elements,  must be set to <xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>.  \n  \n Save is introduced in the .NET Framework version 3.5.  For more information, see [Versions and Dependencies](../Topic/.NET%20Framework%20Versions%20and%20Dependencies.md)."
  syntax:
    content: public void Save (System.IO.Stream stream, string dataFormat, bool preserveTextElements);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: An empty, writable stream to save the current selection to.
    - id: dataFormat
      type: System.String
      description: A data format to save the current selection as.  Currently supported data formats are <xref:System.Windows.DataFormats.Rtf?displayProperty=fullName>, <xref:System.Windows.DataFormats.Text?displayProperty=fullName>, <xref:System.Windows.DataFormats.Xaml?displayProperty=fullName>, and <xref:System.Windows.DataFormats.XamlPackage?displayProperty=fullName>.
    - id: preserveTextElements
      type: System.Boolean
      description: '`true` to preserve custom <see cref="T:System.Windows.Documents.TextElement"> objects; otherwise, `false`.'
  overload: System.Windows.Documents.TextRange.Save*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  id: Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Select(TextPointer,TextPointer)
  nameWithType: TextRange.Select(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Updates the current selection, taking two <see cref="T:System.Windows.Documents.TextPointer"> positions to indicate the updated selection.
  remarks: "A <xref:System.Windows.Documents.TextRange> is formed from a selection between two positions indicated by **TextPointers**.  One of these positions (indicated by ) is fixed with respect to the selection, while the other position (indicated by ) is movable.  This is similar to how a selection made by a user using the mouse or keyboard behaves.  \n  \n The actual ends of the new selection may be adjusted to match any selection heuristics that are applicable to the document that contains the new current selection."
  syntax:
    content: public void Select (System.Windows.Documents.TextPointer position1, System.Windows.Documents.TextPointer position2);
    parameters:
    - id: position1
      type: System.Windows.Documents.TextPointer
      description: A fixed anchor position that marks one end of the updated selection.
    - id: position2
      type: System.Windows.Documents.TextPointer
      description: A movable position that marks the other end of the updated selection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.Start
  id: Start
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Start
  nameWithType: TextRange.Start
  fullName: System.Windows.Documents.TextRange.Start
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets the position that marks the beginning of the current selection.
  remarks: ''
  example:
  - "The following example demonstrates the use of the Start property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_StartEnd](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_startend)]\n [!code-vb[TextPointer_Snippets#_TextRange_StartEnd](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_startend)]"
  syntax:
    content: public System.Windows.Documents.TextPointer Start { get; }
    return:
      type: System.Windows.Documents.TextPointer
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TextRange.Text
  id: Text
  parent: System.Windows.Documents.TextRange
  langs:
  - csharp
  name: Text
  nameWithType: TextRange.Text
  fullName: System.Windows.Documents.TextRange.Text
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets or sets the plain text contents of the current selection.
  remarks: "Use this property to extract the plain text content in the current selection, regardless of any formatting that may be present.  \n  \n New line characters and paragraph breaks are treated as equivalent with respect to this property.  Any types of content breaks present in the current selection are converted to new lines when this property is read."
  example:
  - "The following example demonstrates the use of the Text property.  \n  \n [!code-cs[TextPointer_Snippets#_TextRange_Text](../../add/codesnippet/CSharp/TextPointer_Snippets/Window1.xaml.cs#_textrange_text)]\n [!code-vb[TextPointer_Snippets#_TextRange_Text](../../add/codesnippet/VisualBasic/textpointer_snippets/window1.xaml.vb#_textrange_text)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: TextRange(TextPointer,TextPointer)
  nameWithType: TextRange.TextRange(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.TextRange(TextPointer,TextPointer)
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ApplyPropertyValue(DependencyProperty,Object)
  nameWithType: TextRange.ApplyPropertyValue(DependencyProperty,Object)
  fullName: System.Windows.Documents.TextRange.ApplyPropertyValue(DependencyProperty,Object)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: true
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Documents.TextRange.CanLoad(System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanLoad(String)
  nameWithType: TextRange.CanLoad(String)
  fullName: System.Windows.Documents.TextRange.CanLoad(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.TextRange.CanSave(System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: CanSave(String)
  nameWithType: TextRange.CanSave(String)
  fullName: System.Windows.Documents.TextRange.CanSave(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.TextRange.Changed
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Changed
  nameWithType: TextRange.Changed
  fullName: System.Windows.Documents.TextRange.Changed
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Documents.TextRange.ClearAllProperties
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: ClearAllProperties()
  nameWithType: TextRange.ClearAllProperties()
  fullName: System.Windows.Documents.TextRange.ClearAllProperties()
- uid: System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Contains(TextPointer)
  nameWithType: TextRange.Contains(TextPointer)
  fullName: System.Windows.Documents.TextRange.Contains(TextPointer)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextRange.End
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: End
  nameWithType: TextRange.End
  fullName: System.Windows.Documents.TextRange.End
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: GetPropertyValue(DependencyProperty)
  nameWithType: TextRange.GetPropertyValue(DependencyProperty)
  fullName: System.Windows.Documents.TextRange.GetPropertyValue(DependencyProperty)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: true
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Documents.TextRange.IsEmpty
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: IsEmpty
  nameWithType: TextRange.IsEmpty
  fullName: System.Windows.Documents.TextRange.IsEmpty
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Load(Stream,String)
  nameWithType: TextRange.Load(Stream,String)
  fullName: System.Windows.Documents.TextRange.Load(Stream,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save(Stream,String)
  nameWithType: TextRange.Save(Stream,String)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String,System.Boolean)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Save(Stream,String,Boolean)
  nameWithType: TextRange.Save(Stream,String,Boolean)
  fullName: System.Windows.Documents.TextRange.Save(Stream,String,Boolean)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Select(TextPointer,TextPointer)
  nameWithType: TextRange.Select(TextPointer,TextPointer)
  fullName: System.Windows.Documents.TextRange.Select(TextPointer,TextPointer)
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextRange.Start
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Start
  nameWithType: TextRange.Start
  fullName: System.Windows.Documents.TextRange.Start
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.TextRange.Text
  parent: System.Windows.Documents.TextRange
  isExternal: false
  name: Text
  nameWithType: TextRange.Text
  fullName: System.Windows.Documents.TextRange.Text
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Documents.TextRange.Save*
  parent: System.Windows.Documents.TextRange
  isExternal: false
  nameWithType: TextRange.
