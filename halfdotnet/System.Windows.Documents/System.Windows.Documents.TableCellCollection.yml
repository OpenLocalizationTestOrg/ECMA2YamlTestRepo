### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.TableCellCollection
  id: TableCellCollection
  children:
  - System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.Capacity
  - System.Windows.Documents.TableCellCollection.Clear
  - System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)
  - System.Windows.Documents.TableCellCollection.Count
  - System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.IsReadOnly
  - System.Windows.Documents.TableCellCollection.IsSynchronized
  - System.Windows.Documents.TableCellCollection.Item(System.Int32)
  - System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)
  - System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)
  - System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Documents.TableCellCollection.SyncRoot
  - System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator
  - System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)
  - System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Windows.Documents.TableCellCollection.TrimToSize
  langs:
  - csharp
  name: TableCellCollection
  nameWithType: TableCellCollection
  fullName: System.Windows.Documents.TableCellCollection
  type: Class
  summary: Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableCell"> objects.
  remarks: "This collection supports standard zero-based indexing.  \n  \n The <xref:System.Windows.Documents.TableRow.Cells%2A> property provided by the <xref:System.Windows.Documents.TableRow> class returns a TableCellCollection."
  syntax:
    content: 'public sealed class TableCellCollection : System.Collections.Generic.ICollection<System.Windows.Documents.TableCell>, System.Collections.Generic.IEnumerable<System.Windows.Documents.TableCell>, System.Collections.Generic.IList<System.Windows.Documents.TableCell>, System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Windows.Documents.TableCell>
  - System.Collections.Generic.IEnumerable<System.Windows.Documents.TableCell>
  - System.Collections.Generic.IList<System.Windows.Documents.TableCell>
  - System.Collections.IList
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)
  id: Add(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Add(TableCell)
  nameWithType: TableCellCollection.Add(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Add(TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Appends a specified <see cref="T:System.Windows.Documents.TableCell"> to the collection of table cells.
  remarks: To be added.
  syntax:
    content: public void Add (System.Windows.Documents.TableCell item);
    parameters:
    - id: item
      type: System.Windows.Documents.TableCell
      description: The <see cref="T:System.Windows.Documents.TableCell"> to append to the collection of table cells.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.Capacity
  id: Capacity
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: TableCellCollection.Capacity
  fullName: System.Windows.Documents.TableCellCollection.Capacity
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets or sets the preallocated collection item capacity for this collection.
  remarks: "The Capacity property represents the number of preallocated slots for storing items in this collection, whereas the <xref:System.Windows.Documents.TableCellCollection.Count%2A> property represents the actual number of items currently in the collection. The value of Capacity is always at least as large as the value of <xref:System.Windows.Documents.TableCellCollection.Count%2A>.  \n  \n When newly added collection items cause the collection count to exceed the collection capacity, the capacity is increased automatically to accommodate the newly added collection items.  Increasing the collection capacity involves allocating additional collection slots, which incurs both performance and memory overhead.  Use the Capacity property to optimize the collection capacity in cases where the total or maximum number of collection items is known in advance. Use the <xref:System.Windows.Documents.TableCellCollection.TrimToSize%2A> method to cause the collection capacity to equalize with the current collection count."
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.Clear
  id: Clear
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TableCellCollection.Clear()
  fullName: System.Windows.Documents.TableCellCollection.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Clears all items from the collection.
  remarks: After calling Clear, the value of the <xref:System.Windows.Documents.TableCellCollection.Count%2A> property becomes **0** and the value of the <xref:System.Windows.Documents.TableCellCollection.Capacity%2A> property is unchanged. To set a new capacity, call <xref:System.Windows.Documents.TableCellCollection.TrimToSize%2A> or explicitly set a new capacity through the <xref:System.Windows.Documents.TableCellCollection.Capacity%2A> property.
  syntax:
    content: public void Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)
  id: Contains(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Contains(TableCell)
  nameWithType: TableCellCollection.Contains(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Contains(TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Queries for the presence of a specified item in the collection.
  remarks: To be added.
  syntax:
    content: public bool Contains (System.Windows.Documents.TableCell item);
    parameters:
    - id: item
      type: System.Windows.Documents.TableCell
      description: An item to query for the presence of in the collection.
    return:
      type: System.Boolean
      description: '`true` if the specified  is present in the collection; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TableCellCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Documents.TableCellCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.
  remarks: To be added.
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: A one-dimensional array to which the collection contents will be copied. This array must use zero-based indexing.
    - id: index
      type: System.Int32
      description: A zero-based index in  specifying the position at which to begin inserting the copied collection objects.
  overload: System.Windows.Documents.TableCellCollection.CopyTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)
  id: CopyTo(System.Windows.Documents.TableCell[],System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: CopyTo(TableCell[],Int32)
  nameWithType: TableCellCollection.CopyTo(TableCell[],Int32)
  fullName: System.Windows.Documents.TableCellCollection.CopyTo(TableCell[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableCell"> array of starting at a specified index position in the array.
  remarks: To be added.
  syntax:
    content: public void CopyTo (System.Windows.Documents.TableCell[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Documents.TableCell[]
      description: A one-dimensional <see cref="T:System.Windows.Documents.TableCell"> array to which the collection contents will be copied. This array must use zero-based indexing.
    - id: index
      type: System.Int32
      description: A zero-based index in  that specifies the position at which to begin inserting the copied collection objects.
  overload: System.Windows.Documents.TableCellCollection.CopyTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.Count
  id: Count
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Count
  nameWithType: TableCellCollection.Count
  fullName: System.Windows.Documents.TableCellCollection.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets the number of items currently contained by the collection.
  remarks: "The <xref:System.Windows.Documents.TableCellCollection.Capacity%2A> property represents the number of pre-allocated slots for storing items in this collection, whereas the Count property represents the actual number of items currently in the collection.  The value of <xref:System.Windows.Documents.TableCellCollection.Capacity%2A> is always at least as large as the value of Count.  \n  \n When newly added collection items cause the collection count to exceed the collection capacity, the capacity is increased automatically to accommodate the newly added collection items. Increasing the collection capacity involves allocating additional collection slots, which incurs both performance and memory overhead.  Use the <xref:System.Windows.Documents.TableCellCollection.Capacity%2A> property to optimize the collection capacity in cases where the total or maximum number of collection items is known in advance. Use the <xref:System.Windows.Documents.TableCellCollection.TrimToSize%2A> method to cause the collection capacity to equalize with the current collection count."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)
  id: IndexOf(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: IndexOf(TableCell)
  nameWithType: TableCellCollection.IndexOf(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.IndexOf(TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Returns the zero-based index of specified collection item.
  remarks: To be added.
  syntax:
    content: public int IndexOf (System.Windows.Documents.TableCell item);
    parameters:
    - id: item
      type: System.Windows.Documents.TableCell
      description: A collection item to return the index of.
    return:
      type: System.Int32
      description: The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)
  id: Insert(System.Int32,System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Insert(Int32,TableCell)
  nameWithType: TableCellCollection.Insert(Int32,TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Insert(Int32,TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Inserts a specified item in the collection at a specified index position.
  remarks: "If <xref:System.Windows.Documents.TableCellCollection.Count%2A> equals <xref:System.Windows.Documents.TableCellCollection.Capacity%2A> for this collection, the collection capacity is increased automatically before the new item is inserted. Set  equal to the value of <xref:System.Windows.Documents.TableCellCollection.Count%2A> to append a new collection item to the collection.  \n  \n Indices for existing collection items might be adjusted to accommodate the newly inserted collection item."
  syntax:
    content: public void Insert (int index, System.Windows.Documents.TableCell item);
    parameters:
    - id: index
      type: System.Int32
      description: A zero-based index that specifies the position in the collection at which to insert .
    - id: item
      type: System.Windows.Documents.TableCell
      description: An item to insert into the collection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TableCellCollection.IsReadOnly
  fullName: System.Windows.Documents.TableCellCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](../../add/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.
  remarks: To be added.
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TableCellCollection.IsSynchronized
  fullName: System.Windows.Documents.TableCellCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](../../add/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.
  remarks: To be added.
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TableCellCollection.Item(Int32)
  fullName: System.Windows.Documents.TableCellCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Gets or sets the collection item at a specified index. This is an indexed property.
  remarks: This is an indexed property that supports standard indexing syntax (similar to that used to access a particular cell in an array).
  syntax:
    content: public System.Windows.Documents.TableCell this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: A zero-based index that specifies the position of the collection item.
    return:
      type: System.Windows.Documents.TableCell
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)
  id: Remove(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: Remove(TableCell)
  nameWithType: TableCellCollection.Remove(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Remove(TableCell)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Removes a specified item from the collection.
  remarks: Indices for remaining collection items might be adjusted to reflect the removed collection item.
  syntax:
    content: public bool Remove (System.Windows.Documents.TableCell item);
    parameters:
    - id: item
      type: System.Windows.Documents.TableCell
      description: An item to remove from the collection.
    return:
      type: System.Boolean
      description: '`true` if the specified item was found and removed; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TableCellCollection.RemoveAt(Int32)
  fullName: System.Windows.Documents.TableCellCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Removes an item, specified by index, from the collection.
  remarks: Indices for remaining collection items might be adjusted to reflect the removed collection item.
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: A zero-based index that specifies the collection item to remove.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: TableCellCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Documents.TableCellCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Removes a range of items, specified by beginning index and count, from the collection.
  remarks: Indices for remaining collection items might be adjusted to reflect the removed collection items.
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: A zero-based index that indicates the beginning of a range of items to remove.
    - id: count
      type: System.Int32
      description: The number of items to remove, beginning from the position specified by .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TableCellCollection.SyncRoot
  fullName: System.Windows.Documents.TableCellCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: This type or member supports the [!INCLUDE[TLA#tla_winclient](../../add/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.
  remarks: To be added.
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: TableCellCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Windows.Documents.TableCell> IEnumerable<TableCell>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Windows.Documents.TableCell}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TableCellCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <see cref="T:System.Collections.IEnumerator"> object that can be used to iterate through the collection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.Add%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface. Use the type-safe <xref:System.Windows.Documents.TableCellCollection.Add%2A> method instead.
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to add to the <xref:System.Windows.Documents.TableCellCollection>.
    return:
      type: System.Int32
      description: The position into which the new element was inserted.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: TableCellCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.Clear%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface. Use the type-safe <xref:System.Windows.Documents.TableCellCollection.Clear%2A> method instead.
  syntax:
    content: void IList.Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.Contains%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface. Use the type-safe <xref:System.Windows.Documents.TableCellCollection.Contains%2A> method instead.
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to locate in the <xref:System.Windows.Documents.TableCellCollection>.
    return:
      type: System.Boolean
      description: '`true` if the <see cref="T:System.Object"> is found in the <xref:System.Windows.Documents.TableCellCollection>; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface. Use the type-safe <xref:System.Windows.Documents.TableCellCollection.IndexOf%2A> method instead.
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to locate in the <xref:System.Windows.Documents.TableCellCollection>.
    return:
      type: System.Int32
      description: The index of  if found in the list; otherwise, -1.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.Insert%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface. Use the type-safe <xref:System.Windows.Documents.TableCellCollection.Insert%2A> method instead.
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which to insert the <see cref="T:System.Object">.
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to insert into the <xref:System.Windows.Documents.TableCellCollection>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: TableCellCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.Item%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface. Use the type-safe <xref:System.Windows.Documents.TableCellCollection.Item%2A> property instead.
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.Remove%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface. Use the type safe <xref:System.Windows.Documents.TableCellCollection.Remove%2A>, <xref:System.Windows.Documents.TableCellCollection.RemoveAt%2A>, or <xref:System.Windows.Documents.TableCellCollection.RemoveRange%2A> methods instead
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to remove from the <xref:System.Windows.Documents.TableCellCollection>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: For a description of this member, see <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Documents.TableCellCollection> instance is cast to an <xref:System.Collections.IList> interface. Use the type safe <xref:System.Windows.Documents.TableCellCollection.Remove%2A>, <xref:System.Windows.Documents.TableCellCollection.RemoveAt%2A>, or <xref:System.Windows.Documents.TableCellCollection.RemoveRange%2A> methods instead.
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Documents.TableCellCollection.TrimToSize
  id: TrimToSize
  parent: System.Windows.Documents.TableCellCollection
  langs:
  - csharp
  name: TrimToSize()
  nameWithType: TableCellCollection.TrimToSize()
  fullName: System.Windows.Documents.TableCellCollection.TrimToSize()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: Optimizes memory consumption for the collection by setting the underlying collection <xref:System.Windows.Documents.TableCellCollection.Capacity%2A> equal to the <xref:System.Windows.Documents.TableCellCollection.Count%2A> of items currently in the collection.
  remarks: This method can be used to minimize memory overhead for a collection, particularly if the set of items contained by the collection is expected to be static.
  syntax:
    content: public void TrimToSize ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Add(TableCell)
  nameWithType: TableCellCollection.Add(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Add(TableCell)
- uid: System.Windows.Documents.TableCell
  parent: System.Windows.Documents
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Windows.Documents.TableCell
- uid: System.Windows.Documents.TableCellCollection.Capacity
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Capacity
  nameWithType: TableCellCollection.Capacity
  fullName: System.Windows.Documents.TableCellCollection.Capacity
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.Clear
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Clear()
  nameWithType: TableCellCollection.Clear()
  fullName: System.Windows.Documents.TableCellCollection.Clear()
- uid: System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Contains(TableCell)
  nameWithType: TableCellCollection.Contains(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Contains(TableCell)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TableCell
  parent: System.Windows.Documents
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Windows.Documents.TableCell
- uid: System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TableCellCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Documents.TableCellCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: CopyTo(TableCell[],Int32)
  nameWithType: TableCellCollection.CopyTo(TableCell[],Int32)
  fullName: System.Windows.Documents.TableCellCollection.CopyTo(TableCell[],Int32)
- uid: System.Windows.Documents.TableCell
  parent: System.Windows.Documents
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Windows.Documents.TableCell[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.Count
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Count
  nameWithType: TableCellCollection.Count
  fullName: System.Windows.Documents.TableCellCollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: IndexOf(TableCell)
  nameWithType: TableCellCollection.IndexOf(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.IndexOf(TableCell)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCell
  parent: System.Windows.Documents
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Windows.Documents.TableCell
- uid: System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Insert(Int32,TableCell)
  nameWithType: TableCellCollection.Insert(Int32,TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Insert(Int32,TableCell)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCell
  parent: System.Windows.Documents
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Windows.Documents.TableCell
- uid: System.Windows.Documents.TableCellCollection.IsReadOnly
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TableCellCollection.IsReadOnly
  fullName: System.Windows.Documents.TableCellCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TableCellCollection.IsSynchronized
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TableCellCollection.IsSynchronized
  fullName: System.Windows.Documents.TableCellCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TableCellCollection.Item(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TableCellCollection.Item(Int32)
  fullName: System.Windows.Documents.TableCellCollection.Item(Int32)
- uid: System.Windows.Documents.TableCell
  parent: System.Windows.Documents
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Windows.Documents.TableCell
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: Remove(TableCell)
  nameWithType: TableCellCollection.Remove(TableCell)
  fullName: System.Windows.Documents.TableCellCollection.Remove(TableCell)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TableCell
  parent: System.Windows.Documents
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Windows.Documents.TableCell
- uid: System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TableCellCollection.RemoveAt(Int32)
  fullName: System.Windows.Documents.TableCellCollection.RemoveAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: TableCellCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Documents.TableCellCollection.RemoveRange(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.SyncRoot
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TableCellCollection.SyncRoot
  fullName: System.Windows.Documents.TableCellCollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Documents.TableCellCollection.System#Collections#Generic#IEnumerable{System#Windows#Documents#TableCell}#GetEnumerator
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: TableCellCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.Generic.IEnumerable()
- uid: System.Collections.Generic.IEnumerator{System.Windows.Documents.TableCell}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<TableCell>
  nameWithType: IEnumerator<TableCell>
  fullName: System.Collections.Generic.IEnumerator<System.Windows.Documents.TableCell>
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: TableCellCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Add(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Clear
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: TableCellCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Clear()
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TableCellCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TableCellCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TableCellCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#IsReadOnly
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TableCellCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Item(Int32)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TableCellCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.Remove(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Documents.TableCellCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: TableCellCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Documents.TableCellCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.TableCellCollection.TrimToSize
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  name: TrimToSize()
  nameWithType: TableCellCollection.TrimToSize()
  fullName: System.Windows.Documents.TableCellCollection.TrimToSize()
- uid: System.Windows.Documents.TableCellCollection.CopyTo*
  parent: System.Windows.Documents.TableCellCollection
  isExternal: false
  nameWithType: TableCellCollection.
