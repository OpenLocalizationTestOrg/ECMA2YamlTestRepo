### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.Toolset
  id: Toolset
  children:
  - Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)
  - Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)
  - Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset},System.String)
  - Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion
  - Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion
  - Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)
  - Microsoft.Build.Evaluation.Toolset.GetProperty(System.String,System.String)
  - Microsoft.Build.Evaluation.Toolset.Properties
  - Microsoft.Build.Evaluation.Toolset.SubToolsets
  - Microsoft.Build.Evaluation.Toolset.ToolsPath
  - Microsoft.Build.Evaluation.Toolset.ToolsVersion
  langs:
  - csharp
  name: Toolset
  nameWithType: Toolset
  fullName: Microsoft.Build.Evaluation.Toolset
  type: Class
  summary: Represent an aggregation of a tools version (eg. "2.0"), tools path, and optional set of associated properties.
  remarks: "  \n  \n## Remarks  \n UNDONE: (danmose) Review immutability. If this is not immutable, add a mechanism to notify the project collection/s owning it to increment their toolsetVersion.  \n  \n "
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("ToolsVersion={ToolsVersion} ToolsPath={ToolsPath} #Properties={properties.Count}")]

      public class Toolset
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)
  id: '#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)'
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: Toolset(String,String,ProjectCollection,String)
  nameWithType: Toolset.Toolset(String,String,ProjectCollection,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,ProjectCollection,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Creates a toolset with the given tools version and tools path. Global, reserved, and environment properties are taken from the given project collection.
  remarks: To be added.
  syntax:
    content: public Toolset (string toolsVersion, string toolsPath, Microsoft.Build.Evaluation.ProjectCollection projectCollection, string msbuildOverrideTasksPath);
    parameters:
    - id: toolsVersion
      type: System.String
      description: Name of the toolset
    - id: toolsPath
      type: System.String
      description: Path to this toolset's tasks and targets
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: The project collection from which to obtain the properties.
    - id: msbuildOverrideTasksPath
      type: System.String
      description: The path to search for msbuild overridetasks files.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)'
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  nameWithType: Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Creates a toolset with the given tools version, tools path, and build properties. Global, reserved, and environment properties are taken from the given project collection.
  remarks: To be added.
  syntax:
    content: public Toolset (string toolsVersion, string toolsPath, System.Collections.Generic.IDictionary<string,string> buildProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection, string msbuildOverrideTasksPath);
    parameters:
    - id: toolsVersion
      type: System.String
      description: Name of the toolset
    - id: toolsPath
      type: System.String
      description: Path to this toolset's tasks and targets
    - id: buildProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Properties that should be associated with the Toolset.  \n  \n May be null, in which case an empty property group will be used."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: The project collection from which to obtain the properties.
    - id: msbuildOverrideTasksPath
      type: System.String
      description: The path to search for msbuild overridetasks files.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset},System.String)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset},System.String)'
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: Toolset(String,String,IDictionary<String,String>,ProjectCollection,IDictionary<String,SubToolset>,String)
  nameWithType: Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,IDictionary<String,SubToolset>,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,IDictionary<String,SubToolset>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Creates a toolset with the given tools version and tools path. Global, reserved, and environment properties are taken from the given project collection.
  remarks: To be added.
  syntax:
    content: public Toolset (string toolsVersion, string toolsPath, System.Collections.Generic.IDictionary<string,string> buildProperties, Microsoft.Build.Evaluation.ProjectCollection projectCollection, System.Collections.Generic.IDictionary<string,Microsoft.Build.Evaluation.SubToolset> subToolsets, string msbuildOverrideTasksPath);
    parameters:
    - id: toolsVersion
      type: System.String
      description: Name of the toolset.
    - id: toolsPath
      type: System.String
      description: Path to this toolset's tasks and targets.
    - id: buildProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Properties that should be associated with the Toolset.  \n  \n May be null, in which case an empty property group will be used."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: The project collection from which to obtain the properties.
    - id: subToolsets
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset}
      description: The set of sub toolsets to add to this toolset.
    - id: msbuildOverrideTasksPath
      type: System.String
      description: The path to search for msbuild overridetasks files. The set of sub-toolsets to add to this toolset
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion
  id: DefaultSubToolsetVersion
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: DefaultSubToolsetVersion
  nameWithType: Toolset.DefaultSubToolsetVersion
  fullName: Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Gets the default sub toolset version for this toolset.
  remarks: "  \n  \n## Remarks  \n If [!INCLUDE[vs_dev10_long](../../add/includes/vs-dev10-long-md.md)] is installed, use the base toolset and return a sub toolset version of “10.0”.  \n  \n Otherwise, use the highest-versioned sub toolset found. Sub toolsets with numbered versions are ordered numerically; any additional sub toolsets are prepended to the beginning of the list in the order found. Returns null if there is no sub toolset available and [!INCLUDE[vs_dev10_long](../../add/includes/vs-dev10-long-md.md)] is not installed.  \n  \n "
  syntax:
    content: public string DefaultSubToolsetVersion { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion
  id: GenerateSubToolsetVersion
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: GenerateSubToolsetVersion()
  nameWithType: Toolset.GenerateSubToolsetVersion()
  fullName: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Creates the sub toolset version to be used with this toolset.
  remarks: "  \n  \n## Remarks  \n If “VisualStudioVersion” is set as a property on the toolset itself, then sub toolset version is set to “VisualStudioVersion”.  \n  \n Otherwise, sub toolset version is set to the DefaultSubToolsetVersion of the toolset.  \n  \n "
  syntax:
    content: public string GenerateSubToolsetVersion ();
    parameters: []
    return:
      type: System.String
      description: Returns the sub toolset version to be used with this toolset.
  overload: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)
  id: GenerateSubToolsetVersion(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: GenerateSubToolsetVersion(IDictionary<String,String>,Int32)
  nameWithType: Toolset.GenerateSubToolsetVersion(IDictionary<String,String>,Int32)
  fullName: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(IDictionary<String,String>,Int32)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Creates the sub toolset version to be used with this toolset.
  remarks: "  \n  \n## Remarks  \n If the “VisualStudioVersion” global property exists in the set of global properties passed in, then sub toolset version is set to “VisualStudioVersion”.  \n  \n Otherwise, if “VisualStudioVersion” is set as a property on the toolset itself, then sub toolset version is set to “VisualStudioVersion”.  \n  \n Otherwise, if the Visual Studio version corresponding to the solution version (Visual Studio version = solution version – 1) passed in maps to an existing sub toolset, then sub toolset version is set to the Visual Studio version.  \n  \n Otherwise, sub toolset version is set to the DefaultSubToolsetVersion of the toolset.  \n  \n "
  syntax:
    content: public string GenerateSubToolsetVersion (System.Collections.Generic.IDictionary<string,string> overrideGlobalProperties, int solutionVersion);
    parameters:
    - id: overrideGlobalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Set of global properties to use to create the sub toolset version. May be null.
    - id: solutionVersion
      type: System.Int32
      description: The solution version to use to create the sub toolset version.
    return:
      type: System.String
      description: Returns the sub toolset version.
  overload: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.GetProperty(System.String,System.String)
  id: GetProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: GetProperty(String,String)
  nameWithType: Toolset.GetProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Toolset.GetProperty(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Gets property specified by the given property name and sub toolset version.
  remarks: "  \n  \n## Remarks  \n If the property is not found in the sub toolset, searches for the property in the base toolset.  \n  \n If the property is not found in the sub toolset or the base toolset, returns null.  \n  \n "
  syntax:
    content: public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string propertyName, string subToolsetVersion);
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the property.
    - id: subToolsetVersion
      type: System.String
      description: The sub toolset version of the sub toolset. May be null
    return:
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: Returns the property specified, if it is found, otherwise returns null.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.Properties
  id: Properties
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: Properties
  nameWithType: Toolset.Properties
  fullName: Microsoft.Build.Evaluation.Toolset.Properties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Gets the optional properties associated with the toolset.
  remarks: To be added.
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectPropertyInstance> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectPropertyInstance}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.SubToolsets
  id: SubToolsets
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: SubToolsets
  nameWithType: Toolset.SubToolsets
  fullName: Microsoft.Build.Evaluation.Toolset.SubToolsets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Gets the set of sub toolsets associated with this toolset.
  remarks: To be added.
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Evaluation.SubToolset> SubToolsets { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.ToolsPath
  id: ToolsPath
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: ToolsPath
  nameWithType: Toolset.ToolsPath
  fullName: Microsoft.Build.Evaluation.Toolset.ToolsPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Gets a path to the tasks and targets of this toolset.
  remarks: "  \n  \n## Remarks  \n Corresponds to $(MSBuildToolsPath) in a project or targets file.  \n  \n "
  syntax:
    content: public string ToolsPath { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.Evaluation.Toolset.ToolsVersion
  id: ToolsVersion
  parent: Microsoft.Build.Evaluation.Toolset
  langs:
  - csharp
  name: ToolsVersion
  nameWithType: Toolset.ToolsVersion
  fullName: Microsoft.Build.Evaluation.Toolset.ToolsVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: Gets the name of this toolset.
  remarks: To be added.
  syntax:
    content: public string ToolsVersion { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: Toolset(String,String,ProjectCollection,String)
  nameWithType: Toolset.Toolset(String,String,ProjectCollection,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,ProjectCollection,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectCollection
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectCollection
  nameWithType: ProjectCollection
  fullName: Microsoft.Build.Evaluation.ProjectCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  nameWithType: Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
- uid: Microsoft.Build.Evaluation.ProjectCollection
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectCollection
  nameWithType: ProjectCollection
  fullName: Microsoft.Build.Evaluation.ProjectCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset},System.String)
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: Toolset(String,String,IDictionary<String,String>,ProjectCollection,IDictionary<String,SubToolset>,String)
  nameWithType: Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,IDictionary<String,SubToolset>,String)
  fullName: Microsoft.Build.Evaluation.Toolset.Toolset(String,String,IDictionary<String,String>,ProjectCollection,IDictionary<String,SubToolset>,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
- uid: Microsoft.Build.Evaluation.ProjectCollection
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectCollection
  nameWithType: ProjectCollection
  fullName: Microsoft.Build.Evaluation.ProjectCollection
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,SubToolset>
  nameWithType: IDictionary<String,SubToolset>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Evaluation.SubToolset>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: DefaultSubToolsetVersion
  nameWithType: Toolset.DefaultSubToolsetVersion
  fullName: Microsoft.Build.Evaluation.Toolset.DefaultSubToolsetVersion
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: GenerateSubToolsetVersion()
  nameWithType: Toolset.GenerateSubToolsetVersion()
  fullName: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: GenerateSubToolsetVersion(IDictionary<String,String>,Int32)
  nameWithType: Toolset.GenerateSubToolsetVersion(IDictionary<String,String>,Int32)
  fullName: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion(IDictionary<String,String>,Int32)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Evaluation.Toolset.GetProperty(System.String,System.String)
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: GetProperty(String,String)
  nameWithType: Toolset.GetProperty(String,String)
  fullName: Microsoft.Build.Evaluation.Toolset.GetProperty(String,String)
- uid: Microsoft.Build.Execution.ProjectPropertyInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectPropertyInstance
  nameWithType: ProjectPropertyInstance
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Toolset.Properties
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: Properties
  nameWithType: Toolset.Properties
  fullName: Microsoft.Build.Evaluation.Toolset.Properties
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectPropertyInstance}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,ProjectPropertyInstance>
  nameWithType: IDictionary<String,ProjectPropertyInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectPropertyInstance>
- uid: Microsoft.Build.Evaluation.Toolset.SubToolsets
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: SubToolsets
  nameWithType: Toolset.SubToolsets
  fullName: Microsoft.Build.Evaluation.Toolset.SubToolsets
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Evaluation.SubToolset}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,SubToolset>
  nameWithType: IDictionary<String,SubToolset>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Evaluation.SubToolset>
- uid: Microsoft.Build.Evaluation.Toolset.ToolsPath
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: ToolsPath
  nameWithType: Toolset.ToolsPath
  fullName: Microsoft.Build.Evaluation.Toolset.ToolsPath
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Toolset.ToolsVersion
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  name: ToolsVersion
  nameWithType: Toolset.ToolsVersion
  fullName: Microsoft.Build.Evaluation.Toolset.ToolsVersion
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.Toolset.GenerateSubToolsetVersion*
  parent: Microsoft.Build.Evaluation.Toolset
  isExternal: false
  nameWithType: Toolset.
