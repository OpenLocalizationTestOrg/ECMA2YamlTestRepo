### YamlMime:ManagedReference
items:
- uid: System.Text.EncoderFallback
  id: EncoderFallback
  children:
  - System.Text.EncoderFallback.#ctor
  - System.Text.EncoderFallback.CreateFallbackBuffer
  - System.Text.EncoderFallback.ExceptionFallback
  - System.Text.EncoderFallback.MaxCharCount
  - System.Text.EncoderFallback.ReplacementFallback
  langs:
  - csharp
  name: EncoderFallback
  nameWithType: EncoderFallback
  fullName: System.Text.EncoderFallback
  type: Class
  summary: Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an encoded output byte sequence.
  remarks: "An encoding maps a Unicode character to an encoded sequence of bytes. A particular encoding is represented by a type that is derived from the <xref:System.Text.Encoding> class. Specifically, a character is encoded to a byte sequence by calling the encoding type's <xref:System.Text.Encoding.GetBytes%2A?displayProperty=fullName> method, and the byte sequence is decoded to a character array or a string by calling the <xref:System.Text.Encoding.GetChars%2A?displayProperty=fullName> or <xref:System.Text.Encoding.GetString%2A?displayProperty=fullName> method.  \n  \n An encoding operation can fail if the input character cannot be represented by the encoding. For example, an <xref:System.Text.ASCIIEncoding> object cannot encode a character whose Unicode code point value is outside the range U+0000 to U+007F.  \n  \n When an encoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback. Your application can use predefined .NET Framework encoder fallbacks, or it can create a custom encoder fallback derived from the EncoderFallback and <xref:System.Text.EncoderFallbackBuffer> classes.  \n  \n EncoderFallback and <xref:System.Text.EncoderFallbackBuffer> are the base classes for all encoding fallback handlers in the .NET Framework. They support the following three kinds of fallback handling mechanisms:  \n  \n-   Best-fit fallback, which maps valid Unicode characters that cannot be encoded to an approximate equivalent. For example, a best-fit fallback handler for the <xref:System.Text.ASCIIEncoding> class might map Ã† (U+00C6) to AE (U+0041 + U+0045). A best-fit fallback handler might also be implemented to transliterate one alphabet (such as Cyrillic) to another (such as Latin or Roman). The .NET Framework does not provide any public best-fit fallback implementations.  \n  \n-   Replacement fallback, which replaces each character that cannot be encoded with a predefined string. The .NET Framework provides a predefined replacement fallback handler. The <xref:System.Text.EncoderReplacementFallback> class replaces each byte sequence that cannot be decoded with a question mark character (\"?\", or U+003F) or a REPLACEMENT CHARACTER (U+FFFD). You can customize the replacement string by specifying a substitute in the call to the <xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName> constructor. After the substitute string is emitted, the encoding operation continues converting the remainder of the input.  \n  \n-   Exception fallback, which throws an exception when a character cannot be encoded. The .NET Framework provides a predefined exception fallback handler. The <xref:System.Text.EncoderExceptionFallback> class throws an <xref:System.Text.EncoderFallbackException> when an invalid character is encountered, and the encoding operation terminates.  \n  \n If you choose to implement a custom solution, you must override the following abstract members of the EncoderFallback class:  \n  \n-   The <xref:System.Text.EncoderFallback.CreateFallbackBuffer%2A> method, which returns a class instance derived from <xref:System.Text.EncoderFallbackBuffer>. Depending on the type of fallback handler that you are developing, the <xref:System.Text.EncoderFallbackBuffer> implementation is responsible for performing the mapping or replacement, or for throwing the exception.  \n  \n-   The <xref:System.Text.EncoderFallback.MaxCharCount%2A> property, which returns the maximum number of characters that the fallback implementation can return. For an exception fallback handler, its value should be zero.  \n  \n For more information about encoding, decoding, and fallback strategies, see [Character Encoding in the .NET Framework](../Topic/Character%20Encoding%20in%20the%20.NET%20Framework.md)."
  syntax:
    content: public abstract class EncoderFallback
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Text.EncoderFallback.#ctor
  id: '#ctor'
  parent: System.Text.EncoderFallback
  langs:
  - csharp
  name: EncoderFallback()
  nameWithType: EncoderFallback.EncoderFallback()
  fullName: System.Text.EncoderFallback.EncoderFallback()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: Initializes a new instance of the <see cref="T:System.Text.EncoderFallback"> class.
  remarks: To be added.
  syntax:
    content: protected EncoderFallback ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Text.EncoderFallback.CreateFallbackBuffer
  id: CreateFallbackBuffer
  parent: System.Text.EncoderFallback
  langs:
  - csharp
  name: CreateFallbackBuffer()
  nameWithType: EncoderFallback.CreateFallbackBuffer()
  fullName: System.Text.EncoderFallback.CreateFallbackBuffer()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: When overridden in a derived class, initializes a new instance of the <see cref="T:System.Text.EncoderFallbackBuffer"> class.
  remarks: "This method returns an object derived from <xref:System.Text.EncoderFallbackBuffer> that is responsible for performing the fallback operation. For example, of the predefined <xref:System.Text.EncoderFallback> implementations in the .NET Framework, the <xref:System.Text.EncoderReplacementFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderReplacementFallbackBuffer> object, and the <xref:System.Text.EncoderExceptionFallback.CreateFallbackBuffer%2A?displayProperty=fullName> method returns an <xref:System.Text.EncoderExceptionFallbackBuffer> object.  \n  \n TheCreateFallbackBuffer method is called by an encoder when it encounters the first character that it is unable to encode. The <xref:System.Text.EncoderFallbackBuffer> object returned by this method provides the fallback implementation and is responsible for returning the byte array that replaces the character or characters that could not be encoded."
  syntax:
    content: public abstract System.Text.EncoderFallbackBuffer CreateFallbackBuffer ();
    parameters: []
    return:
      type: System.Text.EncoderFallbackBuffer
      description: An object that provides a fallback buffer for an encoder.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Text.EncoderFallback.ExceptionFallback
  id: ExceptionFallback
  parent: System.Text.EncoderFallback
  langs:
  - csharp
  name: ExceptionFallback
  nameWithType: EncoderFallback.ExceptionFallback
  fullName: System.Text.EncoderFallback.ExceptionFallback
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: Gets an object that throws an exception when an input character cannot be encoded.
  remarks: To be added.
  syntax:
    content: public static System.Text.EncoderFallback ExceptionFallback { get; }
    return:
      type: System.Text.EncoderFallback
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Text.EncoderFallback.MaxCharCount
  id: MaxCharCount
  parent: System.Text.EncoderFallback
  langs:
  - csharp
  name: MaxCharCount
  nameWithType: EncoderFallback.MaxCharCount
  fullName: System.Text.EncoderFallback.MaxCharCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: When overridden in a derived class, gets the maximum number of characters the current <see cref="T:System.Text.EncoderFallback"> object can return.
  remarks: For an exception fallback handler, this property should return zero.
  syntax:
    content: public abstract int MaxCharCount { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Text.EncoderFallback.ReplacementFallback
  id: ReplacementFallback
  parent: System.Text.EncoderFallback
  langs:
  - csharp
  name: ReplacementFallback
  nameWithType: EncoderFallback.ReplacementFallback
  fullName: System.Text.EncoderFallback.ReplacementFallback
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: Gets an object that outputs a substitute string in place of an input character that cannot be encoded.
  remarks: To be added.
  syntax:
    content: public static System.Text.EncoderFallback ReplacementFallback { get; }
    return:
      type: System.Text.EncoderFallback
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Text.EncoderFallback.#ctor
  parent: System.Text.EncoderFallback
  isExternal: false
  name: EncoderFallback()
  nameWithType: EncoderFallback.EncoderFallback()
  fullName: System.Text.EncoderFallback.EncoderFallback()
- uid: System.Text.EncoderFallback.CreateFallbackBuffer
  parent: System.Text.EncoderFallback
  isExternal: false
  name: CreateFallbackBuffer()
  nameWithType: EncoderFallback.CreateFallbackBuffer()
  fullName: System.Text.EncoderFallback.CreateFallbackBuffer()
- uid: System.Text.EncoderFallbackBuffer
  parent: System.Text
  isExternal: false
  name: EncoderFallbackBuffer
  nameWithType: EncoderFallbackBuffer
  fullName: System.Text.EncoderFallbackBuffer
- uid: System.Text.EncoderFallback.ExceptionFallback
  parent: System.Text.EncoderFallback
  isExternal: false
  name: ExceptionFallback
  nameWithType: EncoderFallback.ExceptionFallback
  fullName: System.Text.EncoderFallback.ExceptionFallback
- uid: System.Text.EncoderFallback
  parent: System.Text
  isExternal: false
  name: EncoderFallback
  nameWithType: EncoderFallback
  fullName: System.Text.EncoderFallback
- uid: System.Text.EncoderFallback.MaxCharCount
  parent: System.Text.EncoderFallback
  isExternal: false
  name: MaxCharCount
  nameWithType: EncoderFallback.MaxCharCount
  fullName: System.Text.EncoderFallback.MaxCharCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.EncoderFallback.ReplacementFallback
  parent: System.Text.EncoderFallback
  isExternal: false
  name: ReplacementFallback
  nameWithType: EncoderFallback.ReplacementFallback
  fullName: System.Text.EncoderFallback.ReplacementFallback
- uid: System.Text.EncoderFallback
  parent: System.Text
  isExternal: false
  name: EncoderFallback
  nameWithType: EncoderFallback
  fullName: System.Text.EncoderFallback
