### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.EventBuilder
  id: EventBuilder
  children:
  - System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.EventBuilder.GetEventToken
  - System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  - System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  - System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)
  - System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: EventBuilder
  nameWithType: EventBuilder
  fullName: System.Reflection.Emit.EventBuilder
  type: Class
  summary: Defines events for a class.
  remarks: An `EventBuilder` is always associated with a `TypeBuilder`. The TypeBuilder.DefineEvent method will return a new `EventBuilder` to a client.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._EventBuilder))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class EventBuilder : System.Runtime.InteropServices._EventBuilder
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._EventBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  id: AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: AddOtherMethod(MethodBuilder)
  nameWithType: EventBuilder.AddOtherMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.AddOtherMethod(MethodBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Adds one of the "other" methods associated with this event. "Other" methods are methods other than the "on" and "raise" methods associated with an event. This function can be called many times to add as many "other" methods.
  remarks: To be added.
  syntax:
    content: public void AddOtherMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: A `MethodBuilder` object that represents the other method.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.GetEventToken
  id: GetEventToken
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: GetEventToken()
  nameWithType: EventBuilder.GetEventToken()
  fullName: System.Reflection.Emit.EventBuilder.GetEventToken()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Returns the token for this event.
  remarks: To be added.
  syntax:
    content: public System.Reflection.Emit.EventToken GetEventToken ();
    parameters: []
    return:
      type: System.Reflection.Emit.EventToken
      description: Returns the `EventToken` for this event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)
  id: SetAddOnMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: SetAddOnMethod(MethodBuilder)
  nameWithType: EventBuilder.SetAddOnMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetAddOnMethod(MethodBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the method used to subscribe to this event.
  remarks: To be added.
  syntax:
    content: public void SetAddOnMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: A `MethodBuilder` object that represents the method used to subscribe to this event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: EventBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetCustomAttribute(CustomAttributeBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets a custom attribute using a custom attribute builder.
  remarks: To be added.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);
    parameters:
    - id: customBuilder
      type: System.Reflection.Emit.CustomAttributeBuilder
      description: An instance of a helper class to describe the custom attribute.
  overload: System.Reflection.Emit.EventBuilder.SetCustomAttribute*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: EventBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.EventBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Set a custom attribute using a specified custom attribute blob.
  remarks: See the metadata specification in the ECMA Partition II documentation for details on how to format . The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.
  syntax:
    content: public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);
    parameters:
    - id: con
      type: System.Reflection.ConstructorInfo
      description: The constructor for the custom attribute.
    - id: binaryAttribute
      type: System.Byte[]
      description: A byte blob representing the attributes.
  overload: System.Reflection.Emit.EventBuilder.SetCustomAttribute*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)
  id: SetRaiseMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: SetRaiseMethod(MethodBuilder)
  nameWithType: EventBuilder.SetRaiseMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetRaiseMethod(MethodBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the method used to raise this event.
  remarks: To be added.
  syntax:
    content: public void SetRaiseMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: A `MethodBuilder` object that represents the method used to raise this event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)
  id: SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: SetRemoveOnMethod(MethodBuilder)
  nameWithType: EventBuilder.SetRemoveOnMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(MethodBuilder)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Sets the method used to unsubscribe to this event.
  remarks: To be added.
  syntax:
    content: public void SetRemoveOnMethod (System.Reflection.Emit.MethodBuilder mdBuilder);
    parameters:
    - id: mdBuilder
      type: System.Reflection.Emit.MethodBuilder
      description: A `MethodBuilder` object that represents the method used to unsubscribe to this event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._EventBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.EventBuilder.System.Runtime.InteropServices._EventBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Maps a set of names to a corresponding set of dispatch identifiers.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.
  syntax:
    content: void _EventBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: rgszNames
      type: System.IntPtr
      description: Passed-in array of names to be mapped.
    - id: cNames
      type: System.UInt32
      description: Count of the names to be mapped.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret the names.
    - id: rgDispId
      type: System.IntPtr
      description: Caller-allocated array which receives the IDs corresponding to the names.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._EventBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.
  syntax:
    content: void _EventBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: The type information to return.
    - id: lcid
      type: System.UInt32
      description: The locale identifier for the type information.
    - id: ppTInfo
      type: System.IntPtr
      description: Receives a pointer to the requested type information object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount(UInt32)
  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.
  syntax:
    content: void _EventBuilder.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: Points to a location that receives the number of type information interfaces provided by the object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.EventBuilder
  langs:
  - csharp
  name: System.Runtime.InteropServices._EventBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.EventBuilder.System.Runtime.InteropServices._EventBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: Provides access to properties and methods exposed by an object.
  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.
  syntax:
    content: void _EventBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: Identifies the member.
    - id: riid
      type: System.Guid
      description: Reserved for future use. Must be IID_NULL.
    - id: lcid
      type: System.UInt32
      description: The locale context in which to interpret arguments.
    - id: wFlags
      type: System.Int16
      description: Flags describing the context of the call.
    - id: pDispParams
      type: System.IntPtr
      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.
    - id: pVarResult
      type: System.IntPtr
      description: Pointer to the location where the result is to be stored.
    - id: pExcepInfo
      type: System.IntPtr
      description: Pointer to a structure that contains exception information.
    - id: puArgErr
      type: System.IntPtr
      description: The index of the first argument that has an error.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: AddOtherMethod(MethodBuilder)
  nameWithType: EventBuilder.AddOtherMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.AddOtherMethod(MethodBuilder)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Reflection.Emit.EventBuilder.GetEventToken
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: GetEventToken()
  nameWithType: EventBuilder.GetEventToken()
  fullName: System.Reflection.Emit.EventBuilder.GetEventToken()
- uid: System.Reflection.Emit.EventToken
  parent: System.Reflection.Emit
  isExternal: false
  name: EventToken
  nameWithType: EventToken
  fullName: System.Reflection.Emit.EventToken
- uid: System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: SetAddOnMethod(MethodBuilder)
  nameWithType: EventBuilder.SetAddOnMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetAddOnMethod(MethodBuilder)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: SetCustomAttribute(CustomAttributeBuilder)
  nameWithType: EventBuilder.SetCustomAttribute(CustomAttributeBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetCustomAttribute(CustomAttributeBuilder)
- uid: System.Reflection.Emit.CustomAttributeBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: CustomAttributeBuilder
  nameWithType: CustomAttributeBuilder
  fullName: System.Reflection.Emit.CustomAttributeBuilder
- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: SetCustomAttribute(ConstructorInfo,Byte[])
  nameWithType: EventBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
  fullName: System.Reflection.Emit.EventBuilder.SetCustomAttribute(ConstructorInfo,Byte[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: SetRaiseMethod(MethodBuilder)
  nameWithType: EventBuilder.SetRaiseMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetRaiseMethod(MethodBuilder)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: SetRemoveOnMethod(MethodBuilder)
  nameWithType: EventBuilder.SetRemoveOnMethod(MethodBuilder)
  fullName: System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(MethodBuilder)
- uid: System.Reflection.Emit.MethodBuilder
  parent: System.Reflection.Emit
  isExternal: false
  name: MethodBuilder
  nameWithType: MethodBuilder
  fullName: System.Reflection.Emit.MethodBuilder
- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: System.Runtime.InteropServices._EventBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.EventBuilder.System.Runtime.InteropServices._EventBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: System.Runtime.InteropServices._EventBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount(UInt32)
  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.EventBuilder.System.Runtime.InteropServices._EventBuilder.GetTypeInfoCount(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.EventBuilder.System#Runtime#InteropServices#_EventBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  name: System.Runtime.InteropServices._EventBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: EventBuilder.System.Runtime.InteropServices._EventBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.EventBuilder.System.Runtime.InteropServices._EventBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.EventBuilder.SetCustomAttribute*
  parent: System.Reflection.Emit.EventBuilder
  isExternal: false
  nameWithType: EventBuilder.
