### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngAlgorithmGroup
  id: CngAlgorithmGroup
  children:
  - System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  - System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.Dsa
  - System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  - System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  - System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  - System.Security.Cryptography.CngAlgorithmGroup.Rsa
  - System.Security.Cryptography.CngAlgorithmGroup.ToString
  langs:
  - csharp
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
  type: Class
  summary: Encapsulates the name of an encryption algorithm group.
  remarks: "The CngAlgorithmGroup class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.  \n  \n The static properties return CngAlgorithmGroup objects. Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.  \n  \n You can also use this class to create objects for algorithm groups that are not covered by the static properties.  \n  \n Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return CngAlgorithmGroup objects. Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property.  \n  \n Therefore, CngAlgorithmGroup serves as an enumeration of well-known algorithm groups. It lets you specify an algorithm group name by using a strongly typed value instead of a string."
  syntax:
    content: 'public sealed class CngAlgorithmGroup : IEquatable<System.Security.Cryptography.CngAlgorithmGroup>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Security.Cryptography.CngAlgorithmGroup>
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: CngAlgorithmGroup(String)
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.CngAlgorithmGroup(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> class.
  remarks: "Instances of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class internally maintain the algorithm group name that is specified by the  parameter.  \n  \n The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithmGroup> objects for algorithm groups that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class. This capacity enables future [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available."
  syntax:
    content: public CngAlgorithmGroup (string algorithmGroup);
    parameters:
    - id: algorithmGroup
      type: System.String
      description: The name of the algorithm group to initialize.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the name of the algorithm group that the current <see cref="T:System.Security.Cryptography.CngAlgorithm"> object specifies.
  remarks: To be added.
  syntax:
    content: public string AlgorithmGroup { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  id: DiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object that specifies the Diffie-Hellman family of algorithms.
  remarks: To be added.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup DiffieHellman { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  id: Dsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object that specifies the Digital Signature Algorithm (DSA) family of algorithms.
  remarks: To be added.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup Dsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  id: ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object that specifies the Elliptic Curve Diffie-Hellman (ECDH) family of algorithms.
  remarks: To be added.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  id: ECDsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object that specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) family of algorithms.
  remarks: To be added.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngAlgorithmGroup.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Compares the specified object to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object.
    return:
      type: System.Boolean
      description: '`true` if the  parameter is a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> that specifies the same algorithm group as the current object; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  id: Equals(System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Equals(CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Compares the specified <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object.
  remarks: To be added.
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngAlgorithmGroup other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object to be compared to the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object.
    return:
      type: System.Boolean
      description: '`true` if the  parameter specifies the same algorithm group as the current object; otherwise, `false`.'
  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngAlgorithmGroup.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Generates a hash value for the algorithm group name that is embedded in the current <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash value of the embedded algorithm group name.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> objects specify the same algorithm group.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies an algorithm group.
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: A second object, to be compared to the object that is identified by the  parameter.
    return:
      type: System.Boolean
      description: '`true` if the two objects specify the same algorithm group; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Determines whether two <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> objects do not specify the same algorithm group.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: An object that specifies an algorithm group.
    - id: right
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: A second object, to be compared to the object that is identified by the  parameter.
    return:
      type: System.Boolean
      description: '`true` if the two objects do not specify the same algorithm group; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets a <see cref="T:System.Security.Cryptography.CngAlgorithmGroup"> object that specifies the Rivest-Shamir-Adleman (RSA) family of algorithms.
  remarks: To be added.
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithmGroup Rsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithmGroup
  langs:
  - csharp
  name: ToString()
  nameWithType: CngAlgorithmGroup.ToString()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the name of the algorithm group that the current <see cref="T:System.Security.Cryptography.CngAlgorithm"> object specifies.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The embedded algorithm group name.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: CngAlgorithmGroup(String)
  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.CngAlgorithmGroup(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngAlgorithmGroup.AlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: DiffieHellman
  nameWithType: CngAlgorithmGroup.DiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Dsa
  nameWithType: CngAlgorithmGroup.Dsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Dsa
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDiffieHellman
  nameWithType: CngAlgorithmGroup.ECDiffieHellman
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ECDsa
  nameWithType: CngAlgorithmGroup.ECDsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDsa
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: CngAlgorithmGroup.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Equals(CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(CngAlgorithmGroup)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: CngAlgorithmGroup.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithmGroup.Rsa
  fullName: System.Security.Cryptography.CngAlgorithmGroup.Rsa
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  name: ToString()
  nameWithType: CngAlgorithmGroup.ToString()
  fullName: System.Security.Cryptography.CngAlgorithmGroup.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals*
  parent: System.Security.Cryptography.CngAlgorithmGroup
  isExternal: false
  nameWithType: CngAlgorithmGroup.
