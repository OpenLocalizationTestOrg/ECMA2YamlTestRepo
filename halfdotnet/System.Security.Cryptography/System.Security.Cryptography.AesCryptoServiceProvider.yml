### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.AesCryptoServiceProvider
  id: AesCryptoServiceProvider
  children:
  - System.Security.Cryptography.AesCryptoServiceProvider.#ctor
  - System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
  - System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
  - System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)
  - System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV
  - System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey
  - System.Security.Cryptography.AesCryptoServiceProvider.Key
  - System.Security.Cryptography.AesCryptoServiceProvider.KeySize
  langs:
  - csharp
  name: AesCryptoServiceProvider
  nameWithType: AesCryptoServiceProvider
  fullName: System.Security.Cryptography.AesCryptoServiceProvider
  type: Class
  summary: Performs symmetric encryption and decryption using the Cryptographic Application Programming Interfaces (CAPI) implementation of the Advanced Encryption Standard (AES) algorithm.
  remarks: ''
  example:
  - "The following example demonstrates how to encrypt and decrypt sample data using the AesCryptoServiceProvider class.  \n  \n [!CODE [AesCryptoServProvider#1](../CodeSnippet/VS_Snippets_CLR/aescryptoservprovider#1)]"
  syntax:
    content: 'public sealed class AesCryptoServiceProvider : System.Security.Cryptography.Aes'
  inheritance:
  - System.Security.Cryptography.Aes
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: AesCryptoServiceProvider()
  nameWithType: AesCryptoServiceProvider.AesCryptoServiceProvider()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.AesCryptoServiceProvider()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.AesCryptoServiceProvider"> class.
  remarks: To be added.
  syntax:
    content: public AesCryptoServiceProvider ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
  id: CreateDecryptor
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: CreateDecryptor()
  nameWithType: AesCryptoServiceProvider.CreateDecryptor()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Creates a symmetric AES decryptor object using the current key and initialization vector (IV).
  remarks: To be added.
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric AES decryptor object.
  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: AesCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Creates a symmetric AES decryptor object using the specified key and initialization vector (IV).
  remarks: ''
  example:
  - "The following example shows how to use the CreateDecryptor method to decrypt an encrypted message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class.  \n  \n [!CODE [AesCryptoServProvider#3](../CodeSnippet/VS_Snippets_CLR/aescryptoservprovider#3)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] key, byte[] iv);
    parameters:
    - id: key
      type: System.Byte[]
      description: The secret key to use for the symmetric algorithm.
    - id: iv
      type: System.Byte[]
      description: The initialization vector to use for the symmetric algorithm.
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric AES decryptor object.
  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
  id: CreateEncryptor
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: CreateEncryptor()
  nameWithType: AesCryptoServiceProvider.CreateEncryptor()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Creates a symmetric AES encryptor object using the current key and initialization vector (IV).
  remarks: To be added.
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();
    parameters: []
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric AES encryptor object.
  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: AesCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Creates a symmetric encryptor object using the specified key and initialization vector (IV).
  remarks: See the code examples in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> and <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> properties to determine the size of the  and  parameters.
  example:
  - "The following example shows how to use the CreateEncryptor method to encrypt a message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AesCryptoServiceProvider> class.  \n  \n [!CODE [AesCryptoServProvider#2](../CodeSnippet/VS_Snippets_CLR/aescryptoservprovider#2)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] key, byte[] iv);
    parameters:
    - id: key
      type: System.Byte[]
      description: The secret key to use for the symmetric algorithm.
    - id: iv
      type: System.Byte[]
      description: The initialization vector to use for the symmetric algorithm.
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: A symmetric AES encryptor object.
  overload: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AesCryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: AesCryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Generates a random initialization vector (IV) to use for the algorithm.
  remarks: To be added.
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: AesCryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Generates a random key to use for the algorithm.
  remarks: To be added.
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.Key
  id: Key
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: Key
  nameWithType: AesCryptoServiceProvider.Key
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets or sets the symmetric key that is used for encryption and decryption.
  remarks: To be added.
  syntax:
    content: public override byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.AesCryptoServiceProvider.KeySize
  id: KeySize
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  langs:
  - csharp
  name: KeySize
  nameWithType: AesCryptoServiceProvider.KeySize
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.KeySize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets or sets the size, in bits, of the secret key.
  remarks: The minimum size of the key is 128 bits, and the maximum size is 256 bits.
  syntax:
    content: public override int KeySize { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Security.Cryptography.Aes
  isExternal: false
  name: System.Security.Cryptography.Aes
- uid: System.Security.Cryptography.AesCryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: AesCryptoServiceProvider()
  nameWithType: AesCryptoServiceProvider.AesCryptoServiceProvider()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.AesCryptoServiceProvider()
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: CreateDecryptor()
  nameWithType: AesCryptoServiceProvider.CreateDecryptor()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor()
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: AesCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: CreateEncryptor()
  nameWithType: AesCryptoServiceProvider.CreateEncryptor()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor()
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: AesCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(System.Boolean)
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AesCryptoServiceProvider.Dispose(Boolean)
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: GenerateIV()
  nameWithType: AesCryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV()
- uid: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: GenerateKey()
  nameWithType: AesCryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey()
- uid: System.Security.Cryptography.AesCryptoServiceProvider.Key
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: Key
  nameWithType: AesCryptoServiceProvider.Key
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.Key
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Cryptography.AesCryptoServiceProvider.KeySize
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  name: KeySize
  nameWithType: AesCryptoServiceProvider.KeySize
  fullName: System.Security.Cryptography.AesCryptoServiceProvider.KeySize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor*
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  nameWithType: AesCryptoServiceProvider.
- uid: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor*
  parent: System.Security.Cryptography.AesCryptoServiceProvider
  isExternal: false
  nameWithType: AesCryptoServiceProvider.
