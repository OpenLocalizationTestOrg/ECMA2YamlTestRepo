### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.HashAlgorithm
  id: HashAlgorithm
  children:
  - System.Security.Cryptography.HashAlgorithm.#ctor
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.Create
  - System.Security.Cryptography.HashAlgorithm.Create(System.String)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
  type: Class
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HashAlgorithm : System.Security.Cryptography.ICryptoTransform
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Security.Cryptography.HashAlgorithm.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: HashAlgorithm..ctor
  fullName: System.Security.Cryptography.HashAlgorithm..ctor
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected HashAlgorithm ();
    parameters: []
- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: CanReuseTransform
  nameWithType: HashAlgorithm.CanReuseTransform
  fullName: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: CanTransformMultipleBlocks
  nameWithType: HashAlgorithm.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.Clear
  id: Clear
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: Clear
  nameWithType: HashAlgorithm.Clear
  fullName: System.Security.Cryptography.HashAlgorithm.Clear
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public void Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  id: ComputeHash(System.Byte[])
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: ComputeHash
  nameWithType: HashAlgorithm.ComputeHash
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] ComputeHash (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: Parameter description to be filled
    return:
      type: System.Byte[]
      description: Return description to be filled
  overload: System.Security.Cryptography.HashAlgorithm.ComputeHash*
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  id: ComputeHash(System.IO.Stream)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: ComputeHash
  nameWithType: HashAlgorithm.ComputeHash
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] ComputeHash (System.IO.Stream inputStream);
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: Parameter description to be filled
    return:
      type: System.Byte[]
      description: Return description to be filled
  overload: System.Security.Cryptography.HashAlgorithm.ComputeHash*
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  id: ComputeHash(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: ComputeHash
  nameWithType: HashAlgorithm.ComputeHash
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] ComputeHash (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: Parameter description to be filled
    - id: offset
      type: System.Int32
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Byte[]
      description: Return description to be filled
  overload: System.Security.Cryptography.HashAlgorithm.ComputeHash*
- uid: System.Security.Cryptography.HashAlgorithm.Create
  id: Create
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: Create
  nameWithType: HashAlgorithm.Create
  fullName: System.Security.Cryptography.HashAlgorithm.Create
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithm Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: Return description to be filled
  overload: System.Security.Cryptography.HashAlgorithm.Create*
- uid: System.Security.Cryptography.HashAlgorithm.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: Create
  nameWithType: HashAlgorithm.Create
  fullName: System.Security.Cryptography.HashAlgorithm.Create
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.HashAlgorithm Create (string hashName);
    parameters:
    - id: hashName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: Return description to be filled
  overload: System.Security.Cryptography.HashAlgorithm.Create*
- uid: System.Security.Cryptography.HashAlgorithm.Dispose
  id: Dispose
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: Dispose
  nameWithType: HashAlgorithm.Dispose
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public void Dispose ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Security.Cryptography.HashAlgorithm.Dispose*
- uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: Dispose
  nameWithType: HashAlgorithm.Dispose
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Security.Cryptography.HashAlgorithm.Dispose*
- uid: System.Security.Cryptography.HashAlgorithm.Hash
  id: Hash
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: HashAlgorithm.Hash
  fullName: System.Security.Cryptography.HashAlgorithm.Hash
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual byte[] Hash { get; }
    return:
      type: System.Byte[]
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  id: HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: HashCore
  nameWithType: HashAlgorithm.HashCore
  fullName: System.Security.Cryptography.HashAlgorithm.HashCore
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected abstract void HashCore (byte[] array, int ibStart, int cbSize);
    parameters:
    - id: array
      type: System.Byte[]
      description: Parameter description to be filled
    - id: ibStart
      type: System.Int32
      description: Parameter description to be filled
    - id: cbSize
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal
  id: HashFinal
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: HashFinal
  nameWithType: HashAlgorithm.HashFinal
  fullName: System.Security.Cryptography.HashAlgorithm.HashFinal
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected abstract byte[] HashFinal ();
    parameters: []
    return:
      type: System.Byte[]
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  id: HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
  fullName: System.Security.Cryptography.HashAlgorithm.HashSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual int HashSize { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  id: HashSizeValue
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: HashSizeValue
  nameWithType: HashAlgorithm.HashSizeValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected int HashSizeValue;
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.HashValue
  id: HashValue
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: HashValue
  nameWithType: HashAlgorithm.HashValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected byte[] HashValue;
    return:
      type: System.Byte[]
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.Initialize
  id: Initialize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: Initialize
  nameWithType: HashAlgorithm.Initialize
  fullName: System.Security.Cryptography.HashAlgorithm.Initialize
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public abstract void Initialize ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: InputBlockSize
  nameWithType: HashAlgorithm.InputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual int InputBlockSize { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: OutputBlockSize
  nameWithType: HashAlgorithm.OutputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public virtual int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.State
  id: State
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: State
  nameWithType: HashAlgorithm.State
  fullName: System.Security.Cryptography.HashAlgorithm.State
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: protected int State;
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: TransformBlock
  nameWithType: HashAlgorithm.TransformBlock
  fullName: System.Security.Cryptography.HashAlgorithm.TransformBlock
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: Parameter description to be filled
    - id: inputOffset
      type: System.Int32
      description: Parameter description to be filled
    - id: inputCount
      type: System.Int32
      description: Parameter description to be filled
    - id: outputBuffer
      type: System.Byte[]
      description: Parameter description to be filled
    - id: outputOffset
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  langs:
  - csharp
  - vb
  name: TransformFinalBlock
  nameWithType: HashAlgorithm.TransformFinalBlock
  fullName: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: Parameter description to be filled
    - id: inputOffset
      type: System.Int32
      description: Parameter description to be filled
    - id: inputCount
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Byte[]
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.HashAlgorithm.#ctor
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: .ctor
  nameWithType: HashAlgorithm..ctor
  fullName: System.Security.Cryptography.HashAlgorithm..ctor
- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanReuseTransform
  nameWithType: HashAlgorithm.CanReuseTransform
  fullName: System.Security.Cryptography.HashAlgorithm.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: HashAlgorithm.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HashAlgorithm.Clear
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Clear
  nameWithType: HashAlgorithm.Clear
  fullName: System.Security.Cryptography.HashAlgorithm.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash
  nameWithType: HashAlgorithm.ComputeHash
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash
  nameWithType: HashAlgorithm.ComputeHash
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash
  nameWithType: HashAlgorithm.ComputeHash
  fullName: System.Security.Cryptography.HashAlgorithm.ComputeHash
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.Create
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Create
  nameWithType: HashAlgorithm.Create
  fullName: System.Security.Cryptography.HashAlgorithm.Create
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.HashAlgorithm.Create(System.String)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Create
  nameWithType: HashAlgorithm.Create
  fullName: System.Security.Cryptography.HashAlgorithm.Create
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.HashAlgorithm.Dispose
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: HashAlgorithm.Dispose
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: HashAlgorithm.Dispose
  fullName: System.Security.Cryptography.HashAlgorithm.Dispose
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.HashAlgorithm.Hash
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Hash
  nameWithType: HashAlgorithm.Hash
  fullName: System.Security.Cryptography.HashAlgorithm.Hash
- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashCore
  nameWithType: HashAlgorithm.HashCore
  fullName: System.Security.Cryptography.HashAlgorithm.HashCore
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.HashFinal
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashFinal
  nameWithType: HashAlgorithm.HashFinal
  fullName: System.Security.Cryptography.HashAlgorithm.HashFinal
- uid: System.Security.Cryptography.HashAlgorithm.HashSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSize
  nameWithType: HashAlgorithm.HashSize
  fullName: System.Security.Cryptography.HashAlgorithm.HashSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashSizeValue
  nameWithType: HashAlgorithm.HashSizeValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashSizeValue
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.HashValue
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: HashValue
  nameWithType: HashAlgorithm.HashValue
  fullName: System.Security.Cryptography.HashAlgorithm.HashValue
- uid: System.Security.Cryptography.HashAlgorithm.Initialize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Initialize
  nameWithType: HashAlgorithm.Initialize
  fullName: System.Security.Cryptography.HashAlgorithm.Initialize
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: InputBlockSize
  nameWithType: HashAlgorithm.InputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.InputBlockSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: OutputBlockSize
  nameWithType: HashAlgorithm.OutputBlockSize
  fullName: System.Security.Cryptography.HashAlgorithm.OutputBlockSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.State
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: State
  nameWithType: HashAlgorithm.State
  fullName: System.Security.Cryptography.HashAlgorithm.State
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformBlock
  nameWithType: HashAlgorithm.TransformBlock
  fullName: System.Security.Cryptography.HashAlgorithm.TransformBlock
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: TransformFinalBlock
  nameWithType: HashAlgorithm.TransformFinalBlock
  fullName: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: ComputeHash
  nameWithType: HashAlgorithm.ComputeHash
- uid: System.Security.Cryptography.HashAlgorithm.Create*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Create
  nameWithType: HashAlgorithm.Create
- uid: System.Security.Cryptography.HashAlgorithm.Dispose*
  parent: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: Dispose
  nameWithType: HashAlgorithm.Dispose
