### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CryptographicException
  id: CryptographicException
  children:
  - System.Security.Cryptography.CryptographicException.#ctor
  - System.Security.Cryptography.CryptographicException.#ctor(System.Int32)
  - System.Security.Cryptography.CryptographicException.#ctor(System.String)
  - System.Security.Cryptography.CryptographicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.CryptographicException.#ctor(System.String,System.Exception)
  - System.Security.Cryptography.CryptographicException.#ctor(System.String,System.String)
  langs:
  - csharp
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
  type: Class
  summary: The exception that is thrown when an error occurs during a cryptographic operation.
  remarks: "CryptographicException uses the HRESULT CORSEC_E_CRYPTO, unless an alternate error code is specified.  \n  \n For a list of initial property values for an instance of CryptographicException, see the constructor."
  example:
  - "The following code example demonstrates how to use members of the CryptographicException class.  \n  \n [!CODE [System.Security.Cryptography.CryptographicException#2](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.CryptographicException#2)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CryptographicException : SystemException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CryptographicException.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException()
  nameWithType: CryptographicException.CryptographicException()
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicException"> class with default properties.
  remarks: "The following table shows the initial property values for an instance of <xref:System.Security.Cryptography.CryptographicException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> with no parameters. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!CODE [System.Security.Cryptography.CryptographicException#1](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.CryptographicException#1)]"
  syntax:
    content: public CryptographicException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(Int32)
  nameWithType: CryptographicException.CryptographicException(Int32)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicException"> class with the specified `HRESULT` error code.
  remarks: "The CryptographicException constructor accepts a system `HRESULT` error code and sets the <xref:System.Exception.Message%2A> property to a localized message that corresponds to the `HRESULT`.  \n  \n The following table shows the initial property values for an instance of <xref:System.Security.Cryptography.CryptographicException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> using an error code for an <xref:System.Security.Cryptography.CryptographicUnexpectedOperationException>. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!CODE [System.Security.Cryptography.CryptographicException#3](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.CryptographicException#3)]"
  syntax:
    content: public CryptographicException (int hr);
    parameters:
    - id: hr
      type: System.Int32
      description: The `HRESULT` error code.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(String)
  nameWithType: CryptographicException.CryptographicException(String)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicException"> class with a specified error message.
  remarks: "The following table shows the initial property values for an instance of <xref:System.Security.Cryptography.CryptographicException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> using a custom error message. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!CODE [System.Security.Cryptography.CryptographicException#4](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.CryptographicException#4)]"
  syntax:
    content: public CryptographicException (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(SerializationInfo,StreamingContext)
  nameWithType: CryptographicException.CryptographicException(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicException"> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
  syntax:
    content: protected CryptographicException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(String,Exception)
  nameWithType: CryptographicException.CryptographicException(String,Exception)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Security.Cryptography.CryptographicException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> using a custom error message and an inner exception. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!CODE [System.Security.Cryptography.CryptographicException#5](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.CryptographicException#5)]"
  syntax:
    content: public CryptographicException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.CryptographicException
  langs:
  - csharp
  name: CryptographicException(String,String)
  nameWithType: CryptographicException.CryptographicException(String,String)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.CryptographicException"> class with a specified error message in the specified format.
  remarks: "The following table shows the initial property values for an instance of <xref:System.Security.Cryptography.CryptographicException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  example:
  - "The following code example demonstrates how to construct a <xref:System.Security.Cryptography.CryptographicException> using a time format and the current date. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptographicException> class.  \n  \n [!CODE [System.Security.Cryptography.CryptographicException#6](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.CryptographicException#6)]"
  syntax:
    content: public CryptographicException (string format, string insert);
    parameters:
    - id: format
      type: System.String
      description: The format used to output the error message.
    - id: insert
      type: System.String
      description: The error message that explains the reason for the exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Security.Cryptography.CryptographicException.#ctor
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException()
  nameWithType: CryptographicException.CryptographicException()
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException()
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.Int32)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(Int32)
  nameWithType: CryptographicException.CryptographicException(Int32)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(String)
  nameWithType: CryptographicException.CryptographicException(String)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(SerializationInfo,StreamingContext)
  nameWithType: CryptographicException.CryptographicException(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String,System.Exception)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(String,Exception)
  nameWithType: CryptographicException.CryptographicException(String,Exception)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Security.Cryptography.CryptographicException.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.CryptographicException
  isExternal: false
  name: CryptographicException(String,String)
  nameWithType: CryptographicException.CryptographicException(String,String)
  fullName: System.Security.Cryptography.CryptographicException.CryptographicException(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
