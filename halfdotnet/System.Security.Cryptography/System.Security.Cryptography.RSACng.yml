### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RSACng
  id: RSACng
  children:
  - System.Security.Cryptography.RSACng.#ctor
  - System.Security.Cryptography.RSACng.#ctor(System.Int32)
  - System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  - System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])
  - System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  - System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  - System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])
  - System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  - System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  - System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  - System.Security.Cryptography.RSACng.Key
  - System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  - System.Security.Cryptography.RSACng.SignatureAlgorithm
  - System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  langs:
  - csharp
  name: RSACng
  nameWithType: RSACng
  fullName: System.Security.Cryptography.RSACng
  type: Class
  summary: Provides a Cryptography Next Generation (CNG) implementation of the RSA algorithm.
  remarks: "The RSACng class is derived from the <xref:System.Security.Cryptography.RSA> class. Therefore, it is not a drop-in replacement for existing uses of <xref:System.Security.Cryptography.RSACryptoServiceProvider>.  \n  \n RSACng uses a programming model that is similar to the <xref:System.Security.Cryptography.ECDsaCng> class rather than the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class. For example:  \n  \n-   The key used by RSACng is managed by a separate <xref:System.Security.Cryptography.CngKey> object. In contrast, <xref:System.Security.Cryptography.RSACryptoServiceProvider> has a key that is directly tied to the operations of the type itself.  \n  \n-   RSACng performs such operations as signing and verifying signatures by using properties of the RSACng object, just as <xref:System.Security.Cryptography.ECDsaCng> uses its object properties to control signing and verification operations."
  syntax:
    content: 'public sealed class RSACng : System.Security.Cryptography.RSA'
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricAlgorithm
  - System.Security.Cryptography.RSA
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Cryptography.AsymmetricAlgorithm.Clear
  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize
  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.RSA.Create
  - System.Security.Cryptography.RSA.Create(System.String)
  - System.Security.Cryptography.RSA.FromXmlString(System.String)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: RSACng()
  nameWithType: RSACng.RSACng()
  fullName: System.Security.Cryptography.RSACng.RSACng()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACng"> class with a random 2,048-bit key pair.
  remarks: To be added.
  syntax:
    content: public RSACng ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: RSACng(Int32)
  nameWithType: RSACng.RSACng(Int32)
  fullName: System.Security.Cryptography.RSACng.RSACng(Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACng"> class with a randomly generated key of the specified size.
  remarks: Valid key sizes range from 384 to 16,384 bits, in increments of 8. We recommend that a minimum size of 2,048 bits be used for all keys.
  syntax:
    content: public RSACng (int keySize);
    parameters:
    - id: keySize
      type: System.Int32
      description: The size of the key to generate in bits.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  id: '#ctor(System.Security.Cryptography.CngKey)'
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: RSACng(CngKey)
  nameWithType: RSACng.RSACng(CngKey)
  fullName: System.Security.Cryptography.RSACng.RSACng(CngKey)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.RSACng"> class with the specified key.
  remarks: "The <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A?displayProperty=fullName> of  must be <xref:System.Security.Cryptography.CngAlgorithmGroup.Rsa%2A?displayProperty=fullName>.  \n  \n This constructor creates a copy of the key. Even if  is disposed, the copy of this key object in RSA remains alive."
  syntax:
    content: public RSACng (System.Security.Cryptography.CngKey key);
    parameters:
    - id: key
      type: System.Security.Cryptography.CngKey
      description: The key to use for RSA operations.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Decrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Decrypts input data using the specified padding mode.
  remarks: To be added.
  syntax:
    content: public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to decrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The decrypted data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])
  id: DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: DecryptValue(Byte[])
  nameWithType: RSACng.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.DecryptValue(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Decrypts the input data using the private key.
  remarks: To be added.
  syntax:
    content: public override byte[] DecryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: The cipher text to be decrypted.
    return:
      type: System.Byte[]
      description: The resulting decryption of the  parameter in plain text.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: RSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACng.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Encrypt(Byte[],RSAEncryptionPadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Encrypts the input data using the specified padding.
  remarks: To be added.
  syntax:
    content: public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);
    parameters:
    - id: data
      type: System.Byte[]
      description: The data to encrypt.
    - id: padding
      type: System.Security.Cryptography.RSAEncryptionPadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: Returns <see cref="T:System.Byte"> .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])
  id: EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: EncryptValue(Byte[])
  nameWithType: RSACng.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.EncryptValue(Byte[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Encrypts the input data using the public key.
  remarks: To be added.
  syntax:
    content: public override byte[] EncryptValue (byte[] rgb);
    parameters:
    - id: rgb
      type: System.Byte[]
      description: The plain text to be encrypted.
    return:
      type: System.Byte[]
      description: The resulting encryption of the  parameter as cipher text.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  id: ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: ExportParameters(Boolean)
  nameWithType: RSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACng.ExportParameters(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Exports the key used by the RSA object into a <see cref="T:System.Security.Cryptography.RSAParameters"> object.
  remarks: To be added.
  syntax:
    content: public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);
    parameters:
    - id: includePrivateParameters
      type: System.Boolean
      description: '`true` to include private parameters; otherwise, `false`.'
    return:
      type: System.Security.Cryptography.RSAParameters
      description: The key used by the RSA object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Stream,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.IO.Stream
      description: To be added.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.RSACng.HashData*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);
    parameters:
    - id: data
      type: System.Byte[]
      description: To be added.
    - id: offset
      type: System.Int32
      description: To be added.
    - id: count
      type: System.Int32
      description: To be added.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: To be added.
    return:
      type: System.Byte[]
      description: To be added.
  overload: System.Security.Cryptography.RSACng.HashData*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  id: ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: ImportParameters(RSAParameters)
  nameWithType: RSACng.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACng.ImportParameters(RSAParameters)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Replaces the existing key that the current instance is working with by creating a new <see cref="T:System.Security.Cryptography.CngKey"> for the parameters structure.
  remarks: If  contains only an exponent and modulus, only a public key is imported. If  also contains P and Q values, a full key pair is imported.
  syntax:
    content: public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.RSAParameters
      description: The RSA parameters.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.Key
  id: Key
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: Key
  nameWithType: RSACng.Key
  fullName: System.Security.Cryptography.RSACng.Key
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the key that will be used by the <see cref="T:System.Security.Cryptography.RSACng"> object for any cryptographic operation that it performs.
  remarks: "The returned <xref:System.Security.Cryptography.CngKey> object is disposed if the key is reset, for instance by changing the <xref:System.Security.Cryptography.CngKey.KeySize%2A?displayProperty=fullName> property, by using the <xref:System.Security.Cryptography.RSA.ImportParameters%2A?displayProperty=fullName> to create a new key, or by disposing of the parent <xref:System.Security.Cryptography.RSA> object. Therefore, you should ensure that the key object is no longer used in these cases.  \n  \n This <xref:System.Security.Cryptography.CngKey> object is not the same as the <xref:System.Security.Cryptography.CngKey> object passed to the <xref:System.Security.Cryptography.RSACng.%23ctor%2A> constructor, if that constructor was used. However, it will point to the same CNG key."
  syntax:
    content: public System.Security.Cryptography.CngKey Key { get; }
    return:
      type: System.Security.Cryptography.CngKey
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: RSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the name of the key exchange algorithm available with this implementation of RSA.
  remarks: To be added.
  syntax:
    content: public override string KeyExchangeAlgorithm { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: RSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACng.SignatureAlgorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the name of the signature algorithm available with this implementation of RSA.
  remarks: To be added.
  syntax:
    content: public override string SignatureAlgorithm { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Signs data that was hashed by using the specified hashing algorithm and padding mode.
  remarks: To be added.
  syntax:
    content: public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: The hash to sign.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm name.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Byte[]
      description: The signed data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  langs:
  - csharp
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Verifies data that was signed and already hashed with the specified algorithm and padding mode.
  remarks: To be added.
  syntax:
    content: public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);
    parameters:
    - id: hash
      type: System.Byte[]
      description: The hash to verify.
    - id: signature
      type: System.Byte[]
      description: The signature of the data.
    - id: hashAlgorithm
      type: System.Security.Cryptography.HashAlgorithmName
      description: The hash algorithm name.
    - id: padding
      type: System.Security.Cryptography.RSASignaturePadding
      description: The padding mode.
    return:
      type: System.Boolean
      description: '`true` if the signature verifies for the hash; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Security.Cryptography.RSA
  isExternal: false
  name: System.Security.Cryptography.RSA
- uid: System.Security.Cryptography.RSACng.#ctor
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng()
  nameWithType: RSACng.RSACng()
  fullName: System.Security.Cryptography.RSACng.RSACng()
- uid: System.Security.Cryptography.RSACng.#ctor(System.Int32)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng(Int32)
  nameWithType: RSACng.RSACng(Int32)
  fullName: System.Security.Cryptography.RSACng.RSACng(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RSACng.#ctor(System.Security.Cryptography.CngKey)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: RSACng(CngKey)
  nameWithType: RSACng.RSACng(CngKey)
  fullName: System.Security.Cryptography.RSACng.RSACng(CngKey)
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.RSACng.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Decrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Decrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Decrypt(Byte[],RSAEncryptionPadding)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSACng.DecryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: DecryptValue(Byte[])
  nameWithType: RSACng.DecryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.DecryptValue(Byte[])
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Cryptography.RSACng.Dispose(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: RSACng.Dispose(Boolean)
  fullName: System.Security.Cryptography.RSACng.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSACng.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Encrypt(Byte[],RSAEncryptionPadding)
  nameWithType: RSACng.Encrypt(Byte[],RSAEncryptionPadding)
  fullName: System.Security.Cryptography.RSACng.Encrypt(Byte[],RSAEncryptionPadding)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Cryptography.RSAEncryptionPadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAEncryptionPadding
  nameWithType: RSAEncryptionPadding
  fullName: System.Security.Cryptography.RSAEncryptionPadding
- uid: System.Security.Cryptography.RSACng.EncryptValue(System.Byte[])
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: EncryptValue(Byte[])
  nameWithType: RSACng.EncryptValue(Byte[])
  fullName: System.Security.Cryptography.RSACng.EncryptValue(Byte[])
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Cryptography.RSACng.ExportParameters(System.Boolean)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ExportParameters(Boolean)
  nameWithType: RSACng.ExportParameters(Boolean)
  fullName: System.Security.Cryptography.RSACng.ExportParameters(Boolean)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: HashData(Stream,HashAlgorithmName)
  nameWithType: RSACng.HashData(Stream,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Stream,HashAlgorithmName)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)
  nameWithType: RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
  fullName: System.Security.Cryptography.RSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSACng.ImportParameters(System.Security.Cryptography.RSAParameters)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: ImportParameters(RSAParameters)
  nameWithType: RSACng.ImportParameters(RSAParameters)
  fullName: System.Security.Cryptography.RSACng.ImportParameters(RSAParameters)
- uid: System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography.RSACng.Key
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: Key
  nameWithType: RSACng.Key
  fullName: System.Security.Cryptography.RSACng.Key
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: RSACng.KeyExchangeAlgorithm
  fullName: System.Security.Cryptography.RSACng.KeyExchangeAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSACng.SignatureAlgorithm
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: RSACng.SignatureAlgorithm
  fullName: System.Security.Cryptography.RSACng.SignatureAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSACng.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSACng.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  nameWithType: RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
  fullName: System.Security.Cryptography.RSACng.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Security.Cryptography.HashAlgorithmName
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithmName
  nameWithType: HashAlgorithmName
  fullName: System.Security.Cryptography.HashAlgorithmName
- uid: System.Security.Cryptography.RSASignaturePadding
  parent: System.Security.Cryptography
  isExternal: false
  name: RSASignaturePadding
  nameWithType: RSASignaturePadding
  fullName: System.Security.Cryptography.RSASignaturePadding
- uid: System.Security.Cryptography.RSACng.HashData*
  parent: System.Security.Cryptography.RSACng
  isExternal: false
  nameWithType: RSACng.
