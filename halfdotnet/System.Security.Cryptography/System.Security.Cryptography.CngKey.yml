### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngKey
  id: CngKey
  children:
  - System.Security.Cryptography.CngKey.Algorithm
  - System.Security.Cryptography.CngKey.AlgorithmGroup
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  - System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  - System.Security.Cryptography.CngKey.Delete
  - System.Security.Cryptography.CngKey.Dispose
  - System.Security.Cryptography.CngKey.Exists(System.String)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.ExportPolicy
  - System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Handle
  - System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.IsEphemeral
  - System.Security.Cryptography.CngKey.IsMachineKey
  - System.Security.Cryptography.CngKey.KeyName
  - System.Security.Cryptography.CngKey.KeySize
  - System.Security.Cryptography.CngKey.KeyUsage
  - System.Security.Cryptography.CngKey.Open(System.String)
  - System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  - System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  - System.Security.Cryptography.CngKey.ParentWindowHandle
  - System.Security.Cryptography.CngKey.Provider
  - System.Security.Cryptography.CngKey.ProviderHandle
  - System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  - System.Security.Cryptography.CngKey.UIPolicy
  - System.Security.Cryptography.CngKey.UniqueName
  langs:
  - csharp
  - vb
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
  type: Class
  syntax:
    content: 'public sealed class CngKey : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Security.Cryptography.CngKey.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Algorithm
  nameWithType: CngKey.Algorithm
  fullName: System.Security.Cryptography.CngKey.Algorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public System.Security.Cryptography.CngAlgorithm Algorithm { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup
  id: AlgorithmGroup
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: AlgorithmGroup
  nameWithType: CngKey.AlgorithmGroup
  fullName: System.Security.Cryptography.CngKey.AlgorithmGroup
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public System.Security.Cryptography.CngAlgorithmGroup AlgorithmGroup { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithmGroup
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  id: Create(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Create
  nameWithType: CngKey.Create
  fullName: System.Security.Cryptography.CngKey.Create
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm);
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngKey
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Create*
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Create
  nameWithType: CngKey.Create
  fullName: System.Security.Cryptography.CngKey.Create
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName);
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: Parameter description to be filled
    - id: keyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngKey
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Create*
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  id: Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Create
  nameWithType: CngKey.Create
  fullName: System.Security.Cryptography.CngKey.Create
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName, System.Security.Cryptography.CngKeyCreationParameters creationParameters);
    parameters:
    - id: algorithm
      type: System.Security.Cryptography.CngAlgorithm
      description: Parameter description to be filled
    - id: keyName
      type: System.String
      description: Parameter description to be filled
    - id: creationParameters
      type: System.Security.Cryptography.CngKeyCreationParameters
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngKey
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Create*
- uid: System.Security.Cryptography.CngKey.Delete
  id: Delete
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Delete
  nameWithType: CngKey.Delete
  fullName: System.Security.Cryptography.CngKey.Delete
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public void Delete ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.Dispose
  id: Dispose
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Dispose
  nameWithType: CngKey.Dispose
  fullName: System.Security.Cryptography.CngKey.Dispose
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public void Dispose ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.Exists(System.String)
  id: Exists(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: CngKey.Exists
  fullName: System.Security.Cryptography.CngKey.Exists
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool Exists (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Exists*
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  id: Exists(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: CngKey.Exists
  fullName: System.Security.Cryptography.CngKey.Exists
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: Parameter description to be filled
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Exists*
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: CngKey.Exists
  fullName: System.Security.Cryptography.CngKey.Exists
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions options);
    parameters:
    - id: keyName
      type: System.String
      description: Parameter description to be filled
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: Parameter description to be filled
    - id: options
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Exists*
- uid: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  id: Export(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Export
  nameWithType: CngKey.Export
  fullName: System.Security.Cryptography.CngKey.Export
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public byte[] Export (System.Security.Cryptography.CngKeyBlobFormat format);
    parameters:
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: Parameter description to be filled
    return:
      type: System.Byte[]
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.ExportPolicy
  id: ExportPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: ExportPolicy
  nameWithType: CngKey.ExportPolicy
  fullName: System.Security.Cryptography.CngKey.ExportPolicy
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public System.Security.Cryptography.CngExportPolicies ExportPolicy { get; }
    return:
      type: System.Security.Cryptography.CngExportPolicies
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: GetProperty
  nameWithType: CngKey.GetProperty
  fullName: System.Security.Cryptography.CngKey.GetProperty
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public System.Security.Cryptography.CngProperty GetProperty (string name, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngProperty
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.Handle
  id: Handle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: CngKey.Handle
  fullName: System.Security.Cryptography.CngKey.Handle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle Handle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  id: HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: HasProperty
  nameWithType: CngKey.HasProperty
  fullName: System.Security.Cryptography.CngKey.HasProperty
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public bool HasProperty (string name, System.Security.Cryptography.CngPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: options
      type: System.Security.Cryptography.CngPropertyOptions
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Import
  nameWithType: CngKey.Import
  fullName: System.Security.Cryptography.CngKey.Import
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: Parameter description to be filled
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngKey
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Import*
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  id: Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Import
  nameWithType: CngKey.Import
  fullName: System.Security.Cryptography.CngKey.Import
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: Parameter description to be filled
    - id: format
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: Parameter description to be filled
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngKey
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Import*
- uid: System.Security.Cryptography.CngKey.IsEphemeral
  id: IsEphemeral
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: IsEphemeral
  nameWithType: CngKey.IsEphemeral
  fullName: System.Security.Cryptography.CngKey.IsEphemeral
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public bool IsEphemeral { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.IsMachineKey
  id: IsMachineKey
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: IsMachineKey
  nameWithType: CngKey.IsMachineKey
  fullName: System.Security.Cryptography.CngKey.IsMachineKey
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public bool IsMachineKey { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.KeyName
  id: KeyName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: KeyName
  nameWithType: CngKey.KeyName
  fullName: System.Security.Cryptography.CngKey.KeyName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public string KeyName { get; }
    return:
      type: System.String
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.KeySize
  id: KeySize
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: KeySize
  nameWithType: CngKey.KeySize
  fullName: System.Security.Cryptography.CngKey.KeySize
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public int KeySize { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.KeyUsage
  id: KeyUsage
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: KeyUsage
  nameWithType: CngKey.KeyUsage
  fullName: System.Security.Cryptography.CngKey.KeyUsage
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public System.Security.Cryptography.CngKeyUsages KeyUsage { get; }
    return:
      type: System.Security.Cryptography.CngKeyUsages
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.Open(System.String)
  id: Open(System.String)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open
  nameWithType: CngKey.Open
  fullName: System.Security.Cryptography.CngKey.Open
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngKey
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Open*
- uid: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  id: Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open
  nameWithType: CngKey.Open
  fullName: System.Security.Cryptography.CngKey.Open
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle keyHandle, System.Security.Cryptography.CngKeyHandleOpenOptions keyHandleOpenOptions);
    parameters:
    - id: keyHandle
      type: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
      description: Parameter description to be filled
    - id: keyHandleOpenOptions
      type: System.Security.Cryptography.CngKeyHandleOpenOptions
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngKey
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Open*
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  id: Open(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open
  nameWithType: CngKey.Open
  fullName: System.Security.Cryptography.CngKey.Open
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider);
    parameters:
    - id: keyName
      type: System.String
      description: Parameter description to be filled
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngKey
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Open*
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  id: Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Open
  nameWithType: CngKey.Open
  fullName: System.Security.Cryptography.CngKey.Open
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);
    parameters:
    - id: keyName
      type: System.String
      description: Parameter description to be filled
    - id: provider
      type: System.Security.Cryptography.CngProvider
      description: Parameter description to be filled
    - id: openOptions
      type: System.Security.Cryptography.CngKeyOpenOptions
      description: Parameter description to be filled
    return:
      type: System.Security.Cryptography.CngKey
      description: Return description to be filled
  overload: System.Security.Cryptography.CngKey.Open*
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle
  id: ParentWindowHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: ParentWindowHandle
  nameWithType: CngKey.ParentWindowHandle
  fullName: System.Security.Cryptography.CngKey.ParentWindowHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public IntPtr ParentWindowHandle { get; set; }
    return:
      type: System.IntPtr
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.Provider
  id: Provider
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: CngKey.Provider
  fullName: System.Security.Cryptography.CngKey.Provider
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public System.Security.Cryptography.CngProvider Provider { get; }
    return:
      type: System.Security.Cryptography.CngProvider
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.ProviderHandle
  id: ProviderHandle
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: ProviderHandle
  nameWithType: CngKey.ProviderHandle
  fullName: System.Security.Cryptography.CngKey.ProviderHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle ProviderHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  id: SetProperty(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: SetProperty
  nameWithType: CngKey.SetProperty
  fullName: System.Security.Cryptography.CngKey.SetProperty
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public void SetProperty (System.Security.Cryptography.CngProperty property);
    parameters:
    - id: property
      type: System.Security.Cryptography.CngProperty
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.UIPolicy
  id: UIPolicy
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: UIPolicy
  nameWithType: CngKey.UIPolicy
  fullName: System.Security.Cryptography.CngKey.UIPolicy
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public System.Security.Cryptography.CngUIPolicy UIPolicy { get; }
    return:
      type: System.Security.Cryptography.CngUIPolicy
      description: Return description to be filled
- uid: System.Security.Cryptography.CngKey.UniqueName
  id: UniqueName
  parent: System.Security.Cryptography.CngKey
  langs:
  - csharp
  - vb
  name: UniqueName
  nameWithType: CngKey.UniqueName
  fullName: System.Security.Cryptography.CngKey.UniqueName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  syntax:
    content: public string UniqueName { get; }
    return:
      type: System.String
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CngKey.Algorithm
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Algorithm
  nameWithType: CngKey.Algorithm
  fullName: System.Security.Cryptography.CngKey.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngKey.AlgorithmGroup
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: AlgorithmGroup
  nameWithType: CngKey.AlgorithmGroup
  fullName: System.Security.Cryptography.CngKey.AlgorithmGroup
- uid: System.Security.Cryptography.CngAlgorithmGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithmGroup
  nameWithType: CngAlgorithmGroup
  fullName: System.Security.Cryptography.CngAlgorithmGroup
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create
  nameWithType: CngKey.Create
  fullName: System.Security.Cryptography.CngKey.Create
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create
  nameWithType: CngKey.Create
  fullName: System.Security.Cryptography.CngKey.Create
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create
  nameWithType: CngKey.Create
  fullName: System.Security.Cryptography.CngKey.Create
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngKeyCreationParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyCreationParameters
  nameWithType: CngKeyCreationParameters
  fullName: System.Security.Cryptography.CngKeyCreationParameters
- uid: System.Security.Cryptography.CngKey.Delete
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Delete
  nameWithType: CngKey.Delete
  fullName: System.Security.Cryptography.CngKey.Delete
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Security.Cryptography.CngKey.Dispose
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Dispose
  nameWithType: CngKey.Dispose
  fullName: System.Security.Cryptography.CngKey.Dispose
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Security.Cryptography.CngKey.Exists(System.String)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists
  nameWithType: CngKey.Exists
  fullName: System.Security.Cryptography.CngKey.Exists
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists
  nameWithType: CngKey.Exists
  fullName: System.Security.Cryptography.CngKey.Exists
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists
  nameWithType: CngKey.Exists
  fullName: System.Security.Cryptography.CngKey.Exists
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Export
  nameWithType: CngKey.Export
  fullName: System.Security.Cryptography.CngKey.Export
- uid: System.Security.Cryptography.CngKeyBlobFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyBlobFormat
  nameWithType: CngKeyBlobFormat
  fullName: System.Security.Cryptography.CngKeyBlobFormat
- uid: System.Security.Cryptography.CngKey.ExportPolicy
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ExportPolicy
  nameWithType: CngKey.ExportPolicy
  fullName: System.Security.Cryptography.CngKey.ExportPolicy
- uid: System.Security.Cryptography.CngExportPolicies
  parent: System.Security.Cryptography
  isExternal: false
  name: CngExportPolicies
  nameWithType: CngExportPolicies
  fullName: System.Security.Cryptography.CngExportPolicies
- uid: System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: GetProperty
  nameWithType: CngKey.GetProperty
  fullName: System.Security.Cryptography.CngKey.GetProperty
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngKey.Handle
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Handle
  nameWithType: CngKey.Handle
  fullName: System.Security.Cryptography.CngKey.Handle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptKeyHandle
  nameWithType: SafeNCryptKeyHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
- uid: System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: HasProperty
  nameWithType: CngKey.HasProperty
  fullName: System.Security.Cryptography.CngKey.HasProperty
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngPropertyOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngPropertyOptions
  nameWithType: CngPropertyOptions
  fullName: System.Security.Cryptography.CngPropertyOptions
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Import
  nameWithType: CngKey.Import
  fullName: System.Security.Cryptography.CngKey.Import
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.CngKeyBlobFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyBlobFormat
  nameWithType: CngKeyBlobFormat
  fullName: System.Security.Cryptography.CngKeyBlobFormat
- uid: System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Import
  nameWithType: CngKey.Import
  fullName: System.Security.Cryptography.CngKey.Import
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.Security.Cryptography.CngKeyBlobFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyBlobFormat
  nameWithType: CngKeyBlobFormat
  fullName: System.Security.Cryptography.CngKeyBlobFormat
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngKey.IsEphemeral
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsEphemeral
  nameWithType: CngKey.IsEphemeral
  fullName: System.Security.Cryptography.CngKey.IsEphemeral
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngKey.IsMachineKey
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: IsMachineKey
  nameWithType: CngKey.IsMachineKey
  fullName: System.Security.Cryptography.CngKey.IsMachineKey
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngKey.KeyName
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyName
  nameWithType: CngKey.KeyName
  fullName: System.Security.Cryptography.CngKey.KeyName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngKey.KeySize
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeySize
  nameWithType: CngKey.KeySize
  fullName: System.Security.Cryptography.CngKey.KeySize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngKey.KeyUsage
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: KeyUsage
  nameWithType: CngKey.KeyUsage
  fullName: System.Security.Cryptography.CngKey.KeyUsage
- uid: System.Security.Cryptography.CngKeyUsages
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyUsages
  nameWithType: CngKeyUsages
  fullName: System.Security.Cryptography.CngKeyUsages
- uid: System.Security.Cryptography.CngKey.Open(System.String)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open
  nameWithType: CngKey.Open
  fullName: System.Security.Cryptography.CngKey.Open
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open
  nameWithType: CngKey.Open
  fullName: System.Security.Cryptography.CngKey.Open
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptKeyHandle
  nameWithType: SafeNCryptKeyHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
- uid: System.Security.Cryptography.CngKeyHandleOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyHandleOpenOptions
  nameWithType: CngKeyHandleOpenOptions
  fullName: System.Security.Cryptography.CngKeyHandleOpenOptions
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open
  nameWithType: CngKey.Open
  fullName: System.Security.Cryptography.CngKey.Open
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open
  nameWithType: CngKey.Open
  fullName: System.Security.Cryptography.CngKey.Open
- uid: System.Security.Cryptography.CngKey
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKey
  nameWithType: CngKey
  fullName: System.Security.Cryptography.CngKey
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngKeyOpenOptions
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyOpenOptions
  nameWithType: CngKeyOpenOptions
  fullName: System.Security.Cryptography.CngKeyOpenOptions
- uid: System.Security.Cryptography.CngKey.ParentWindowHandle
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CngKey.ParentWindowHandle
  fullName: System.Security.Cryptography.CngKey.ParentWindowHandle
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CngKey.Provider
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Provider
  nameWithType: CngKey.Provider
  fullName: System.Security.Cryptography.CngKey.Provider
- uid: System.Security.Cryptography.CngProvider
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProvider
  nameWithType: CngProvider
  fullName: System.Security.Cryptography.CngProvider
- uid: System.Security.Cryptography.CngKey.ProviderHandle
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: ProviderHandle
  nameWithType: CngKey.ProviderHandle
  fullName: System.Security.Cryptography.CngKey.ProviderHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeNCryptProviderHandle
  nameWithType: SafeNCryptProviderHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
- uid: System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: SetProperty
  nameWithType: CngKey.SetProperty
  fullName: System.Security.Cryptography.CngKey.SetProperty
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Security.Cryptography.CngProperty
  parent: System.Security.Cryptography
  isExternal: false
  name: CngProperty
  nameWithType: CngProperty
  fullName: System.Security.Cryptography.CngProperty
- uid: System.Security.Cryptography.CngKey.UIPolicy
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UIPolicy
  nameWithType: CngKey.UIPolicy
  fullName: System.Security.Cryptography.CngKey.UIPolicy
- uid: System.Security.Cryptography.CngUIPolicy
  parent: System.Security.Cryptography
  isExternal: false
  name: CngUIPolicy
  nameWithType: CngUIPolicy
  fullName: System.Security.Cryptography.CngUIPolicy
- uid: System.Security.Cryptography.CngKey.UniqueName
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: UniqueName
  nameWithType: CngKey.UniqueName
  fullName: System.Security.Cryptography.CngKey.UniqueName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngKey.Create*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Create
  nameWithType: CngKey.Create
- uid: System.Security.Cryptography.CngKey.Exists*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Exists
  nameWithType: CngKey.Exists
- uid: System.Security.Cryptography.CngKey.Import*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Import
  nameWithType: CngKey.Import
- uid: System.Security.Cryptography.CngKey.Open*
  parent: System.Security.Cryptography.CngKey
  isExternal: false
  name: Open
  nameWithType: CngKey.Open
