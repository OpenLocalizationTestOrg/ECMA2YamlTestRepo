### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.SignatureDescription
  id: SignatureDescription
  children:
  - System.Security.Cryptography.SignatureDescription.#ctor
  - System.Security.Cryptography.SignatureDescription.#ctor(System.Security.SecurityElement)
  - System.Security.Cryptography.SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.SignatureDescription.CreateDigest
  - System.Security.Cryptography.SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
  - System.Security.Cryptography.SignatureDescription.DigestAlgorithm
  - System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
  - System.Security.Cryptography.SignatureDescription.KeyAlgorithm
  langs:
  - csharp
  name: SignatureDescription
  nameWithType: SignatureDescription
  fullName: System.Security.Cryptography.SignatureDescription
  type: Class
  summary: Contains information about the properties of a digital signature.
  remarks: ''
  example:
  - "The following code example demonstrates how to use members of the SignatureDescription class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#2](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#2)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SignatureDescription
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SignatureDescription.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: SignatureDescription()
  nameWithType: SignatureDescription.SignatureDescription()
  fullName: System.Security.Cryptography.SignatureDescription.SignatureDescription()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.SignatureDescription"> class.
  remarks: ''
  example:
  - "The following code example demonstrates how to call the default SignatureDescription constructor. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#1](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#1)]"
  syntax:
    content: public SignatureDescription ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SignatureDescription.#ctor(System.Security.SecurityElement)
  id: '#ctor(System.Security.SecurityElement)'
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: SignatureDescription(SecurityElement)
  nameWithType: SignatureDescription.SignatureDescription(SecurityElement)
  fullName: System.Security.Cryptography.SignatureDescription.SignatureDescription(SecurityElement)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.SignatureDescription"> class from the specified <xref:System.Security.SecurityElement>.
  remarks: ''
  example:
  - "The following code example demonstrates how to initialize a new <xref:System.Security.Cryptography.SignatureDescription> class using a  \n  \n <xref:System.Security.SecurityElement> containing the four algorithms. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#3](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#3)]"
  syntax:
    content: public SignatureDescription (System.Security.SecurityElement el);
    parameters:
    - id: el
      type: System.Security.SecurityElement
      description: The <see cref="T:System.Security.SecurityElement"> from which to get the algorithms for the signature description.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: CreateDeformatter(AsymmetricAlgorithm)
  nameWithType: SignatureDescription.CreateDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.SignatureDescription.CreateDeformatter(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Creates an <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter"> instance with the specified key using the <xref:System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm%2A> property.
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CreateDeformatter method to create a DSA signature deformatter to verify the signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#4](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#4)]"
  syntax:
    content: public virtual System.Security.Cryptography.AsymmetricSignatureDeformatter CreateDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: The key to use in the <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter">.
    return:
      type: System.Security.Cryptography.AsymmetricSignatureDeformatter
      description: The newly created <see cref="T:System.Security.Cryptography.AsymmetricSignatureDeformatter"> instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SignatureDescription.CreateDigest
  id: CreateDigest
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: CreateDigest()
  nameWithType: SignatureDescription.CreateDigest()
  fullName: System.Security.Cryptography.SignatureDescription.CreateDigest()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Creates a <see cref="T:System.Security.Cryptography.HashAlgorithm"> instance using the <xref:System.Security.Cryptography.SignatureDescription.DigestAlgorithm%2A> property.
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CreateDigest method to create a <xref:System.Security.Cryptography.HashAlgorithm> using the digest algorithm of the signature. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#10](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#10)]"
  syntax:
    content: public virtual System.Security.Cryptography.HashAlgorithm CreateDigest ();
    parameters: []
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: The newly created <see cref="T:System.Security.Cryptography.HashAlgorithm"> instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: CreateFormatter(AsymmetricAlgorithm)
  nameWithType: SignatureDescription.CreateFormatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.SignatureDescription.CreateFormatter(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Creates an <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter"> instance with the specified key using the <xref:System.Security.Cryptography.SignatureDescription.FormatterAlgorithm%2A> property.
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CreateFormatter method to create a signature formatter for DSA encryption. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#5](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#5)]"
  syntax:
    content: public virtual System.Security.Cryptography.AsymmetricSignatureFormatter CreateFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: The key to use in the <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter">.
    return:
      type: System.Security.Cryptography.AsymmetricSignatureFormatter
      description: The newly created <see cref="T:System.Security.Cryptography.AsymmetricSignatureFormatter"> instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
  id: DeformatterAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: DeformatterAlgorithm
  nameWithType: SignatureDescription.DeformatterAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets or sets the deformatter algorithm for the signature description.
  remarks: ''
  example:
  - "The following code example demonstrates how to set the DeformatterAlgorithm property with the RSAPKCS1 deformatter. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#8](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#8)]"
  syntax:
    content: public string DeformatterAlgorithm { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SignatureDescription.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SignatureDescription.DigestAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.DigestAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets or sets the digest algorithm for the signature description.
  remarks: ''
  example:
  - "The following code example demonstrates how to set the DigestAlgorithm property for RSA encryption using the SHA1 provider. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#6](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#6)]"
  syntax:
    content: public string DigestAlgorithm { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
  id: FormatterAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: FormatterAlgorithm
  nameWithType: SignatureDescription.FormatterAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets or sets the formatter algorithm for the signature description.
  remarks: ''
  example:
  - "The following code example demonstrates how to set the FormatterAlgorithm property with the RSAPKCS1 formatter. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#9](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#9)]"
  syntax:
    content: public string FormatterAlgorithm { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.SignatureDescription.KeyAlgorithm
  id: KeyAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  langs:
  - csharp
  name: KeyAlgorithm
  nameWithType: SignatureDescription.KeyAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.KeyAlgorithm
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Gets or sets the key algorithm for the signature description.
  remarks: ''
  example:
  - "The following code example demonstrates how to set the KeyAlgorithm property for RSA encryption. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.SignatureDescription> class.  \n  \n [!CODE [System.Security.Cryptography.SignatureDescription#7](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.SignatureDescription#7)]"
  syntax:
    content: public string KeyAlgorithm { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.SignatureDescription.#ctor
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: SignatureDescription()
  nameWithType: SignatureDescription.SignatureDescription()
  fullName: System.Security.Cryptography.SignatureDescription.SignatureDescription()
- uid: System.Security.Cryptography.SignatureDescription.#ctor(System.Security.SecurityElement)
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: SignatureDescription(SecurityElement)
  nameWithType: SignatureDescription.SignatureDescription(SecurityElement)
  fullName: System.Security.Cryptography.SignatureDescription.SignatureDescription(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Cryptography.SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: CreateDeformatter(AsymmetricAlgorithm)
  nameWithType: SignatureDescription.CreateDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.SignatureDescription.CreateDeformatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.CreateDigest
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: CreateDigest()
  nameWithType: SignatureDescription.CreateDigest()
  fullName: System.Security.Cryptography.SignatureDescription.CreateDigest()
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: CreateFormatter(AsymmetricAlgorithm)
  nameWithType: SignatureDescription.CreateFormatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.SignatureDescription.CreateFormatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureFormatter
  nameWithType: AsymmetricSignatureFormatter
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: DeformatterAlgorithm
  nameWithType: SignatureDescription.DeformatterAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.DeformatterAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.SignatureDescription.DigestAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignatureDescription.DigestAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.DigestAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: FormatterAlgorithm
  nameWithType: SignatureDescription.FormatterAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.FormatterAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.SignatureDescription.KeyAlgorithm
  parent: System.Security.Cryptography.SignatureDescription
  isExternal: false
  name: KeyAlgorithm
  nameWithType: SignatureDescription.KeyAlgorithm
  fullName: System.Security.Cryptography.SignatureDescription.KeyAlgorithm
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
