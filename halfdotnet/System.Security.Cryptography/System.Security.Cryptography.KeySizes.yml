### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.KeySizes
  id: KeySizes
  children:
  - System.Security.Cryptography.KeySizes.#ctor(System.Int32,System.Int32,System.Int32)
  - System.Security.Cryptography.KeySizes.MaxSize
  - System.Security.Cryptography.KeySizes.MinSize
  - System.Security.Cryptography.KeySizes.SkipSize
  langs:
  - csharp
  name: KeySizes
  nameWithType: KeySizes
  fullName: System.Security.Cryptography.KeySizes
  type: Class
  summary: Determines the set of valid key sizes for the symmetric cryptographic algorithms.
  remarks: ''
  example:
  - "The following example shows the use of members of the KeySizes class.  \n  \n [!CODE [System.Security.Cryptography.KeySizes#1](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.KeySizes#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeySizes
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.KeySizes.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: System.Security.Cryptography.KeySizes
  langs:
  - csharp
  name: KeySizes(Int32,Int32,Int32)
  nameWithType: KeySizes.KeySizes(Int32,Int32,Int32)
  fullName: System.Security.Cryptography.KeySizes.KeySizes(Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <see cref="T:System.Security.Cryptography.KeySizes"> class with the specified key values.
  remarks: ''
  example:
  - "The following code shows the use of the KeySizes constructor. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.KeySizes> class.  \n  \n [!CODE [System.Security.Cryptography.KeySizes#2](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.KeySizes#2)]"
  syntax:
    content: public KeySizes (int minSize, int maxSize, int skipSize);
    parameters:
    - id: minSize
      type: System.Int32
      description: The minimum valid key size.
    - id: maxSize
      type: System.Int32
      description: The maximum valid key size.
    - id: skipSize
      type: System.Int32
      description: The interval between valid key sizes.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.KeySizes.MaxSize
  id: MaxSize
  parent: System.Security.Cryptography.KeySizes
  langs:
  - csharp
  name: MaxSize
  nameWithType: KeySizes.MaxSize
  fullName: System.Security.Cryptography.KeySizes.MaxSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Specifies the maximum key size in bits.
  remarks: ''
  example:
  - "The following code shows how to retrieve the use of the MaxSize property. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.KeySizes> class.  \n  \n [!CODE [System.Security.Cryptography.KeySizes#4](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.KeySizes#4)]"
  syntax:
    content: public int MaxSize { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.KeySizes.MinSize
  id: MinSize
  parent: System.Security.Cryptography.KeySizes
  langs:
  - csharp
  name: MinSize
  nameWithType: KeySizes.MinSize
  fullName: System.Security.Cryptography.KeySizes.MinSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Specifies the minimum key size in bits.
  remarks: ''
  example:
  - "The following code shows how to retrieve the use of the MinSize property. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.KeySizes> class.  \n  \n [!CODE [System.Security.Cryptography.KeySizes#3](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.KeySizes#3)]"
  syntax:
    content: public int MinSize { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Cryptography.KeySizes.SkipSize
  id: SkipSize
  parent: System.Security.Cryptography.KeySizes
  langs:
  - csharp
  name: SkipSize
  nameWithType: KeySizes.SkipSize
  fullName: System.Security.Cryptography.KeySizes.SkipSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: Specifies the interval between valid key sizes in bits.
  remarks: ''
  example:
  - "The following code shows how to retrieve the use of the SkipSize property. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.KeySizes> class.  \n  \n [!CODE [System.Security.Cryptography.KeySizes#5](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Cryptography.KeySizes#5)]"
  syntax:
    content: public int SkipSize { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.KeySizes.#ctor(System.Int32,System.Int32,System.Int32)
  parent: System.Security.Cryptography.KeySizes
  isExternal: false
  name: KeySizes(Int32,Int32,Int32)
  nameWithType: KeySizes.KeySizes(Int32,Int32,Int32)
  fullName: System.Security.Cryptography.KeySizes.KeySizes(Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.KeySizes.MaxSize
  parent: System.Security.Cryptography.KeySizes
  isExternal: false
  name: MaxSize
  nameWithType: KeySizes.MaxSize
  fullName: System.Security.Cryptography.KeySizes.MaxSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.KeySizes.MinSize
  parent: System.Security.Cryptography.KeySizes
  isExternal: false
  name: MinSize
  nameWithType: KeySizes.MinSize
  fullName: System.Security.Cryptography.KeySizes.MinSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.KeySizes.SkipSize
  parent: System.Security.Cryptography.KeySizes
  isExternal: false
  name: SkipSize
  nameWithType: KeySizes.SkipSize
  fullName: System.Security.Cryptography.KeySizes.SkipSize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
