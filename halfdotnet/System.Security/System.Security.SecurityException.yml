### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityException
  id: SecurityException
  children:
  - System.Security.SecurityException.#ctor
  - System.Security.SecurityException.#ctor(System.String)
  - System.Security.SecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.SecurityException.#ctor(System.String,System.Exception)
  - System.Security.SecurityException.#ctor(System.String,System.Type)
  - System.Security.SecurityException.#ctor(System.String,System.Type,System.String)
  - System.Security.SecurityException.#ctor(System.String,System.Object,System.Object,System.Reflection.MethodInfo,System.Object,System.Security.IPermission)
  - System.Security.SecurityException.#ctor(System.String,System.Reflection.AssemblyName,System.Security.PermissionSet,System.Security.PermissionSet,System.Reflection.MethodInfo,System.Security.Permissions.SecurityAction,System.Object,System.Security.IPermission,System.Security.Policy.Evidence)
  - System.Security.SecurityException.Action
  - System.Security.SecurityException.Demanded
  - System.Security.SecurityException.DenySetInstance
  - System.Security.SecurityException.FailedAssemblyInfo
  - System.Security.SecurityException.FirstPermissionThatFailed
  - System.Security.SecurityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.SecurityException.GrantedSet
  - System.Security.SecurityException.Method
  - System.Security.SecurityException.PermissionState
  - System.Security.SecurityException.PermissionType
  - System.Security.SecurityException.PermitOnlySetInstance
  - System.Security.SecurityException.RefusedSet
  - System.Security.SecurityException.ToString
  - System.Security.SecurityException.Url
  - System.Security.SecurityException.Zone
  langs:
  - csharp
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
  type: Class
  summary: The exception that is thrown when a security error is detected.
  remarks: "A SecurityException exception is thrown when a caller does not have the permissions required to access a resource. The following example instantiates a <xref:System.Security.PermissionSet> object that includes a <xref:System.Security.Permissions.UIPermission> object to allow access to UI objects and the Clipboard and a <xref:System.Security.Permissions.RegistryPermission> object to prevent registry access. The call to the <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName> method means that these permissions will apply regardless of the permissions assigned to the caller. As a result, the attempt to create a registry key throws a SecurityException.  \n  \n [!CODE [System.SecurityException.Class#1](../CodeSnippet/VS_Snippets_CLR_System/system.securityexception.class#1)]  \n  \n SecurityException uses the HRESULT COR_E_SECURITY, which has the value 0x8013150A.  \n  \n For a list of the initial property values for an instance of the SecurityException class, see a specific <xref:System.Security.SecurityException.%23ctor%2A> constructor."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SecurityException : SystemException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.#ctor
  id: '#ctor'
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: SecurityException()
  nameWithType: SecurityException.SecurityException()
  fullName: System.Security.SecurityException.SecurityException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Initializes a new instance of the <see cref="T:System.Security.SecurityException"> class with default properties.
  remarks: "The following table shows the initial property values for an instance of the <xref:System.Security.SecurityException> class.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  example:
  - For an example of the use of a <xref:System.Security.SecurityException.%23ctor%2A> constructor, see the example provided for the <xref:System.Security.SecurityException.%23ctor%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Object%2CSystem.Security.IPermission%29> constructor.
  syntax:
    content: public SecurityException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: SecurityException(String)
  nameWithType: SecurityException.SecurityException(String)
  fullName: System.Security.SecurityException.SecurityException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Initializes a new instance of the <see cref="T:System.Security.SecurityException"> class with a specified error message.
  remarks: "The following table shows the initial property values for an instance of the <xref:System.Security.SecurityException> class.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  example:
  - For an example of the use of a <xref:System.Security.SecurityException.%23ctor%2A> constructor, see the example provided for the <xref:System.Security.SecurityException.%23ctor%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Object%2CSystem.Security.IPermission%29> constructor.
  syntax:
    content: public SecurityException (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: SecurityException(SerializationInfo,StreamingContext)
  nameWithType: SecurityException.SecurityException(SerializationInfo,StreamingContext)
  fullName: System.Security.SecurityException.SecurityException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Initializes a new instance of the <see cref="T:System.Security.SecurityException"> class with serialized data.
  remarks: "This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.  \n  \n This constructor sets the following property values based on the information in the  parameter:  \n  \n-   <xref:System.Security.SecurityException.Action%2A>  \n  \n-   <xref:System.Security.SecurityException.FirstPermissionThatFailed%2A>  \n  \n-   <xref:System.Security.SecurityException.Demanded%2A>  \n  \n-   <xref:System.Security.SecurityException.RefusedSet%2A>  \n  \n-   <xref:System.Security.SecurityException.DenySetInstance%2A>  \n  \n-   <xref:System.Security.SecurityException.PermitOnlySetInstance%2A>  \n  \n-   <xref:System.Security.SecurityException.FailedAssemblyInfo%2A>  \n  \n-   <xref:System.Security.SecurityException.Method%2A>  \n  \n-   <xref:System.Security.SecurityException.Zone%2A>  \n  \n-   <xref:System.Security.SecurityException.Url%2A>"
  example:
  - For an example of the use of a <xref:System.Security.SecurityException.%23ctor%2A> constructor, see the example provided for the <xref:System.Security.SecurityException.%23ctor%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Object%2CSystem.Security.IPermission%29> constructor.
  syntax:
    content: protected SecurityException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: SecurityException(String,Exception)
  nameWithType: SecurityException.SecurityException(String,Exception)
  fullName: System.Security.SecurityException.SecurityException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Initializes a new instance of the <see cref="T:System.Security.SecurityException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of the <xref:System.Security.SecurityException> class.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  example:
  - For an example of the use of a <xref:System.Security.SecurityException.%23ctor%2A> constructor, see the example provided for the <xref:System.Security.SecurityException.%23ctor%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Object%2CSystem.Security.IPermission%29> constructor.
  syntax:
    content: public SecurityException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: SecurityException(String,Type)
  nameWithType: SecurityException.SecurityException(String,Type)
  fullName: System.Security.SecurityException.SecurityException(String,Type)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Initializes a new instance of the <see cref="T:System.Security.SecurityException"> class with a specified error message and the permission type that caused the exception to be thrown.
  remarks: "The following table shows the property values set by this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.Message%2A>|The localized error message string specified by .|  \n|<xref:System.Security.SecurityException.PermissionType%2A>|The <xref:System.Type> of the permission that failed, specified by .|"
  example:
  - For an example of the use of a <xref:System.Security.SecurityException.%23ctor%2A> constructor, see the example provided for the <xref:System.Security.SecurityException.%23ctor%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Object%2CSystem.Security.IPermission%29> constructor.
  syntax:
    content: public SecurityException (string message, Type type);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: type
      type: System.Type
      description: The type of the permission that caused the exception to be thrown.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.#ctor(System.String,System.Type,System.String)
  id: '#ctor(System.String,System.Type,System.String)'
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: SecurityException(String,Type,String)
  nameWithType: SecurityException.SecurityException(String,Type,String)
  fullName: System.Security.SecurityException.SecurityException(String,Type,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Initializes a new instance of the <see cref="T:System.Security.SecurityException"> class with a specified error message, the permission type that caused the exception to be thrown, and the permission state.
  remarks: "The following table shows the property values set by this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.Message%2A>|The localized error message string specified by .|  \n|<xref:System.Security.SecurityException.PermissionType%2A>|The <xref:System.Type> of the permission that failed, specified by .|  \n|<xref:System.Security.SecurityException.Demanded%2A>|The demanded security permission, permission set, or permission set collection that failed.|"
  example:
  - For an example of the use of a <xref:System.Security.SecurityException.%23ctor%2A> constructor, see the example provided for the <xref:System.Security.SecurityException.%23ctor%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Object%2CSystem.Security.IPermission%29> constructor.
  syntax:
    content: public SecurityException (string message, Type type, string state);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: type
      type: System.Type
      description: The type of the permission that caused the exception to be thrown.
    - id: state
      type: System.String
      description: The state of the permission that caused the exception to be thrown.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.#ctor(System.String,System.Object,System.Object,System.Reflection.MethodInfo,System.Object,System.Security.IPermission)
  id: '#ctor(System.String,System.Object,System.Object,System.Reflection.MethodInfo,System.Object,System.Security.IPermission)'
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: SecurityException(String,Object,Object,MethodInfo,Object,IPermission)
  nameWithType: SecurityException.SecurityException(String,Object,Object,MethodInfo,Object,IPermission)
  fullName: System.Security.SecurityException.SecurityException(String,Object,Object,MethodInfo,Object,IPermission)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Initializes a new instance of the <see cref="T:System.Security.SecurityException"> class for an exception caused by a Deny on the stack.
  remarks: "Use this constructor if a frame that contains a Deny caused the demand failure. The following table shows the property values set by this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.Message%2A>|The localized error message string specified by .|  \n|<xref:System.Security.SecurityException.FirstPermissionThatFailed%2A>|The first permission in the permission set or permission set collection specified by .|  \n|<xref:System.Security.SecurityException.GrantedSet%2A>|An empty string.|  \n|<xref:System.Security.SecurityException.Demanded%2A>|The security permission, permission set, or permission set collection specified by .|  \n|<xref:System.Security.SecurityException.RefusedSet%2A>|An empty string.|  \n|<xref:System.Security.SecurityException.DenySetInstance%2A>|The denied security permission, permission set, or permission set collection specified by .|  \n|<xref:System.Security.SecurityException.PermitOnlySetInstance%2A>|The permission, permission set, or permission set collection specified by .|  \n|<xref:System.Security.SecurityException.FailedAssemblyInfo%2A>|`null`.|  \n|<xref:System.Security.SecurityException.Method%2A>|The <xref:System.Reflection.MethodInfo> specified by .|  \n|<xref:System.Security.SecurityException.Zone%2A>|<xref:System.Security.SecurityZone>.|  \n|<xref:System.Security.SecurityException.Url%2A>|An empty string.|"
  example:
  - "The following code example shows the use of the SecurityException constructor.  \n  \n [!CODE [System.Security.SecurityException#16](../CodeSnippet/VS_Snippets_CLR_System/system.Security.SecurityException#16)]"
  syntax:
    content: public SecurityException (string message, object deny, object permitOnly, System.Reflection.MethodInfo method, object demanded, System.Security.IPermission permThatFailed);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: deny
      type: System.Object
      description: The denied permission or permission set.
    - id: permitOnly
      type: System.Object
      description: The permit-only permission or permission set.
    - id: method
      type: System.Reflection.MethodInfo
      description: A <see cref="T:System.Reflection.MethodInfo"> that identifies the method that encountered the exception.
    - id: demanded
      type: System.Object
      description: The demanded permission, permission set, or permission set collection.
    - id: permThatFailed
      type: System.Security.IPermission
      description: An <see cref="T:System.Security.IPermission"> that identifies the permission that failed.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.#ctor(System.String,System.Reflection.AssemblyName,System.Security.PermissionSet,System.Security.PermissionSet,System.Reflection.MethodInfo,System.Security.Permissions.SecurityAction,System.Object,System.Security.IPermission,System.Security.Policy.Evidence)
  id: '#ctor(System.String,System.Reflection.AssemblyName,System.Security.PermissionSet,System.Security.PermissionSet,System.Reflection.MethodInfo,System.Security.Permissions.SecurityAction,System.Object,System.Security.IPermission,System.Security.Policy.Evidence)'
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: SecurityException(String,AssemblyName,PermissionSet,PermissionSet,MethodInfo,SecurityAction,Object,IPermission,Evidence)
  nameWithType: SecurityException.SecurityException(String,AssemblyName,PermissionSet,PermissionSet,MethodInfo,SecurityAction,Object,IPermission,Evidence)
  fullName: System.Security.SecurityException.SecurityException(String,AssemblyName,PermissionSet,PermissionSet,MethodInfo,SecurityAction,Object,IPermission,Evidence)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Initializes a new instance of the <see cref="T:System.Security.SecurityException"> class for an exception caused by an insufficient grant set.
  remarks: "Use this constructor to throw an exception when the grant set caused the failure of the demand.  \n  \n The following table shows the property values set by this constructor.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.Message%2A>|The localized error message string specified by .|  \n|<xref:System.Security.SecurityException.FirstPermissionThatFailed%2A>|The first permission in the permission set or permission set collection specified by .|  \n|<xref:System.Security.SecurityException.GrantedSet%2A>|The <xref:System.Security.PermissionSet> specified by .|  \n|<xref:System.Security.SecurityException.Demanded%2A>|The demanded security permission, permission set, or permission set collection that failed, specified by .|  \n|<xref:System.Security.SecurityException.RefusedSet%2A>|The <xref:System.Security.PermissionSet> specified by .|  \n|<xref:System.Security.SecurityException.DenySetInstance%2A>|An empty string.|  \n|<xref:System.Security.SecurityException.PermitOnlySetInstance%2A>|An empty string.|  \n|<xref:System.Security.SecurityException.FailedAssemblyInfo%2A>|The <xref:System.Reflection.AssemblyName> specified by .|  \n|<xref:System.Security.SecurityException.Method%2A>|The <xref:System.Reflection.MethodInfo> specified by .|  \n|<xref:System.Security.SecurityException.Zone%2A>|The <xref:System.Security.SecurityZone> value  from the <xref:System.Security.Policy.Evidence> specified by .|  \n|<xref:System.Security.SecurityException.Url%2A>|The URL from the <xref:System.Security.Policy.Evidence> specified by .|"
  syntax:
    content: public SecurityException (string message, System.Reflection.AssemblyName assemblyName, System.Security.PermissionSet grant, System.Security.PermissionSet refused, System.Reflection.MethodInfo method, System.Security.Permissions.SecurityAction action, object demanded, System.Security.IPermission permThatFailed, System.Security.Policy.Evidence evidence);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: assemblyName
      type: System.Reflection.AssemblyName
      description: An <see cref="T:System.Reflection.AssemblyName"> that specifies the name of the assembly that caused the exception.
    - id: grant
      type: System.Security.PermissionSet
      description: A <see cref="T:System.Security.PermissionSet"> that represents the permissions granted the assembly.
    - id: refused
      type: System.Security.PermissionSet
      description: A <see cref="T:System.Security.PermissionSet"> that represents the refused permission or permission set.
    - id: method
      type: System.Reflection.MethodInfo
      description: A <see cref="T:System.Reflection.MethodInfo"> that represents the method that encountered the exception.
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: One of the <see cref="T:System.Security.Permissions.SecurityAction"> values.
    - id: demanded
      type: System.Object
      description: The demanded permission, permission set, or permission set collection.
    - id: permThatFailed
      type: System.Security.IPermission
      description: An <see cref="T:System.Security.IPermission"> that represents the permission that failed.
    - id: evidence
      type: System.Security.Policy.Evidence
      description: The <see cref="T:System.Security.Policy.Evidence"> for the assembly that caused the exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.Action
  id: Action
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: Action
  nameWithType: SecurityException.Action
  fullName: System.Security.SecurityException.Action
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the security action that caused the exception.
  remarks: "The Action property contains the security action that caused the security check failure. Many of the security actions can cause a security exception to be thrown. For example, a demand on a permission set checks that all callers on the call stack have the necessary permissions in the permission set. If any caller on the call stack lacks a required permission, the security check fails. Alternatively, a method in the call chain can modify the outcome of the stack walk by placing a stack walk modifier, such as <xref:System.Security.Permissions.SecurityAction> or <xref:System.Security.Permissions.SecurityAction>, on the stack to limit the allowed permissions. For example, a method on the call stack might deny all of its callers a set of permissions named PSET1, such that any demand for a permission that is part of PSET1 fails for those callers. The Action property contains the security action that caused the exception to be thrown.  \n  \n <xref:System.Security.Permissions.SecurityAction> is an enumeration in the <xref:System.Security.Permissions.SecurityAction> namespace that provides the security action value for the Action property. Typically this property contains one of the values shown in the following table.  \n  \n|Security action|Description|  \n|---------------------|-----------------|  \n|<xref:System.Security.Permissions.SecurityAction>|A full stack walk failed due to a demand made against the assembly identified by the <xref:System.Security.SecurityException.FailedAssemblyInfo%2A> property.|  \n|<xref:System.Security.Permissions.SecurityAction>|A link demand against the assembly identified by the <xref:System.Security.SecurityException.FailedAssemblyInfo%2A> property failed.|  \n|<xref:System.Security.Permissions.SecurityAction>|An assembly identified by the <xref:System.Security.SecurityException.FailedAssemblyInfo%2A> property failed to meet an inheritance demand.|  \n|<xref:System.Security.Permissions.SecurityAction>|A demanded permission did not match any permission in the <xref:System.Security.Permissions.SecurityAction> permission set. The method that placed the <xref:System.Security.Permissions.SecurityAction> on the call stack is identified by the <xref:System.Security.SecurityException.Method%2A> property.|  \n|<xref:System.Security.Permissions.SecurityAction>|A demanded permission matched a permission in the deny permission set on the call stack. The method that placed the <xref:System.Security.Permissions.SecurityAction> on the call stack is identified by the <xref:System.Security.SecurityException.Method%2A> property.|"
  syntax:
    content: public System.Security.Permissions.SecurityAction Action { get; set; }
    return:
      type: System.Security.Permissions.SecurityAction
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.Demanded
  id: Demanded
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: Demanded
  nameWithType: SecurityException.Demanded
  fullName: System.Security.SecurityException.Demanded
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the demanded security permission, permission set, or permission set collection that failed.
  remarks: In the case of a returned permission set or permission set collection, the returned object contains all the demanded permissions, one or more of which caused the failure.
  example:
  - "The following code example shows the use of the Demanded property to display the demanded security permission, permission set, or permission set collection that failed. This code example is part of a larger example provided for the <xref:System.Security.SecurityException> class.  \n  \n [!CODE [System.Security.SecurityException#3](../CodeSnippet/VS_Snippets_CLR_System/system.Security.SecurityException#3)]"
  syntax:
    content: public object Demanded { get; set; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.DenySetInstance
  id: DenySetInstance
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: DenySetInstance
  nameWithType: SecurityException.DenySetInstance
  fullName: System.Security.SecurityException.DenySetInstance
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the denied security permission, permission set, or permission set collection that caused a demand to fail.
  remarks: This property contains the denied permission, permission set, or permission set collection that caused the security check to fail. It is `null` for exceptions that are not caused by a Deny. The property is of type <xref:System.Object> because it can contain a permission, a permission set, or a permission set collection. To test the run-time type of this property, you can use the <xref:System.Object.GetType%2A> method or a specific language operator, such as the  operator in C# or the  operator in Visual Basic.
  syntax:
    content: public object DenySetInstance { get; set; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.FailedAssemblyInfo
  id: FailedAssemblyInfo
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: FailedAssemblyInfo
  nameWithType: SecurityException.FailedAssemblyInfo
  fullName: System.Security.SecurityException.FailedAssemblyInfo
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets information about the failed assembly.
  remarks: "This property contains an <xref:System.Reflection.AssemblyName> object that identifies the assembly that caused the security check to fail.  \n  \n> [!NOTE]\n>  This property is not populated when a security exception occurs in a <xref:System.Security.Permissions.SecurityAction> or <xref:System.Security.Permissions.SecurityAction> stack frame, because the assembly issuing the <xref:System.Security.Permissions.SecurityAction> or <xref:System.Security.Permissions.SecurityAction> security action is not the assembly that failed the stack walk. In these cases, the security exception is created with a constructor that does not require an assembly name, granted set information, or refused set information."
  example:
  - "The following code example shows the use of the FailedAssemblyInfo property to display the information about the failed assembly.  \n  \n [!CODE [System.Security.SecurityException#12](../CodeSnippet/VS_Snippets_CLR_System/system.Security.SecurityException#12)]"
  syntax:
    content: public System.Reflection.AssemblyName FailedAssemblyInfo { get; set; }
    return:
      type: System.Reflection.AssemblyName
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.FirstPermissionThatFailed
  id: FirstPermissionThatFailed
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: FirstPermissionThatFailed
  nameWithType: SecurityException.FirstPermissionThatFailed
  fullName: System.Security.SecurityException.FirstPermissionThatFailed
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the first permission in a permission set or permission set collection that failed the demand.
  remarks: If the demanded object is a permission set or permission set collection, the FirstPermissionThatFailed represents only the first permission that caused the exception. Additional permissions in the set or collection can also cause a demand failure.
  syntax:
    content: public System.Security.IPermission FirstPermissionThatFailed { get; set; }
    return:
      type: System.Security.IPermission
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SecurityException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.SecurityException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"> with information about the <xref:System.Security.SecurityException>.
  remarks: '`GetObjectData` sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the `SerializationInfo` transmitted over the stream.'
  example:
  - "The following code shows the use of the GetObjectData method to display the permission state contained in the  <xref:System.Runtime.Serialization.SerializationInfo> object.  \n  \n [!CODE [System.Security.SecurityException#9](../CodeSnippet/VS_Snippets_CLR_System/system.Security.SecurityException#9)]"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <see cref="T:System.Runtime.Serialization.SerializationInfo"> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <see cref="T:System.Runtime.Serialization.StreamingContext"> that contains contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.GrantedSet
  id: GrantedSet
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: GrantedSet
  nameWithType: SecurityException.GrantedSet
  fullName: System.Security.SecurityException.GrantedSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the granted permission set of the assembly that caused the <see cref="T:System.Security.SecurityException">.
  remarks: This property might not contain relevant data in security exceptions other than exceptions involving checks for the <xref:System.Security.AllowPartiallyTrustedCallersAttribute>.
  syntax:
    content: public string GrantedSet { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.Method
  id: Method
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: Method
  nameWithType: SecurityException.Method
  fullName: System.Security.SecurityException.Method
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the information about the method associated with the exception.
  remarks: "This property contains one of the following:  \n  \n-   Information about the method that the failed assembly was executing when the security check that triggered the exception occurred.  \n  \n-   Information about the method that placed either a <xref:System.Security.Permissions.SecurityAction> or <xref:System.Security.Permissions.SecurityAction> security action on the call stack, in the case of a failure due to a <xref:System.Security.Permissions.SecurityAction> or <xref:System.Security.Permissions.SecurityAction>.  \n  \n-   `null`, in the case of a failure that is impossible to attribute to a specific method.  \n  \n The <xref:System.Reflection.MethodInfo> object provides the method name, class name, and assembly name information that uniquely identifies the method."
  syntax:
    content: public System.Reflection.MethodInfo Method { get; set; }
    return:
      type: System.Reflection.MethodInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.PermissionState
  id: PermissionState
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: PermissionState
  nameWithType: SecurityException.PermissionState
  fullName: System.Security.SecurityException.PermissionState
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the state of the permission that threw the exception.
  remarks: To be added.
  syntax:
    content: public string PermissionState { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.PermissionType
  id: PermissionType
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: PermissionType
  nameWithType: SecurityException.PermissionType
  fullName: System.Security.SecurityException.PermissionType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the type of the permission that failed.
  remarks: To be added.
  syntax:
    content: public Type PermissionType { get; set; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.PermitOnlySetInstance
  id: PermitOnlySetInstance
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: PermitOnlySetInstance
  nameWithType: SecurityException.PermitOnlySetInstance
  fullName: System.Security.SecurityException.PermitOnlySetInstance
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the permission, permission set, or permission set collection that is part of the permit-only stack frame that caused a security check to fail.
  remarks: "The PermitOnlySetInstance property represents the permitted permission, permission set, or permission set collection contained in the stack frame that caused the security exception. For instance, when a security exception occurs because of a <xref:System.Security.PermissionSet.Demand%2A?displayProperty=fullName> failure, the permitted permission appears in this property and the demanded <xref:System.Security.PermissionSet> is contained in the <xref:System.Security.SecurityException.Demanded%2A> property.  \n  \n This property is of type <xref:System.Object> because permissions, permission sets, or permission set collections can all be demanded and <xref:System.Object> is their common base class.  To test the run-time type of this property, you can use the <xref:System.Object.GetType%2A> method or a specific language operator, such as the  operator in C# or the  operator in Visual Basic."
  syntax:
    content: public object PermitOnlySetInstance { get; set; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.RefusedSet
  id: RefusedSet
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: RefusedSet
  nameWithType: SecurityException.RefusedSet
  fullName: System.Security.SecurityException.RefusedSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the refused permission set of the assembly that caused the <see cref="T:System.Security.SecurityException">.
  remarks: This property might not contain relevant data in security exceptions other than exceptions involving checks for the <xref:System.Security.AllowPartiallyTrustedCallersAttribute>.
  syntax:
    content: public string RefusedSet { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.ToString
  id: ToString
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityException.ToString()
  fullName: System.Security.SecurityException.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Returns a representation of the current <see cref="T:System.Security.SecurityException">.
  remarks: The ToString method returns the full description of the <xref:System.Security.SecurityException>.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string representation of the current <see cref="T:System.Security.SecurityException">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.Url
  id: Url
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: Url
  nameWithType: SecurityException.Url
  fullName: System.Security.SecurityException.Url
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the URL of the assembly that caused the exception.
  remarks: To be added.
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityException.Zone
  id: Zone
  parent: System.Security.SecurityException
  langs:
  - csharp
  name: Zone
  nameWithType: SecurityException.Zone
  fullName: System.Security.SecurityException.Zone
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets or sets the zone of the assembly that caused the exception.
  remarks: To be added.
  syntax:
    content: public System.Security.SecurityZone Zone { get; set; }
    return:
      type: System.Security.SecurityZone
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Security.SecurityException.#ctor
  parent: System.Security.SecurityException
  isExternal: false
  name: SecurityException()
  nameWithType: SecurityException.SecurityException()
  fullName: System.Security.SecurityException.SecurityException()
- uid: System.Security.SecurityException.#ctor(System.String)
  parent: System.Security.SecurityException
  isExternal: false
  name: SecurityException(String)
  nameWithType: SecurityException.SecurityException(String)
  fullName: System.Security.SecurityException.SecurityException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.SecurityException
  isExternal: false
  name: SecurityException(SerializationInfo,StreamingContext)
  nameWithType: SecurityException.SecurityException(SerializationInfo,StreamingContext)
  fullName: System.Security.SecurityException.SecurityException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.SecurityException.#ctor(System.String,System.Exception)
  parent: System.Security.SecurityException
  isExternal: false
  name: SecurityException(String,Exception)
  nameWithType: SecurityException.SecurityException(String,Exception)
  fullName: System.Security.SecurityException.SecurityException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Security.SecurityException.#ctor(System.String,System.Type)
  parent: System.Security.SecurityException
  isExternal: false
  name: SecurityException(String,Type)
  nameWithType: SecurityException.SecurityException(String,Type)
  fullName: System.Security.SecurityException.SecurityException(String,Type)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.SecurityException.#ctor(System.String,System.Type,System.String)
  parent: System.Security.SecurityException
  isExternal: false
  name: SecurityException(String,Type,String)
  nameWithType: SecurityException.SecurityException(String,Type,String)
  fullName: System.Security.SecurityException.SecurityException(String,Type,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecurityException.#ctor(System.String,System.Object,System.Object,System.Reflection.MethodInfo,System.Object,System.Security.IPermission)
  parent: System.Security.SecurityException
  isExternal: false
  name: SecurityException(String,Object,Object,MethodInfo,Object,IPermission)
  nameWithType: SecurityException.SecurityException(String,Object,Object,MethodInfo,Object,IPermission)
  fullName: System.Security.SecurityException.SecurityException(String,Object,Object,MethodInfo,Object,IPermission)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.SecurityException.#ctor(System.String,System.Reflection.AssemblyName,System.Security.PermissionSet,System.Security.PermissionSet,System.Reflection.MethodInfo,System.Security.Permissions.SecurityAction,System.Object,System.Security.IPermission,System.Security.Policy.Evidence)
  parent: System.Security.SecurityException
  isExternal: false
  name: SecurityException(String,AssemblyName,PermissionSet,PermissionSet,MethodInfo,SecurityAction,Object,IPermission,Evidence)
  nameWithType: SecurityException.SecurityException(String,AssemblyName,PermissionSet,PermissionSet,MethodInfo,SecurityAction,Object,IPermission,Evidence)
  fullName: System.Security.SecurityException.SecurityException(String,AssemblyName,PermissionSet,PermissionSet,MethodInfo,SecurityAction,Object,IPermission,Evidence)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.SecurityException.Action
  parent: System.Security.SecurityException
  isExternal: false
  name: Action
  nameWithType: SecurityException.Action
  fullName: System.Security.SecurityException.Action
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.SecurityException.Demanded
  parent: System.Security.SecurityException
  isExternal: false
  name: Demanded
  nameWithType: SecurityException.Demanded
  fullName: System.Security.SecurityException.Demanded
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.SecurityException.DenySetInstance
  parent: System.Security.SecurityException
  isExternal: false
  name: DenySetInstance
  nameWithType: SecurityException.DenySetInstance
  fullName: System.Security.SecurityException.DenySetInstance
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.SecurityException.FailedAssemblyInfo
  parent: System.Security.SecurityException
  isExternal: false
  name: FailedAssemblyInfo
  nameWithType: SecurityException.FailedAssemblyInfo
  fullName: System.Security.SecurityException.FailedAssemblyInfo
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Security.SecurityException.FirstPermissionThatFailed
  parent: System.Security.SecurityException
  isExternal: false
  name: FirstPermissionThatFailed
  nameWithType: SecurityException.FirstPermissionThatFailed
  fullName: System.Security.SecurityException.FirstPermissionThatFailed
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.SecurityException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.SecurityException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SecurityException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.SecurityException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.SecurityException.GrantedSet
  parent: System.Security.SecurityException
  isExternal: false
  name: GrantedSet
  nameWithType: SecurityException.GrantedSet
  fullName: System.Security.SecurityException.GrantedSet
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecurityException.Method
  parent: System.Security.SecurityException
  isExternal: false
  name: Method
  nameWithType: SecurityException.Method
  fullName: System.Security.SecurityException.Method
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Security.SecurityException.PermissionState
  parent: System.Security.SecurityException
  isExternal: false
  name: PermissionState
  nameWithType: SecurityException.PermissionState
  fullName: System.Security.SecurityException.PermissionState
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecurityException.PermissionType
  parent: System.Security.SecurityException
  isExternal: false
  name: PermissionType
  nameWithType: SecurityException.PermissionType
  fullName: System.Security.SecurityException.PermissionType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.SecurityException.PermitOnlySetInstance
  parent: System.Security.SecurityException
  isExternal: false
  name: PermitOnlySetInstance
  nameWithType: SecurityException.PermitOnlySetInstance
  fullName: System.Security.SecurityException.PermitOnlySetInstance
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.SecurityException.RefusedSet
  parent: System.Security.SecurityException
  isExternal: false
  name: RefusedSet
  nameWithType: SecurityException.RefusedSet
  fullName: System.Security.SecurityException.RefusedSet
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecurityException.ToString
  parent: System.Security.SecurityException
  isExternal: false
  name: ToString()
  nameWithType: SecurityException.ToString()
  fullName: System.Security.SecurityException.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecurityException.Url
  parent: System.Security.SecurityException
  isExternal: false
  name: Url
  nameWithType: SecurityException.Url
  fullName: System.Security.SecurityException.Url
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.SecurityException.Zone
  parent: System.Security.SecurityException
  isExternal: false
  name: Zone
  nameWithType: SecurityException.Zone
  fullName: System.Security.SecurityException.Zone
- uid: System.Security.SecurityZone
  parent: System.Security
  isExternal: false
  name: SecurityZone
  nameWithType: SecurityZone
  fullName: System.Security.SecurityZone
