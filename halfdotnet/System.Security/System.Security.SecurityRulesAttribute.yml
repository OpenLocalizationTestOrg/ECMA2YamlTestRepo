### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityRulesAttribute
  id: SecurityRulesAttribute
  children:
  - System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)
  - System.Security.SecurityRulesAttribute.RuleSet
  - System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  langs:
  - csharp
  name: SecurityRulesAttribute
  nameWithType: SecurityRulesAttribute
  fullName: System.Security.SecurityRulesAttribute
  type: Class
  summary: Indicates the set of security rules the common language runtime should enforce for an assembly.
  remarks: This class indicates which set of security rules the common language runtime should enforce for an assembly. For example, an assembly that is marked with `[SecurityRules(SecurityRuleSet.Level1)]` uses the .NET Framework version 2.0 transparency rules, where public security-critical types and members are treated as security-safe-critical outside the assembly. This requires security-critical types and members to perform a link demand for full trust to enforce security-critical behavior when they are accessed by external callers. Typically, level 1 rules should be used only for compatibility, such as for version 2.0 assemblies. For more information about level 1 behavior, see [Security-Transparent Code, Level 1](../Topic/Security-Transparent%20Code,%20Level%201.md). For information about level 2 behavior, see [Security-Transparent Code, Level 2](../Topic/Security-Transparent%20Code,%20Level%202.md).
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false)]

      public sealed class SecurityRulesAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)
  id: '#ctor(System.Security.SecurityRuleSet)'
  parent: System.Security.SecurityRulesAttribute
  langs:
  - csharp
  name: SecurityRulesAttribute(SecurityRuleSet)
  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
  fullName: System.Security.SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Initializes a new instance of the <see cref="T:System.Security.SecurityRulesAttribute"> class using the specified rule set value.
  remarks: When you specify the  parameter, use <xref:System.Security.SecurityRuleSet> for .NET Framework version 2.0 rules or <xref:System.Security.SecurityRuleSet> for [!INCLUDE[net_v40_short](../../add/includes/net-v40-short-md.md)] rules. For more information about <xref:System.Security.SecurityRuleSet> behavior, see [Security-Transparent Code, Level 1](../Topic/Security-Transparent%20Code,%20Level%201.md). For information about <xref:System.Security.SecurityRuleSet> behavior, see [Security-Transparent Code, Level 2](../Topic/Security-Transparent%20Code,%20Level%202.md).
  syntax:
    content: public SecurityRulesAttribute (System.Security.SecurityRuleSet ruleSet);
    parameters:
    - id: ruleSet
      type: System.Security.SecurityRuleSet
      description: One of the enumeration values that specifies the transparency rules set.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityRulesAttribute.RuleSet
  id: RuleSet
  parent: System.Security.SecurityRulesAttribute
  langs:
  - csharp
  name: RuleSet
  nameWithType: SecurityRulesAttribute.RuleSet
  fullName: System.Security.SecurityRulesAttribute.RuleSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Gets the rule set to be applied.
  remarks: To be added.
  syntax:
    content: public System.Security.SecurityRuleSet RuleSet { get; }
    return:
      type: System.Security.SecurityRuleSet
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  id: SkipVerificationInFullTrust
  parent: System.Security.SecurityRulesAttribute
  langs:
  - csharp
  name: SkipVerificationInFullTrust
  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust
  fullName: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Determines whether fully trusted transparent code should skip Microsoft intermediate language (MSIL) verification.
  remarks: "This property should be used only for optimization, because security guarantees made for transparent code cannot be enforced if the code is unverifiable.  \n  \n If you use this property to skip MSIL verification for an assembly, use the `transparent` option in the  to statically verify that the assembly's transparent code meets type safety requirements."
  syntax:
    content: public bool SkipVerificationInFullTrust { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SecurityRulesAttribute(SecurityRuleSet)
  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
  fullName: System.Security.SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
- uid: System.Security.SecurityRuleSet
  parent: System.Security
  isExternal: false
  name: SecurityRuleSet
  nameWithType: SecurityRuleSet
  fullName: System.Security.SecurityRuleSet
- uid: System.Security.SecurityRulesAttribute.RuleSet
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: RuleSet
  nameWithType: SecurityRulesAttribute.RuleSet
  fullName: System.Security.SecurityRulesAttribute.RuleSet
- uid: System.Security.SecurityRuleSet
  parent: System.Security
  isExternal: false
  name: SecurityRuleSet
  nameWithType: SecurityRuleSet
  fullName: System.Security.SecurityRuleSet
- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SkipVerificationInFullTrust
  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust
  fullName: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
