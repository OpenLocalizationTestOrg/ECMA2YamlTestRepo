### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.MediaPlayer
  id: MediaPlayer
  children:
  - System.Windows.Media.MediaPlayer.#ctor
  - System.Windows.Media.MediaPlayer.Balance
  - System.Windows.Media.MediaPlayer.BufferingEnded
  - System.Windows.Media.MediaPlayer.BufferingProgress
  - System.Windows.Media.MediaPlayer.BufferingStarted
  - System.Windows.Media.MediaPlayer.CanPause
  - System.Windows.Media.MediaPlayer.Clock
  - System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.MediaPlayer.Close
  - System.Windows.Media.MediaPlayer.CreateInstanceCore
  - System.Windows.Media.MediaPlayer.DownloadProgress
  - System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.MediaPlayer.HasAudio
  - System.Windows.Media.MediaPlayer.HasVideo
  - System.Windows.Media.MediaPlayer.IsBuffering
  - System.Windows.Media.MediaPlayer.IsMuted
  - System.Windows.Media.MediaPlayer.MediaEnded
  - System.Windows.Media.MediaPlayer.MediaFailed
  - System.Windows.Media.MediaPlayer.MediaOpened
  - System.Windows.Media.MediaPlayer.NaturalDuration
  - System.Windows.Media.MediaPlayer.NaturalVideoHeight
  - System.Windows.Media.MediaPlayer.NaturalVideoWidth
  - System.Windows.Media.MediaPlayer.Open(System.Uri)
  - System.Windows.Media.MediaPlayer.Pause
  - System.Windows.Media.MediaPlayer.Play
  - System.Windows.Media.MediaPlayer.Position
  - System.Windows.Media.MediaPlayer.ReadPreamble
  - System.Windows.Media.MediaPlayer.ScriptCommand
  - System.Windows.Media.MediaPlayer.ScrubbingEnabled
  - System.Windows.Media.MediaPlayer.Source
  - System.Windows.Media.MediaPlayer.SpeedRatio
  - System.Windows.Media.MediaPlayer.Stop
  - System.Windows.Media.MediaPlayer.Volume
  - System.Windows.Media.MediaPlayer.WritePreamble
  langs:
  - csharp
  name: MediaPlayer
  nameWithType: MediaPlayer
  fullName: System.Windows.Media.MediaPlayer
  type: Class
  summary: Provides media playback for drawings.
  remarks: "Although you can declare an instance of this class in [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)], you cannot load and play its media without using code. To play media in [!INCLUDE[TLA2#tla_xaml](../../add/includes/tla2sharptla-xaml-md.md)] only, use a <xref:System.Windows.Controls.MediaElement>. Also, if you declare an instance in [!INCLUDE[TLA2#tla_xaml](../../add/includes/tla2sharptla-xaml-md.md)], the only practical use is to fill property element syntax for the <xref:System.Windows.Media.VideoDrawing.Player%2A> property.  \n  \n When distributing media with your application, you cannot use a media file as a project resource. In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`.  \n  \n MediaPlayer can be used in two different modes, depending on what is driving the player: independent mode or clock mode. In independent mode, the MediaPlayer is analogous to an image and the media opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method drives playback. In Clock mode, the MediaPlayer can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the Timing tree which controls playback. For more information on media modes, see the [Multimedia Overview](../Topic/Multimedia%20Overview.md).  \n  \n MediaPlayer is different from a <xref:System.Windows.Controls.MediaElement> in that it is not a control that can be added directly to the [!INCLUDE[TLA#tla_ui](../../add/includes/tlasharptla-ui-md.md)] of an application. To display media loaded using MediaPlayer, a <xref:System.Windows.Media.VideoDrawing> or <xref:System.Windows.Media.DrawingContext> must be used."
  example:
  - '[How to: Play Media using a VideoDrawing](../Topic/How%20to:%20Play%20Media%20using%20a%20VideoDrawing.md)'
  syntax:
    content: 'public class MediaPlayer : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.Clone
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.#ctor
  id: '#ctor'
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaPlayer()
  nameWithType: MediaPlayer.MediaPlayer()
  fullName: System.Windows.Media.MediaPlayer.MediaPlayer()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Initializes a new instance of the <see cref="T:System.Windows.Media.MediaPlayer"> class.
  remarks: To be added.
  syntax:
    content: public MediaPlayer ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Balance
  id: Balance
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Balance
  nameWithType: MediaPlayer.Balance
  fullName: System.Windows.Media.MediaPlayer.Balance
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets or sets the balance between the left and right speaker volumes.
  remarks: A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.
  syntax:
    content: public double Balance { get; set; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.BufferingEnded
  id: BufferingEnded
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: BufferingEnded
  nameWithType: MediaPlayer.BufferingEnded
  fullName: System.Windows.Media.MediaPlayer.BufferingEnded
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Occurs when buffering has finished.
  remarks: To be added.
  syntax:
    content: public event EventHandler BufferingEnded;
    return:
      type: System.EventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.BufferingProgress
  id: BufferingProgress
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: BufferingProgress
  nameWithType: MediaPlayer.BufferingProgress
  fullName: System.Windows.Media.MediaPlayer.BufferingProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets the percentage of buffering completed for streaming content.
  remarks: To be added.
  syntax:
    content: public double BufferingProgress { get; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.BufferingStarted
  id: BufferingStarted
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: BufferingStarted
  nameWithType: MediaPlayer.BufferingStarted
  fullName: System.Windows.Media.MediaPlayer.BufferingStarted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Occurs when buffering has started.
  remarks: To be added.
  syntax:
    content: public event EventHandler BufferingStarted;
    return:
      type: System.EventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.CanPause
  id: CanPause
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CanPause
  nameWithType: MediaPlayer.CanPause
  fullName: System.Windows.Media.MediaPlayer.CanPause
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets a value indicating whether the media can be paused.
  remarks: To be added.
  syntax:
    content: public bool CanPause { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Clock
  id: Clock
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Clock
  nameWithType: MediaPlayer.Clock
  fullName: System.Windows.Media.MediaPlayer.Clock
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets or sets the <see cref="T:System.Windows.Media.MediaClock"> associated with the <xref:System.Windows.Media.MediaTimeline> to be played.
  remarks: "Setting this property tells the <xref:System.Windows.Media.MediaPlayer> to be clock driven and will utilize the timing engine, placing the player in Clock mode. Any media that is playing is stopped and the <xref:System.Uri> associated with the new clock is opened.  \n  \n When the player is in clock mode, seeking using <xref:System.Windows.Media.MediaPlayer.Position%2A> or calling the <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, or <xref:System.Windows.Media.MediaPlayer.Stop%2A> methods will throw an <xref:System.InvalidOperationException>. These operations are only available when the player Clock is null."
  syntax:
    content: public System.Windows.Media.MediaClock Clock { get; set; }
    return:
      type: System.Windows.Media.MediaClock
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: MediaPlayer.CloneCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer">. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.
  remarks: "This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName>."
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: The <see cref="T:System.Windows.Media.MediaPlayer"> to clone.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: MediaPlayer.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer"> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.
  remarks: "This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName>."
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: The <see cref="T:System.Windows.Media.MediaPlayer"> to clone.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Close
  id: Close
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Close()
  nameWithType: MediaPlayer.Close()
  fullName: System.Windows.Media.MediaPlayer.Close()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Closes the underlying media.
  remarks: The <xref:System.Windows.Media.MediaPlayer> can be opened again by calling the <xref:System.Windows.Media.MediaPlayer.Open%2A> method.
  syntax:
    content: public void Close ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: MediaPlayer.CreateInstanceCore()
  fullName: System.Windows.Media.MediaPlayer.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Creates a new <see cref="T:System.Windows.Media.MediaPlayer"> instance.
  remarks: To be added.
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: A new <see cref="T:System.Windows.Media.MediaPlayer"> instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.DownloadProgress
  id: DownloadProgress
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: DownloadProgress
  nameWithType: MediaPlayer.DownloadProgress
  fullName: System.Windows.Media.MediaPlayer.DownloadProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets the percentage of download progress for content located at a remote server.
  remarks: To be added.
  syntax:
    content: public double DownloadProgress { get; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: MediaPlayer.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Makes this instance a clone of the specified <see cref="T:System.Windows.Media.MediaPlayer"> object.
  remarks: "When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values. Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.  \n  \n This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.  \n  \n For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>."
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: The <see cref="T:System.Windows.Media.MediaPlayer"> object to clone and freeze.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.HasAudio
  id: HasAudio
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: HasAudio
  nameWithType: MediaPlayer.HasAudio
  fullName: System.Windows.Media.MediaPlayer.HasAudio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets a value that indicating whether the media has audio output.
  remarks: To be added.
  syntax:
    content: public bool HasAudio { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.HasVideo
  id: HasVideo
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: HasVideo
  nameWithType: MediaPlayer.HasVideo
  fullName: System.Windows.Media.MediaPlayer.HasVideo
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets a value that indicates whether the media has video output.
  remarks: To be added.
  syntax:
    content: public bool HasVideo { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.IsBuffering
  id: IsBuffering
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: IsBuffering
  nameWithType: MediaPlayer.IsBuffering
  fullName: System.Windows.Media.MediaPlayer.IsBuffering
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets a value that indicates whether the media is buffering.
  remarks: To be added.
  syntax:
    content: public bool IsBuffering { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.IsMuted
  id: IsMuted
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: IsMuted
  nameWithType: MediaPlayer.IsMuted
  fullName: System.Windows.Media.MediaPlayer.IsMuted
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets a value that indicates whether the media is muted.
  remarks: To be added.
  syntax:
    content: public bool IsMuted { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.MediaEnded
  id: MediaEnded
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaEnded
  nameWithType: MediaPlayer.MediaEnded
  fullName: System.Windows.Media.MediaPlayer.MediaEnded
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Occurs when the media has finished playback.
  remarks: To be added.
  syntax:
    content: public event EventHandler MediaEnded;
    return:
      type: System.EventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.MediaFailed
  id: MediaFailed
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaFailed
  nameWithType: MediaPlayer.MediaFailed
  fullName: System.Windows.Media.MediaPlayer.MediaFailed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Occurs when an error is encountered
  remarks: "<a name=\"xamlAttributeUsage_MediaFailed\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object MediaFailed=\"EventHandler\"/>  \n```"
  syntax:
    content: public event EventHandler<System.Windows.Media.ExceptionEventArgs> MediaFailed;
    return:
      type: System.EventHandler{System.Windows.Media.ExceptionEventArgs}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.MediaOpened
  id: MediaOpened
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: MediaOpened
  nameWithType: MediaPlayer.MediaOpened
  fullName: System.Windows.Media.MediaPlayer.MediaOpened
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Occurs when the media is opened.
  remarks: To be added.
  syntax:
    content: public event EventHandler MediaOpened;
    return:
      type: System.EventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.NaturalDuration
  id: NaturalDuration
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: NaturalDuration
  nameWithType: MediaPlayer.NaturalDuration
  fullName: System.Windows.Media.MediaPlayer.NaturalDuration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets the natural duration of the media.
  remarks: NaturalDuration cannot be determined until after <xref:System.Windows.Media.MediaPlayer.MediaOpened> has occurred.
  syntax:
    content: public System.Windows.Duration NaturalDuration { get; }
    return:
      type: System.Windows.Duration
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight
  id: NaturalVideoHeight
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: NaturalVideoHeight
  nameWithType: MediaPlayer.NaturalVideoHeight
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoHeight
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets the pixel height of the video.
  remarks: Null is returned if the media type is audio.
  syntax:
    content: public int NaturalVideoHeight { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth
  id: NaturalVideoWidth
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: NaturalVideoWidth
  nameWithType: MediaPlayer.NaturalVideoWidth
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoWidth
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets the pixel width of the video.
  remarks: Null is returned if the media type is audio.
  syntax:
    content: public int NaturalVideoWidth { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Open(System.Uri)
  id: Open(System.Uri)
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Open(Uri)
  nameWithType: MediaPlayer.Open(Uri)
  fullName: System.Windows.Media.MediaPlayer.Open(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Opens the given <xref:System.Uri> for media playback.
  remarks: To be added.
  syntax:
    content: public void Open (Uri source);
    parameters:
    - id: source
      type: System.Uri
      description: The media source <xref:System.Uri>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Pause
  id: Pause
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Pause()
  nameWithType: MediaPlayer.Pause()
  fullName: System.Windows.Media.MediaPlayer.Pause()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Pauses media playback.
  remarks: Calling Pause when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Pause cannot be called while the timing engine drives media playback.
  syntax:
    content: public void Pause ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Play
  id: Play
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Play()
  nameWithType: MediaPlayer.Play()
  fullName: System.Windows.Media.MediaPlayer.Play()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Plays media from the current <xref:System.Windows.Media.MediaPlayer.Position%2A>.
  remarks: Calling Play when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Play cannot be called while the timing engine drives media playback.
  syntax:
    content: public void Play ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Position
  id: Position
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Position
  nameWithType: MediaPlayer.Position
  fullName: System.Windows.Media.MediaPlayer.Position
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets or sets the current position of the media.
  remarks: "If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting Position will throw an <xref:System.InvalidOperationException>. Position cannot be set while the timing engine drives media playback.  \n  \n<a name=\"xamlTextUsage_Position\"></a>   \n## XAML Text Usage  \n Not typically used in [!INCLUDE[TLA2#tla_xaml](../../add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public TimeSpan Position { get; set; }
    return:
      type: System.TimeSpan
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.ReadPreamble
  id: ReadPreamble
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: ReadPreamble()
  nameWithType: MediaPlayer.ReadPreamble()
  fullName: System.Windows.Media.MediaPlayer.ReadPreamble()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Ensures that the MediaPlayer is being accessed from a valid thread.
  remarks: To be added.
  syntax:
    content: protected void ReadPreamble ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.ScriptCommand
  id: ScriptCommand
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: ScriptCommand
  nameWithType: MediaPlayer.ScriptCommand
  fullName: System.Windows.Media.MediaPlayer.ScriptCommand
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Occurs when a script command has been encountered within the media.
  remarks: "<a name=\"xamlAttributeUsage_ScriptCommand\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object ScriptCommand=\"EventHandler\"/>  \n```"
  syntax:
    content: public event EventHandler<System.Windows.Media.MediaScriptCommandEventArgs> ScriptCommand;
    return:
      type: System.EventHandler{System.Windows.Media.MediaScriptCommandEventArgs}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled
  id: ScrubbingEnabled
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: ScrubbingEnabled
  nameWithType: MediaPlayer.ScrubbingEnabled
  fullName: System.Windows.Media.MediaPlayer.ScrubbingEnabled
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets or sets a value that indicates whether scrubbing is enabled.
  remarks: To be added.
  syntax:
    content: public bool ScrubbingEnabled { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Source
  id: Source
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Source
  nameWithType: MediaPlayer.Source
  fullName: System.Windows.Media.MediaPlayer.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets the media <xref:System.Uri>.
  remarks: Source is read-only. This property gets the <xref:System.Uri> that is opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method or the <xref:System.Uri> associated with the <xref:System.Windows.Media.MediaPlayer.Clock%2A>.
  syntax:
    content: public Uri Source { get; }
    return:
      type: System.Uri
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.SpeedRatio
  id: SpeedRatio
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: SpeedRatio
  nameWithType: MediaPlayer.SpeedRatio
  fullName: System.Windows.Media.MediaPlayer.SpeedRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets or sets the ratio of speed that media is played at.
  remarks: "Values less than one yield slower than normal playback while values greater than one yields faster than normal playback.  \n  \n If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting SpeedRatio is not allowed. SpeedRatio cannot be set while the timing engine drives media playback.  \n  \n Audio playback is not guaranteed when <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> is not `1`.  \n  \n<a name=\"xamlTextUsage_SpeedRatio\"></a>   \n## XAML Text Usage  \n Not typically used in [!INCLUDE[TLA2#tla_xaml](../../add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public double SpeedRatio { get; set; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Stop
  id: Stop
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Stop()
  nameWithType: MediaPlayer.Stop()
  fullName: System.Windows.Media.MediaPlayer.Stop()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Stops media playback.
  remarks: Calling Stop when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>. Stop cannot be called while the timing engine drives media playback.
  syntax:
    content: public void Stop ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.Volume
  id: Volume
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: Volume
  nameWithType: MediaPlayer.Volume
  fullName: System.Windows.Media.MediaPlayer.Volume
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Gets or sets the media's volume.
  remarks: "<a name=\"xamlTextUsage_Volume\"></a>   \n## XAML Text Usage  \n Not typically used in [!INCLUDE[TLA2#tla_xaml](../../add/includes/tla2sharptla-xaml-md.md)]."
  syntax:
    content: public double Volume { get; set; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.MediaPlayer.WritePreamble
  id: WritePreamble
  parent: System.Windows.Media.MediaPlayer
  langs:
  - csharp
  name: WritePreamble()
  nameWithType: MediaPlayer.WritePreamble()
  fullName: System.Windows.Media.MediaPlayer.WritePreamble()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: Verifies that the MediaPlayer is not frozen and that it is being accessed from a valid threading context.
  remarks: To be added.
  syntax:
    content: protected void WritePreamble ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.MediaPlayer.#ctor
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaPlayer()
  nameWithType: MediaPlayer.MediaPlayer()
  fullName: System.Windows.Media.MediaPlayer.MediaPlayer()
- uid: System.Windows.Media.MediaPlayer.Balance
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Balance
  nameWithType: MediaPlayer.Balance
  fullName: System.Windows.Media.MediaPlayer.Balance
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.MediaPlayer.BufferingEnded
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingEnded
  nameWithType: MediaPlayer.BufferingEnded
  fullName: System.Windows.Media.MediaPlayer.BufferingEnded
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.MediaPlayer.BufferingProgress
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingProgress
  nameWithType: MediaPlayer.BufferingProgress
  fullName: System.Windows.Media.MediaPlayer.BufferingProgress
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.MediaPlayer.BufferingStarted
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: BufferingStarted
  nameWithType: MediaPlayer.BufferingStarted
  fullName: System.Windows.Media.MediaPlayer.BufferingStarted
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.MediaPlayer.CanPause
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CanPause
  nameWithType: MediaPlayer.CanPause
  fullName: System.Windows.Media.MediaPlayer.CanPause
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.MediaPlayer.Clock
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Clock
  nameWithType: MediaPlayer.Clock
  fullName: System.Windows.Media.MediaPlayer.Clock
- uid: System.Windows.Media.MediaClock
  parent: System.Windows.Media
  isExternal: false
  name: MediaClock
  nameWithType: MediaClock
  fullName: System.Windows.Media.MediaClock
- uid: System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: MediaPlayer.CloneCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: true
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: MediaPlayer.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: true
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.MediaPlayer.Close
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Close()
  nameWithType: MediaPlayer.Close()
  fullName: System.Windows.Media.MediaPlayer.Close()
- uid: System.Windows.Media.MediaPlayer.CreateInstanceCore
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: MediaPlayer.CreateInstanceCore()
  fullName: System.Windows.Media.MediaPlayer.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: true
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.MediaPlayer.DownloadProgress
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: DownloadProgress
  nameWithType: MediaPlayer.DownloadProgress
  fullName: System.Windows.Media.MediaPlayer.DownloadProgress
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: MediaPlayer.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.MediaPlayer.GetAsFrozenCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: true
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.MediaPlayer.HasAudio
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasAudio
  nameWithType: MediaPlayer.HasAudio
  fullName: System.Windows.Media.MediaPlayer.HasAudio
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.MediaPlayer.HasVideo
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: HasVideo
  nameWithType: MediaPlayer.HasVideo
  fullName: System.Windows.Media.MediaPlayer.HasVideo
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.MediaPlayer.IsBuffering
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsBuffering
  nameWithType: MediaPlayer.IsBuffering
  fullName: System.Windows.Media.MediaPlayer.IsBuffering
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.MediaPlayer.IsMuted
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: IsMuted
  nameWithType: MediaPlayer.IsMuted
  fullName: System.Windows.Media.MediaPlayer.IsMuted
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.MediaPlayer.MediaEnded
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaEnded
  nameWithType: MediaPlayer.MediaEnded
  fullName: System.Windows.Media.MediaPlayer.MediaEnded
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.MediaPlayer.MediaFailed
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaFailed
  nameWithType: MediaPlayer.MediaFailed
  fullName: System.Windows.Media.MediaPlayer.MediaFailed
- uid: System.EventHandler{System.Windows.Media.ExceptionEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<ExceptionEventArgs>
  nameWithType: EventHandler<ExceptionEventArgs>
  fullName: System.EventHandler<System.Windows.Media.ExceptionEventArgs>
- uid: System.Windows.Media.MediaPlayer.MediaOpened
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: MediaOpened
  nameWithType: MediaPlayer.MediaOpened
  fullName: System.Windows.Media.MediaPlayer.MediaOpened
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.MediaPlayer.NaturalDuration
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalDuration
  nameWithType: MediaPlayer.NaturalDuration
  fullName: System.Windows.Media.MediaPlayer.NaturalDuration
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.MediaPlayer.NaturalVideoHeight
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoHeight
  nameWithType: MediaPlayer.NaturalVideoHeight
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoHeight
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.MediaPlayer.NaturalVideoWidth
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: NaturalVideoWidth
  nameWithType: MediaPlayer.NaturalVideoWidth
  fullName: System.Windows.Media.MediaPlayer.NaturalVideoWidth
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.MediaPlayer.Open(System.Uri)
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Open(Uri)
  nameWithType: MediaPlayer.Open(Uri)
  fullName: System.Windows.Media.MediaPlayer.Open(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Media.MediaPlayer.Pause
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Pause()
  nameWithType: MediaPlayer.Pause()
  fullName: System.Windows.Media.MediaPlayer.Pause()
- uid: System.Windows.Media.MediaPlayer.Play
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Play()
  nameWithType: MediaPlayer.Play()
  fullName: System.Windows.Media.MediaPlayer.Play()
- uid: System.Windows.Media.MediaPlayer.Position
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Position
  nameWithType: MediaPlayer.Position
  fullName: System.Windows.Media.MediaPlayer.Position
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.MediaPlayer.ReadPreamble
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ReadPreamble()
  nameWithType: MediaPlayer.ReadPreamble()
  fullName: System.Windows.Media.MediaPlayer.ReadPreamble()
- uid: System.Windows.Media.MediaPlayer.ScriptCommand
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ScriptCommand
  nameWithType: MediaPlayer.ScriptCommand
  fullName: System.Windows.Media.MediaPlayer.ScriptCommand
- uid: System.EventHandler{System.Windows.Media.MediaScriptCommandEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<MediaScriptCommandEventArgs>
  nameWithType: EventHandler<MediaScriptCommandEventArgs>
  fullName: System.EventHandler<System.Windows.Media.MediaScriptCommandEventArgs>
- uid: System.Windows.Media.MediaPlayer.ScrubbingEnabled
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: ScrubbingEnabled
  nameWithType: MediaPlayer.ScrubbingEnabled
  fullName: System.Windows.Media.MediaPlayer.ScrubbingEnabled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.MediaPlayer.Source
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Source
  nameWithType: MediaPlayer.Source
  fullName: System.Windows.Media.MediaPlayer.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Media.MediaPlayer.SpeedRatio
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: SpeedRatio
  nameWithType: MediaPlayer.SpeedRatio
  fullName: System.Windows.Media.MediaPlayer.SpeedRatio
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.MediaPlayer.Stop
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Stop()
  nameWithType: MediaPlayer.Stop()
  fullName: System.Windows.Media.MediaPlayer.Stop()
- uid: System.Windows.Media.MediaPlayer.Volume
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: Volume
  nameWithType: MediaPlayer.Volume
  fullName: System.Windows.Media.MediaPlayer.Volume
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.MediaPlayer.WritePreamble
  parent: System.Windows.Media.MediaPlayer
  isExternal: false
  name: WritePreamble()
  nameWithType: MediaPlayer.WritePreamble()
  fullName: System.Windows.Media.MediaPlayer.WritePreamble()
