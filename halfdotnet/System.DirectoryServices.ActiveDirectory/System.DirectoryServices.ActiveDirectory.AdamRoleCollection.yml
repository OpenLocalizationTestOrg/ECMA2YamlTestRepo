### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  id: AdamRoleCollection
  children:
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  - System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  langs:
  - csharp
  name: AdamRoleCollection
  nameWithType: AdamRoleCollection
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  type: Class
  summary: The AdamRoleCollection class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> items.
  remarks: >-
    > [!NOTE]

    >  The AdamRoleCollection class refers to Active Directory Application Mode (ADAM) which has been renamed to Active Directory Lightweight Directory Services (AD LDS).
  syntax:
    content: 'public class AdamRoleCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  id: Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: Contains(AdamRole)
  nameWithType: AdamRoleCollection.Contains(AdamRole)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(AdamRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> item is in this collection.
  remarks: To be added.
  syntax:
    content: public bool Contains (System.DirectoryServices.ActiveDirectory.AdamRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.AdamRole
      description: The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> item to search for in this collection.
    return:
      type: System.Boolean
      description: '`true` if the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> item is in this collection; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  id: CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: CopyTo(AdamRole[],Int32)
  nameWithType: AdamRoleCollection.CopyTo(AdamRole[],Int32)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(AdamRole[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> items in this collection to the specified array, starting at the specified index of the target array.
  remarks: To be added.
  syntax:
    content: public void CopyTo (System.DirectoryServices.ActiveDirectory.AdamRole[] roles, int index);
    parameters:
    - id: roles
      type: System.DirectoryServices.ActiveDirectory.AdamRole[]
      description: The array of <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> items that receives the elements of this collection.
    - id: index
      type: System.Int32
      description: The zero-based index in  where this method starts copying this collection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  id: IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: IndexOf(AdamRole)
  nameWithType: AdamRoleCollection.IndexOf(AdamRole)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(AdamRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> item in this collection.
  remarks: To be added.
  syntax:
    content: public int IndexOf (System.DirectoryServices.ActiveDirectory.AdamRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.AdamRole
      description: The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> item to search for in this collection.
    return:
      type: System.Int32
      description: The zero-based index of the first matching item. -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> item.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: AdamRoleCollection.Item(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> item in this collection.
  remarks: To be added.
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.AdamRole this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"> object to get.
    return:
      type: System.DirectoryServices.ActiveDirectory.AdamRole
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Contains(AdamRole)
  nameWithType: AdamRoleCollection.Contains(AdamRole)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(AdamRole)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.AdamRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamRole
  nameWithType: AdamRole
  fullName: System.DirectoryServices.ActiveDirectory.AdamRole
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: CopyTo(AdamRole[],Int32)
  nameWithType: AdamRoleCollection.CopyTo(AdamRole[],Int32)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(AdamRole[],Int32)
- uid: System.DirectoryServices.ActiveDirectory.AdamRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamRole
  nameWithType: AdamRole
  fullName: System.DirectoryServices.ActiveDirectory.AdamRole[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: IndexOf(AdamRole)
  nameWithType: AdamRoleCollection.IndexOf(AdamRole)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(AdamRole)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.AdamRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamRole
  nameWithType: AdamRole
  fullName: System.DirectoryServices.ActiveDirectory.AdamRole
- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.AdamRoleCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: AdamRoleCollection.Item(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(Int32)
- uid: System.DirectoryServices.ActiveDirectory.AdamRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: AdamRole
  nameWithType: AdamRole
  fullName: System.DirectoryServices.ActiveDirectory.AdamRole
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
