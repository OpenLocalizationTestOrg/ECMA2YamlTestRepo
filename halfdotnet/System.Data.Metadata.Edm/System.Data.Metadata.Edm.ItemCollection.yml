### YamlMime:ManagedReference
items:
- uid: System.Data.Metadata.Edm.ItemCollection
  id: ItemCollection
  children:
  - System.Data.Metadata.Edm.ItemCollection.DataSpace
  - System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)
  - System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)
  - System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)
  - System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.GetItems``1
  - System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)
  - System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)
  - System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)
  - System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)
  langs:
  - csharp
  name: ItemCollection
  nameWithType: ItemCollection
  fullName: System.Data.Metadata.Edm.ItemCollection
  type: Class
  summary: A base class for <see cref="T:System.Data.Metadata.Edm.ObjectItemCollection">, <xref:System.Data.Metadata.Edm.EdmItemCollection>, and <xref:System.Data.Mapping.StorageMappingItemCollection> classes. An ItemCollection class is an abstract class and provides the core API for loading and holding the in-memory metadata. This class is derived from the <xref:System.Data.Metadata.Edm.ReadOnlyMetadataCollection%601> class.
  remarks: For more information, see [Item Collections (Metadata)](http://msdn.microsoft.com/en-us/3051a40a-ff45-42f8-8f93-7545e427a404).
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public abstract class ItemCollection : System.Data.Metadata.Edm.ReadOnlyMetadataCollection<System.Data.Metadata.Edm.GlobalItem>
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.ReadOnlyCollection`1
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  implements: []
  inheritedMembers:
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)
  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.DataSpace
  id: DataSpace
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: DataSpace
  nameWithType: ItemCollection.DataSpace
  fullName: System.Data.Metadata.Edm.ItemCollection.DataSpace
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Gets the data model associated with this item collection.
  remarks: This property returns <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Metadata.Edm.ObjectItemCollection>; <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Metadata.Edm.EdmItemCollection>; and <xref:System.Data.Metadata.Edm.DataSpace> for <xref:System.Data.Mapping.StorageMappingItemCollection>.
  syntax:
    content: public System.Data.Metadata.Edm.DataSpace DataSpace { get; }
    return:
      type: System.Data.Metadata.Edm.DataSpace
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)
  id: GetEntityContainer(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetEntityContainer(String)
  nameWithType: ItemCollection.GetEntityContainer(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer"> object by using the specified entity container name.
  remarks: To be added.
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the entity container.
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: If there is no entity container, this method returns null; otherwise, it returns the first one.
  overload: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)
  id: GetEntityContainer(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetEntityContainer(String,Boolean)
  nameWithType: ItemCollection.GetEntityContainer(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer"> object by using the specified entity container name.
  remarks: To be added.
  syntax:
    content: public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: The name of the entity container.
    - id: ignoreCase
      type: System.Boolean
      description: '`true` to perform the case-insensitive search; otherwise, `false`.'
    return:
      type: System.Data.Metadata.Edm.EntityContainer
      description: If there is no entity container, this method returns null; otherwise, it returns the first entity container.
  overload: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)
  id: GetFunctions(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetFunctions(String)
  nameWithType: ItemCollection.GetFunctions(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns all the overloads of the functions by using the specified name from this item collection.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string functionName);
    parameters:
    - id: functionName
      type: System.String
      description: The full name of the function.
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: A collection of type <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> that contains all the functions that have the specified name.
  overload: System.Data.Metadata.Edm.ItemCollection.GetFunctions*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)
  id: GetFunctions(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetFunctions(String,Boolean)
  nameWithType: ItemCollection.GetFunctions(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns all the overloads of the functions by using the specified name from this item collection.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (string functionName, bool ignoreCase);
    parameters:
    - id: functionName
      type: System.String
      description: The full name of the function.
    - id: ignoreCase
      type: System.Boolean
      description: '`true` to perform the case-insensitive search; otherwise, `false`.'
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: A collection of type <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> that contains all the functions that have the specified name.
  overload: System.Data.Metadata.Edm.ItemCollection.GetFunctions*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)
  id: GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  nameWithType: ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns all the overloads of the functions by using the specified name from this item collection.
  remarks: To be added.
  syntax:
    content: protected static System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction> GetFunctions (System.Collections.Generic.Dictionary<string,System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>> functionCollection, string functionName, bool ignoreCase);
    parameters:
    - id: functionCollection
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}}
      description: A dictionary of functions.
    - id: functionName
      type: System.String
      description: The full name of the function.
    - id: ignoreCase
      type: System.Boolean
      description: '`true` to perform the case-insensitive search; otherwise, `false`.'
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
      description: A collection of type ReadOnlyCollection that contains all the functions that have the specified name.
  overload: System.Data.Metadata.Edm.ItemCollection.GetFunctions*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)
  id: GetItem``1(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetItem(String)
  nameWithType: ItemCollection.GetItem(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public T GetItem<T> (string identity) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Data.Metadata.Edm.ItemCollection.GetItem<T>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)
  id: GetItem``1(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetItem(String,Boolean)
  nameWithType: ItemCollection.GetItem(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public T GetItem<T> (string identity, bool ignoreCase) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Data.Metadata.Edm.ItemCollection.GetItem<T>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetItems``1
  id: GetItems``1
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetItems()
  nameWithType: ItemCollection.GetItems()
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItems()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public virtual System.Collections.ObjectModel.ReadOnlyCollection<T> GetItems<T> () where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection`1
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)
  id: GetType(System.String,System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetType(String,String)
  nameWithType: ItemCollection.GetType(String,String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns an <see cref="T:System.Data.Metadata.Edm.EdmType"> object by using the specified type name and the namespace name in this item collection.
  remarks: To be added.
  syntax:
    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName);
    parameters:
    - id: name
      type: System.String
      description: The name of the type.
    - id: namespaceName
      type: System.String
      description: The namespace of the type.
    return:
      type: System.Data.Metadata.Edm.EdmType
      description: An <see cref="T:System.Data.Metadata.Edm.EdmType"> object that represents the type that matches the specified type name and the namespace name in this item collection. If there is no matched type, this method returns null.
  overload: System.Data.Metadata.Edm.ItemCollection.GetType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)
  id: GetType(System.String,System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: GetType(String,String,Boolean)
  nameWithType: ItemCollection.GetType(String,String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String,Boolean)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns an <see cref="T:System.Data.Metadata.Edm.EdmType"> object by using the specified type name and the namespace name from this item collection.
  remarks: To be added.
  syntax:
    content: public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: The name of the type.
    - id: namespaceName
      type: System.String
      description: The namespace of the type.
    - id: ignoreCase
      type: System.Boolean
      description: '`true` to perform the case-insensitive search; otherwise, `false`.'
    return:
      type: System.Data.Metadata.Edm.EdmType
      description: An <see cref="T:System.Data.Metadata.Edm.EdmType"> object that represents the type that matches the specified type name and the namespace name in this item collection. If there is no matched type, this method returns null.
  overload: System.Data.Metadata.Edm.ItemCollection.GetType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)
  id: TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetEntityContainer(String,EntityContainer)
  nameWithType: ItemCollection.TryGetEntityContainer(String,EntityContainer)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,EntityContainer)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer"> object by using the specified entity container name. If there is no entity container, the output parameter contains null; otherwise, it contains the first entity container.
  remarks: To be added.
  syntax:
    content: public bool TryGetEntityContainer (string name, out System.Data.Metadata.Edm.EntityContainer entityContainer);
    parameters:
    - id: name
      type: System.String
      description: The name of the entity container.
    - id: entityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: When this method returns, it contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer"> object. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.
    return:
      type: System.Boolean
      description: '`true` if there is an entity container that matches the search criteria; otherwise, `false`.'
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)
  id: TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetEntityContainer(String,Boolean,EntityContainer)
  nameWithType: ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer"> object by using the specified entity container name. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.
  remarks: To be added.
  syntax:
    content: public bool TryGetEntityContainer (string name, bool ignoreCase, out System.Data.Metadata.Edm.EntityContainer entityContainer);
    parameters:
    - id: name
      type: System.String
      description: The name of the entity container.
    - id: ignoreCase
      type: System.Boolean
      description: '`true` to perform the case-insensitive search; otherwise, `false`.'
    - id: entityContainer
      type: System.Data.Metadata.Edm.EntityContainer
      description: When this method returns, it contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer"> object. If there is no entity container, this output parameter contains null; otherwise, it contains the first entity container.
    return:
      type: System.Boolean
      description: '`true` if there is an entity container that matches the search criteria; otherwise, `false`.'
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)
  id: TryGetItem``1(System.String,``0@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetItem(String,T)
  nameWithType: ItemCollection.TryGetItem(String,T)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public bool TryGetItem<T> (string identity, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: To be added.
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetItem<T>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)
  id: TryGetItem``1(System.String,System.Boolean,``0@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetItem(String,Boolean,T)
  nameWithType: ItemCollection.TryGetItem(String,Boolean,T)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,Boolean,T)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public bool TryGetItem<T> (string identity, bool ignoreCase, out T item) where T : System.Data.Metadata.Edm.GlobalItem;'
    parameters:
    - id: identity
      type: System.String
      description: To be added.
    - id: ignoreCase
      type: System.Boolean
      description: To be added.
    - id: item
      type: T
      description: To be added.
    return:
      type: System.Boolean
      description: To be added.
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetItem<T>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)
  id: TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetType(String,String,EdmType)
  nameWithType: ItemCollection.TryGetType(String,String,EdmType)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns an <see cref="T:System.Data.Metadata.Edm.EdmType"> object by using the specified type name and the namespace name from this item collection.
  remarks: To be added.
  syntax:
    content: public bool TryGetType (string name, string namespaceName, out System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: name
      type: System.String
      description: The name of the type.
    - id: namespaceName
      type: System.String
      description: The namespace of the type.
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: When this method returns, this output parameter contains an <see cref="T:System.Data.Metadata.Edm.EdmType"> object. If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.
    return:
      type: System.Boolean
      description: '`true` if there is a type that matches the search criteria; otherwise, `false`.'
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetType*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)
  id: TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.ItemCollection
  langs:
  - csharp
  name: TryGetType(String,String,Boolean,EdmType)
  nameWithType: ItemCollection.TryGetType(String,String,Boolean,EdmType)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,Boolean,EdmType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Metadata.Edm
  summary: Returns an <see cref="T:System.Data.Metadata.Edm.EdmType"> object by using the specified type name and the namespace name from this item collection.
  remarks: To be added.
  syntax:
    content: public bool TryGetType (string name, string namespaceName, bool ignoreCase, out System.Data.Metadata.Edm.EdmType type);
    parameters:
    - id: name
      type: System.String
      description: The name of the type.
    - id: namespaceName
      type: System.String
      description: The namespace of the type.
    - id: ignoreCase
      type: System.Boolean
      description: '`true` to perform the case-insensitive search; otherwise, `false`.'
    - id: type
      type: System.Data.Metadata.Edm.EdmType
      description: When this method returns, this output parameter contains an <see cref="T:System.Data.Metadata.Edm.EdmType"> object. If there is no type with the specified name and namespace name in this item collection, this output parameter contains null.
    return:
      type: System.Boolean
      description: '`true` if there is a type that matches the search criteria; otherwise, `false`.'
  overload: System.Data.Metadata.Edm.ItemCollection.TryGetType*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1
  isExternal: false
  name: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<System.Data.Metadata.Edm.GlobalItem>
- uid: System.Data.Metadata.Edm.ItemCollection.DataSpace
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: DataSpace
  nameWithType: ItemCollection.DataSpace
  fullName: System.Data.Metadata.Edm.ItemCollection.DataSpace
- uid: System.Data.Metadata.Edm.DataSpace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: DataSpace
  nameWithType: DataSpace
  fullName: System.Data.Metadata.Edm.DataSpace
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetEntityContainer(String)
  nameWithType: ItemCollection.GetEntityContainer(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String)
- uid: System.Data.Metadata.Edm.EntityContainer
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityContainer
  nameWithType: EntityContainer
  fullName: System.Data.Metadata.Edm.EntityContainer
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetEntityContainer(String,Boolean)
  nameWithType: ItemCollection.GetEntityContainer(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(String,Boolean)
- uid: System.Data.Metadata.Edm.EntityContainer
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityContainer
  nameWithType: EntityContainer
  fullName: System.Data.Metadata.Edm.EntityContainer
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetFunctions(String)
  nameWithType: ItemCollection.GetFunctions(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetFunctions(String,Boolean)
  nameWithType: ItemCollection.GetFunctions(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(String,Boolean)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  nameWithType: ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetFunctions(Dictionary<String,ReadOnlyCollection<EdmFunction>>,String,Boolean)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<EdmFunction>
  nameWithType: ReadOnlyCollection<EdmFunction>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}}
  parent: System.Collections.Generic
  isExternal: false
  name: Dictionary<String,ReadOnlyCollection<EdmFunction>>
  nameWithType: Dictionary<String,ReadOnlyCollection<EdmFunction>>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Collections.ObjectModel.ReadOnlyCollection<System.Data.Metadata.Edm.EdmFunction>>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetItem(String)
  nameWithType: ItemCollection.GetItem(String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem``1(System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetItem(String,Boolean)
  nameWithType: ItemCollection.GetItem(String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItem(String,Boolean)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.ItemCollection.GetItems``1
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetItems()
  nameWithType: ItemCollection.GetItems()
  fullName: System.Data.Metadata.Edm.ItemCollection.GetItems()
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetType(String,String)
  nameWithType: ItemCollection.GetType(String,String)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String)
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.ItemCollection.GetType(System.String,System.String,System.Boolean)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: GetType(String,String,Boolean)
  nameWithType: ItemCollection.GetType(String,String,Boolean)
  fullName: System.Data.Metadata.Edm.ItemCollection.GetType(String,String,Boolean)
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetEntityContainer(String,EntityContainer)
  nameWithType: ItemCollection.TryGetEntityContainer(String,EntityContainer)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,EntityContainer)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.EntityContainer
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityContainer
  nameWithType: EntityContainer
  fullName: System.Data.Metadata.Edm.EntityContainer
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.EntityContainer@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetEntityContainer(String,Boolean,EntityContainer)
  nameWithType: ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer(String,Boolean,EntityContainer)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.EntityContainer
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityContainer
  nameWithType: EntityContainer
  fullName: System.Data.Metadata.Edm.EntityContainer
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,``0@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetItem(String,T)
  nameWithType: ItemCollection.TryGetItem(String,T)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem``1(System.String,System.Boolean,``0@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetItem(String,Boolean,T)
  nameWithType: ItemCollection.TryGetItem(String,Boolean,T)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetItem(String,Boolean,T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetType(String,String,EdmType)
  nameWithType: ItemCollection.TryGetType(String,String,EdmType)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,EdmType)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.EdmType@)
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  name: TryGetType(String,String,Boolean,EdmType)
  nameWithType: ItemCollection.TryGetType(String,String,Boolean,EdmType)
  fullName: System.Data.Metadata.Edm.ItemCollection.TryGetType(String,String,Boolean,EdmType)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Metadata.Edm.EdmType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmType
  nameWithType: EdmType
  fullName: System.Data.Metadata.Edm.EdmType
- uid: System.Data.Metadata.Edm.ItemCollection.GetEntityContainer*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  nameWithType: ItemCollection.
- uid: System.Data.Metadata.Edm.ItemCollection.GetFunctions*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  nameWithType: ItemCollection.
- uid: System.Data.Metadata.Edm.ItemCollection.GetItem<T>*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  nameWithType: ItemCollection.
- uid: System.Data.Metadata.Edm.ItemCollection.GetType*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  nameWithType: ItemCollection.
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetEntityContainer*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  nameWithType: ItemCollection.
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetItem<T>*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  nameWithType: ItemCollection.
- uid: System.Data.Metadata.Edm.ItemCollection.TryGetType*
  parent: System.Data.Metadata.Edm.ItemCollection
  isExternal: false
  nameWithType: ItemCollection.
