### YamlMime:ManagedReference
items:
- uid: System.Windows.Thickness
  id: Thickness
  children:
  - System.Windows.Thickness.#ctor(System.Double)
  - System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.Thickness.Bottom
  - System.Windows.Thickness.Equals(System.Object)
  - System.Windows.Thickness.Equals(System.Windows.Thickness)
  - System.Windows.Thickness.GetHashCode
  - System.Windows.Thickness.Left
  - System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  - System.Windows.Thickness.Right
  - System.Windows.Thickness.Top
  - System.Windows.Thickness.ToString
  langs:
  - csharp
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
  type: Struct
  summary: Describes the thickness of a frame around a rectangle. Four <see cref="T:System.Double"> values describe the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A>, and <xref:System.Windows.Thickness.Bottom%2A> sides of the rectangle, respectively.
  remarks: "You can specify Thickness values in two ways. If you pass four <xref:System.Double> values to the structure, they represent the <xref:System.Windows.Thickness.Left%2A>, <xref:System.Windows.Thickness.Top%2A>, <xref:System.Windows.Thickness.Right%2A> and <xref:System.Windows.Thickness.Bottom%2A> sides, respectively, of the bounding rectangle. You can also supply a single value, which applies a uniform value to all four sides of the bounding rectangle.  \n  \n<a name=\"xamlAttributeUsage_Thickness\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"left\"/>  \n- or -  \n<object property=\"left,top\"/>  \n- or -  \n<object property=\" left,top,right,bottom\" ... />  \n```  \n  \n<a name=\"xamlValues_Thickness\"></a>   \n## XAML Values  \n *left*  \n The left edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](../../add/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a single measure is specified, that measure is applied to ALL of the left,top,right,bottom values of a Thickness. If only a pair of left,top measures are specified, these measures are applied symmetrically to a Thickness: the left value is used for right; the top value is used for bottom.  \n  \n *top*  \n The top edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](../../add/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If only a pair of left,top measures are specified, these measures are applied symmetrically to a Thickness: the left value is used for right; the top value is used for bottom.  \n  \n *right*  \n The right edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](../../add/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.  \n  \n *bottom*  \n The bottom edge of the frame, described as either a <xref:System.Double> value that specifies a [!INCLUDE[TLA#tla_dipixel#plural](../../add/includes/tlasharptla-dipixelsharpplural-md.md)] measure, or as a *qualifiedDouble* (see below). If left unspecified, will use the left value.  \n  \n *qualifiedDouble*  \n A *double* value as described above for any of the measures, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.  \n  \n `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](../../add/includes/tlasharptla-dipixelsharpplural-md.md)]  \n  \n `in` is inches; 1in==96px  \n  \n `cm` is centimeters; 1cm==(96/2.54) px  \n  \n `pt` is points; 1pt==(96/72) px  \n  \n> [!NOTE]\n>  Values need not include the decimal point explicitly when specified as a string. The string \"1\" provided in [!INCLUDE[TLA2#tla_xaml](../../add/includes/tla2sharptla-xaml-md.md)] evaluates to a value of 1.0 when referenced in code."
  example:
  - "The following example shows how to create an instance of a Thickness structure and set its properties by using [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](../../add/codesnippet/CSharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](../../add/codesnippet/Xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](../../add/codesnippet/VisualBasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.ThicknessConverter))]

      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public struct Thickness : IEquatable<System.Windows.Thickness>
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.Thickness>
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Initializes a new instance of the <see cref="T:System.Windows.Thickness"> structure that has the specified uniform length on each side.
  remarks: To be added.
  syntax:
    content: public Thickness (double uniformLength);
    parameters:
    - id: uniformLength
      type: System.Double
      description: The uniform length applied to all four sides of the bounding rectangle.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Initializes a new instance of the <see cref="T:System.Windows.Thickness"> structure that has specific lengths (supplied as a <xref:System.Double>) applied to each side of the rectangle.
  remarks: ''
  example:
  - "The following example shows how to create an instance of a <xref:System.Windows.Thickness> structure by using code.  \n  \n [!code-cs[ThicknessStruct#1](../../add/codesnippet/CSharp/ThicknessSamp/ThicknessSamp.cs#1)]\n [!code-xml[ThicknessStruct#1](../../add/codesnippet/Xaml/ThicknessXAML/default.xaml#1)]\n [!code-vb[ThicknessStruct#1](../../add/codesnippet/VisualBasic/ThicknessSampVB/ThicknessSampVB.vb#1)]"
  syntax:
    content: public Thickness (double left, double top, double right, double bottom);
    parameters:
    - id: left
      type: System.Double
      description: The thickness for the left side of the rectangle.
    - id: top
      type: System.Double
      description: The thickness for the upper side of the rectangle.
    - id: right
      type: System.Double
      description: The thickness for the right side of the rectangle
    - id: bottom
      type: System.Double
      description: The thickness for the lower side of the rectangle.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.Bottom
  id: Bottom
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the width, in pixels, of the lower side of the bounding rectangle.
  remarks: ''
  example:
  - "The following example shows how to set the value of the Bottom property by using [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](../../add/codesnippet/CSharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](../../add/codesnippet/Xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](../../add/codesnippet/VisualBasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Bottom { get; set; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Compares this <see cref="T:System.Windows.Thickness"> structure to another <xref:System.Object> for equality.
  remarks: Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare.
    return:
      type: System.Boolean
      description: '`true` if the two objects are equal; otherwise, `false`.'
  overload: System.Windows.Thickness.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  id: Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Compares this <see cref="T:System.Windows.Thickness"> structure to another <see cref="T:System.Windows.Thickness"> structure for equality.
  remarks: Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.
  syntax:
    content: public bool Equals (System.Windows.Thickness thickness);
    parameters:
    - id: thickness
      type: System.Windows.Thickness
      description: An instance of <see cref="T:System.Windows.Thickness"> to compare for equality.
    return:
      type: System.Boolean
      description: '`true` if the two instances of <see cref="T:System.Windows.Thickness"> are equal; otherwise, `false`.'
  overload: System.Windows.Thickness.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.GetHashCode
  id: GetHashCode
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Returns the hash code of the structure.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for this instance of <see cref="T:System.Windows.Thickness">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.Left
  id: Left
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the width, in pixels, of the left side of the bounding rectangle.
  remarks: ''
  example:
  - "The following example shows how to set the value of the Left property by using [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](../../add/codesnippet/CSharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](../../add/codesnippet/Xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](../../add/codesnippet/VisualBasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Left { get; set; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Compares the value of two <see cref="T:System.Windows.Thickness"> structures for equality.
  remarks: Testing for equality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.
  syntax:
    content: public static bool op_Equality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: The first structure to compare.
    - id: t2
      type: System.Windows.Thickness
      description: The other structure to compare.
    return:
      type: System.Boolean
      description: '`true` if the two instances of <see cref="T:System.Windows.Thickness"> are equal; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  id: op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Compares two <see cref="T:System.Windows.Thickness"> structures for inequality.
  remarks: Testing for equality or inequality on two floating-point values that are logically equivalent might fail because of precision errors that can accumulate as the values are operated on.
  syntax:
    content: public static bool op_Inequality (System.Windows.Thickness t1, System.Windows.Thickness t2);
    parameters:
    - id: t1
      type: System.Windows.Thickness
      description: The first structure to compare.
    - id: t2
      type: System.Windows.Thickness
      description: The other structure to compare.
    return:
      type: System.Boolean
      description: '`true` if the two instances of <see cref="T:System.Windows.Thickness"> are not equal; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.Right
  id: Right
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the width, in pixels, of the right side of the bounding rectangle.
  remarks: ''
  example:
  - "The following example shows how to set the value of the Right property by using [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](../../add/codesnippet/CSharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](../../add/codesnippet/Xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](../../add/codesnippet/VisualBasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Right { get; set; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.Top
  id: Top
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the width, in pixels, of the upper side of the bounding rectangle.
  remarks: ''
  example:
  - "The following example shows how to set the value of the Top property by using [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#2](../../add/codesnippet/CSharp/ThicknessSamp/ThicknessSamp.cs#2)]\n [!code-xml[ThicknessStruct#2](../../add/codesnippet/Xaml/ThicknessXAML/default.xaml#2)]\n [!code-vb[ThicknessStruct#2](../../add/codesnippet/VisualBasic/ThicknessSampVB/ThicknessSampVB.vb#2)]"
  syntax:
    content: public double Top { get; set; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Thickness.ToString
  id: ToString
  parent: System.Windows.Thickness
  langs:
  - csharp
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Returns the string representation of the <see cref="T:System.Windows.Thickness"> structure.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A <see cref="T:System.String"> that represents the <xref:System.Windows.Thickness> value.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Thickness.#ctor(System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double)
  nameWithType: Thickness.Thickness(Double)
  fullName: System.Windows.Thickness.Thickness(Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.Thickness
  isExternal: false
  name: Thickness(Double,Double,Double,Double)
  nameWithType: Thickness.Thickness(Double,Double,Double,Double)
  fullName: System.Windows.Thickness.Thickness(Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.Bottom
  parent: System.Windows.Thickness
  isExternal: false
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: System.Windows.Thickness.Bottom
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.Equals(System.Object)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Object)
  nameWithType: Thickness.Equals(Object)
  fullName: System.Windows.Thickness.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Thickness.Equals(System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: System.Windows.Thickness.Equals(Thickness)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Thickness.GetHashCode
  parent: System.Windows.Thickness
  isExternal: false
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: System.Windows.Thickness.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Thickness.Left
  parent: System.Windows.Thickness
  isExternal: false
  name: Left
  nameWithType: Thickness.Left
  fullName: System.Windows.Thickness.Left
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Equality(Thickness,Thickness)
  nameWithType: Thickness.op_Equality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Equality(Thickness,Thickness)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)
  parent: System.Windows.Thickness
  isExternal: false
  name: op_Inequality(Thickness,Thickness)
  nameWithType: Thickness.op_Inequality(Thickness,Thickness)
  fullName: System.Windows.Thickness.op_Inequality(Thickness,Thickness)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Thickness.Right
  parent: System.Windows.Thickness
  isExternal: false
  name: Right
  nameWithType: Thickness.Right
  fullName: System.Windows.Thickness.Right
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.Top
  parent: System.Windows.Thickness
  isExternal: false
  name: Top
  nameWithType: Thickness.Top
  fullName: System.Windows.Thickness.Top
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Thickness.ToString
  parent: System.Windows.Thickness
  isExternal: false
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: System.Windows.Thickness.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Thickness.Equals*
  parent: System.Windows.Thickness
  isExternal: false
  nameWithType: Thickness.
