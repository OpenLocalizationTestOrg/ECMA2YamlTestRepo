### YamlMime:ManagedReference
items:
- uid: System.Windows.FrameworkTemplate
  id: FrameworkTemplate
  children:
  - System.Windows.FrameworkTemplate.#ctor
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.VisualTree
  langs:
  - csharp
  name: FrameworkTemplate
  nameWithType: FrameworkTemplate
  fullName: System.Windows.FrameworkTemplate
  type: Class
  summary: Enables the instantiation of a tree of <see cref="T:System.Windows.FrameworkElement"> and/or <xref:System.Windows.FrameworkContentElement> objects.
  remarks: To be added.
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]

      [System.Windows.Markup.ContentProperty("VisualTree")]

      public abstract class FrameworkTemplate : System.Windows.Threading.DispatcherObject, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient
  inheritance:
  - System.Windows.Threading.DispatcherObject
  implements:
  - System.Windows.Markup.INameScope
  - System.Windows.Markup.IQueryAmbient
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: FrameworkTemplate()
  nameWithType: FrameworkTemplate.FrameworkTemplate()
  fullName: System.Windows.FrameworkTemplate.FrameworkTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Initializes a new instance of the <see cref="T:System.Windows.FrameworkTemplate"> class.
  remarks: To be added.
  syntax:
    content: protected FrameworkTemplate ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  id: FindName(System.String,System.Windows.FrameworkElement)
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: FindName(String,FrameworkElement)
  nameWithType: FrameworkTemplate.FindName(String,FrameworkElement)
  fullName: System.Windows.FrameworkTemplate.FindName(String,FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Finds the element associated with the specified name defined within this template.
  remarks: For more information, see "XAML Namescopes in Styles and Templates" in [WPF XAML Namescopes](../Topic/WPF%20XAML%20Namescopes.md).
  syntax:
    content: public object FindName (string name, System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: name
      type: System.String
      description: The string name.
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: The context of the <see cref="T:System.Windows.FrameworkElement"> where this template is applied.
    return:
      type: System.Object
      description: The element associated with the specified name.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.HasContent
  id: HasContent
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: HasContent
  nameWithType: FrameworkTemplate.HasContent
  fullName: System.Windows.FrameworkTemplate.HasContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets a value that indicates whether this template has optimized content.
  remarks: To be added.
  syntax:
    content: public bool HasContent { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.IsSealed
  id: IsSealed
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: IsSealed
  nameWithType: FrameworkTemplate.IsSealed
  fullName: System.Windows.FrameworkTemplate.IsSealed
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets a value that indicates whether this object is in an immutable state so it cannot be changed.
  remarks: To be added.
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.LoadContent
  id: LoadContent
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: LoadContent()
  nameWithType: FrameworkTemplate.LoadContent()
  fullName: System.Windows.FrameworkTemplate.LoadContent()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Loads the content of the template as an instance of an object and returns the root element of the content.
  remarks: To be added.
  syntax:
    content: public System.Windows.DependencyObject LoadContent ();
    parameters: []
    return:
      type: System.Windows.DependencyObject
      description: The root element of the content. Calling this multiple times returns separate instances.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  id: RegisterName(System.String,System.Object)
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: RegisterName(String,Object)
  nameWithType: FrameworkTemplate.RegisterName(String,Object)
  fullName: System.Windows.FrameworkTemplate.RegisterName(String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Registers a new name/object pair into the current name scope.
  remarks: For more information, see "XAML Namescopes in Styles and Templates" in [WPF XAML Namescopes](../Topic/WPF%20XAML%20Namescopes.md).
  syntax:
    content: public void RegisterName (string name, object scopedElement);
    parameters:
    - id: name
      type: System.String
      description: The name to register.
    - id: scopedElement
      type: System.Object
      description: The object to be mapped to the provided name.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.Resources
  id: Resources
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: Resources
  nameWithType: FrameworkTemplate.Resources
  fullName: System.Windows.FrameworkTemplate.Resources
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the collection of resources that can be used within the scope of this template.
  remarks: "<a name=\"xamlPropertyElementUsage_Resources\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <object.Resources>  \n    oneOrMoreResourceElements  \n  </object.Resources>  \n</object>  \n- or -   \n<object>  \n  <object.Resources>  \n    <ResourceDictionary Source=\"externalDictionarySource\"/>  \n  </object.Resources>  \n</object>  \n```  \n  \n<a name=\"xamlValues_Resources\"></a>   \n## XAML Values  \n *oneOrMoreResourceElements*  \n One or more resource elements. To be referenced later in either [StaticResource Markup Extension](../Topic/StaticResource%20Markup%20Extension.md) or [DynamicResource Markup Extension](../Topic/DynamicResource%20Markup%20Extension.md) syntax in XAML, a resource element MUST have an `x:Key` attribute.  \n  \n \\<ResourceDictionary Source=\"*externalDictionarySource*\"/>  \n An external file that defines a <xref:System.Windows.ResourceDictionary>."
  syntax:
    content: public System.Windows.ResourceDictionary Resources { get; set; }
    return:
      type: System.Windows.ResourceDictionary
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.Seal
  id: Seal
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: Seal()
  nameWithType: FrameworkTemplate.Seal()
  fullName: System.Windows.FrameworkTemplate.Seal()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Locks the template so it cannot be changed.
  remarks: To be added.
  syntax:
    content: public void Seal ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  id: ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: ShouldSerializeResources(XamlDesignerSerializationManager)
  nameWithType: FrameworkTemplate.ShouldSerializeResources(XamlDesignerSerializationManager)
  fullName: System.Windows.FrameworkTemplate.ShouldSerializeResources(XamlDesignerSerializationManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Returns a value that indicates whether serialization processes should serialize the value of the <xref:System.Windows.FrameworkTemplate.Resources%2A> property on instances of this class.
  remarks: To be added.
  syntax:
    content: public bool ShouldSerializeResources (System.Windows.Markup.XamlDesignerSerializationManager manager);
    parameters:
    - id: manager
      type: System.Windows.Markup.XamlDesignerSerializationManager
      description: The <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager">.
    return:
      type: System.Boolean
      description: '`true` if the <xref:System.Windows.FrameworkTemplate.Resources%2A> property value should be serialized; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  id: ShouldSerializeVisualTree
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: ShouldSerializeVisualTree()
  nameWithType: FrameworkTemplate.ShouldSerializeVisualTree()
  fullName: System.Windows.FrameworkTemplate.ShouldSerializeVisualTree()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Returns a value that indicates whether serialization processes should serialize the value of the <xref:System.Windows.FrameworkTemplate.VisualTree%2A> property on instances of this class.
  remarks: To be added.
  syntax:
    content: public bool ShouldSerializeVisualTree ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref:System.Windows.FrameworkTemplate.VisualTree%2A> property value should be serialized; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  id: System#Windows#Markup#INameScope#FindName(System.String)
  isEii: true
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: System.Windows.Markup.INameScope.FindName(String)
  nameWithType: FrameworkTemplate.System.Windows.Markup.INameScope.FindName(String)
  fullName: System.Windows.FrameworkTemplate.System.Windows.Markup.INameScope.FindName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Returns an object that has the provided identifying name.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FrameworkTemplate> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.
  syntax:
    content: object INameScope.FindName (string name);
    parameters:
    - id: name
      type: System.String
      description: The name identifier for the object being requested.
    return:
      type: System.Object
      description: The object, if found. Returns `null` if no object of that name was found.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  id: System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  isEii: true
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  nameWithType: FrameworkTemplate.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.FrameworkTemplate.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Queries whether a specified ambient property is available in the current scope.
  remarks: To be added.
  syntax:
    content: bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: The name of the requested ambient property.
    return:
      type: System.Boolean
      description: '`true` if the requested ambient property is available; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.Template
  id: Template
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: Template
  nameWithType: FrameworkTemplate.Template
  fullName: System.Windows.FrameworkTemplate.Template
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets a reference to the object that records or plays the XAML nodes for the template when the template is defined or applied by a writer.
  remarks: To be added.
  syntax:
    content: public System.Windows.TemplateContent Template { get; set; }
    return:
      type: System.Windows.TemplateContent
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.UnregisterName(System.String)
  id: UnregisterName(System.String)
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: UnregisterName(String)
  nameWithType: FrameworkTemplate.UnregisterName(String)
  fullName: System.Windows.FrameworkTemplate.UnregisterName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Removes a name/object mapping from the XAML namescope.
  remarks: For more information, see "XAML Namescopes in Styles and Templates" in [WPF XAML Namescopes](../Topic/WPF%20XAML%20Namescopes.md).
  syntax:
    content: public void UnregisterName (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the mapping to remove.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: FrameworkTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.FrameworkTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: When overridden in a derived class, supplies rules for the element this template is applied to.
  remarks: The base implementation specifies that the templated parent must be a non-null <xref:System.Windows.FrameworkElement>.
  syntax:
    content: protected virtual void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: The element this template is applied to.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.FrameworkTemplate.VisualTree
  id: VisualTree
  parent: System.Windows.FrameworkTemplate
  langs:
  - csharp
  name: VisualTree
  nameWithType: FrameworkTemplate.VisualTree
  fullName: System.Windows.FrameworkTemplate.VisualTree
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the root node of the template.
  remarks: "<a name=\"xamlPropertyElementUsage_VisualTree\"></a>   \n## XAML Property Element Usage  \n  \n```  \n<object>  \n  <VisualTreeRootNode > VisualTreeNodeContents  \n  </VisualTreeRootNode >  \n</object>  \n```  \n  \n<a name=\"xamlValues_VisualTree\"></a>   \n## XAML Values  \n *VisualTreeRootNode*  \n A single XAML element as the immediate child of the <xref:System.Windows.FrameworkTemplate> subclass. Templates must have a single root node. In order to generate a useful template, the element chosen as *VisualTreeRootNode* is expected to support a content model of its own, often a model that supports multiple child elements.  \n  \n *VisualTreeNodeContents*  \n One or more elements that complete the intended template. If the element chosen as *VisualTreeRootNode* only supports a single child, then there can only be one element declared as *VisualTreeNodeContents*. It is also possible (though uncommon) to provide text content if the chosen *VisualTreeRootNode* supports a text content property."
  syntax:
    content: public System.Windows.FrameworkElementFactory VisualTree { get; set; }
    return:
      type: System.Windows.FrameworkElementFactory
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.FrameworkTemplate.#ctor
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: FrameworkTemplate()
  nameWithType: FrameworkTemplate.FrameworkTemplate()
  fullName: System.Windows.FrameworkTemplate.FrameworkTemplate()
- uid: System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: FindName(String,FrameworkElement)
  nameWithType: FrameworkTemplate.FindName(String,FrameworkElement)
  fullName: System.Windows.FrameworkTemplate.FindName(String,FrameworkElement)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.FrameworkTemplate.HasContent
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: HasContent
  nameWithType: FrameworkTemplate.HasContent
  fullName: System.Windows.FrameworkTemplate.HasContent
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkTemplate.IsSealed
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: IsSealed
  nameWithType: FrameworkTemplate.IsSealed
  fullName: System.Windows.FrameworkTemplate.IsSealed
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkTemplate.LoadContent
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: LoadContent()
  nameWithType: FrameworkTemplate.LoadContent()
  fullName: System.Windows.FrameworkTemplate.LoadContent()
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: RegisterName(String,Object)
  nameWithType: FrameworkTemplate.RegisterName(String,Object)
  fullName: System.Windows.FrameworkTemplate.RegisterName(String,Object)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.FrameworkTemplate.Resources
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: Resources
  nameWithType: FrameworkTemplate.Resources
  fullName: System.Windows.FrameworkTemplate.Resources
- uid: System.Windows.ResourceDictionary
  parent: System.Windows
  isExternal: false
  name: ResourceDictionary
  nameWithType: ResourceDictionary
  fullName: System.Windows.ResourceDictionary
- uid: System.Windows.FrameworkTemplate.Seal
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: Seal()
  nameWithType: FrameworkTemplate.Seal()
  fullName: System.Windows.FrameworkTemplate.Seal()
- uid: System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: ShouldSerializeResources(XamlDesignerSerializationManager)
  nameWithType: FrameworkTemplate.ShouldSerializeResources(XamlDesignerSerializationManager)
  fullName: System.Windows.FrameworkTemplate.ShouldSerializeResources(XamlDesignerSerializationManager)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Markup.XamlDesignerSerializationManager
  parent: System.Windows.Markup
  isExternal: false
  name: XamlDesignerSerializationManager
  nameWithType: XamlDesignerSerializationManager
  fullName: System.Windows.Markup.XamlDesignerSerializationManager
- uid: System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: ShouldSerializeVisualTree()
  nameWithType: FrameworkTemplate.ShouldSerializeVisualTree()
  fullName: System.Windows.FrameworkTemplate.ShouldSerializeVisualTree()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.Markup.INameScope.FindName(String)
  nameWithType: FrameworkTemplate.System.Windows.Markup.INameScope.FindName(String)
  fullName: System.Windows.FrameworkTemplate.System.Windows.Markup.INameScope.FindName(String)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  nameWithType: FrameworkTemplate.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.FrameworkTemplate.System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.FrameworkTemplate.Template
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: Template
  nameWithType: FrameworkTemplate.Template
  fullName: System.Windows.FrameworkTemplate.Template
- uid: System.Windows.TemplateContent
  parent: System.Windows
  isExternal: false
  name: TemplateContent
  nameWithType: TemplateContent
  fullName: System.Windows.TemplateContent
- uid: System.Windows.FrameworkTemplate.UnregisterName(System.String)
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: UnregisterName(String)
  nameWithType: FrameworkTemplate.UnregisterName(String)
  fullName: System.Windows.FrameworkTemplate.UnregisterName(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: FrameworkTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.FrameworkTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.FrameworkTemplate.VisualTree
  parent: System.Windows.FrameworkTemplate
  isExternal: false
  name: VisualTree
  nameWithType: FrameworkTemplate.VisualTree
  fullName: System.Windows.FrameworkTemplate.VisualTree
- uid: System.Windows.FrameworkElementFactory
  parent: System.Windows
  isExternal: false
  name: FrameworkElementFactory
  nameWithType: FrameworkElementFactory
  fullName: System.Windows.FrameworkElementFactory
