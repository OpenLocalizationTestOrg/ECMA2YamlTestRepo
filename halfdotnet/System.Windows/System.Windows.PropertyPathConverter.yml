### YamlMime:ManagedReference
items:
- uid: System.Windows.PropertyPathConverter
  id: PropertyPathConverter
  children:
  - System.Windows.PropertyPathConverter.#ctor
  - System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: PropertyPathConverter
  nameWithType: PropertyPathConverter
  fullName: System.Windows.PropertyPathConverter
  type: Class
  summary: Provides a type converter for <see cref="T:System.Windows.PropertyPath"> objects.
  remarks: "A <xref:System.Windows.PropertyPath> is used to specify type and property paths to objects involved in a binding, or for storyboard target property paths.  \n  \n<a name=\"XAMLTextUsage_PropertyPathConverter\"></a>   \n## XAML Text Usage"
  syntax:
    content: 'public sealed class PropertyPathConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PropertyPathConverter.#ctor
  id: '#ctor'
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: PropertyPathConverter()
  nameWithType: PropertyPathConverter.PropertyPathConverter()
  fullName: System.Windows.PropertyPathConverter.PropertyPathConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Initializes a new instance of the <see cref="T:System.Windows.PropertyPathConverter"> class.
  remarks: To be added.
  syntax:
    content: public PropertyPathConverter ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Returns whether this converter can convert an object of one type to the <see cref="T:System.Windows.PropertyPath"> type.
  remarks: To be added.
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> that provides a format context.
    - id: sourceType
      type: System.Type
      description: A <see cref="T:System.Type"> that represents the type you want to convert from.
    return:
      type: System.Boolean
      description: '`true` if  is type <see cref="T:System.String">; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PropertyPathConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.PropertyPathConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Returns whether this converter can convert the object to the <see cref="T:System.Windows.PropertyPath"> type.
  remarks: To be added.
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> that provides a format context.
    - id: destinationType
      type: System.Type
      description: A <see cref="T:System.Type"> that represents the type you want to convert to.
    return:
      type: System.Boolean
      description: '`true` if  is type <see cref="T:System.String">; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PropertyPathConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.PropertyPathConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Converts the specified value to the <see cref="T:System.Windows.PropertyPath"> type.
  remarks: To be added.
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> that provides a format context.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The <see cref="T:System.Globalization.CultureInfo"> to use as the current culture.
    - id: source
      type: System.Object
      description: The object to convert to a <see cref="T:System.Windows.PropertyPath">. This is expected to be a string.
    return:
      type: System.Object
      description: The converted <see cref="T:System.Windows.PropertyPath">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.PropertyPathConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PropertyPathConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.PropertyPathConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Converts the specified value object to the <see cref="T:System.Windows.PropertyPath"> type.
  remarks: To be added.
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);
    parameters:
    - id: typeDescriptorContext
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> that provides a format context.
    - id: cultureInfo
      type: System.Globalization.CultureInfo
      description: The <see cref="T:System.Globalization.CultureInfo"> to use as the current culture.
    - id: value
      type: System.Object
      description: The <see cref="T:System.Windows.PropertyPath"> to convert.
    - id: destinationType
      type: System.Type
      description: The destination type. This is expected to be the <see cref="T:System.String"> type.
    return:
      type: System.Object
      description: The converted destination <see cref="T:System.String">.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Windows.PropertyPathConverter.#ctor
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: PropertyPathConverter()
  nameWithType: PropertyPathConverter.PropertyPathConverter()
  fullName: System.Windows.PropertyPathConverter.PropertyPathConverter()
- uid: System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.PropertyPathConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PropertyPathConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.PropertyPathConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PropertyPathConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.PropertyPathConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.PropertyPathConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PropertyPathConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.PropertyPathConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
