### YamlMime:ManagedReference
items:
- uid: System.Windows.LostFocusEventManager
  id: LostFocusEventManager
  children:
  - System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  - System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  - System.Windows.LostFocusEventManager.NewListenerList
  - System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  - System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  - System.Windows.LostFocusEventManager.StartListening(System.Object)
  - System.Windows.LostFocusEventManager.StopListening(System.Object)
  langs:
  - csharp
  name: LostFocusEventManager
  nameWithType: LostFocusEventManager
  fullName: System.Windows.LostFocusEventManager
  type: Class
  summary: Provides a <xref:System.Windows.WeakEventManager> implementation so that you can use the "weak event listener" pattern to attach listeners for the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> events.
  remarks: "In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.  \n  \n [!INCLUDE[TLA2#tla_winclient](../../add/includes/tla2sharptla-winclient-md.md)] data binding uses this <xref:System.Windows.WeakEventManager> so that internal classes that update bindings can attach listeners for a <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event on an object that is the target of a binding. This supports notification for the <xref:System.Windows.Data.UpdateSourceTrigger> mode of data binding, without creating strong references to data binding targets."
  syntax:
    content: 'public class LostFocusEventManager : System.Windows.WeakEventManager'
  inheritance:
  - System.Windows.WeakEventManager
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  id: AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  nameWithType: LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  fullName: System.Windows.LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Adds the specified event handler, which is called when specified source raises the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event.
  remarks: Use this method to specify the event handler you want to use to subscribe to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event..  When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.
  syntax:
    content: public static void AddHandler (System.Windows.DependencyObject source, EventHandler<System.Windows.RoutedEventArgs> handler);
    parameters:
    - id: source
      type: System.Windows.DependencyObject
      description: The source object that the raises the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event.
    - id: handler
      type: System.EventHandler{System.Windows.RoutedEventArgs}
      description: The delegate that handles the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  id: AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: AddListener(DependencyObject,IWeakEventListener)
  nameWithType: LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)
  fullName: System.Windows.LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Adds the provided listener to the list of listeners on the provided source.
  remarks: To be added.
  syntax:
    content: public static void AddListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);
    parameters:
    - id: source
      type: System.Windows.DependencyObject
      description: The object with the event.
    - id: listener
      type: System.Windows.IWeakEventListener
      description: The object to add as a listener.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.LostFocusEventManager.NewListenerList
  id: NewListenerList
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: NewListenerList()
  nameWithType: LostFocusEventManager.NewListenerList()
  fullName: System.Windows.LostFocusEventManager.NewListenerList()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Returns a new object to contain listeners to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event.
  remarks: To be added.
  syntax:
    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager+ListenerList
      description: A new object to contain listeners to the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  id: RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  nameWithType: LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  fullName: System.Windows.LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Removes the specified event handler from the specified source.
  remarks: To be added.
  syntax:
    content: public static void RemoveHandler (System.Windows.DependencyObject source, EventHandler<System.Windows.RoutedEventArgs> handler);
    parameters:
    - id: source
      type: System.Windows.DependencyObject
      description: The source object that the raises the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event.
    - id: handler
      type: System.EventHandler{System.Windows.RoutedEventArgs}
      description: The delegate that handles the <xref:System.Windows.UIElement.LostFocus?displayProperty=fullName> or <xref:System.Windows.ContentElement.LostFocus?displayProperty=fullName> event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  id: RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: RemoveListener(DependencyObject,IWeakEventListener)
  nameWithType: LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)
  fullName: System.Windows.LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Removes the specified listener from the list of listeners on the provided source.
  remarks: To be added.
  syntax:
    content: public static void RemoveListener (System.Windows.DependencyObject source, System.Windows.IWeakEventListener listener);
    parameters:
    - id: source
      type: System.Windows.DependencyObject
      description: The object to remove the listener from.
    - id: listener
      type: System.Windows.IWeakEventListener
      description: The listener to remove.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.LostFocusEventManager.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: LostFocusEventManager.StartListening(Object)
  fullName: System.Windows.LostFocusEventManager.StartListening(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Begins listening for the <see cref="E:System.Windows.UIElement.LostFocus"> event on the given source, attaching an internal class handler to that source.
  remarks: The provided source is checked for type to see if it is <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> , and then adds the class handler for the appropriate event to that source.
  syntax:
    content: protected override void StartListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: The object on which to start listening for the pertinent <see cref="E:System.Windows.UIElement.LostFocus"> event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.LostFocusEventManager.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Windows.LostFocusEventManager
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: LostFocusEventManager.StopListening(Object)
  fullName: System.Windows.LostFocusEventManager.StopListening(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Stops listening for the <see cref="E:System.Windows.UIElement.LostFocus"> event on the given source.
  remarks: To be added.
  syntax:
    content: protected override void StopListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: The source object on which to stop listening for <see cref="E:System.Windows.UIElement.LostFocus">.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.WeakEventManager
  isExternal: false
  name: System.Windows.WeakEventManager
- uid: System.Windows.LostFocusEventManager.AddHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  nameWithType: LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  fullName: System.Windows.LostFocusEventManager.AddHandler(DependencyObject,EventHandler<RoutedEventArgs>)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.EventHandler{System.Windows.RoutedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<RoutedEventArgs>
  nameWithType: EventHandler<RoutedEventArgs>
  fullName: System.EventHandler<System.Windows.RoutedEventArgs>
- uid: System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: AddListener(DependencyObject,IWeakEventListener)
  nameWithType: LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)
  fullName: System.Windows.LostFocusEventManager.AddListener(DependencyObject,IWeakEventListener)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.IWeakEventListener
  parent: System.Windows
  isExternal: true
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
- uid: System.Windows.LostFocusEventManager.NewListenerList
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: NewListenerList()
  nameWithType: LostFocusEventManager.NewListenerList()
  fullName: System.Windows.LostFocusEventManager.NewListenerList()
- uid: System.Windows.WeakEventManager
  parent: System.Windows
  isExternal: true
  name: WeakEventManager
  nameWithType: WeakEventManager
  fullName: System.Windows.WeakEventManager+ListenerList
- uid: System.Windows.LostFocusEventManager.RemoveHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.RoutedEventArgs})
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  nameWithType: LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
  fullName: System.Windows.LostFocusEventManager.RemoveHandler(DependencyObject,EventHandler<RoutedEventArgs>)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.EventHandler{System.Windows.RoutedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<RoutedEventArgs>
  nameWithType: EventHandler<RoutedEventArgs>
  fullName: System.EventHandler<System.Windows.RoutedEventArgs>
- uid: System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: RemoveListener(DependencyObject,IWeakEventListener)
  nameWithType: LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)
  fullName: System.Windows.LostFocusEventManager.RemoveListener(DependencyObject,IWeakEventListener)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.IWeakEventListener
  parent: System.Windows
  isExternal: true
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
- uid: System.Windows.LostFocusEventManager.StartListening(System.Object)
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: StartListening(Object)
  nameWithType: LostFocusEventManager.StartListening(Object)
  fullName: System.Windows.LostFocusEventManager.StartListening(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.LostFocusEventManager.StopListening(System.Object)
  parent: System.Windows.LostFocusEventManager
  isExternal: false
  name: StopListening(Object)
  nameWithType: LostFocusEventManager.StopListening(Object)
  fullName: System.Windows.LostFocusEventManager.StopListening(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
