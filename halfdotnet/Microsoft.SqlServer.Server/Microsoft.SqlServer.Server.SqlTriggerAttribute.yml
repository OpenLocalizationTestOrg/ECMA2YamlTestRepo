### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute
  id: SqlTriggerAttribute
  children:
  - Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor
  - Microsoft.SqlServer.Server.SqlTriggerAttribute.Event
  - Microsoft.SqlServer.Server.SqlTriggerAttribute.Name
  - Microsoft.SqlServer.Server.SqlTriggerAttribute.Target
  langs:
  - csharp
  name: SqlTriggerAttribute
  nameWithType: SqlTriggerAttribute
  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute
  type: Class
  summary: Used to mark a method definition in an assembly as a trigger in SQL Server. The properties on the attribute reflect the physical attributes used when the type is registered with SQL Server. This class cannot be inherited.
  remarks: See "CLR Triggers" in SQL Server 2005 Books Online for more information on CLR triggers and examples.
  example:
  - "The following example shows the SqlTriggerAttribute specifying the name of the trigger, the target table, and the event that will fire the trigger. See <xref:Microsoft.SqlServer.Server.SqlTriggerContext> for the full trigger example.  \n  \n [!CODE [DataWorks SqlTriggerAttribute Sample#1](../CodeSnippet/VS_Snippets_ADO.NET/DataWorks SqlTriggerAttribute Sample#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]

      public sealed class SqlTriggerAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor
  id: '#ctor'
  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute
  langs:
  - csharp
  name: SqlTriggerAttribute()
  nameWithType: SqlTriggerAttribute.SqlTriggerAttribute()
  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute.SqlTriggerAttribute()
  type: Constructor
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: An attribute on a method definition in an assembly, used to mark the method as a trigger in SQL Server.
  remarks: The following example specifies that the trigger is activated by updating existing data (`UPDATE`) in the table `authors`.
  example:
  - >-
    [!code-cs[VbRaddataSQLObjects#8](../../add/codesnippet/CSharp/CS/Trigger1.cs#8)]
     [!code-vb[VbRaddataSQLObjects#8](../../add/codesnippet/VisualBasic/VB/Trigger1.vb#8)]
  syntax:
    content: public SqlTriggerAttribute ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Event
  id: Event
  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute
  langs:
  - csharp
  name: Event
  nameWithType: SqlTriggerAttribute.Event
  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute.Event
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: The type of trigger and what data manipulation language (DML) action activates the trigger.
  remarks: "The DML action that activates the trigger could be an UPDATE, a DELETE, or an INSERT action. The type of the trigger can be AFTER or INSTEAD OF. Specifying FOR for the trigger type is the same as specifying AFTER.  \n  \n The Event property is required."
  syntax:
    content: public string Event { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Name
  id: Name
  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute
  langs:
  - csharp
  name: Name
  nameWithType: SqlTriggerAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute.Name
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: The name of the trigger.
  remarks: To be added.
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Target
  id: Target
  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute
  langs:
  - csharp
  name: Target
  nameWithType: SqlTriggerAttribute.Target
  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute.Target
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: The table to which the trigger applies.
  remarks: "The Target property is required.  \n  \n The following example specifies that the trigger is referenced by using the name `trig_onpubinsert`. The trigger is activated by adding new data (`INSERT`) to the table `publishers`."
  example:
  - >-
    [!code-cs[VbRaddataSQLObjects#9](../../add/codesnippet/CSharp/CS/Trigger1.cs#9)]
     [!code-vb[VbRaddataSQLObjects#9](../../add/codesnippet/VisualBasic/VB/Trigger1.vb#9)]
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.#ctor
  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute
  isExternal: false
  name: SqlTriggerAttribute()
  nameWithType: SqlTriggerAttribute.SqlTriggerAttribute()
  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute.SqlTriggerAttribute()
- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Event
  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute
  isExternal: false
  name: Event
  nameWithType: SqlTriggerAttribute.Event
  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute.Event
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Name
  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute
  isExternal: false
  name: Name
  nameWithType: SqlTriggerAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlTriggerAttribute.Target
  parent: Microsoft.SqlServer.Server.SqlTriggerAttribute
  isExternal: false
  name: Target
  nameWithType: SqlTriggerAttribute.Target
  fullName: Microsoft.SqlServer.Server.SqlTriggerAttribute.Target
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
