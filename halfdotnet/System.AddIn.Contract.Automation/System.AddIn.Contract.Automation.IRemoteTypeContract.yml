### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  id: IRemoteTypeContract
  children:
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  - System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  - System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  langs:
  - csharp
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
  type: Interface
  summary: Defines a contract that components can use to access type information and invoke members across application domain and process boundaries.
  remarks: "To get an IRemoteTypeContract, components can call the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method of an object that implements the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.  \n  \n To get information about the type of an object, components call the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A> method.  \n  \n To get information about the members of an object, components call one of the methods that returns information about a particular kind of member. For example, to get information about the events of an object, components can use the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A> or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> method.  \n  \n To invoke a member of an object, components use the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A> method."
  syntax:
    content: 'public interface IRemoteTypeContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  id: GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns the canonical name of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
  remarks: "The canonical name is a globally unique name, such as a fully qualified type name. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public string GetCanonicalName ();
    parameters: []
    return:
      type: System.String
      description: The canonical name of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract"> that provides access to a specified event of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: The name of an event of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the event.
    return:
      type: System.AddIn.Contract.Automation.IRemoteEventInfoContract
      description: An <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract"> that provides access to the specified event, if found; otherwise, `null`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract"> objects that provides access to the specified events of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract> GetEvents (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the events.
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
      description: An <xref:System.AddIn.Contract.Collections.IArrayContract%601> of <xref:System.AddIn.Contract.Automation.IRemoteEventInfoContract> objects that provides access to the events that match the specified binding constraints; otherwise, an empty <xref:System.AddIn.Contract.Collections.IArrayContract%601>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract"> that provides access to a specified field of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: The name of a field of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the field.
    return:
      type: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
      description: An <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract"> that provides access to the specified field, if found; otherwise, `null`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract"> objects that provides access to the specified fields of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract> GetFields (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the fields.
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
      description: An <xref:System.AddIn.Contract.Collections.IArrayContract%601> of <xref:System.AddIn.Contract.Automation.IRemoteFieldInfoContract> objects that provides access to the fields that match the specified binding constraints; otherwise, an empty <xref:System.AddIn.Contract.Collections.IArrayContract%601>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns an interface that is implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
  remarks: "A canonical name is a globally unique name, such as a GUID. Strings in the format \\<*assembly name*>, \\<*fully qualified type name*> are recommended for managed types. Strings in the format \\<*type library name*>, \\<*type name*> are recommended for COM types.  \n  \n Do not change the canonical name for a type after the type is published. Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type."
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);
    parameters:
    - id: canonicalName
      type: System.String
      description: The canonical name of an interface that is implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
    return:
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract"> that represents the interface with the specified canonical name that this <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract"> implements. `null` if this <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract"> does not implement an interface with the specified canonical name.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  id: GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns the interfaces that are implemented by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> GetInterfaces ();
    parameters: []
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: An <xref:System.AddIn.Contract.Collections.IArrayContract%601> of <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> objects that represent all the interfaces that are implemented by the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns a collection of <see cref="T:System.AddIn.Contract.IContract"> objects that provides access to all the specified members of the specified member type in the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>, using the specified binding constraints.
  remarks: This method can be used to get a single member, or to get multiple members that have the same name, such as constructor or method overloads.
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: name
      type: System.String
      description: The name of a member of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">. The name can represent multiple members that have the same name.
    - id: memberTypes
      type: System.Reflection.MemberTypes
      description: A bitwise combination of the <see cref="T:System.Reflection.MemberTypes"> values that specifies the members to search for.
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the members.
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: An <xref:System.AddIn.Contract.Collections.IArrayContract%601> of <xref:System.AddIn.Contract.IContract> objects that represent the members of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> that have the specified name and that meet the criteria specified by the  and  parameters.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns a collection of <see cref="T:System.AddIn.Contract.IContract"> objects that provides access to all the members in the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> that match the specified binding constraints.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract> GetMembers (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the members.
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
      description: An <xref:System.AddIn.Contract.Collections.IArrayContract%601> of <xref:System.AddIn.Contract.IContract> objects that provides access to the members of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> that meet the specified binding constraints.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract"> that provides access to a specified method of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: The name of a method of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the method.
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: An <xref:System.AddIn.Contract.Collections.IArrayContract%601> of <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> objects that represent the number, order, and type of the parameters for the method to get.
    return:
      type: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
      description: An <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract"> that provides access to the specified method, if found; otherwise, `null`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract"> objects that provides access to the specified methods of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract> GetMethods (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the methods.
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
      description: An <xref:System.AddIn.Contract.Collections.IArrayContract%601> of <xref:System.AddIn.Contract.Automation.IRemoteMethodInfoContract> objects that provides access to the methods that match the specified binding constraints.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns a collection of <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract"> objects that provides access to the specified properties of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract> GetProperties (System.Reflection.BindingFlags bindingFlags);
    parameters:
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the properties.
    return:
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
      description: An <xref:System.AddIn.Contract.Collections.IArrayContract%601> of <xref:System.AddIn.Contract.Automation.IRemotePropertyInfoContract> objects that provides access to the properties that match the specified binding constraints.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns an <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract"> that provides access to a specified property of the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract> remoteTypes);
    parameters:
    - id: name
      type: System.String
      description: The name of a property of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the method.
    - id: remoteReturnType
      type: System.AddIn.Contract.Automation.IRemoteTypeContract
      description: An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract"> that specifies the return type of the property.
    - id: remoteTypes
      type: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
      description: An <xref:System.AddIn.Contract.Collections.IArrayContract%601> of <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> objects that represent the parameters for the specified property.
    return:
      type: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
      description: An <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract"> that provides access to the specified property, if found; otherwise, `null`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  id: GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Returns type information about the object that the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract"> identifies.
  remarks: To be added.
  syntax:
    content: public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();
    parameters: []
    return:
      type: System.AddIn.Contract.Automation.RemoteTypeData
      description: A <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData"> that contains information about the object that the current <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> identifies.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Automation
  summary: Invokes the specified member of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract">.
  remarks: "The  parameter is used only for components that are written using COM. Each value in the  parameter indicates whether the corresponding value in the  parameter is passed by reference. The length of  should be the same as the length of .  \n  \n If you pass `null` for , this method uses default logic to determine whether an argument is passed by reference."
  syntax:
    content: public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);
    parameters:
    - id: name
      type: System.String
      description: The name of the member to invoke.
    - id: bindingFlags
      type: System.Reflection.BindingFlags
      description: A bitwise combination of the <see cref="T:System.Reflection.BindingFlags"> values that specifies how to search for the member.
    - id: target
      type: System.AddIn.Contract.Automation.IRemoteObjectContract
      description: The <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract"> on which to invoke the specified member.
    - id: remoteArgs
      type: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
      description: An <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract"> that contains the arguments to pass to the member to invoke.
    - id: remoteArgModifiers
      type: System.Boolean[]
      description: An array of Boolean values that indicate whether each of the  values is passed by reference.
    - id: localeId
      type: System.Int32
      description: A locale ID to use for locale-specific conversions that might be performed by the member being invoked.
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: A <see cref="T:System.AddIn.Contract.RemoteArgument"> that represents the return value of the invoked member.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetCanonicalName()
  nameWithType: IRemoteTypeContract.GetCanonicalName()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvent(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteEventInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteEventInfoContract
  nameWithType: IRemoteEventInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteEventInfoContract
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: IRemoteTypeContract.GetEvents(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteEventInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteEventInfoContract>
  nameWithType: IArrayContract<IRemoteEventInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteEventInfoContract>
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: IRemoteTypeContract.GetField(String,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(String,BindingFlags)
- uid: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteFieldInfoContract
  nameWithType: IRemoteFieldInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteFieldInfoContract
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: IRemoteTypeContract.GetFields(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteFieldInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteFieldInfoContract>
  nameWithType: IArrayContract<IRemoteFieldInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteFieldInfoContract>
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterface(String)
  nameWithType: IRemoteTypeContract.GetInterface(String)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(String)
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetInterfaces()
  nameWithType: IRemoteTypeContract.GetInterfaces()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces()
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteTypeContract>
  nameWithType: IArrayContract<IRemoteTypeContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(String,MemberTypes,BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IContract>
  nameWithType: IArrayContract<IContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMembers(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.IContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IContract>
  nameWithType: IArrayContract<IContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.IContract>
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(String,BindingFlags,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteMethodInfoContract
  nameWithType: IRemoteMethodInfoContract
  fullName: System.AddIn.Contract.Automation.IRemoteMethodInfoContract
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteTypeContract>
  nameWithType: IArrayContract<IRemoteTypeContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: IRemoteTypeContract.GetMethods(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteMethodInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteMethodInfoContract>
  nameWithType: IArrayContract<IRemoteMethodInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteMethodInfoContract>
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: IRemoteTypeContract.GetProperties(BindingFlags)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(BindingFlags)
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemotePropertyInfoContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemotePropertyInfoContract>
  nameWithType: IArrayContract<IRemotePropertyInfoContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemotePropertyInfoContract>
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  nameWithType: IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(String,BindingFlags,IRemoteTypeContract,IArrayContract<IRemoteTypeContract>)
- uid: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemotePropertyInfoContract
  nameWithType: IRemotePropertyInfoContract
  fullName: System.AddIn.Contract.Automation.IRemotePropertyInfoContract
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteTypeContract
  nameWithType: IRemoteTypeContract
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract
- uid: System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract}
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IArrayContract<IRemoteTypeContract>
  nameWithType: IArrayContract<IRemoteTypeContract>
  fullName: System.AddIn.Contract.Collections.IArrayContract<System.AddIn.Contract.Automation.IRemoteTypeContract>
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: GetTypeData()
  nameWithType: IRemoteTypeContract.GetTypeData()
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData()
- uid: System.AddIn.Contract.Automation.RemoteTypeData
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: RemoteTypeData
  nameWithType: RemoteTypeData
  fullName: System.AddIn.Contract.Automation.RemoteTypeData
- uid: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)
  parent: System.AddIn.Contract.Automation.IRemoteTypeContract
  isExternal: false
  name: InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  nameWithType: IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
  fullName: System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(String,BindingFlags,IRemoteObjectContract,IRemoteArgumentArrayContract,Boolean[],Int32)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.AddIn.Contract.Automation.IRemoteObjectContract
  parent: System.AddIn.Contract.Automation
  isExternal: false
  name: IRemoteObjectContract
  nameWithType: IRemoteObjectContract
  fullName: System.AddIn.Contract.Automation.IRemoteObjectContract
- uid: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IRemoteArgumentArrayContract
  nameWithType: IRemoteArgumentArrayContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentArrayContract
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
