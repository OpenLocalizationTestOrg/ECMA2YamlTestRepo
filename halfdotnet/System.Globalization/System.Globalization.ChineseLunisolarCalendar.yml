### YamlMime:ManagedReference
items:
- uid: System.Globalization.ChineseLunisolarCalendar
  id: ChineseLunisolarCalendar
  children:
  - System.Globalization.ChineseLunisolarCalendar.#ctor
  - System.Globalization.ChineseLunisolarCalendar.ChineseEra
  - System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.ChineseLunisolarCalendar.Eras
  - System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  - System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  - System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  langs:
  - csharp
  name: ChineseLunisolarCalendar
  nameWithType: ChineseLunisolarCalendar
  fullName: System.Globalization.ChineseLunisolarCalendar
  type: Class
  summary: Represents time in divisions, such as months, days, and years. Years are calculated using the Chinese calendar, while days and months are calculated using the lunisolar calendar.
  remarks: "The ChineseLunisolarCalendar class is derived from the <xref:System.Globalization.EastAsianLunisolarCalendar> class, which represents the lunisolar calendar. The <xref:System.Globalization.EastAsianLunisolarCalendar> class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months. Each solar year in the calendar is associated with a Sexagenary Year, a Celestial Stem, and a Terrestrial Branch, and these calendars can have leap months after any month of the year. The ChineseLunisolarCalendar class calculates years based on solar calculations, and months and days based on lunar calculations.  \n  \n> [!NOTE]\n>  For information about using the ChineseLunisolarCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](../Topic/Working%20with%20Calendars.md).  \n  \n A leap month can occur after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.  \n  \n Currently, the ChineseLunisolarCalendar is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class. Therefore, this class can be used only to calculate dates in the Chinese lunisolar calendar.  \n  \n Each <xref:System.Globalization.CultureInfo> object supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>."
  syntax:
    content: 'public class ChineseLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'
  inheritance:
  - System.Object
  - System.Globalization.Calendar
  - System.Globalization.EastAsianLunisolarCalendar
  implements: []
  inheritedMembers:
  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - System.Globalization.Calendar.Clone
  - System.Globalization.Calendar.CurrentEra
  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - System.Globalization.Calendar.GetHour(System.DateTime)
  - System.Globalization.Calendar.GetLeapMonth(System.Int32)
  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  - System.Globalization.Calendar.GetMinute(System.DateTime)
  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - System.Globalization.Calendar.GetSecond(System.DateTime)
  - System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapYear(System.Int32)
  - System.Globalization.Calendar.IsReadOnly
  - System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Initializes a new instance of the <see cref="T:System.Globalization.ChineseLunisolarCalendar"> class.
  remarks: To be added.
  syntax:
    content: public ChineseLunisolarCalendar ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  id: ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Specifies the era that corresponds to the current <see cref="T:System.Globalization.ChineseLunisolarCalendar"> object.
  remarks: "The value of this field is 1.  \n  \n The <xref:System.Globalization.ChineseLunisolarCalendar> class recognizes only the current era."
  syntax:
    content: public const int ChineseEra = 1;
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the number of days in the year that precedes the year that is specified by the <xref:System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime%2A>property.
  remarks: This property returns a constant value of 384.
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  id: Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the eras that correspond to the range of dates and times supported by the current <see cref="T:System.Globalization.ChineseLunisolarCalendar"> object.
  remarks: To be added.
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Retrieves the era that corresponds to the specified <see cref="T:System.DateTime"> type.
  remarks: To be added.
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: The <see cref="T:System.DateTime"> type to read.
    return:
      type: System.Int32
      description: An integer that represents the era in the  parameter.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the maximum date and time supported by the <see cref="T:System.Globalization.ChineseLunisolarCalendar"> class.
  remarks: To be added.
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the minimum date and time supported by the <see cref="T:System.Globalization.ChineseLunisolarCalendar"> class.
  remarks: To be added.
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: System.Globalization.EastAsianLunisolarCalendar
- uid: System.Globalization.ChineseLunisolarCalendar.#ctor
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseLunisolarCalendar()
  nameWithType: ChineseLunisolarCalendar.ChineseLunisolarCalendar()
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseLunisolarCalendar()
- uid: System.Globalization.ChineseLunisolarCalendar.ChineseEra
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: ChineseEra
  nameWithType: ChineseLunisolarCalendar.ChineseEra
  fullName: System.Globalization.ChineseLunisolarCalendar.ChineseEra
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.ChineseLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.ChineseLunisolarCalendar.Eras
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: ChineseLunisolarCalendar.Eras
  fullName: System.Globalization.ChineseLunisolarCalendar.Eras
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
- uid: System.Globalization.ChineseLunisolarCalendar.GetEra(System.DateTime)
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: ChineseLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.ChineseLunisolarCalendar.GetEra(DateTime)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MaxSupportedDateTime
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
  parent: System.Globalization.ChineseLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: ChineseLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.ChineseLunisolarCalendar.MinSupportedDateTime
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
