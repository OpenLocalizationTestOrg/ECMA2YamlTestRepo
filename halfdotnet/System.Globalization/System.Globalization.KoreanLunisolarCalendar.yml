### YamlMime:ManagedReference
items:
- uid: System.Globalization.KoreanLunisolarCalendar
  id: KoreanLunisolarCalendar
  children:
  - System.Globalization.KoreanLunisolarCalendar.#ctor
  - System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.KoreanLunisolarCalendar.Eras
  - System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)
  - System.Globalization.KoreanLunisolarCalendar.GregorianEra
  - System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  - System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  langs:
  - csharp
  name: KoreanLunisolarCalendar
  nameWithType: KoreanLunisolarCalendar
  fullName: System.Globalization.KoreanLunisolarCalendar
  type: Class
  summary: Represents time in divisions, such as months, days, and years. Years are calculated using the Gregorian calendar, while days and months are calculated using the lunisolar calendar.
  remarks: "The KoreanLunisolarCalendar class is derived from the <xref:System.Globalization.EastAsianLunisolarCalendar> class, which represents the lunisolar calendar. The <xref:System.Globalization.EastAsianLunisolarCalendar> class supports the sexagenary year cycle (which repeats every 60 years) in addition to solar years and lunar months. Each solar year in the calendar is associated with a Sexagenary Year, a Celestial Stem, and a Terrestrial Branch, and these calendars can have leap months after any month of the year.  \n  \n> [!NOTE]\n>  For information about using the KoreanLunisolarCalendar class and the other calendar classes in the .NET Framework, see [Working with Calendars](../Topic/Working%20with%20Calendars.md).  \n  \n The KoreanLunisolarCalendar class calculates years using the Gregorian calendar, and days and months using the <xref:System.Globalization.EastAsianLunisolarCalendar> class.  \n  \n A leap month can occur after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.  \n  \n Currently, the KoreanLunisolarCalendar is not used by any of the cultures supported by the <xref:System.Globalization.CultureInfo> class. Therefore, this class can be used only to calculate dates in the Korean lunisolar calendar.  \n  \n Each <xref:System.Globalization.CultureInfo> supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>."
  syntax:
    content: 'public class KoreanLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'
  inheritance:
  - System.Object
  - System.Globalization.Calendar
  - System.Globalization.EastAsianLunisolarCalendar
  implements: []
  inheritedMembers:
  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - System.Globalization.Calendar.Clone
  - System.Globalization.Calendar.CurrentEra
  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - System.Globalization.Calendar.GetHour(System.DateTime)
  - System.Globalization.Calendar.GetLeapMonth(System.Int32)
  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  - System.Globalization.Calendar.GetMinute(System.DateTime)
  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - System.Globalization.Calendar.GetSecond(System.DateTime)
  - System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapYear(System.Int32)
  - System.Globalization.Calendar.IsReadOnly
  - System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.KoreanLunisolarCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: KoreanLunisolarCalendar()
  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()
  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Initializes a new instance of the <see cref="T:System.Globalization.KoreanLunisolarCalendar"> class.
  remarks: To be added.
  syntax:
    content: public KoreanLunisolarCalendar ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the number of days in the year that precedes the year specified by the <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime%2A> property.
  remarks: This property returns a constant value of 384.
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.KoreanLunisolarCalendar.Eras
  id: Eras
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: KoreanLunisolarCalendar.Eras
  fullName: System.Globalization.KoreanLunisolarCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the eras that correspond to the range of dates and times supported by the current <see cref="T:System.Globalization.KoreanLunisolarCalendar"> object.
  remarks: To be added.
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Retrieves the era that corresponds to the specified <see cref="T:System.DateTime">.
  remarks: To be added.
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: The <see cref="T:System.DateTime"> to read.
    return:
      type: System.Int32
      description: An integer that represents the era specified by the  parameter. The return value for a <see cref="T:System.Globalization.KoreanLunisolarCalendar"> object is always the <xref:System.Globalization.KoreanLunisolarCalendar.GregorianEra> value.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra
  id: GregorianEra
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: GregorianEra
  nameWithType: KoreanLunisolarCalendar.GregorianEra
  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Specifies the Gregorian era that corresponds to the current <see cref="T:System.Globalization.KoreanLunisolarCalendar"> object.
  remarks: "The value of this field is 1.  \n  \n The <xref:System.Globalization.KoreanLunisolarCalendar> class recognizes only the current era."
  syntax:
    content: public const int GregorianEra = 1;
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the maximum date and time supported by the <see cref="T:System.Globalization.KoreanLunisolarCalendar"> class.
  remarks: To be added.
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the minimum date and time supported by the <see cref="T:System.Globalization.KoreanLunisolarCalendar"> class.
  remarks: To be added.
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: System.Globalization.EastAsianLunisolarCalendar
- uid: System.Globalization.KoreanLunisolarCalendar.#ctor
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: KoreanLunisolarCalendar()
  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()
  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()
- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.KoreanLunisolarCalendar.Eras
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: KoreanLunisolarCalendar.Eras
  fullName: System.Globalization.KoreanLunisolarCalendar.Eras
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: GregorianEra
  nameWithType: KoreanLunisolarCalendar.GregorianEra
  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
