### YamlMime:ManagedReference
items:
- uid: System.Globalization.TextElementEnumerator
  id: TextElementEnumerator
  children:
  - System.Globalization.TextElementEnumerator.Current
  - System.Globalization.TextElementEnumerator.ElementIndex
  - System.Globalization.TextElementEnumerator.GetTextElement
  - System.Globalization.TextElementEnumerator.MoveNext
  - System.Globalization.TextElementEnumerator.Reset
  langs:
  - csharp
  name: TextElementEnumerator
  nameWithType: TextElementEnumerator
  fullName: System.Globalization.TextElementEnumerator
  type: Class
  summary: Enumerates the text elements of a string.
  remarks: "The .NET Framework defines a text element as a unit of text that is displayed as a single character, that is, a grapheme. A text element can be any of the following:  \n  \n-   A base character, which is represented as a single <xref:System.Char> value. For example, LATIN CAPITAL LETTER A (U+0041) and LATIN SMALL LETTER AE (U+00E6) are base characters.  \n  \n-   A combining character sequence, which consists of a base character and one or more combining characters. For example, example, LATIN CAPITAL LETTER A (U+0041) followed by COMBINING MACRON (U+0304) is a combining character sequence.  \n  \n-   Surrogate pairs, which the [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) defines as a coded character representation for a single abstract character that consists of a sequence of two code units: a high surrogate, and a low surrogate. Surrogate pairs are used to represent characters outside of the Unicode Basic Multilingual Plane as UTF-8 encoded characters. For example, GOTHIC LETTER SAUIL (U+10343) is represented in UTF-8 encoding as a high surrogate whose value is 0xD800 and a low surrogate whose value is 0xDF43. A surrogate pair can represent a base character or a combining character.  \n  \n The TextElementEnumerator class allows you to work with the text elements in a string rather than with single <xref:System.Char> objects.  \n  \n You instantiate a TextElementEnumerator object that represents a particular string by passing the string to the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=fullName> method. This returns an enumerator that is positioned before the first text element in the string. Calling the <xref:System.Globalization.TextElementEnumerator.Reset%2A> method also brings the enumerator back to this position. Because this represents an invalid state, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before reading the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property to return the current text element.  \n  \n When working with a TextElementEnumerator object, you are responsible for positioning the enumerator. The <xref:System.Globalization.TextElementEnumerator.Current%2A> property returns the same text element until you call either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A>. The enumerator is in an invalid state if it is positioned before the first text element or after the last text element in the string. When the enumerator is in an invalid state, attempting to retrieve the value of the <xref:System.Globalization.TextElementEnumerator.Current%2A> property throws an exception. You can determine whether the enumerator is in an invalid state by testing whether the return value of the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> property is `false`.  \n  \n The TextElementEnumerator object represents a snapshot of the current state of a string variable or string literal at the moment that the TextElementEnumerator object is instantiated. Note that:  \n  \n-   Text element enumerators can only be used to read data in a string. They cannot modify the underlying string.  \n  \n-   An enumerator does not have exclusive access to the string that it represents. A string variable can be modified after the enumerator is created.  \n  \n-   A TextElementEnumerator object enumerates the text elements present in the string at the time that the TextElementEnumerator object was instantiated. It does not reflect any subsequent changes to the string variable if that variable is modified afterward.  \n  \n-   Because the TextElementEnumerator class does not override <xref:System.Object.Equals%2A?displayProperty=fullName>, two TextElementEnumerator objects that represent the same string will be considered unequal."
  example:
  - "The following example uses the TextElementEnumerator class to enumerate the text elements of a string.  \n  \n [!CODE [System.Globalization.TextElementEnumerator.Summary#1](../CodeSnippet/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TextElementEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.TextElementEnumerator.Current
  id: Current
  parent: System.Globalization.TextElementEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: TextElementEnumerator.Current
  fullName: System.Globalization.TextElementEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the current text element in the string.
  remarks: "After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of Current. Otherwise, Current is undefined.  \n  \n Current also throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`, which indicates the end of the string.  \n  \n Current does not move the position of the enumerator, and consecutive calls to Current return the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called."
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.TextElementEnumerator.ElementIndex
  id: ElementIndex
  parent: System.Globalization.TextElementEnumerator
  langs:
  - csharp
  name: ElementIndex
  nameWithType: TextElementEnumerator.ElementIndex
  fullName: System.Globalization.TextElementEnumerator.ElementIndex
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the index of the text element that the enumerator is currently positioned over.
  remarks: To be added.
  syntax:
    content: public int ElementIndex { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.TextElementEnumerator.GetTextElement
  id: GetTextElement
  parent: System.Globalization.TextElementEnumerator
  langs:
  - csharp
  name: GetTextElement()
  nameWithType: TextElementEnumerator.GetTextElement()
  fullName: System.Globalization.TextElementEnumerator.GetTextElement()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Gets the current text element in the string.
  remarks: This method returns the same text element as the <xref:System.Globalization.TextElementEnumerator.Current%2A> property.
  syntax:
    content: public string GetTextElement ();
    parameters: []
    return:
      type: System.String
      description: A new string containing the current text element in the string being read.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.TextElementEnumerator.MoveNext
  id: MoveNext
  parent: System.Globalization.TextElementEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: TextElementEnumerator.MoveNext()
  fullName: System.Globalization.TextElementEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Advances the enumerator to the next text element of the string.
  remarks: "After an enumerator is created or after a <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, the enumerator is positioned before the first text element of the string, and the first call to MoveNext moves the enumerator over the first text element of the string.  \n  \n If the string is modified after this enumerator was created, MoveNext throws an exception.  \n  \n After the end of the string is passed, subsequent calls to MoveNext return `false` until <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called."
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the enumerator was successfully advanced to the next text element; `false` if the enumerator has passed the end of the string.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Globalization.TextElementEnumerator.Reset
  id: Reset
  parent: System.Globalization.TextElementEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: TextElementEnumerator.Reset()
  fullName: System.Globalization.TextElementEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: Sets the enumerator to its initial position, which is before the first text element in the string.
  remarks: The Reset method moves the enumerator to the beginning of the string, before the first text element. After calling Reset, you must call <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> to advance the enumerator to the first text element of the string before calling <xref:System.Globalization.TextElementEnumerator.Current%2A> to read the value of the first text element.
  syntax:
    content: public void Reset ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Globalization.TextElementEnumerator.Current
  parent: System.Globalization.TextElementEnumerator
  isExternal: false
  name: Current
  nameWithType: TextElementEnumerator.Current
  fullName: System.Globalization.TextElementEnumerator.Current
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.TextElementEnumerator.ElementIndex
  parent: System.Globalization.TextElementEnumerator
  isExternal: false
  name: ElementIndex
  nameWithType: TextElementEnumerator.ElementIndex
  fullName: System.Globalization.TextElementEnumerator.ElementIndex
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.TextElementEnumerator.GetTextElement
  parent: System.Globalization.TextElementEnumerator
  isExternal: false
  name: GetTextElement()
  nameWithType: TextElementEnumerator.GetTextElement()
  fullName: System.Globalization.TextElementEnumerator.GetTextElement()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Globalization.TextElementEnumerator.MoveNext
  parent: System.Globalization.TextElementEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: TextElementEnumerator.MoveNext()
  fullName: System.Globalization.TextElementEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.TextElementEnumerator.Reset
  parent: System.Globalization.TextElementEnumerator
  isExternal: false
  name: Reset()
  nameWithType: TextElementEnumerator.Reset()
  fullName: System.Globalization.TextElementEnumerator.Reset()
