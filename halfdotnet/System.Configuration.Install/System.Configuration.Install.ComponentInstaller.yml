### YamlMime:ManagedReference
items:
- uid: System.Configuration.Install.ComponentInstaller
  id: ComponentInstaller
  children:
  - System.Configuration.Install.ComponentInstaller.#ctor
  - System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  - System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  langs:
  - csharp
  name: ComponentInstaller
  nameWithType: ComponentInstaller
  fullName: System.Configuration.Install.ComponentInstaller
  type: Class
  summary: Specifies an installer that copies properties from a component to use at install time.
  remarks: To be added.
  syntax:
    content: 'public abstract class ComponentInstaller : System.Configuration.Install.Installer'
  inheritance:
  - System.ComponentModel.Component
  - System.Configuration.Install.Installer
  implements: []
  inheritedMembers:
  - System.Configuration.Install.Installer.AfterInstall
  - System.Configuration.Install.Installer.AfterRollback
  - System.Configuration.Install.Installer.AfterUninstall
  - System.Configuration.Install.Installer.BeforeInstall
  - System.Configuration.Install.Installer.BeforeRollback
  - System.Configuration.Install.Installer.BeforeUninstall
  - System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Committed
  - System.Configuration.Install.Installer.Committing
  - System.Configuration.Install.Installer.Context
  - System.Configuration.Install.Installer.HelpText
  - System.Configuration.Install.Installer.Install(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Installers
  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Parent
  - System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.ComponentInstaller.#ctor
  id: '#ctor'
  parent: System.Configuration.Install.ComponentInstaller
  langs:
  - csharp
  name: ComponentInstaller()
  nameWithType: ComponentInstaller.ComponentInstaller()
  fullName: System.Configuration.Install.ComponentInstaller.ComponentInstaller()
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Initializes a new instance of the <see cref="T:System.Configuration.Install.ComponentInstaller"> class.
  remarks: To be added.
  syntax:
    content: protected ComponentInstaller ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  id: CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.Configuration.Install.ComponentInstaller
  langs:
  - csharp
  name: CopyFromComponent(IComponent)
  nameWithType: ComponentInstaller.CopyFromComponent(IComponent)
  fullName: System.Configuration.Install.ComponentInstaller.CopyFromComponent(IComponent)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: When overridden in a derived class, copies all the properties that are required at install time from the specified component.
  remarks: The installer should take all the information it can from the live component, and store it for use at install time.
  example:
  - "The following example defines a class `MyInstallClass`, which creates the event log and copies the properties of the event log component to the <xref:System.Diagnostics.EventLogInstaller>. It also checks whether the <xref:System.ServiceProcess.ServiceInstaller> can perform the same kind of installation as the <xref:System.Diagnostics.EventLogInstaller>.  \n  \n [!CODE [ComponentInstaller_CopyFromComponent#1](../CodeSnippet/VS_Snippets_CLR/ComponentInstaller_CopyFromComponent#1)]"
  syntax:
    content: public abstract void CopyFromComponent (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: The component to copy from.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  id: IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  parent: System.Configuration.Install.ComponentInstaller
  langs:
  - csharp
  name: IsEquivalentInstaller(ComponentInstaller)
  nameWithType: ComponentInstaller.IsEquivalentInstaller(ComponentInstaller)
  fullName: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(ComponentInstaller)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Determines if the specified installer installs the same object as this installer.
  remarks: Typically, IsEquivalentInstaller returns `true` only if this installer and the installer specified by the  parameter install the same object. In such a case, calling the <xref:System.Configuration.Install.Installer.Install%2A> or <xref:System.Configuration.Install.Installer.Uninstall%2A> method on either installer results in the same system state.
  example:
  - "The following example defines a class `MyInstallClass`, which creates the event log and copies the properties of the event log component to the <xref:System.Diagnostics.EventLogInstaller> object. It also checks whether <xref:System.ServiceProcess.ServiceInstaller> object can handle the same kind of installation as <xref:System.Diagnostics.EventLogInstaller>.  \n  \n [!CODE [ComponentInstaller_CopyFromComponent#2](../CodeSnippet/VS_Snippets_CLR/ComponentInstaller_CopyFromComponent#2)]"
  syntax:
    content: public virtual bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);
    parameters:
    - id: otherInstaller
      type: System.Configuration.Install.ComponentInstaller
      description: The installer to compare.
    return:
      type: System.Boolean
      description: '`true` if this installer and the installer specified by the  parameter install the same object; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Configuration.Install.Installer
  isExternal: false
  name: System.Configuration.Install.Installer
- uid: System.Configuration.Install.ComponentInstaller.#ctor
  parent: System.Configuration.Install.ComponentInstaller
  isExternal: false
  name: ComponentInstaller()
  nameWithType: ComponentInstaller.ComponentInstaller()
  fullName: System.Configuration.Install.ComponentInstaller.ComponentInstaller()
- uid: System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)
  parent: System.Configuration.Install.ComponentInstaller
  isExternal: false
  name: CopyFromComponent(IComponent)
  nameWithType: ComponentInstaller.CopyFromComponent(IComponent)
  fullName: System.Configuration.Install.ComponentInstaller.CopyFromComponent(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: true
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)
  parent: System.Configuration.Install.ComponentInstaller
  isExternal: false
  name: IsEquivalentInstaller(ComponentInstaller)
  nameWithType: ComponentInstaller.IsEquivalentInstaller(ComponentInstaller)
  fullName: System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller(ComponentInstaller)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Install.ComponentInstaller
  parent: System.Configuration.Install
  isExternal: false
  name: ComponentInstaller
  nameWithType: ComponentInstaller
  fullName: System.Configuration.Install.ComponentInstaller
