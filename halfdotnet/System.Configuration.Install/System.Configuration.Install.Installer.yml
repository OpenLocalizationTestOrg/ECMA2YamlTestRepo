### YamlMime:ManagedReference
items:
- uid: System.Configuration.Install.Installer
  id: Installer
  children:
  - System.Configuration.Install.Installer.#ctor
  - System.Configuration.Install.Installer.AfterInstall
  - System.Configuration.Install.Installer.AfterRollback
  - System.Configuration.Install.Installer.AfterUninstall
  - System.Configuration.Install.Installer.BeforeInstall
  - System.Configuration.Install.Installer.BeforeRollback
  - System.Configuration.Install.Installer.BeforeUninstall
  - System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Committed
  - System.Configuration.Install.Installer.Committing
  - System.Configuration.Install.Installer.Context
  - System.Configuration.Install.Installer.HelpText
  - System.Configuration.Install.Installer.Install(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Installers
  - System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Parent
  - System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)
  - System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)
  langs:
  - csharp
  name: Installer
  nameWithType: Installer
  fullName: System.Configuration.Install.Installer
  type: Class
  summary: Provides the foundation for custom installations.
  remarks: "This is the base class for all custom installers in the .NET Framework. Installers are components that help install applications on a computer.  \n  \n There are several steps you must follow to use an Installer:  \n  \n-   Inherit the Installer class.  \n  \n-   Override the <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods.  \n  \n-   Add the <xref:System.ComponentModel.RunInstallerAttribute> to your derived class and set it to `true`.  \n  \n-   Put your derived class in the assembly with your application to install.  \n  \n-   Invoke the installers. For example, use the InstallUtil.exe to invoke the installers.  \n  \n The <xref:System.Configuration.Install.Installer.Installers%2A> property contains a collection of installers. If this instance of Installer is part of an installer collection, the <xref:System.Configuration.Install.Installer.Parent%2A> property is set to the Installer instance that contains the collection. For an example of the use of the <xref:System.Configuration.Install.Installer.Installers%2A> collection, see the <xref:System.Configuration.Install.AssemblyInstaller> class.  \n  \n The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods of the Installer class go through the collection of installers stored in the <xref:System.Configuration.Install.Installer.Installers%2A> property, and invokes the corresponding method of each installer.  \n  \n The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods are not always called on the same Installer instance. For example, one Installer instance might be used while installing and committing an application, and then the reference to that instance is released. Later, uninstalling the application creates a reference to a new Installer instance, meaning that the <xref:System.Configuration.Install.Installer.Uninstall%2A> method is called by a different instance of Installer. For this reason, in your derived class, do not save the state of a computer in an installer. Instead, use an <xref:System.Collections.IDictionary> that is preserved across calls and passed into your <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods.  \n  \n Two situations illustrate the need to save information in the state-saver <xref:System.Collections.IDictionary>. First, suppose that your installer sets a registry key. It should save the key's original value in the <xref:System.Collections.IDictionary>. If the installation is rolled back, the original value can be restored. Second, suppose the installer replaces an existing file. Save the existing file in a temporary directory and the location of the new location of the file in the <xref:System.Collections.IDictionary>. If the installation is rolled back, the newer file is deleted and replaced by the original from the temporary location.  \n  \n The <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName> property contains information about the installation. For example, information about the location of the log file for the installation, the location of the file to save information required by the <xref:System.Configuration.Install.Installer.Uninstall%2A> method, and the command line that was entered when the installation executable was run."
  example:
  - "The following example demonstrates the use of the Installer class. It creates a class which inherits from Installer. When <xref:System.Configuration.Install.Installer.Commit%2A> is about to complete, <xref:System.Configuration.Install.Installer.Committing> event occurs and a message is displayed. To use the Installer class, you must reference the **System.Configuration.Install** assembly in your project.  \n  \n [!CODE [Installer#1](../CodeSnippet/VS_Snippets_CLR/Installer#1)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("AfterInstall")]

      public class Installer : System.ComponentModel.Component
  inheritance:
  - System.ComponentModel.Component
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.#ctor
  id: '#ctor'
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Installer()
  nameWithType: Installer.Installer()
  fullName: System.Configuration.Install.Installer.Installer()
  type: Constructor
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Initializes a new instance of the <see cref="T:System.Configuration.Install.Installer"> class.
  remarks: To be added.
  syntax:
    content: public Installer ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.AfterInstall
  id: AfterInstall
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: AfterInstall
  nameWithType: Installer.AfterInstall
  fullName: System.Configuration.Install.Installer.AfterInstall
  type: Event
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Occurs after the <xref:System.Configuration.Install.Installer.Install%2A> methods of all the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property have run.
  remarks: ''
  example:
  - "The following example demonstrates the AfterInstall event. It is raised by the <xref:System.Configuration.Install.Installer.OnAfterInstall%2A> method.  \n  \n [!CODE [Installer_AfterInstall#1](../CodeSnippet/VS_Snippets_CLR/Installer_AfterInstall#1)]"
  syntax:
    content: public event System.Configuration.Install.InstallEventHandler AfterInstall;
    return:
      type: System.Configuration.Install.InstallEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.AfterRollback
  id: AfterRollback
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: AfterRollback
  nameWithType: Installer.AfterRollback
  fullName: System.Configuration.Install.Installer.AfterRollback
  type: Event
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Occurs after the installations of all the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property are rolled back.
  remarks: ''
  example:
  - "The following example demonstrates the AfterRollback event. It overrides the <xref:System.Configuration.Install.Installer.Install%2A> method and explicitly throws an <xref:System.ArgumentException> so that the <xref:System.Configuration.Install.Installer.Rollback%2A> method is called. When the <xref:System.Configuration.Install.Installer.Rollback%2A> is completed, the AfterRollback event occurs and a message is displayed.  \n  \n [!CODE [Installer_AfterRollback#1](../CodeSnippet/VS_Snippets_CLR/Installer_AfterRollback#1)]"
  syntax:
    content: public event System.Configuration.Install.InstallEventHandler AfterRollback;
    return:
      type: System.Configuration.Install.InstallEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.AfterUninstall
  id: AfterUninstall
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: AfterUninstall
  nameWithType: Installer.AfterUninstall
  fullName: System.Configuration.Install.Installer.AfterUninstall
  type: Event
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Occurs after all the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property perform their uninstallation operations.
  remarks: ''
  example:
  - "The following example demonstrates the AfterUninstall event. It is raised by the <xref:System.Configuration.Install.Installer.OnAfterUninstall%2A> method.  \n  \n [!CODE [Installer_AfterUninstall#1](../CodeSnippet/VS_Snippets_CLR/Installer_AfterUninstall#1)]"
  syntax:
    content: public event System.Configuration.Install.InstallEventHandler AfterUninstall;
    return:
      type: System.Configuration.Install.InstallEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.BeforeInstall
  id: BeforeInstall
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: BeforeInstall
  nameWithType: Installer.BeforeInstall
  fullName: System.Configuration.Install.Installer.BeforeInstall
  type: Event
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Occurs before the <xref:System.Configuration.Install.Installer.Install%2A> method of each installer in the installer collection has run.
  remarks: ''
  example:
  - "The following example demonstrates the BeforeInstall event. It is raised by the <xref:System.Configuration.Install.Installer.OnBeforeInstall%2A> method.  \n  \n [!CODE [Installer_BeforeInstall#1](../CodeSnippet/VS_Snippets_CLR/Installer_BeforeInstall#1)]"
  syntax:
    content: public event System.Configuration.Install.InstallEventHandler BeforeInstall;
    return:
      type: System.Configuration.Install.InstallEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.BeforeRollback
  id: BeforeRollback
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: BeforeRollback
  nameWithType: Installer.BeforeRollback
  fullName: System.Configuration.Install.Installer.BeforeRollback
  type: Event
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Occurs before the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property are rolled back.
  remarks: ''
  example:
  - "The following example demonstrates the BeforeRollback event. It overrides the <xref:System.Configuration.Install.Installer.Install%2A> method and explicitly throws an <xref:System.ArgumentException> so that the <xref:System.Configuration.Install.Installer.Rollback%2A> method is called. When the <xref:System.Configuration.Install.Installer.Rollback%2A> is complete, the BeforeRollback event occurs and a message is displayed.  \n  \n [!CODE [Installer_BeforeRollback#1](../CodeSnippet/VS_Snippets_CLR/Installer_BeforeRollback#1)]"
  syntax:
    content: public event System.Configuration.Install.InstallEventHandler BeforeRollback;
    return:
      type: System.Configuration.Install.InstallEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.BeforeUninstall
  id: BeforeUninstall
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: BeforeUninstall
  nameWithType: Installer.BeforeUninstall
  fullName: System.Configuration.Install.Installer.BeforeUninstall
  type: Event
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Occurs before the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property perform their uninstall operations.
  remarks: ''
  example:
  - "The following example demonstrates the BeforeUninstall event. It is raised by the <xref:System.Configuration.Install.Installer.OnBeforeUninstall%2A> method.  \n  \n [!CODE [Installer_BeforeUninstall#1](../CodeSnippet/VS_Snippets_CLR/Installer_BeforeUninstall#1)]"
  syntax:
    content: public event System.Configuration.Install.InstallEventHandler BeforeUninstall;
    return:
      type: System.Configuration.Install.InstallEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  id: Commit(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Commit(IDictionary)
  nameWithType: Installer.Commit(IDictionary)
  fullName: System.Configuration.Install.Installer.Commit(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: When overridden in a derived class, completes the install transaction.
  remarks: ''
  example:
  - "The following example demonstrates the Commit method of the <xref:System.Configuration.Install.Installer> class. A class is derived from the <xref:System.Configuration.Install.Installer> base class and the Commit method are overridden.  \n  \n [!CODE [Installer_Install#2](../CodeSnippet/VS_Snippets_CLR/Installer_Install#2)]"
  syntax:
    content: public virtual void Commit (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer after all the installers in the collection have run.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.Committed
  id: Committed
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Committed
  nameWithType: Installer.Committed
  fullName: System.Configuration.Install.Installer.Committed
  type: Event
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Occurs after all the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property have committed their installations.
  remarks: ''
  example:
  - "The following example demonstrates the Committed event. It is raised by the <xref:System.Configuration.Install.Installer.OnCommitted%2A> method.  \n  \n [!CODE [Installer_Committed1#1](../CodeSnippet/VS_Snippets_CLR/Installer_Committed1#1)]"
  syntax:
    content: public event System.Configuration.Install.InstallEventHandler Committed;
    return:
      type: System.Configuration.Install.InstallEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.Committing
  id: Committing
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Committing
  nameWithType: Installer.Committing
  fullName: System.Configuration.Install.Installer.Committing
  type: Event
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Occurs before the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property committ their installations.
  remarks: ''
  example:
  - "The following example demonstrates the Committing event. It is raised by the <xref:System.Configuration.Install.Installer.OnCommitting%2A> method.  \n  \n [!CODE [Installer_Committing#1](../CodeSnippet/VS_Snippets_CLR/Installer_Committing#1)]"
  syntax:
    content: public event System.Configuration.Install.InstallEventHandler Committing;
    return:
      type: System.Configuration.Install.InstallEventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.Context
  id: Context
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Context
  nameWithType: Installer.Context
  fullName: System.Configuration.Install.Installer.Context
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Gets or sets information about the current installation.
  remarks: "The Context property contains installation information. For example, information about the location of the log file for the installation, the location of the file to save information required by the <xref:System.Configuration.Install.Installer.Uninstall%2A> method, and the command line that was entered when the installation executable was run.  \n  \n The program that calls the <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, or <xref:System.Configuration.Install.Installer.Uninstall%2A> methods sets the Context property with information that the methods need.  \n  \n If an installer belongs to an installer collection, the parent installer sets the Context property before calling any of these methods. The parent installer can be accessed through the <xref:System.Configuration.Install.Installer.Parent%2A> property."
  example:
  - "The following example demonstrates the Context property of the <xref:System.Configuration.Install.Installer> class. The contents of the Context property contain information about the location of the log file for the installation, the location of the file to save information required by the <xref:System.Configuration.Install.Installer.Uninstall%2A> method, and the command line that was entered when the installation executable was run. These contents are then displayed on the console.  \n  \n [!CODE [Installer_Context#1](../CodeSnippet/VS_Snippets_CLR/Installer_Context#1)]"
  syntax:
    content: public System.Configuration.Install.InstallContext Context { get; set; }
    return:
      type: System.Configuration.Install.InstallContext
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.HelpText
  id: HelpText
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: HelpText
  nameWithType: Installer.HelpText
  fullName: System.Configuration.Install.Installer.HelpText
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Gets the help text for all the installers in the installer collection.
  remarks: ''
  example:
  - "The following example demonstrates the HelpText property. This property is defined in the <xref:System.Configuration.Install.Installer> class, which, when called, returns the description of the <xref:System.Configuration.Install.Installer> and the command line options for the installation executable, such as the Installutil.exe utility, that can be passed to and understood by the <xref:System.Configuration.Install.Installer>.  \n  \n [!CODE [Installer_HelpText#1](../CodeSnippet/VS_Snippets_CLR/Installer_HelpText#1)]"
  syntax:
    content: public virtual string HelpText { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.Install(System.Collections.IDictionary)
  id: Install(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Install(IDictionary)
  nameWithType: Installer.Install(IDictionary)
  fullName: System.Configuration.Install.Installer.Install(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: When overridden in a derived class, performs the installation.
  remarks: ''
  example:
  - "The following example demonstrates the Install method of the <xref:System.Configuration.Install.Installer> class. A class is derived from the <xref:System.Configuration.Install.Installer> base class and the Install method is overridden.  \n  \n [!CODE [Installer_Install#1](../CodeSnippet/VS_Snippets_CLR/Installer_Install#1)]"
  syntax:
    content: public virtual void Install (System.Collections.IDictionary stateSaver);
    parameters:
    - id: stateSaver
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> used to save information needed to perform a commit, rollback, or uninstall operation.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.Installers
  id: Installers
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Installers
  nameWithType: Installer.Installers
  fullName: System.Configuration.Install.Installer.Installers
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Gets the collection of installers that this installer contains.
  remarks: "The Installers property contains a collection of installers that install objects needed by this <xref:System.Configuration.Install.Installer> instance to correctly install the component. The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods of the <xref:System.Configuration.Install.Installer> class go through the collection of installers and invokes the corresponding method of each installer.  \n  \n If this instance of <xref:System.Configuration.Install.Installer> is contained in an installer collection, the <xref:System.Configuration.Install.Installer.Parent%2A> property is the <xref:System.Configuration.Install.Installer> instance that contains the collection. For an example of the use of the Installers collection, see the <xref:System.Configuration.Install.AssemblyInstaller> class."
  example:
  - "The following example demonstrates the Installers and <xref:System.Configuration.Install.Installer.Parent%2A> properties. The Installers property shows the <xref:System.Configuration.Install.InstallerCollection> associated with an <xref:System.Configuration.Install.Installer>.  \n  \n [!CODE [Installer_Installers#1](../CodeSnippet/VS_Snippets_CLR/Installer_Installers#1)]"
  syntax:
    content: public System.Configuration.Install.InstallerCollection Installers { get; }
    return:
      type: System.Configuration.Install.InstallerCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  id: OnAfterInstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: OnAfterInstall(IDictionary)
  nameWithType: Installer.OnAfterInstall(IDictionary)
  fullName: System.Configuration.Install.Installer.OnAfterInstall(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Raises the <see cref="E:System.Configuration.Install.Installer.AfterInstall"> event.
  remarks: "This method is called after the <xref:System.Configuration.Install.Installer.Install%2A> methods of all the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> run.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Events](../Topic/Handling%20and%20Raising%20Events.md).  \n  \n The OnAfterInstall method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following example demonstrates the OnAfterInstall method. This method is overridden in the derived class. Space is provided to add steps to be done after the installation in the OnAfterInstall method.  \n  \n [!CODE [Installer_OnInstall#2](../CodeSnippet/VS_Snippets_CLR/Installer_OnInstall#2)]"
  syntax:
    content: protected virtual void OnAfterInstall (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer after all the installers contained in the <xref:System.Configuration.Install.Installer.Installers%2A> property have completed their installations.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  id: OnAfterRollback(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: OnAfterRollback(IDictionary)
  nameWithType: Installer.OnAfterRollback(IDictionary)
  fullName: System.Configuration.Install.Installer.OnAfterRollback(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Raises the <see cref="E:System.Configuration.Install.Installer.AfterRollback"> event.
  remarks: "This method is called after the <xref:System.Configuration.Install.Installer.Rollback%2A> methods of all the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> have run.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Events](../Topic/Handling%20and%20Raising%20Events.md).  \n  \n The OnAfterRollback method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAfterRollback (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer after the installers contained in the <xref:System.Configuration.Install.Installer.Installers%2A> property are rolled back.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  id: OnAfterUninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: OnAfterUninstall(IDictionary)
  nameWithType: Installer.OnAfterUninstall(IDictionary)
  fullName: System.Configuration.Install.Installer.OnAfterUninstall(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Raises the <see cref="E:System.Configuration.Install.Installer.AfterUninstall"> event.
  remarks: "This method is called after the <xref:System.Configuration.Install.Installer.Uninstall%2A> methods of all the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> have run.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Events](../Topic/Handling%20and%20Raising%20Events.md).  \n  \n The OnAfterUninstall method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnAfterUninstall (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer after all the installers contained in the <xref:System.Configuration.Install.Installer.Installers%2A> property are uninstalled.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  id: OnBeforeInstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: OnBeforeInstall(IDictionary)
  nameWithType: Installer.OnBeforeInstall(IDictionary)
  fullName: System.Configuration.Install.Installer.OnBeforeInstall(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Raises the <see cref="E:System.Configuration.Install.Installer.BeforeInstall"> event.
  remarks: "This method is called before the <xref:System.Configuration.Install.Installer.Install%2A> methods of the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> are called.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Events](../Topic/Handling%20and%20Raising%20Events.md).  \n  \n The OnBeforeInstall method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following example demonstrates the OnBeforeInstall method. This method is overridden in the derived class. Space is provided to add steps to be done before the installation in the OnBeforeInstall method.  \n  \n [!CODE [Installer_OnInstall#1](../CodeSnippet/VS_Snippets_CLR/Installer_OnInstall#1)]"
  syntax:
    content: protected virtual void OnBeforeInstall (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer before the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property are installed. This <see cref="T:System.Collections.IDictionary"> object should be empty at this point.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  id: OnBeforeRollback(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: OnBeforeRollback(IDictionary)
  nameWithType: Installer.OnBeforeRollback(IDictionary)
  fullName: System.Configuration.Install.Installer.OnBeforeRollback(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Raises the <see cref="E:System.Configuration.Install.Installer.BeforeRollback"> event.
  remarks: "This method is called before the <xref:System.Configuration.Install.Installer.Rollback%2A> methods of the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> are called.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Events](../Topic/Handling%20and%20Raising%20Events.md).  \n  \n The OnBeforeRollback method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnBeforeRollback (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer before the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property are rolled back.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  id: OnBeforeUninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: OnBeforeUninstall(IDictionary)
  nameWithType: Installer.OnBeforeUninstall(IDictionary)
  fullName: System.Configuration.Install.Installer.OnBeforeUninstall(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Raises the <see cref="E:System.Configuration.Install.Installer.BeforeUninstall"> event.
  remarks: "This method is called before the <xref:System.Configuration.Install.Installer.Uninstall%2A> methods of the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> are uninstalled.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Events](../Topic/Handling%20and%20Raising%20Events.md).  \n  \n The OnBeforeUninstall method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  syntax:
    content: protected virtual void OnBeforeUninstall (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer before the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property uninstall their installations.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  id: OnCommitted(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: OnCommitted(IDictionary)
  nameWithType: Installer.OnCommitted(IDictionary)
  fullName: System.Configuration.Install.Installer.OnCommitted(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Raises the <see cref="E:System.Configuration.Install.Installer.Committed"> event.
  remarks: "This method is called after the <xref:System.Configuration.Install.Installer.Commit%2A> methods of all the installers contained in this instance's installer collection run.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Events](../Topic/Handling%20and%20Raising%20Events.md).  \n  \n The OnCommitted method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following example demonstrates the OnCommitted method of the <xref:System.Configuration.Install.Installer> class. The OnCommitted method is overridden in the derived class. Space is provided for the user to add the steps to be performed before committing and after committing.  \n  \n [!CODE [Installer_Committed#2](../CodeSnippet/VS_Snippets_CLR/Installer_Committed#2)]"
  syntax:
    content: protected virtual void OnCommitted (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer after all the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property run.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  id: OnCommitting(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: OnCommitting(IDictionary)
  nameWithType: Installer.OnCommitting(IDictionary)
  fullName: System.Configuration.Install.Installer.OnCommitting(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Raises the <see cref="E:System.Configuration.Install.Installer.Committing"> event.
  remarks: "This method is called before the <xref:System.Configuration.Install.Installer.Commit%2A> methods of the installers in this instance's <xref:System.Configuration.Install.InstallerCollection> run.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Events](../Topic/Handling%20and%20Raising%20Events.md).  \n  \n The OnCommitting method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following example demonstrates the OnCommitting method of the <xref:System.Configuration.Install.Installer> class. The OnCommitting method is overridden in the derived class. Space is provided for the user to add the steps to be performed before committing and after committing.  \n  \n [!CODE [Installer_Committed#1](../CodeSnippet/VS_Snippets_CLR/Installer_Committed#1)]"
  syntax:
    content: protected virtual void OnCommitting (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer before the installers in the <xref:System.Configuration.Install.Installer.Installers%2A> property are committed.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.Parent
  id: Parent
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Parent
  nameWithType: Installer.Parent
  fullName: System.Configuration.Install.Installer.Parent
  type: Property
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: Gets or sets the installer containing the collection that this installer belongs to.
  remarks: "If this instance of <xref:System.Configuration.Install.Installer> is part of an installer collection, the Parent property is set to the <xref:System.Configuration.Install.Installer> instance that contains the collection. For an example of the use of the <xref:System.Configuration.Install.Installer.Installers%2A> collection, see the <xref:System.Configuration.Install.AssemblyInstaller> class.  \n  \n The <xref:System.Configuration.Install.Installer.Installers%2A> property contains a collection of installers. The <xref:System.Configuration.Install.Installer.Install%2A>, <xref:System.Configuration.Install.Installer.Commit%2A>, <xref:System.Configuration.Install.Installer.Rollback%2A>, and <xref:System.Configuration.Install.Installer.Uninstall%2A> methods of the <xref:System.Configuration.Install.Installer> class go through the collection of installers and invokes the corresponding method of each installer."
  example:
  - "The following example demonstrates the Parent property. The Parent property gets the <xref:System.Configuration.Install.Installer> containing the collection that this <xref:System.Configuration.Install.Installer> belongs to.  \n  \n [!CODE [Installer_Installers#2](../CodeSnippet/VS_Snippets_CLR/Installer_Installers#2)]"
  syntax:
    content: public System.Configuration.Install.Installer Parent { get; set; }
    return:
      type: System.Configuration.Install.Installer
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)
  id: Rollback(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Rollback(IDictionary)
  nameWithType: Installer.Rollback(IDictionary)
  fullName: System.Configuration.Install.Installer.Rollback(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: When overridden in a derived class, restores the pre-installation state of the computer.
  remarks: ''
  example:
  - "The following example demonstrates the Rollback method of <xref:System.Configuration.Install.Installer>. The Rollback method is overridden in the derived class of <xref:System.Configuration.Install.Installer>. An exception is generated to force an installation rollback.  \n  \n [!CODE [Installer_Rollback#1](../CodeSnippet/VS_Snippets_CLR/Installer_Rollback#1)]"
  syntax:
    content: public virtual void Rollback (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the pre-installation state of the computer.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)
  id: Uninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  langs:
  - csharp
  name: Uninstall(IDictionary)
  nameWithType: Installer.Uninstall(IDictionary)
  fullName: System.Configuration.Install.Installer.Uninstall(IDictionary)
  type: Method
  assemblies:
  - System.Configuration.Install
  namespace: System.Configuration.Install
  summary: When overridden in a derived class, removes an installation.
  remarks: ''
  example:
  - "The following example demonstrates the Uninstall method of <xref:System.Configuration.Install.Installer>. The Uninstall method is overridden in the derived class of <xref:System.Configuration.Install.Installer>.  \n  \n [!CODE [Installer_Uninstall#1](../CodeSnippet/VS_Snippets_CLR/Installer_Uninstall#1)]"
  syntax:
    content: public virtual void Uninstall (System.Collections.IDictionary savedState);
    parameters:
    - id: savedState
      type: System.Collections.IDictionary
      description: An <see cref="T:System.Collections.IDictionary"> that contains the state of the computer after the installation was complete.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Configuration.Install.Installer.#ctor
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Installer()
  nameWithType: Installer.Installer()
  fullName: System.Configuration.Install.Installer.Installer()
- uid: System.Configuration.Install.Installer.AfterInstall
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: AfterInstall
  nameWithType: Installer.AfterInstall
  fullName: System.Configuration.Install.Installer.AfterInstall
- uid: System.Configuration.Install.InstallEventHandler
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventHandler
  nameWithType: InstallEventHandler
  fullName: System.Configuration.Install.InstallEventHandler
- uid: System.Configuration.Install.Installer.AfterRollback
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: AfterRollback
  nameWithType: Installer.AfterRollback
  fullName: System.Configuration.Install.Installer.AfterRollback
- uid: System.Configuration.Install.InstallEventHandler
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventHandler
  nameWithType: InstallEventHandler
  fullName: System.Configuration.Install.InstallEventHandler
- uid: System.Configuration.Install.Installer.AfterUninstall
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: AfterUninstall
  nameWithType: Installer.AfterUninstall
  fullName: System.Configuration.Install.Installer.AfterUninstall
- uid: System.Configuration.Install.InstallEventHandler
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventHandler
  nameWithType: InstallEventHandler
  fullName: System.Configuration.Install.InstallEventHandler
- uid: System.Configuration.Install.Installer.BeforeInstall
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: BeforeInstall
  nameWithType: Installer.BeforeInstall
  fullName: System.Configuration.Install.Installer.BeforeInstall
- uid: System.Configuration.Install.InstallEventHandler
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventHandler
  nameWithType: InstallEventHandler
  fullName: System.Configuration.Install.InstallEventHandler
- uid: System.Configuration.Install.Installer.BeforeRollback
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: BeforeRollback
  nameWithType: Installer.BeforeRollback
  fullName: System.Configuration.Install.Installer.BeforeRollback
- uid: System.Configuration.Install.InstallEventHandler
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventHandler
  nameWithType: InstallEventHandler
  fullName: System.Configuration.Install.InstallEventHandler
- uid: System.Configuration.Install.Installer.BeforeUninstall
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: BeforeUninstall
  nameWithType: Installer.BeforeUninstall
  fullName: System.Configuration.Install.Installer.BeforeUninstall
- uid: System.Configuration.Install.InstallEventHandler
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventHandler
  nameWithType: InstallEventHandler
  fullName: System.Configuration.Install.InstallEventHandler
- uid: System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Commit(IDictionary)
  nameWithType: Installer.Commit(IDictionary)
  fullName: System.Configuration.Install.Installer.Commit(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.Committed
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Committed
  nameWithType: Installer.Committed
  fullName: System.Configuration.Install.Installer.Committed
- uid: System.Configuration.Install.InstallEventHandler
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventHandler
  nameWithType: InstallEventHandler
  fullName: System.Configuration.Install.InstallEventHandler
- uid: System.Configuration.Install.Installer.Committing
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Committing
  nameWithType: Installer.Committing
  fullName: System.Configuration.Install.Installer.Committing
- uid: System.Configuration.Install.InstallEventHandler
  parent: System.Configuration.Install
  isExternal: false
  name: InstallEventHandler
  nameWithType: InstallEventHandler
  fullName: System.Configuration.Install.InstallEventHandler
- uid: System.Configuration.Install.Installer.Context
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Context
  nameWithType: Installer.Context
  fullName: System.Configuration.Install.Installer.Context
- uid: System.Configuration.Install.InstallContext
  parent: System.Configuration.Install
  isExternal: false
  name: InstallContext
  nameWithType: InstallContext
  fullName: System.Configuration.Install.InstallContext
- uid: System.Configuration.Install.Installer.HelpText
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: HelpText
  nameWithType: Installer.HelpText
  fullName: System.Configuration.Install.Installer.HelpText
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Install.Installer.Install(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Install(IDictionary)
  nameWithType: Installer.Install(IDictionary)
  fullName: System.Configuration.Install.Installer.Install(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.Installers
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Installers
  nameWithType: Installer.Installers
  fullName: System.Configuration.Install.Installer.Installers
- uid: System.Configuration.Install.InstallerCollection
  parent: System.Configuration.Install
  isExternal: false
  name: InstallerCollection
  nameWithType: InstallerCollection
  fullName: System.Configuration.Install.InstallerCollection
- uid: System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnAfterInstall(IDictionary)
  nameWithType: Installer.OnAfterInstall(IDictionary)
  fullName: System.Configuration.Install.Installer.OnAfterInstall(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnAfterRollback(IDictionary)
  nameWithType: Installer.OnAfterRollback(IDictionary)
  fullName: System.Configuration.Install.Installer.OnAfterRollback(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnAfterUninstall(IDictionary)
  nameWithType: Installer.OnAfterUninstall(IDictionary)
  fullName: System.Configuration.Install.Installer.OnAfterUninstall(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnBeforeInstall(IDictionary)
  nameWithType: Installer.OnBeforeInstall(IDictionary)
  fullName: System.Configuration.Install.Installer.OnBeforeInstall(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnBeforeRollback(IDictionary)
  nameWithType: Installer.OnBeforeRollback(IDictionary)
  fullName: System.Configuration.Install.Installer.OnBeforeRollback(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnBeforeUninstall(IDictionary)
  nameWithType: Installer.OnBeforeUninstall(IDictionary)
  fullName: System.Configuration.Install.Installer.OnBeforeUninstall(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnCommitted(IDictionary)
  nameWithType: Installer.OnCommitted(IDictionary)
  fullName: System.Configuration.Install.Installer.OnCommitted(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: OnCommitting(IDictionary)
  nameWithType: Installer.OnCommitting(IDictionary)
  fullName: System.Configuration.Install.Installer.OnCommitting(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.Parent
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Parent
  nameWithType: Installer.Parent
  fullName: System.Configuration.Install.Installer.Parent
- uid: System.Configuration.Install.Installer
  parent: System.Configuration.Install
  isExternal: false
  name: Installer
  nameWithType: Installer
  fullName: System.Configuration.Install.Installer
- uid: System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Rollback(IDictionary)
  nameWithType: Installer.Rollback(IDictionary)
  fullName: System.Configuration.Install.Installer.Rollback(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)
  parent: System.Configuration.Install.Installer
  isExternal: false
  name: Uninstall(IDictionary)
  nameWithType: Installer.Uninstall(IDictionary)
  fullName: System.Configuration.Install.Installer.Uninstall(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
