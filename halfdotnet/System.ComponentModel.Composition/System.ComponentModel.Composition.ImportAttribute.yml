### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ImportAttribute
  id: ImportAttribute
  children:
  - System.ComponentModel.Composition.ImportAttribute.#ctor
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ImportAttribute.AllowDefault
  - System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  - System.ComponentModel.Composition.ImportAttribute.ContractName
  - System.ComponentModel.Composition.ImportAttribute.ContractType
  - System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  - System.ComponentModel.Composition.ImportAttribute.Source
  langs:
  - csharp
  name: ImportAttribute
  nameWithType: ImportAttribute
  fullName: System.ComponentModel.Composition.ImportAttribute
  type: Class
  summary: Specifies that a property, field, or parameter value should be provided by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer">.object
  remarks: "In the Attributed Programming Model, the ImportAttribute is used to declare the imports, or dependencies, of a given part. It can decorate a property, a field, or a method. During composition, a part's imports will be filled by the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object to which that part belongs, by using the exports provided to that <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object.  \n  \n Whether an import matches a given export is determined primarily by comparing the contract name and the contract type. Ordinarily, you do not have to specify either of these when using the import attribute in code, and they will be automatically inferred from the type of the decorated member. If the import must match an export of a different type (for example, a subclass of the type of the decorated member, or an interface implemented by that member), then the contract type must be explicitly specified. The contract name can also be explicitly specified, for example to distinguish between multiple contracts with the same type, but it is usually better to do this through metadata. For more information about metadata, see <xref:System.ComponentModel.Composition.PartMetadataAttribute>."
  example:
  - "The following example shows three classes with members decorated with the ImportAttribute, and three exports that match them.  \n  \n [!code-cs[ImportAndExport#1](../../add/codesnippet/CSharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](../../add/codesnippet/VisualBasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public class ImportAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"> class, importing the export with the default contract name.
  remarks: "The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that this is marked with this attribute.  \n  \n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."
  syntax:
    content: public ImportAttribute ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"> class, importing the export with the specified contract name.
  remarks: "The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.  \n  \n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."
  syntax:
    content: public ImportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: The contract name of the export to import, or `null` or an empty string ("") to use the default contract name.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"> class, importing the export with the contract name derived from the specified type.
  remarks: "The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on .  \n  \n The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.  \n  \n The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."
  syntax:
    content: public ImportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: The type to derive the contract name of the export from, or `null` to use the default contract name.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ImportAttribute"> class, importing the export with the specified contract name and type.
  remarks: To be added.
  syntax:
    content: public ImportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: The contract name of the export to import, or `null` or an empty string ("") to use the default contract name.
    - id: contractType
      type: System.Type
      description: The type of the export to import.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  id: AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Gets or sets a value that indicates whether the property, field, or parameter will be set to its type's default value when an export with the contract name is not present in the container.
  remarks: The default value of the type of a property, field, or parameter is `null` for reference types and zero for numeric value types. For other value types, the default value will be each field of the value type initialized to zero if the field is a value type, or `null` if the field is a reference type.
  syntax:
    content: public bool AllowDefault { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  id: AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Gets or sets a value that indicates whether the property or field will be recomposed when exports with a matching contract have changed in the container.
  remarks: To be added.
  syntax:
    content: public bool AllowRecomposition { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Gets the contract name of the export to import.
  remarks: To be added.
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Gets the type of the export to import.
  remarks: To be added.
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy"> for the exports used to satisfy this import.
  remarks: To be added.
  syntax:
    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  id: Source
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: Gets or sets a value that specifies the scopes from which this import may be satisfied.
  remarks: To be added.
  syntax:
    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }
    return:
      type: System.ComponentModel.Composition.ImportSource
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
- uid: System.ComponentModel.Composition.ImportSource
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportSource
  nameWithType: ImportSource
  fullName: System.ComponentModel.Composition.ImportSource
