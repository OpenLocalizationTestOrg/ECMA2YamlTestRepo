### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.SchemaNameCollection
  id: SchemaNameCollection
  children:
  - System.DirectoryServices.SchemaNameCollection.Add(System.String)
  - System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)
  - System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])
  - System.DirectoryServices.SchemaNameCollection.Clear
  - System.DirectoryServices.SchemaNameCollection.Contains(System.String)
  - System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)
  - System.DirectoryServices.SchemaNameCollection.Count
  - System.DirectoryServices.SchemaNameCollection.GetEnumerator
  - System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)
  - System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)
  - System.DirectoryServices.SchemaNameCollection.Item(System.Int32)
  - System.DirectoryServices.SchemaNameCollection.Remove(System.String)
  - System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)
  - System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized
  - System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot
  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)
  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)
  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)
  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize
  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly
  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)
  - System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  - vb
  name: SchemaNameCollection
  nameWithType: SchemaNameCollection
  fullName: System.DirectoryServices.SchemaNameCollection
  type: Class
  syntax:
    content: 'public class SchemaNameCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.DirectoryServices.SchemaNameCollection.Add(System.String)
  id: Add(System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: SchemaNameCollection.Add
  fullName: System.DirectoryServices.SchemaNameCollection.Add
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public int Add (string value);
    parameters:
    - id: value
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)
  id: AddRange(System.DirectoryServices.SchemaNameCollection)
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: AddRange
  nameWithType: SchemaNameCollection.AddRange
  fullName: System.DirectoryServices.SchemaNameCollection.AddRange
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public void AddRange (System.DirectoryServices.SchemaNameCollection value);
    parameters:
    - id: value
      type: System.DirectoryServices.SchemaNameCollection
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.DirectoryServices.SchemaNameCollection.AddRange*
- uid: System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])
  id: AddRange(System.String[])
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: AddRange
  nameWithType: SchemaNameCollection.AddRange
  fullName: System.DirectoryServices.SchemaNameCollection.AddRange
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public void AddRange (string[] value);
    parameters:
    - id: value
      type: System.String[]
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.DirectoryServices.SchemaNameCollection.AddRange*
- uid: System.DirectoryServices.SchemaNameCollection.Clear
  id: Clear
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: Clear
  nameWithType: SchemaNameCollection.Clear
  fullName: System.DirectoryServices.SchemaNameCollection.Clear
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public void Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: SchemaNameCollection.Contains
  fullName: System.DirectoryServices.SchemaNameCollection.Contains
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public bool Contains (string value);
    parameters:
    - id: value
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: CopyTo
  nameWithType: SchemaNameCollection.CopyTo
  fullName: System.DirectoryServices.SchemaNameCollection.CopyTo
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public void CopyTo (string[] stringArray, int index);
    parameters:
    - id: stringArray
      type: System.String[]
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.Count
  id: Count
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SchemaNameCollection.Count
  fullName: System.DirectoryServices.SchemaNameCollection.Count
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.GetEnumerator
  id: GetEnumerator
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator
  nameWithType: SchemaNameCollection.GetEnumerator
  fullName: System.DirectoryServices.SchemaNameCollection.GetEnumerator
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: IndexOf
  nameWithType: SchemaNameCollection.IndexOf
  fullName: System.DirectoryServices.SchemaNameCollection.IndexOf
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public int IndexOf (string value);
    parameters:
    - id: value
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: Insert
  nameWithType: SchemaNameCollection.Insert
  fullName: System.DirectoryServices.SchemaNameCollection.Insert
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public void Insert (int index, string value);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: value
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: SchemaNameCollection.Item
  fullName: System.DirectoryServices.SchemaNameCollection.Item
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public string this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.String
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: Remove
  nameWithType: SchemaNameCollection.Remove
  fullName: System.DirectoryServices.SchemaNameCollection.Remove
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public void Remove (string value);
    parameters:
    - id: value
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: RemoveAt
  nameWithType: SchemaNameCollection.RemoveAt
  fullName: System.DirectoryServices.SchemaNameCollection.RemoveAt
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.CopyTo
  nameWithType: SchemaNameCollection.System.Collections.ICollection.CopyTo
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.CopyTo
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SchemaNameCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SchemaNameCollection.System.Collections.ICollection.SyncRoot
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Add
  nameWithType: SchemaNameCollection.System.Collections.IList.Add
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Add
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Contains
  nameWithType: SchemaNameCollection.System.Collections.IList.Contains
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Contains
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.IList.IndexOf
  nameWithType: SchemaNameCollection.System.Collections.IList.IndexOf
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IndexOf
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Insert
  nameWithType: SchemaNameCollection.System.Collections.IList.Insert
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Insert
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.IList.IsFixedSize
  nameWithType: SchemaNameCollection.System.Collections.IList.IsFixedSize
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.IList.IsReadOnly
  nameWithType: SchemaNameCollection.System.Collections.IList.IsReadOnly
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Item
  nameWithType: SchemaNameCollection.System.Collections.IList.Item
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Item
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Object
      description: Return description to be filled
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.DirectoryServices.SchemaNameCollection
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Remove
  nameWithType: SchemaNameCollection.System.Collections.IList.Remove
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Remove
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.SchemaNameCollection.Add(System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: Add
  nameWithType: SchemaNameCollection.Add
  fullName: System.DirectoryServices.SchemaNameCollection.Add
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: AddRange
  nameWithType: SchemaNameCollection.AddRange
  fullName: System.DirectoryServices.SchemaNameCollection.AddRange
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.DirectoryServices.SchemaNameCollection
  parent: System.DirectoryServices
  isExternal: false
  name: SchemaNameCollection
  nameWithType: SchemaNameCollection
  fullName: System.DirectoryServices.SchemaNameCollection
- uid: System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: AddRange
  nameWithType: SchemaNameCollection.AddRange
  fullName: System.DirectoryServices.SchemaNameCollection.AddRange
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.DirectoryServices.SchemaNameCollection.Clear
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: Clear
  nameWithType: SchemaNameCollection.Clear
  fullName: System.DirectoryServices.SchemaNameCollection.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.DirectoryServices.SchemaNameCollection.Contains(System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: Contains
  nameWithType: SchemaNameCollection.Contains
  fullName: System.DirectoryServices.SchemaNameCollection.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: CopyTo
  nameWithType: SchemaNameCollection.CopyTo
  fullName: System.DirectoryServices.SchemaNameCollection.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.SchemaNameCollection.Count
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: Count
  nameWithType: SchemaNameCollection.Count
  fullName: System.DirectoryServices.SchemaNameCollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.SchemaNameCollection.GetEnumerator
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: SchemaNameCollection.GetEnumerator
  fullName: System.DirectoryServices.SchemaNameCollection.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: IndexOf
  nameWithType: SchemaNameCollection.IndexOf
  fullName: System.DirectoryServices.SchemaNameCollection.IndexOf
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: Insert
  nameWithType: SchemaNameCollection.Insert
  fullName: System.DirectoryServices.SchemaNameCollection.Insert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.SchemaNameCollection.Item(System.Int32)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: Item
  nameWithType: SchemaNameCollection.Item
  fullName: System.DirectoryServices.SchemaNameCollection.Item
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.SchemaNameCollection.Remove(System.String)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: Remove
  nameWithType: SchemaNameCollection.Remove
  fullName: System.DirectoryServices.SchemaNameCollection.Remove
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: RemoveAt
  nameWithType: SchemaNameCollection.RemoveAt
  fullName: System.DirectoryServices.SchemaNameCollection.RemoveAt
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: SchemaNameCollection.System.Collections.ICollection.CopyTo
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: SchemaNameCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: SchemaNameCollection.System.Collections.ICollection.SyncRoot
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: SchemaNameCollection.System.Collections.IList.Add
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Add
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: SchemaNameCollection.System.Collections.IList.Contains
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: SchemaNameCollection.System.Collections.IList.IndexOf
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IndexOf
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: SchemaNameCollection.System.Collections.IList.Insert
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Insert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: SchemaNameCollection.System.Collections.IList.IsFixedSize
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: SchemaNameCollection.System.Collections.IList.IsReadOnly
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: SchemaNameCollection.System.Collections.IList.Item
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Item
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: SchemaNameCollection.System.Collections.IList.Remove
  fullName: System.DirectoryServices.SchemaNameCollection.System.Collections.IList.Remove
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.SchemaNameCollection.AddRange
  parent: System.DirectoryServices.SchemaNameCollection
  isExternal: false
  name: Add
  nameWithType: SchemaNameCollection.Add
