### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType
  id: ObjectType
  children:
  - Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor
  - Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)
  - Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)
  langs:
  - csharp
  name: ObjectType
  nameWithType: ObjectType
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType
  type: Class
  summary: This class has been deprecated as of Visual Basic 2005.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public sealed class ObjectType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ObjectType()
  nameWithType: ObjectType.ObjectType()
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjectType()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType"> class.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public ObjectType ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)
  id: AddObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: AddObj(Object,Object)
  nameWithType: ObjectType.AddObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs an addition (+) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object AddObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: Required. Any numeric expression.
    - id: o2
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The sum of  and .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)
  id: BitAndObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: BitAndObj(Object,Object)
  nameWithType: ObjectType.BitAndObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a bitwise `And` operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object BitAndObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    - id: obj2
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    return:
      type: System.Object
      description: 1 if both  and  evaluate to 1; otherwise, 0.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)
  id: BitOrObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: BitOrObj(Object,Object)
  nameWithType: ObjectType.BitOrObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a bitwise `Or` operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object BitOrObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    - id: obj2
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    return:
      type: System.Object
      description: 0 if both  and  evaluate to 0; otherwise, 1.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)
  id: BitXorObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: BitXorObj(Object,Object)
  nameWithType: ObjectType.BitXorObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs an `Xor` operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object BitXorObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    - id: obj2
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    return:
      type: System.Object
      description: A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see [Xor Operator](../Topic/Xor%20Operator%20\(Visual%20Basic\).md).
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)
  id: DivObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: DivObj(Object,Object)
  nameWithType: ObjectType.DivObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a division (/) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object DivObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: Required. Any numeric expression.
    - id: o2
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The full quotient of  divided by , including any remainder.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)
  id: GetObjectValuePrimitive(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: GetObjectValuePrimitive(Object)
  nameWithType: ObjectType.GetObjectValuePrimitive(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Returns a boxed primitive value. This method is used to prevent copying structures multiple times.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object GetObjectValuePrimitive (object o);
    parameters:
    - id: o
      type: System.Object
      description: Required. Any expression.
    return:
      type: System.Object
      description: The primitive value of  typed as object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)
  id: IDivObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: IDivObj(Object,Object)
  nameWithType: ObjectType.IDivObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs an integer division (\\) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object IDivObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: Required. Any numeric expression.
    - id: o2
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The integer quotient of  divided by , which discards any remainder and retains only the integer portion.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  id: LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: LikeObj(Object,Object,CompareMethod)
  nameWithType: ObjectType.LikeObj(Object,Object,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(Object,Object,CompareMethod)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a `Like` comparison.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);
    parameters:
    - id: vLeft
      type: System.Object
      description: Required. Any expression.
    - id: vRight
      type: System.Object
      description: Required. Any string expression conforming to the pattern-matching conventions described in Like Operator.
    - id: CompareOption
      type: Microsoft.VisualBasic.CompareMethod
      description: Required. A <see cref="T:Microsoft.VisualBasic.CompareMethod"> value that specifies that the operation use either text or binary comparison.
    return:
      type: System.Boolean
      description: '`True` if the string representation of the value in  satisfies the pattern that is contained in ; otherwise, `False`. `True` if both  and  are `Nothing`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)
  id: ModObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ModObj(Object,Object)
  nameWithType: ObjectType.ModObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a modulus (`Mod`) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object ModObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: Required. Any numeric expression.
    - id: o2
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The remainder after  is divided by .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)
  id: MulObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: MulObj(Object,Object)
  nameWithType: ObjectType.MulObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a multiplication (*) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object MulObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: Required. Any numeric expression.
    - id: o2
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The product of  and .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)
  id: NegObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: NegObj(Object)
  nameWithType: ObjectType.NegObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a unary minus (–) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object NegObj (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The negative value of .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)
  id: NotObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: NotObj(Object)
  nameWithType: ObjectType.NotObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a `Not` operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object NotObj (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    return:
      type: System.Object
      description: For `Boolean` operations, `False` if  is `True`; otherwise, `True`. For bitwise operations, 1 if  is 0; otherwise, 0.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)
  id: ObjTst(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ObjTst(Object,Object,Boolean)
  nameWithType: ObjectType.ObjTst(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(Object,Object,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs binary or text string comparison when given two objects.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static int ObjTst (object o1, object o2, bool TextCompare);
    parameters:
    - id: o1
      type: System.Object
      description: Required. Any expression.
    - id: o2
      type: System.Object
      description: Required. Any expression.
    - id: TextCompare
      type: System.Boolean
      description: Required. `True` to perform a case-insensitive string comparison; otherwise, `False`.
    return:
      type: System.Int32
      description: "|Value|Condition|  \n|-----------|---------------|  \n|-1|is less than .|  \n|0|is equal to .|  \n|1|is greater than .|"
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)
  id: PlusObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: PlusObj(Object)
  nameWithType: ObjectType.PlusObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a unary plus (+) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object PlusObj (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The value of . (The sign of the  is unchanged.)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)
  id: PowObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: PowObj(Object,Object)
  nameWithType: ObjectType.PowObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs an exponent (^) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object PowObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: Required. Any numeric expression.
    - id: obj2
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The result of  raised to the power of .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)
  id: ShiftLeftObj(System.Object,System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ShiftLeftObj(Object,Int32)
  nameWithType: ObjectType.ShiftLeftObj(Object,Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(Object,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs an arithmetic left shift (<<) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object ShiftLeftObj (object o1, int amount);
    parameters:
    - id: o1
      type: System.Object
      description: Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).
    - id: amount
      type: System.Int32
      description: Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.
    return:
      type: System.Object
      description: An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)
  id: ShiftRightObj(System.Object,System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: ShiftRightObj(Object,Int32)
  nameWithType: ObjectType.ShiftRightObj(Object,Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(Object,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs an arithmetic right shift (>>) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object ShiftRightObj (object o1, int amount);
    parameters:
    - id: o1
      type: System.Object
      description: Required. Integral numeric expression. The bit pattern to be shifted. The data type must be an integral type (`SByte`, `Byte`, `Short`, `UShort`, `Integer`, `UInteger`, `Long`, or `ULong`).
    - id: amount
      type: System.Int32
      description: Required. Numeric expression. The number of bits to shift the bit pattern. The data type must be `Integer` or widen to `Integer`.
    return:
      type: System.Object
      description: An integral numeric value. The result of shifting the bit pattern. The data type is the same as that of .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)
  id: StrCatObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: StrCatObj(Object,Object)
  nameWithType: ObjectType.StrCatObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a string concatenation (&) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object StrCatObj (object vLeft, object vRight);
    parameters:
    - id: vLeft
      type: System.Object
      description: Required. Any expression.
    - id: vRight
      type: System.Object
      description: Required. Any expression.
    return:
      type: System.Object
      description: A string representing the concatenation of  and .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)
  id: SubObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: SubObj(Object,Object)
  nameWithType: ObjectType.SubObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs a subtraction (–) operation.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object SubObj (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: Required. Any numeric expression.
    - id: o2
      type: System.Object
      description: Required. Any numeric expression.
    return:
      type: System.Object
      description: The difference between  and .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)
  id: XorObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  langs:
  - csharp
  name: XorObj(Object,Object)
  nameWithType: ObjectType.XorObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.CompilerServices
  summary: Performs an `Xor` comparison.
  remarks: This class supports the Visual Basic compiler and is not intended to be used directly from your code.
  syntax:
    content: public static object XorObj (object obj1, object obj2);
    parameters:
    - id: obj1
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    - id: obj2
      type: System.Object
      description: Required. Any `Boolean` or numeric expression.
    return:
      type: System.Object
      description: A `Boolean` or numeric value. For a `Boolean` comparison, the return value is the logical exclusion (exclusive logical disjunction) of two `Boolean` values. For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns. For more information, see [Xor Operator](../Topic/Xor%20Operator%20\(Visual%20Basic\).md).
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ObjectType()
  nameWithType: ObjectType.ObjectType()
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjectType()
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: AddObj(Object,Object)
  nameWithType: ObjectType.AddObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: BitAndObj(Object,Object)
  nameWithType: ObjectType.BitAndObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: BitOrObj(Object,Object)
  nameWithType: ObjectType.BitOrObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: BitXorObj(Object,Object)
  nameWithType: ObjectType.BitXorObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: DivObj(Object,Object)
  nameWithType: ObjectType.DivObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: GetObjectValuePrimitive(Object)
  nameWithType: ObjectType.GetObjectValuePrimitive(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: IDivObj(Object,Object)
  nameWithType: ObjectType.IDivObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: LikeObj(Object,Object,CompareMethod)
  nameWithType: ObjectType.LikeObj(Object,Object,CompareMethod)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(Object,Object,CompareMethod)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompareMethod
  parent: Microsoft.VisualBasic
  isExternal: false
  name: CompareMethod
  nameWithType: CompareMethod
  fullName: Microsoft.VisualBasic.CompareMethod
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ModObj(Object,Object)
  nameWithType: ObjectType.ModObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: MulObj(Object,Object)
  nameWithType: ObjectType.MulObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: NegObj(Object)
  nameWithType: ObjectType.NegObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: NotObj(Object)
  nameWithType: ObjectType.NotObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ObjTst(Object,Object,Boolean)
  nameWithType: ObjectType.ObjTst(Object,Object,Boolean)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(Object,Object,Boolean)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: PlusObj(Object)
  nameWithType: ObjectType.PlusObj(Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: PowObj(Object,Object)
  nameWithType: ObjectType.PowObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ShiftLeftObj(Object,Int32)
  nameWithType: ObjectType.ShiftLeftObj(Object,Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(Object,Int32)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: ShiftRightObj(Object,Int32)
  nameWithType: ObjectType.ShiftRightObj(Object,Int32)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(Object,Int32)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: StrCatObj(Object,Object)
  nameWithType: ObjectType.StrCatObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: SubObj(Object,Object)
  nameWithType: ObjectType.SubObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)
  parent: Microsoft.VisualBasic.CompilerServices.ObjectType
  isExternal: false
  name: XorObj(Object,Object)
  nameWithType: ObjectType.XorObj(Object,Object)
  fullName: Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
