### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.PolicyStatement
  id: PolicyStatement
  children:
  - System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)
  - System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)
  - System.Security.Policy.PolicyStatement.Attributes
  - System.Security.Policy.PolicyStatement.AttributeString
  - System.Security.Policy.PolicyStatement.Copy
  - System.Security.Policy.PolicyStatement.Equals(System.Object)
  - System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.PolicyStatement.GetHashCode
  - System.Security.Policy.PolicyStatement.PermissionSet
  - System.Security.Policy.PolicyStatement.ToXml
  - System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)
  langs:
  - csharp
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
  type: Class
  summary: Represents the statement of a <see cref="T:System.Security.Policy.CodeGroup"> describing the permissions and other information that apply to code with a particular set of evidence. This class cannot be inherited.
  remarks: "A PolicyStatement consists of a set of granted permissions, and possible special attributes for the code group.  \n  \n Policy statements are typically used as the return value of a <xref:System.Security.Policy.PolicyLevel.Resolve%2A> operation on a <xref:System.Security.Policy.PolicyLevel>."
  example:
  - "The following code example shows the use of members of the PolicyStatement class  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#1](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PolicyStatement : System.Security.ISecurityEncodable, System.Security.ISecurityPolicyEncodable
  inheritance:
  - System.Object
  implements:
  - System.Security.ISecurityEncodable
  - System.Security.ISecurityPolicyEncodable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)
  id: '#ctor(System.Security.PermissionSet)'
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: PolicyStatement(PermissionSet)
  nameWithType: PolicyStatement.PolicyStatement(PermissionSet)
  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Initializes a new instance of the <see cref="T:System.Security.Policy.PolicyStatement"> class with the specified <xref:System.Security.PermissionSet>.
  remarks: ''
  example:
  - "The following code example shows the use of the PolicyStatement constructor. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#2](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#2)]"
  syntax:
    content: public PolicyStatement (System.Security.PermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.PermissionSet
      description: The <see cref="T:System.Security.PermissionSet"> with which to initialize the new instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)
  id: '#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)'
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: PolicyStatement(PermissionSet,PolicyStatementAttribute)
  nameWithType: PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)
  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Initializes a new instance of the <see cref="T:System.Security.Policy.PolicyStatement"> class with the specified <xref:System.Security.PermissionSet> and attributes.
  remarks: ''
  example:
  - "The following code example shows the use of the PolicyStatement constructor. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#3](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#3)]"
  syntax:
    content: public PolicyStatement (System.Security.PermissionSet permSet, System.Security.Policy.PolicyStatementAttribute attributes);
    parameters:
    - id: permSet
      type: System.Security.PermissionSet
      description: The <see cref="T:System.Security.PermissionSet"> with which to initialize the new instance.
    - id: attributes
      type: System.Security.Policy.PolicyStatementAttribute
      description: A bitwise combination of the <see cref="T:System.Security.Policy.PolicyStatementAttribute"> values.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.Attributes
  id: Attributes
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: Attributes
  nameWithType: PolicyStatement.Attributes
  fullName: System.Security.Policy.PolicyStatement.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Gets or sets the attributes of the policy statement.
  remarks: ''
  example:
  - "The following code example shows how to use the Attributes property to set the <xref:System.Security.Policy.PolicyStatementAttribute> flag. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#4](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#4)]"
  syntax:
    content: public System.Security.Policy.PolicyStatementAttribute Attributes { get; set; }
    return:
      type: System.Security.Policy.PolicyStatementAttribute
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.AttributeString
  id: AttributeString
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: AttributeString
  nameWithType: PolicyStatement.AttributeString
  fullName: System.Security.Policy.PolicyStatement.AttributeString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Gets a string representation of the attributes of the policy statement.
  remarks: Use this property to get a text string of the attributes currently set for the <xref:System.Security.Policy.PolicyStatement>.
  example:
  - "The following code example shows how to use the AttributeString property to get the policy statement attributes. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#13](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#13)]"
  syntax:
    content: public string AttributeString { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.Copy
  id: Copy
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: Copy()
  nameWithType: PolicyStatement.Copy()
  fullName: System.Security.Policy.PolicyStatement.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Creates an equivalent copy of the current policy statement.
  remarks: ''
  example:
  - "The following code example shows how to use the Copy method to make a copy of the current policy statement. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#9](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#9)]"
  syntax:
    content: public System.Security.Policy.PolicyStatement Copy ();
    parameters: []
    return:
      type: System.Security.Policy.PolicyStatement
      description: A new copy of the <see cref="T:System.Security.Policy.PolicyStatement"> with <xref:System.Security.Policy.PolicyStatement.PermissionSet%2A> and <xref:System.Security.Policy.PolicyStatement.Attributes%2A> identical to those of the current <see cref="T:System.Security.Policy.PolicyStatement">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PolicyStatement.Equals(Object)
  fullName: System.Security.Policy.PolicyStatement.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Determines whether the specified <see cref="T:System.Security.Policy.PolicyStatement"> object is equal to the current <see cref="T:System.Security.Policy.PolicyStatement">.
  remarks: For more information, see the <xref:System.Object.Equals%2A> method.
  example:
  - "The following code example shows how to use the Equals method to determine whether a specified <xref:System.Security.Policy.PolicyStatement> object is equivalent to the current <xref:System.Security.Policy.PolicyStatement> object. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#10](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#10)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The <see cref="T:System.Security.Policy.PolicyStatement"> object to compare with the current <see cref="T:System.Security.Policy.PolicyStatement">.
    return:
      type: System.Boolean
      description: '`true` if the specified <see cref="T:System.Security.Policy.PolicyStatement"> is equal to the current <see cref="T:System.Security.Policy.PolicyStatement"> object; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PolicyStatement.FromXml(SecurityElement)
  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Reconstructs a security object with a given state from an XML encoding.
  remarks: ''
  example:
  - "The following code example shows how to use the FromXml method to reconstruct a security object from an XML encoding. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#7](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#7)]"
  syntax:
    content: public void FromXml (System.Security.SecurityElement et);
    parameters:
    - id: et
      type: System.Security.SecurityElement
      description: The XML encoding to use to reconstruct the security object.
  overload: System.Security.Policy.PolicyStatement.FromXml*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: FromXml(SecurityElement,PolicyLevel)
  nameWithType: PolicyStatement.FromXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Reconstructs a security object with a given state from an XML encoding.
  remarks: To be added.
  syntax:
    content: public void FromXml (System.Security.SecurityElement et, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: et
      type: System.Security.SecurityElement
      description: The XML encoding to use to reconstruct the security object.
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: The <see cref="T:System.Security.Policy.PolicyLevel"> context for lookup of <xref:System.Security.NamedPermissionSet> values.
  overload: System.Security.Policy.PolicyStatement.FromXml*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PolicyStatement.GetHashCode()
  fullName: System.Security.Policy.PolicyStatement.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Gets a hash code for the <see cref="T:System.Security.Policy.PolicyStatement"> object that is suitable for use in hashing algorithms and data structures such as a hash table.
  remarks: The hash code for two instances of the same permission might be different, hence a hash code should not be used to compare two <xref:System.Security.Policy.PolicyStatement> objects.
  example:
  - "The following code example shows how to use the GetHashCode method to get the hash code for the current policy statement. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#12](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#12)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current <see cref="T:System.Security.Policy.PolicyStatement"> object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.PermissionSet
  id: PermissionSet
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: PermissionSet
  nameWithType: PolicyStatement.PermissionSet
  fullName: System.Security.Policy.PolicyStatement.PermissionSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Gets or sets the <see cref="T:System.Security.PermissionSet"> of the policy statement.
  remarks: ''
  example:
  - "The following code example shows how to use the PermissionSet property to add permissions to the policy statement. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#5](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#5)]"
  syntax:
    content: public System.Security.PermissionSet PermissionSet { get; set; }
    return:
      type: System.Security.PermissionSet
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.ToXml
  id: ToXml
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: ToXml()
  nameWithType: PolicyStatement.ToXml()
  fullName: System.Security.Policy.PolicyStatement.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Creates an XML encoding of the security object and its current state.
  remarks: ''
  example:
  - "The following code example shows how to use the <xref:System.Security.Policy.PolicyStatement.ToXml%2A> method to create an XML encoding of the security object. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyStatement> class.  \n  \n [!CODE [System.Security.Policy.PolicyStatement_Evt#6](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Policy.PolicyStatement_Evt#6)]"
  syntax:
    content: public System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: An XML encoding of the security object, including any state information.
  overload: System.Security.Policy.PolicyStatement.ToXml*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)
  id: ToXml(System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.PolicyStatement
  langs:
  - csharp
  name: ToXml(PolicyLevel)
  nameWithType: PolicyStatement.ToXml(PolicyLevel)
  fullName: System.Security.Policy.PolicyStatement.ToXml(PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: Creates an XML encoding of the security object and its current state.
  remarks: To be added.
  syntax:
    content: public System.Security.SecurityElement ToXml (System.Security.Policy.PolicyLevel level);
    parameters:
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: The <see cref="T:System.Security.Policy.PolicyLevel"> context for lookup of <xref:System.Security.NamedPermissionSet> values.
    return:
      type: System.Security.SecurityElement
      description: An XML encoding of the security object, including any state information.
  overload: System.Security.Policy.PolicyStatement.ToXml*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet)
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: PolicyStatement(PermissionSet)
  nameWithType: PolicyStatement.PolicyStatement(PermissionSet)
  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.PolicyStatement.#ctor(System.Security.PermissionSet,System.Security.Policy.PolicyStatementAttribute)
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: PolicyStatement(PermissionSet,PolicyStatementAttribute)
  nameWithType: PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)
  fullName: System.Security.Policy.PolicyStatement.PolicyStatement(PermissionSet,PolicyStatementAttribute)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.PolicyStatementAttribute
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatementAttribute
  nameWithType: PolicyStatementAttribute
  fullName: System.Security.Policy.PolicyStatementAttribute
- uid: System.Security.Policy.PolicyStatement.Attributes
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: Attributes
  nameWithType: PolicyStatement.Attributes
  fullName: System.Security.Policy.PolicyStatement.Attributes
- uid: System.Security.Policy.PolicyStatementAttribute
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatementAttribute
  nameWithType: PolicyStatementAttribute
  fullName: System.Security.Policy.PolicyStatementAttribute
- uid: System.Security.Policy.PolicyStatement.AttributeString
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: AttributeString
  nameWithType: PolicyStatement.AttributeString
  fullName: System.Security.Policy.PolicyStatement.AttributeString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.PolicyStatement.Copy
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: Copy()
  nameWithType: PolicyStatement.Copy()
  fullName: System.Security.Policy.PolicyStatement.Copy()
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.PolicyStatement.Equals(System.Object)
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: Equals(Object)
  nameWithType: PolicyStatement.Equals(Object)
  fullName: System.Security.Policy.PolicyStatement.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PolicyStatement.FromXml(SecurityElement)
  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyStatement.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: FromXml(SecurityElement,PolicyLevel)
  nameWithType: PolicyStatement.FromXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.PolicyStatement.FromXml(SecurityElement,PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.PolicyStatement.GetHashCode
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: GetHashCode()
  nameWithType: PolicyStatement.GetHashCode()
  fullName: System.Security.Policy.PolicyStatement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.PolicyStatement.PermissionSet
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: PermissionSet
  nameWithType: PolicyStatement.PermissionSet
  fullName: System.Security.Policy.PolicyStatement.PermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.PolicyStatement.ToXml
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: ToXml()
  nameWithType: PolicyStatement.ToXml()
  fullName: System.Security.Policy.PolicyStatement.ToXml()
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyStatement.ToXml(System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  name: ToXml(PolicyLevel)
  nameWithType: PolicyStatement.ToXml(PolicyLevel)
  fullName: System.Security.Policy.PolicyStatement.ToXml(PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.PolicyStatement.FromXml*
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  nameWithType: PolicyStatement.
- uid: System.Security.Policy.PolicyStatement.ToXml*
  parent: System.Security.Policy.PolicyStatement
  isExternal: false
  nameWithType: PolicyStatement.
