### YamlMime:ManagedReference
items:
- uid: System.Data.Services.DataServiceHost
  id: DataServiceHost
  children:
  - System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])
  langs:
  - csharp
  name: DataServiceHost
  nameWithType: DataServiceHost
  fullName: System.Data.Services.DataServiceHost
  type: Class
  summary: The [!INCLUDE[ssAstoria](../../add/includes/ssastoria-md.md)] class derived from <xref:System.ServiceModel.Web.WebServiceHost> used to instantiate data services.
  remarks: "[!INCLUDE[ssAstoria](../../add/includes/ssastoria-md.md)] are not autonomous server entities. Instead, the service is a component hosted in an environment such as the Windows Communication Foundation (WCF) that provides core server networking facilities. Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer (REST) entry points. The host handles direct interactions with the network and support caching, scalability, and authentication modules.  \n  \n [!INCLUDE[ssAstoria](../../add/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](../../add/includes/ssastoria-md.md)] to run in a range of hosting environments. For more information, see [Hosting the Data Service](../Topic/Hosting%20the%20Data%20Service%20\\(WCF%20Data%20Services\\).md)."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      public class DataServiceHost : System.ServiceModel.Web.WebServiceHost
  inheritance:
  - System.ServiceModel.Web.WebServiceHost
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.Data.Services.DataServiceHost
  langs:
  - csharp
  name: DataServiceHost(Type,Uri[])
  nameWithType: DataServiceHost.DataServiceHost(Type,Uri[])
  fullName: System.Data.Services.DataServiceHost.DataServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: Instantiates <see cref="T:System.Data.Services.DataServiceHost"> for [!INCLUDE[ssAstoria](../../add/includes/ssastoria-md.md)].
  remarks: '[!INCLUDE[ssAstoria](../../add/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](../../add/includes/ssastoria-md.md)] to run in a range of hosting environments. This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service. A default <xref:System.Data.Services.IDataServiceHost> is used in this case.'
  syntax:
    content: public DataServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: Identifies the [!INCLUDE[ssAstoria](../../add/includes/ssastoria-md.md)] to the host.
    - id: baseAddresses
      type: System.Uri[]
      description: The URI of the host.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: System.ServiceModel.Web.WebServiceHost
- uid: System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.Data.Services.DataServiceHost
  isExternal: false
  name: DataServiceHost(Type,Uri[])
  nameWithType: DataServiceHost.DataServiceHost(Type,Uri[])
  fullName: System.Data.Services.DataServiceHost.DataServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
