### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.EntitySet`1
  id: EntitySet`1
  children:
  - System.Data.Linq.EntitySet`1.#ctor
  - System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})
  - System.Data.Linq.EntitySet`1.Add(`0)
  - System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.EntitySet`1.Clear
  - System.Data.Linq.EntitySet`1.Contains(`0)
  - System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)
  - System.Data.Linq.EntitySet`1.Count
  - System.Data.Linq.EntitySet`1.GetEnumerator
  - System.Data.Linq.EntitySet`1.GetNewBindingList
  - System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues
  - System.Data.Linq.EntitySet`1.IndexOf(`0)
  - System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)
  - System.Data.Linq.EntitySet`1.IsDeferred
  - System.Data.Linq.EntitySet`1.Item(System.Int32)
  - System.Data.Linq.EntitySet`1.ListChanged
  - System.Data.Linq.EntitySet`1.Load
  - System.Data.Linq.EntitySet`1.Remove(`0)
  - System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)
  - System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized
  - System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot
  - System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize
  - System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)
  - System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)
  - System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList
  langs:
  - csharp
  - vb
  name: EntitySet<TEntity>
  nameWithType: EntitySet<TEntity>
  fullName: System.Data.Linq.EntitySet<TEntity>
  type: Class
  syntax:
    content: 'public sealed class EntitySet<TEntity> : System.Collections.Generic.ICollection<TEntity>, System.Collections.Generic.IEnumerable<TEntity>, System.Collections.Generic.IList<TEntity>, System.Collections.IList, System.ComponentModel.IListSource where TEntity : class'
    typeParameters:
    - id: TEntity
      description: Parameter description to be filled
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<TEntity>
  - System.Collections.Generic.IEnumerable<TEntity>
  - System.Collections.Generic.IList<TEntity>
  - System.Collections.IList
  - System.ComponentModel.IListSource
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Data.Linq.EntitySet`1.#ctor
  id: '#ctor'
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: EntitySet<TEntity>..ctor
  fullName: System.Data.Linq.EntitySet<TEntity>..ctor
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public EntitySet ();
    parameters: []
- uid: System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})
  id: '#ctor(System.Action{`0},System.Action{`0})'
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: EntitySet<TEntity>..ctor
  fullName: System.Data.Linq.EntitySet<TEntity>..ctor
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public EntitySet (Action<TEntity> onAdd, Action<TEntity> onRemove);
    parameters:
    - id: onAdd
      type: System.Action{TEntity}
      description: Parameter description to be filled
    - id: onRemove
      type: System.Action{TEntity}
      description: Parameter description to be filled
- uid: System.Data.Linq.EntitySet`1.Add(`0)
  id: Add(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: EntitySet<TEntity>.Add
  fullName: System.Data.Linq.EntitySet<TEntity>.Add
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Add (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: AddRange
  nameWithType: EntitySet<TEntity>.AddRange
  fullName: System.Data.Linq.EntitySet<TEntity>.AddRange
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void AddRange (System.Collections.Generic.IEnumerable<TEntity> collection);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})
  id: Assign(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: Assign
  nameWithType: EntitySet<TEntity>.Assign
  fullName: System.Data.Linq.EntitySet<TEntity>.Assign
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Assign (System.Collections.Generic.IEnumerable<TEntity> entitySource);
    parameters:
    - id: entitySource
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.Clear
  id: Clear
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: Clear
  nameWithType: EntitySet<TEntity>.Clear
  fullName: System.Data.Linq.EntitySet<TEntity>.Clear
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.Contains(`0)
  id: Contains(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: EntitySet<TEntity>.Contains
  fullName: System.Data.Linq.EntitySet<TEntity>.Contains
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool Contains (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: CopyTo
  nameWithType: EntitySet<TEntity>.CopyTo
  fullName: System.Data.Linq.EntitySet<TEntity>.CopyTo
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void CopyTo (TEntity[] array, int arrayIndex);
    parameters:
    - id: array
      type: TEntity[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.Count
  id: Count
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: EntitySet<TEntity>.Count
  fullName: System.Data.Linq.EntitySet<TEntity>.Count
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: GetEnumerator
  nameWithType: EntitySet<TEntity>.GetEnumerator
  fullName: System.Data.Linq.EntitySet<TEntity>.GetEnumerator
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.Collections.Generic.IEnumerator<TEntity> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TEntity}
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.GetNewBindingList
  id: GetNewBindingList
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: GetNewBindingList
  nameWithType: EntitySet<TEntity>.GetNewBindingList
  fullName: System.Data.Linq.EntitySet<TEntity>.GetNewBindingList
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.ComponentModel.IBindingList GetNewBindingList ();
    parameters: []
    return:
      type: System.ComponentModel.IBindingList
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues
  id: HasLoadedOrAssignedValues
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: HasLoadedOrAssignedValues
  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues
  fullName: System.Data.Linq.EntitySet<TEntity>.HasLoadedOrAssignedValues
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool HasLoadedOrAssignedValues { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: IndexOf
  nameWithType: EntitySet<TEntity>.IndexOf
  fullName: System.Data.Linq.EntitySet<TEntity>.IndexOf
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public int IndexOf (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: Insert
  nameWithType: EntitySet<TEntity>.Insert
  fullName: System.Data.Linq.EntitySet<TEntity>.Insert
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Insert (int index, TEntity entity);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: entity
      type: TEntity
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.IsDeferred
  id: IsDeferred
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: IsDeferred
  nameWithType: EntitySet<TEntity>.IsDeferred
  fullName: System.Data.Linq.EntitySet<TEntity>.IsDeferred
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool IsDeferred { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: EntitySet<TEntity>.Item
  fullName: System.Data.Linq.EntitySet<TEntity>.Item
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public TEntity this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: TEntity
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.ListChanged
  id: ListChanged
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: ListChanged
  nameWithType: EntitySet<TEntity>.ListChanged
  fullName: System.Data.Linq.EntitySet<TEntity>.ListChanged
  type: Event
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.Load
  id: Load
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: Load
  nameWithType: EntitySet<TEntity>.Load
  fullName: System.Data.Linq.EntitySet<TEntity>.Load
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Load ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.Remove(`0)
  id: Remove(`0)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: Remove
  nameWithType: EntitySet<TEntity>.Remove
  fullName: System.Data.Linq.EntitySet<TEntity>.Remove
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool Remove (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: RemoveAt
  nameWithType: EntitySet<TEntity>.RemoveAt
  fullName: System.Data.Linq.EntitySet<TEntity>.RemoveAt
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})
  id: SetSource(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: SetSource
  nameWithType: EntitySet<TEntity>.SetSource
  fullName: System.Data.Linq.EntitySet<TEntity>.SetSource
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void SetSource (System.Collections.Generic.IEnumerable<TEntity> entitySource);
    parameters:
    - id: entitySource
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  id: System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<TEntity>.IsReadOnly
  nameWithType: EntitySet<TEntity>.System.Collections.Generic.ICollection<TEntity>.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.Generic.ICollection<TEntity>.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.Generic.ICollection<TEntity>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.CopyTo
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.CopyTo
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.CopyTo
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.SyncRoot
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Add
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Add
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Add
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Contains
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Contains
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Contains
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.IndexOf
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IndexOf
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IndexOf
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Insert
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Insert
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Insert
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.IsFixedSize
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsFixedSize
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.IsReadOnly
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Item
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Item
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Item
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Object
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.Collections.IList.Remove
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Remove
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Remove
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Linq.EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.Linq.EntitySet`1
  langs:
  - csharp
  - vb
  name: System.ComponentModel.IListSource.GetList
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.GetList
  fullName: System.Data.Linq.EntitySet<TEntity>.System.ComponentModel.IListSource.GetList
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.EntitySet`1.#ctor
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: .ctor
  nameWithType: EntitySet<TEntity>..ctor
  fullName: System.Data.Linq.EntitySet<TEntity>..ctor
- uid: System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: .ctor
  nameWithType: EntitySet<TEntity>..ctor
  fullName: System.Data.Linq.EntitySet<TEntity>..ctor
- uid: System.Data.Linq.EntitySet`1.Add(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Add
  nameWithType: EntitySet<TEntity>.Add
  fullName: System.Data.Linq.EntitySet<TEntity>.Add
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: AddRange
  nameWithType: EntitySet<TEntity>.AddRange
  fullName: System.Data.Linq.EntitySet<TEntity>.AddRange
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Assign
  nameWithType: EntitySet<TEntity>.Assign
  fullName: System.Data.Linq.EntitySet<TEntity>.Assign
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.EntitySet`1.Clear
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Clear
  nameWithType: EntitySet<TEntity>.Clear
  fullName: System.Data.Linq.EntitySet<TEntity>.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.EntitySet`1.Contains(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Contains
  nameWithType: EntitySet<TEntity>.Contains
  fullName: System.Data.Linq.EntitySet<TEntity>.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: CopyTo
  nameWithType: EntitySet<TEntity>.CopyTo
  fullName: System.Data.Linq.EntitySet<TEntity>.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.Count
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Count
  nameWithType: EntitySet<TEntity>.Count
  fullName: System.Data.Linq.EntitySet<TEntity>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.GetEnumerator
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: GetEnumerator
  nameWithType: EntitySet<TEntity>.GetEnumerator
  fullName: System.Data.Linq.EntitySet<TEntity>.GetEnumerator
- uid: System.Data.Linq.EntitySet`1.GetNewBindingList
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: GetNewBindingList
  nameWithType: EntitySet<TEntity>.GetNewBindingList
  fullName: System.Data.Linq.EntitySet<TEntity>.GetNewBindingList
- uid: System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: HasLoadedOrAssignedValues
  nameWithType: EntitySet<TEntity>.HasLoadedOrAssignedValues
  fullName: System.Data.Linq.EntitySet<TEntity>.HasLoadedOrAssignedValues
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.IndexOf(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IndexOf
  nameWithType: EntitySet<TEntity>.IndexOf
  fullName: System.Data.Linq.EntitySet<TEntity>.IndexOf
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Insert
  nameWithType: EntitySet<TEntity>.Insert
  fullName: System.Data.Linq.EntitySet<TEntity>.Insert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.IsDeferred
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: IsDeferred
  nameWithType: EntitySet<TEntity>.IsDeferred
  fullName: System.Data.Linq.EntitySet<TEntity>.IsDeferred
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.Item(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Item
  nameWithType: EntitySet<TEntity>.Item
  fullName: System.Data.Linq.EntitySet<TEntity>.Item
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.ListChanged
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: ListChanged
  nameWithType: EntitySet<TEntity>.ListChanged
  fullName: System.Data.Linq.EntitySet<TEntity>.ListChanged
- uid: System.Data.Linq.EntitySet`1.Load
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Load
  nameWithType: EntitySet<TEntity>.Load
  fullName: System.Data.Linq.EntitySet<TEntity>.Load
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.EntitySet`1.Remove(`0)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: Remove
  nameWithType: EntitySet<TEntity>.Remove
  fullName: System.Data.Linq.EntitySet<TEntity>.Remove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: RemoveAt
  nameWithType: EntitySet<TEntity>.RemoveAt
  fullName: System.Data.Linq.EntitySet<TEntity>.RemoveAt
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: SetSource
  nameWithType: EntitySet<TEntity>.SetSource
  fullName: System.Data.Linq.EntitySet<TEntity>.SetSource
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection{TEntity}#IsReadOnly
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.Generic.ICollection<TEntity>.IsReadOnly
  nameWithType: EntitySet<TEntity>.System.Collections.Generic.ICollection<TEntity>.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.Generic.ICollection<TEntity>.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.CopyTo
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: EntitySet<TEntity>.System.Collections.ICollection.SyncRoot
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Add
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Add
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Contains
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IndexOf
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IndexOf
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Insert
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Insert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsFixedSize
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: EntitySet<TEntity>.System.Collections.IList.IsReadOnly
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Item
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Item
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: EntitySet<TEntity>.System.Collections.IList.Remove
  fullName: System.Data.Linq.EntitySet<TEntity>.System.Collections.IList.Remove
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Linq.EntitySet<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList
  parent: System.Data.Linq.EntitySet`1
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: EntitySet<TEntity>.System.ComponentModel.IListSource.GetList
  fullName: System.Data.Linq.EntitySet<TEntity>.System.ComponentModel.IListSource.GetList
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
