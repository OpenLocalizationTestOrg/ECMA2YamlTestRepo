### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.ChangeConflictCollection
  id: ChangeConflictCollection
  children:
  - System.Data.Linq.ChangeConflictCollection.Clear
  - System.Data.Linq.ChangeConflictCollection.Contains(System.Data.Linq.ObjectChangeConflict)
  - System.Data.Linq.ChangeConflictCollection.CopyTo(System.Data.Linq.ObjectChangeConflict[],System.Int32)
  - System.Data.Linq.ChangeConflictCollection.Count
  - System.Data.Linq.ChangeConflictCollection.GetEnumerator
  - System.Data.Linq.ChangeConflictCollection.Item(System.Int32)
  - System.Data.Linq.ChangeConflictCollection.Remove(System.Data.Linq.ObjectChangeConflict)
  - System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode)
  - System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode,System.Boolean)
  - System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#Add(System.Data.Linq.ObjectChangeConflict)
  - System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#IsReadOnly
  - System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#IsSynchronized
  - System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#SyncRoot
  - System.Data.Linq.ChangeConflictCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ChangeConflictCollection
  nameWithType: ChangeConflictCollection
  fullName: System.Data.Linq.ChangeConflictCollection
  type: Class
  syntax:
    content: 'public sealed class ChangeConflictCollection : System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>, System.Collections.Generic.IEnumerable<System.Data.Linq.ObjectChangeConflict>, System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>
  - System.Collections.Generic.IEnumerable<System.Data.Linq.ObjectChangeConflict>
  - System.Collections.ICollection
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Data.Linq.ChangeConflictCollection.Clear
  id: Clear
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: Clear
  nameWithType: ChangeConflictCollection.Clear
  fullName: System.Data.Linq.ChangeConflictCollection.Clear
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.Contains(System.Data.Linq.ObjectChangeConflict)
  id: Contains(System.Data.Linq.ObjectChangeConflict)
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: ChangeConflictCollection.Contains
  fullName: System.Data.Linq.ChangeConflictCollection.Contains
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool Contains (System.Data.Linq.ObjectChangeConflict item);
    parameters:
    - id: item
      type: System.Data.Linq.ObjectChangeConflict
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.CopyTo(System.Data.Linq.ObjectChangeConflict[],System.Int32)
  id: CopyTo(System.Data.Linq.ObjectChangeConflict[],System.Int32)
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: CopyTo
  nameWithType: ChangeConflictCollection.CopyTo
  fullName: System.Data.Linq.ChangeConflictCollection.CopyTo
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void CopyTo (System.Data.Linq.ObjectChangeConflict[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Data.Linq.ObjectChangeConflict[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.Count
  id: Count
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ChangeConflictCollection.Count
  fullName: System.Data.Linq.ChangeConflictCollection.Count
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator
  nameWithType: ChangeConflictCollection.GetEnumerator
  fullName: System.Data.Linq.ChangeConflictCollection.GetEnumerator
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Data.Linq.ObjectChangeConflict> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Data.Linq.ObjectChangeConflict}
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: ChangeConflictCollection.Item
  fullName: System.Data.Linq.ChangeConflictCollection.Item
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public System.Data.Linq.ObjectChangeConflict this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Data.Linq.ObjectChangeConflict
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.Remove(System.Data.Linq.ObjectChangeConflict)
  id: Remove(System.Data.Linq.ObjectChangeConflict)
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: Remove
  nameWithType: ChangeConflictCollection.Remove
  fullName: System.Data.Linq.ChangeConflictCollection.Remove
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public bool Remove (System.Data.Linq.ObjectChangeConflict item);
    parameters:
    - id: item
      type: System.Data.Linq.ObjectChangeConflict
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode)
  id: ResolveAll(System.Data.Linq.RefreshMode)
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: ResolveAll
  nameWithType: ChangeConflictCollection.ResolveAll
  fullName: System.Data.Linq.ChangeConflictCollection.ResolveAll
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void ResolveAll (System.Data.Linq.RefreshMode mode);
    parameters:
    - id: mode
      type: System.Data.Linq.RefreshMode
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Data.Linq.ChangeConflictCollection.ResolveAll*
- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode,System.Boolean)
  id: ResolveAll(System.Data.Linq.RefreshMode,System.Boolean)
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: ResolveAll
  nameWithType: ChangeConflictCollection.ResolveAll
  fullName: System.Data.Linq.ChangeConflictCollection.ResolveAll
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: public void ResolveAll (System.Data.Linq.RefreshMode mode, bool autoResolveDeletes);
    parameters:
    - id: mode
      type: System.Data.Linq.RefreshMode
      description: Parameter description to be filled
    - id: autoResolveDeletes
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
  overload: System.Data.Linq.ChangeConflictCollection.ResolveAll*
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#Add(System.Data.Linq.ObjectChangeConflict)
  id: System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#Add(System.Data.Linq.ObjectChangeConflict)
  isEii: true
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.Add
  nameWithType: ChangeConflictCollection.System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.Add
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.Add
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ICollection<ObjectChangeConflict>.Add (System.Data.Linq.ObjectChangeConflict item);
    parameters:
    - id: item
      type: System.Data.Linq.ObjectChangeConflict
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#IsReadOnly
  isEii: true
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.IsReadOnly
  nameWithType: ChangeConflictCollection.System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.IsReadOnly
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.CopyTo
  nameWithType: ChangeConflictCollection.System.Collections.ICollection.CopyTo
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.CopyTo
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ChangeConflictCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ChangeConflictCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: Return description to be filled
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Linq.ChangeConflictCollection
  langs:
  - csharp
  - vb
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.ChangeConflictCollection.Clear
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: Clear
  nameWithType: ChangeConflictCollection.Clear
  fullName: System.Data.Linq.ChangeConflictCollection.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.ChangeConflictCollection.Contains(System.Data.Linq.ObjectChangeConflict)
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: Contains
  nameWithType: ChangeConflictCollection.Contains
  fullName: System.Data.Linq.ChangeConflictCollection.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ObjectChangeConflict
  parent: System.Data.Linq
  isExternal: false
  name: ObjectChangeConflict
  nameWithType: ObjectChangeConflict
  fullName: System.Data.Linq.ObjectChangeConflict
- uid: System.Data.Linq.ChangeConflictCollection.CopyTo(System.Data.Linq.ObjectChangeConflict[],System.Int32)
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: CopyTo
  nameWithType: ChangeConflictCollection.CopyTo
  fullName: System.Data.Linq.ChangeConflictCollection.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.ChangeConflictCollection.Count
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: Count
  nameWithType: ChangeConflictCollection.Count
  fullName: System.Data.Linq.ChangeConflictCollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.ChangeConflictCollection.GetEnumerator
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ChangeConflictCollection.GetEnumerator
  fullName: System.Data.Linq.ChangeConflictCollection.GetEnumerator
- uid: System.Data.Linq.ChangeConflictCollection.Item(System.Int32)
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: Item
  nameWithType: ChangeConflictCollection.Item
  fullName: System.Data.Linq.ChangeConflictCollection.Item
- uid: System.Data.Linq.ObjectChangeConflict
  parent: System.Data.Linq
  isExternal: false
  name: ObjectChangeConflict
  nameWithType: ObjectChangeConflict
  fullName: System.Data.Linq.ObjectChangeConflict
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.ChangeConflictCollection.Remove(System.Data.Linq.ObjectChangeConflict)
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: Remove
  nameWithType: ChangeConflictCollection.Remove
  fullName: System.Data.Linq.ChangeConflictCollection.Remove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ObjectChangeConflict
  parent: System.Data.Linq
  isExternal: false
  name: ObjectChangeConflict
  nameWithType: ObjectChangeConflict
  fullName: System.Data.Linq.ObjectChangeConflict
- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode)
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: ResolveAll
  nameWithType: ChangeConflictCollection.ResolveAll
  fullName: System.Data.Linq.ChangeConflictCollection.ResolveAll
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.RefreshMode
  parent: System.Data.Linq
  isExternal: false
  name: RefreshMode
  nameWithType: RefreshMode
  fullName: System.Data.Linq.RefreshMode
- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode,System.Boolean)
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: ResolveAll
  nameWithType: ChangeConflictCollection.ResolveAll
  fullName: System.Data.Linq.ChangeConflictCollection.ResolveAll
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.RefreshMode
  parent: System.Data.Linq
  isExternal: false
  name: RefreshMode
  nameWithType: RefreshMode
  fullName: System.Data.Linq.RefreshMode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#Add(System.Data.Linq.ObjectChangeConflict)
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.Add
  nameWithType: ChangeConflictCollection.System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.Add
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.Add
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Data.Linq.ObjectChangeConflict
  parent: System.Data.Linq
  isExternal: false
  name: ObjectChangeConflict
  nameWithType: ObjectChangeConflict
  fullName: System.Data.Linq.ObjectChangeConflict
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#IsReadOnly
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.IsReadOnly
  nameWithType: ChangeConflictCollection.System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.IsReadOnly
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ChangeConflictCollection.System.Collections.ICollection.CopyTo
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ChangeConflictCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#SyncRoot
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ChangeConflictCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator
  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll*
  parent: System.Data.Linq.ChangeConflictCollection
  isExternal: false
  name: ResolveAll
  nameWithType: ChangeConflictCollection.ResolveAll
