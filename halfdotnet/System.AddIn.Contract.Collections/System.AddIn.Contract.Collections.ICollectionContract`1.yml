### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.ICollectionContract`1
  id: ICollectionContract`1
  children:
  - System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)
  - System.AddIn.Contract.Collections.ICollectionContract`1.Clear
  - System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)
  - System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)
  - System.AddIn.Contract.Collections.ICollectionContract`1.GetCount
  - System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly
  - System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)
  langs:
  - csharp
  - vb
  name: ICollectionContract<C>
  nameWithType: ICollectionContract<C>
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>
  type: Interface
  syntax:
    content: 'public interface ICollectionContract<C> : System.AddIn.Contract.Collections.IEnumerableContract<C> where C : IContract'
    typeParameters:
    - id: C
      description: Parameter description to be filled
  implements:
  - System.AddIn.Contract.Collections.IEnumerableContract<C>
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)
  id: Add(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: ICollectionContract<C>.Add
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Add
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public void Add (C item);
    parameters:
    - id: item
      type: C
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Clear
  id: Clear
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  - vb
  name: Clear
  nameWithType: ICollectionContract<C>.Clear
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Clear
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public void Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)
  id: Contains(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: ICollectionContract<C>.Contains
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Contains
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public bool Contains (C item);
    parameters:
    - id: item
      type: C
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  - vb
  name: CopyTo
  nameWithType: ICollectionContract<C>.CopyTo
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.CopyTo
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public void CopyTo (C[] array, int arrayIndex);
    parameters:
    - id: array
      type: C[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetCount
  id: GetCount
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  - vb
  name: GetCount
  nameWithType: ICollectionContract<C>.GetCount
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetCount
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public int GetCount ();
    parameters: []
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly
  id: GetIsReadOnly
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  - vb
  name: GetIsReadOnly
  nameWithType: ICollectionContract<C>.GetIsReadOnly
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetIsReadOnly
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public bool GetIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)
  id: Remove(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  langs:
  - csharp
  - vb
  name: Remove
  nameWithType: ICollectionContract<C>.Remove
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Remove
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  syntax:
    content: public bool Remove (C item);
    parameters:
    - id: item
      type: C
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
references:
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Add(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Add
  nameWithType: ICollectionContract<C>.Add
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Add
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Clear
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Clear
  nameWithType: ICollectionContract<C>.Clear
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Contains(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Contains
  nameWithType: ICollectionContract<C>.Contains
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.CopyTo(`0[],System.Int32)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: CopyTo
  nameWithType: ICollectionContract<C>.CopyTo
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetCount
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: GetCount
  nameWithType: ICollectionContract<C>.GetCount
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.GetIsReadOnly
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: GetIsReadOnly
  nameWithType: ICollectionContract<C>.GetIsReadOnly
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.GetIsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.ICollectionContract`1.Remove(`0)
  parent: System.AddIn.Contract.Collections.ICollectionContract`1
  isExternal: false
  name: Remove
  nameWithType: ICollectionContract<C>.Remove
  fullName: System.AddIn.Contract.Collections.ICollectionContract<C>.Remove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
