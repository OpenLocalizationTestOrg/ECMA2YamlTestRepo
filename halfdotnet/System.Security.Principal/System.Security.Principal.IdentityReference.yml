### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.IdentityReference
  id: IdentityReference
  children:
  - System.Security.Principal.IdentityReference.Equals(System.Object)
  - System.Security.Principal.IdentityReference.GetHashCode
  - System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.ToString
  - System.Security.Principal.IdentityReference.Translate(System.Type)
  - System.Security.Principal.IdentityReference.Value
  langs:
  - csharp
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
  type: Class
  summary: Represents an identity and is the base class for the <see cref="T:System.Security.Principal.NTAccount"> and <xref:System.Security.Principal.SecurityIdentifier> classes. This class does not provide a public constructor, and therefore cannot be inherited.
  remarks: To be added.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public abstract class IdentityReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Returns a value that indicates whether the specified object equals this instance of the <see cref="T:System.Security.Principal.IdentityReference"> class.
  remarks: To be added.
  syntax:
    content: public abstract bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: An object to compare with this <see cref="T:System.Security.Principal.IdentityReference"> instance, or a null reference.
    return:
      type: System.Boolean
      description: '`true` if  is an object with the same underlying type and value as this <see cref="T:System.Security.Principal.IdentityReference"> instance; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Principal.IdentityReference.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Serves as a hash function for <see cref="T:System.Security.Principal.IdentityReference">. GetHashCode is suitable for use in hashing algorithms and data structures like a hash table.
  remarks: To be added.
  syntax:
    content: public abstract int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash code for this <see cref="T:System.Security.Principal.IdentityReference"> object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Returns a value that indicates whether the specified type is a valid translation type for the <see cref="T:System.Security.Principal.IdentityReference"> class.
  remarks: To be added.
  syntax:
    content: public abstract bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "The type being queried for validity to serve as a conversion from <see cref=\"T:System.Security.Principal.IdentityReference\">. The following target types are valid:  \n  \n <xref:System.Security.Principal.NTAccount>  \n  \n <xref:System.Security.Principal.SecurityIdentifier>"
    return:
      type: System.Boolean
      description: '`true` if  is a valid translation type for the <see cref="T:System.Security.Principal.IdentityReference"> class; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Compares two <see cref="T:System.Security.Principal.IdentityReference"> objects to determine whether they are equal. They are considered equal if they have the same canonical name representation as the one returned by the <xref:System.Security.Principal.IdentityReference.Value%2A> property or if they are both `null`.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: The left <see cref="T:System.Security.Principal.IdentityReference"> operand to use for the equality comparison. This parameter can be `null`.
    - id: right
      type: System.Security.Principal.IdentityReference
      description: The right <see cref="T:System.Security.Principal.IdentityReference"> operand to use for the equality comparison. This parameter can be `null`.
    return:
      type: System.Boolean
      description: '`true` if  and  are equal; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Compares two <see cref="T:System.Security.Principal.IdentityReference"> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.IdentityReference.Value%2A> property or if one of the objects is `null` and the other is not.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: The left <see cref="T:System.Security.Principal.IdentityReference"> operand to use for the inequality comparison. This parameter can be `null`.
    - id: right
      type: System.Security.Principal.IdentityReference
      description: The right <see cref="T:System.Security.Principal.IdentityReference"> operand to use for the inequality comparison. This parameter can be `null`.
    return:
      type: System.Boolean
      description: '`true` if  and  are not equal; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Principal.IdentityReference.ToString
  id: ToString
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Returns the string representation of the identity represented by the <see cref="T:System.Security.Principal.IdentityReference"> object.
  remarks: To be added.
  syntax:
    content: public abstract string ToString ();
    parameters: []
    return:
      type: System.String
      description: The identity in string format.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Translates the account name represented by the <see cref="T:System.Security.Principal.IdentityReference"> object into another <see cref="T:System.Security.Principal.IdentityReference">-derived type.
  remarks: To be added.
  syntax:
    content: public abstract System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: The target type for the conversion from <see cref="T:System.Security.Principal.IdentityReference">.
    return:
      type: System.Security.Principal.IdentityReference
      description: The converted identity.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Principal.IdentityReference.Value
  id: Value
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: Gets the string value of the identity represented by the <see cref="T:System.Security.Principal.IdentityReference"> object.
  remarks: To be added.
  syntax:
    content: public abstract string Value { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.IdentityReference.GetHashCode
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.Principal.IdentityReference.ToString
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReference.Value
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
