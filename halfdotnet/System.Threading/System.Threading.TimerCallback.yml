### YamlMime:ManagedReference
items:
- uid: System.Threading.TimerCallback
  id: TimerCallback
  langs:
  - csharp
  name: TimerCallback
  nameWithType: TimerCallback
  fullName: System.Threading.TimerCallback
  type: Delegate
  summary: Represents the method that handles calls from a <see cref="T:System.Threading.Timer">.
  remarks: "Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>. This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system. The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=fullName> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.  \n  \n> [!NOTE]\n>  Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads. You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.  \n  \n The timer delegate is specified when the timer is constructed, and cannot be changed. The start time for a `Timer` is passed in the  parameter of the `Timer` constructors, and the period is passed in the  parameter. For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=fullName>."
  example:
  - "The following code example shows how to create the delegate used with the `Timer` class.  \n  \n [!CODE [System.Threading.Timer#1](../CodeSnippet/VS_Snippets_CLR_System/system.Threading.Timer#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate void TimerCallback(object state);
  inheritance:
  - System.Object
  - System.Delegate
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
