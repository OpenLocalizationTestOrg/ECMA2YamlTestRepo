### YamlMime:ManagedReference
items:
- uid: System.Threading.Timeout
  id: Timeout
  children:
  - System.Threading.Timeout.Infinite
  - System.Threading.Timeout.InfiniteTimeSpan
  langs:
  - csharp
  name: Timeout
  nameWithType: Timeout
  fullName: System.Threading.Timeout
  type: Class
  summary: Contains constants that specify infinite time-out intervals. This class cannot be inherited.
  remarks: The members of this class are used to specify infinite time-out intervals in threading operations. <xref:System.Threading.Timeout.Infinite> is used by methods that accept an integer  parameter, such as <xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=fullName>, <xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=fullName>, and <xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.Int32%29?displayProperty=fullName>. <xref:System.Threading.Timeout.InfiniteTimeSpan> is used by methods that accept a  parameter of type <xref:System.TimeSpan>, such as <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=fullName>, <xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=fullName>, and <xref:System.Threading.ReaderWriterLock.AcquireReaderLock%28System.TimeSpan%29?displayProperty=fullName>.
  example:
  - "The following example shows a thread going to sleep for an infinite time and subsequently being woken up.  \n  \n [!CODE [System.Threading.Thread.Interrupt#1](../CodeSnippet/VS_Snippets_CLR_System/system.Threading.Thread.Interrupt#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class Timeout
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Timeout.Infinite
  id: Infinite
  parent: System.Threading.Timeout
  langs:
  - csharp
  name: Infinite
  nameWithType: Timeout.Infinite
  fullName: System.Threading.Timeout.Infinite
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: A constant used to specify an infinite waiting period, for threading methods that accept an <see cref="T:System.Int32"> parameter.
  remarks: "For threading methods that accept a  parameter, such as <xref:System.Threading.Thread.Sleep%28System.Int32%29?displayProperty=fullName> and <xref:System.Threading.Thread.Join%28System.Int32%29?displayProperty=fullName>, this value is used to suspend the thread indefinitely. However, in most cases, we recommend that you use other <xref:System.Threading?displayProperty=fullName> classes such as <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, or <xref:System.Threading.Semaphore> instead to sychronize threads or manage resources.  \n  \n The value of this field is -1 (0xFFFFFFFF)."
  syntax:
    content: public const int Infinite = -1;
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Timeout.InfiniteTimeSpan
  id: InfiniteTimeSpan
  parent: System.Threading.Timeout
  langs:
  - csharp
  name: InfiniteTimeSpan
  nameWithType: Timeout.InfiniteTimeSpan
  fullName: System.Threading.Timeout.InfiniteTimeSpan
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: A constant used to specify an infinite waiting period, for methods that accept a <see cref="T:System.TimeSpan"> parameter.
  remarks: "For threading methods that accept a  parameter of type <xref:System.TimeSpan>, such as <xref:System.Threading.Thread.Sleep%28System.TimeSpan%29?displayProperty=fullName> and <xref:System.Threading.Thread.Join%28System.TimeSpan%29?displayProperty=fullName>, this value is used to suspend the thread indefinitely. However, in most cases, we recommend that you use other <xref:System.Threading?displayProperty=fullName> classes such as <xref:System.Threading.Mutex>, <xref:System.Threading.Monitor>, <xref:System.Threading.EventWaitHandle>, or <xref:System.Threading.Semaphore> instead to sychronize threads or manage resources.  \n  \n The value of this field is -00:00:00.0010000, or -1 millisecond."
  syntax:
    content: public static readonly TimeSpan InfiniteTimeSpan;
    return:
      type: System.TimeSpan
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Threading.Timeout.Infinite
  parent: System.Threading.Timeout
  isExternal: false
  name: Infinite
  nameWithType: Timeout.Infinite
  fullName: System.Threading.Timeout.Infinite
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Timeout.InfiniteTimeSpan
  parent: System.Threading.Timeout
  isExternal: false
  name: InfiniteTimeSpan
  nameWithType: Timeout.InfiniteTimeSpan
  fullName: System.Threading.Timeout.InfiniteTimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
