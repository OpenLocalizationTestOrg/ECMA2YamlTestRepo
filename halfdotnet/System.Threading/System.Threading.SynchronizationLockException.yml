### YamlMime:ManagedReference
items:
- uid: System.Threading.SynchronizationLockException
  id: SynchronizationLockException
  children:
  - System.Threading.SynchronizationLockException.#ctor
  - System.Threading.SynchronizationLockException.#ctor(System.String)
  - System.Threading.SynchronizationLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Threading.SynchronizationLockException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: SynchronizationLockException
  nameWithType: SynchronizationLockException
  fullName: System.Threading.SynchronizationLockException
  type: Class
  summary: The exception that is thrown when a method requires the caller to own the lock on a given Monitor, and the method is invoked by a caller that does not own that lock.
  remarks: "SynchronizationLockException is thrown by calling the <xref:System.Threading.Monitor.Exit%2A>, <xref:System.Threading.Monitor.Pulse%2A>, <xref:System.Threading.Monitor.PulseAll%2A>, and <xref:System.Threading.Monitor.Wait%2A> methods of the <xref:System.Threading.Monitor> class from an unsynchronized block of code.  \n  \n SynchronizationLockException uses the HRESULT COR_E_SYNCHRONIZATIONLOCK, which has the value 0x80131518.  \n  \n For a list of initial property values for an instance of SynchronizationLockException, see the <xref:System.Threading.SynchronizationLockException.%23ctor%2A> constructors."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SynchronizationLockException : SystemException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.SynchronizationLockException.#ctor
  id: '#ctor'
  parent: System.Threading.SynchronizationLockException
  langs:
  - csharp
  name: SynchronizationLockException()
  nameWithType: SynchronizationLockException.SynchronizationLockException()
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Initializes a new instance of the <see cref="T:System.Threading.SynchronizationLockException"> class with default properties.
  remarks: "The following table shows the initial property values for an instance of <xref:System.Threading.SynchronizationLockException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  syntax:
    content: public SynchronizationLockException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.SynchronizationLockException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Threading.SynchronizationLockException
  langs:
  - csharp
  name: SynchronizationLockException(String)
  nameWithType: SynchronizationLockException.SynchronizationLockException(String)
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Initializes a new instance of the <see cref="T:System.Threading.SynchronizationLockException"> class with a specified error message.
  remarks: "The following table shows the initial property values for an instance of <xref:System.Threading.SynchronizationLockException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public SynchronizationLockException (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.SynchronizationLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Threading.SynchronizationLockException
  langs:
  - csharp
  name: SynchronizationLockException(SerializationInfo,StreamingContext)
  nameWithType: SynchronizationLockException.SynchronizationLockException(SerializationInfo,StreamingContext)
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Initializes a new instance of the <see cref="T:System.Threading.SynchronizationLockException"> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](../Topic/XML%20and%20SOAP%20Serialization.md).
  syntax:
    content: protected SynchronizationLockException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <see cref="T:System.Runtime.Serialization.SerializationInfo"> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <see cref="T:System.Runtime.Serialization.StreamingContext"> that contains contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.SynchronizationLockException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Threading.SynchronizationLockException
  langs:
  - csharp
  name: SynchronizationLockException(String,Exception)
  nameWithType: SynchronizationLockException.SynchronizationLockException(String,Exception)
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Initializes a new instance of the <see cref="T:System.Threading.SynchronizationLockException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Threading.SynchronizationLockException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public SynchronizationLockException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Threading.SynchronizationLockException.#ctor
  parent: System.Threading.SynchronizationLockException
  isExternal: false
  name: SynchronizationLockException()
  nameWithType: SynchronizationLockException.SynchronizationLockException()
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException()
- uid: System.Threading.SynchronizationLockException.#ctor(System.String)
  parent: System.Threading.SynchronizationLockException
  isExternal: false
  name: SynchronizationLockException(String)
  nameWithType: SynchronizationLockException.SynchronizationLockException(String)
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.SynchronizationLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Threading.SynchronizationLockException
  isExternal: false
  name: SynchronizationLockException(SerializationInfo,StreamingContext)
  nameWithType: SynchronizationLockException.SynchronizationLockException(SerializationInfo,StreamingContext)
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Threading.SynchronizationLockException.#ctor(System.String,System.Exception)
  parent: System.Threading.SynchronizationLockException
  isExternal: false
  name: SynchronizationLockException(String,Exception)
  nameWithType: SynchronizationLockException.SynchronizationLockException(String,Exception)
  fullName: System.Threading.SynchronizationLockException.SynchronizationLockException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
