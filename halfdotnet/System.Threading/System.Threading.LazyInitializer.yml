### YamlMime:ManagedReference
items:
- uid: System.Threading.LazyInitializer
  id: LazyInitializer
  children:
  - System.Threading.LazyInitializer.EnsureInitialized``1(``0@)
  - System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})
  - System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)
  - System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})
  langs:
  - csharp
  name: LazyInitializer
  nameWithType: LazyInitializer
  fullName: System.Threading.LazyInitializer
  type: Class
  summary: Provides lazy initialization routines.
  remarks: These routines avoid needing to allocate a dedicated, lazy-initialization instance, instead using references to ensure targets have been initialized as they are accessed.
  example:
  - "The following example demonstrates how to use EnsureInitialized to lazily initialize a value using a Boolean value to track whether initialization has already happened and an object to use as the mutual exclusion lock.  \n  \n```vb#  \nDim _data As ExpensiveData = Nothing  \nDim _dataInitialized As Boolean = False  \nDim _dataLock As Object = Nothing  \n'    ...  \nDim name = LazyInitializer.EnsureInitialized(_data, _dataInitialized, _dataLock)  \n```  \n  \n```c#  \nExpensiveData _data = null;  \n                     bool _dataInitialized = false;  \n                     object _dataLock = new object();  \n                  //  ...  \n  \n                    ExpensiveData dataToUse = LazyInitializer.EnsureInitialized(ref _data, ref _dataInitialized, ref _dataLock);  \n```"
  syntax:
    content: public static class LazyInitializer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@)
  id: EnsureInitialized``1(``0@)
  parent: System.Threading.LazyInitializer
  langs:
  - csharp
  name: EnsureInitialized(T)
  nameWithType: LazyInitializer.EnsureInitialized(T)
  fullName: System.Threading.LazyInitializer.EnsureInitialized(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public static T EnsureInitialized<T> (ref T target) where T : class;'
    parameters:
    - id: target
      type: T
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Threading.LazyInitializer.EnsureInitialized<T>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})
  id: EnsureInitialized``1(``0@,System.Func{``0})
  parent: System.Threading.LazyInitializer
  langs:
  - csharp
  name: EnsureInitialized(T,Func<T>)
  nameWithType: LazyInitializer.EnsureInitialized(T,Func<T>)
  fullName: System.Threading.LazyInitializer.EnsureInitialized(T,Func<T>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: 'public static T EnsureInitialized<T> (ref T target, Func<T> valueFactory) where T : class;'
    parameters:
    - id: target
      type: T
      description: To be added.
    - id: valueFactory
      type: System.Func{T}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Threading.LazyInitializer.EnsureInitialized<T>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)
  id: EnsureInitialized``1(``0@,System.Boolean@,System.Object@)
  parent: System.Threading.LazyInitializer
  langs:
  - csharp
  name: EnsureInitialized(T,Boolean,Object)
  nameWithType: LazyInitializer.EnsureInitialized(T,Boolean,Object)
  fullName: System.Threading.LazyInitializer.EnsureInitialized(T,Boolean,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static T EnsureInitialized<T> (ref T target, ref bool initialized, ref object syncLock);
    parameters:
    - id: target
      type: T
      description: To be added.
    - id: initialized
      type: System.Boolean
      description: To be added.
    - id: syncLock
      type: System.Object
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Threading.LazyInitializer.EnsureInitialized<T>*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})
  id: EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})
  parent: System.Threading.LazyInitializer
  langs:
  - csharp
  name: EnsureInitialized(T,Boolean,Object,Func<T>)
  nameWithType: LazyInitializer.EnsureInitialized(T,Boolean,Object,Func<T>)
  fullName: System.Threading.LazyInitializer.EnsureInitialized(T,Boolean,Object,Func<T>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static T EnsureInitialized<T> (ref T target, ref bool initialized, ref object syncLock, Func<T> valueFactory);
    parameters:
    - id: target
      type: T
      description: To be added.
    - id: initialized
      type: System.Boolean
      description: To be added.
    - id: syncLock
      type: System.Object
      description: To be added.
    - id: valueFactory
      type: System.Func{T}
      description: To be added.
    return:
      type: T
      description: To be added.
  overload: System.Threading.LazyInitializer.EnsureInitialized<T>*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@)
  parent: System.Threading.LazyInitializer
  isExternal: false
  name: EnsureInitialized(T)
  nameWithType: LazyInitializer.EnsureInitialized(T)
  fullName: System.Threading.LazyInitializer.EnsureInitialized(T)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})
  parent: System.Threading.LazyInitializer
  isExternal: false
  name: EnsureInitialized(T,Func<T>)
  nameWithType: LazyInitializer.EnsureInitialized(T,Func<T>)
  fullName: System.Threading.LazyInitializer.EnsureInitialized(T,Func<T>)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{T}
  parent: System
  isExternal: true
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@)
  parent: System.Threading.LazyInitializer
  isExternal: false
  name: EnsureInitialized(T,Boolean,Object)
  nameWithType: LazyInitializer.EnsureInitialized(T,Boolean,Object)
  fullName: System.Threading.LazyInitializer.EnsureInitialized(T,Boolean,Object)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})
  parent: System.Threading.LazyInitializer
  isExternal: false
  name: EnsureInitialized(T,Boolean,Object,Func<T>)
  nameWithType: LazyInitializer.EnsureInitialized(T,Boolean,Object,Func<T>)
  fullName: System.Threading.LazyInitializer.EnsureInitialized(T,Boolean,Object,Func<T>)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Func{T}
  parent: System
  isExternal: true
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
- uid: System.Threading.LazyInitializer.EnsureInitialized<T>*
  parent: System.Threading.LazyInitializer
  isExternal: false
  nameWithType: LazyInitializer.
