### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter
  id: BuiltInRoleConverter
  children:
  - Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.#ctor
  - Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: BuiltInRoleConverter
  nameWithType: BuiltInRoleConverter
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter
  type: Class
  summary: Provides a type converter to convert <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole"> enumeration values to <xref:System.Security.Principal.WindowsBuiltInRole> enumeration values.
  remarks: "This type converter supports the Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> object.  \n  \n For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](../Topic/How%20to:%20Implement%20a%20Type%20Converter.md).  \n  \n> [!CAUTION]\n>  You should never create an instance of a BuiltInRoleConverter class. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class."
  syntax:
    content: 'public class BuiltInRoleConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter
  langs:
  - csharp
  name: BuiltInRoleConverter()
  nameWithType: BuiltInRoleConverter.BuiltInRoleConverter()
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.BuiltInRoleConverter()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter"> class.
  remarks: This type converter supports the Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> object.
  syntax:
    content: public BuiltInRoleConverter ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: BuiltInRoleConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Gets a value indicating whether this converter can convert an object to the given destination type using the context.
  remarks: "The  parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `Nothing`, so always check. Also, properties on the context object can return `Nothing`.  \n  \n This type converter supports the Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> object."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: An <xref:System.ComponentModel.ITypeDescriptorContext> object that provides a format context.
    - id: destinationType
      type: System.Type
      description: A <see cref="T:System.Type"> object that represents the type you wish to convert to.
    return:
      type: System.Boolean
      description: A <see cref="T:System.Boolean"> object that indicates whether this converter can perform the conversion.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: BuiltInRoleConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: Converts the given object to another type.
  remarks: "The most common types to convert to and convert from are string objects. The default implementation makes a call to <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is <xref:System.String>.  \n  \n The  parameter can be used to extract additional information about the environment this converter is being invoked from. This can be `Nothing`, so always check. Also, properties on the context object can return `Nothing`.  \n  \n This type converter supports the Visual Basic <xref:Microsoft.VisualBasic.ApplicationServices.User> object."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: A formatter context.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture into which  will be converted.
    - id: value
      type: System.Object
      description: The object to convert.
    - id: destinationType
      type: System.Type
      description: The type to convert the object to.
    return:
      type: System.Object
      description: The converted object.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter
  isExternal: false
  name: BuiltInRoleConverter()
  nameWithType: BuiltInRoleConverter.BuiltInRoleConverter()
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.BuiltInRoleConverter()
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: BuiltInRoleConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: BuiltInRoleConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRoleConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: true
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
