### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer
  id: CompositionContainer
  children:
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  - System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  langs:
  - csharp
  name: CompositionContainer
  nameWithType: CompositionContainer
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer
  type: Class
  summary: Manages the composition of parts.
  remarks: "A CompositionContainer object serves two major purposes in an application. First, it keeps track of which parts are available for composition and what their dependencies are, and performs composition whenever the set of available parts changes. Second, it provides the methods by which the application gets instances of composed parts or fills the dependencies of a composable part.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n Parts can be made available to the container either directly or through the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A> property. All the parts discoverable in this <xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog> are available to the container to fulfill imports, along with any parts added directly.  \n  \n The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A> method allows instantiated parts to be added to an existing container. Assuming composition is successful, these parts will have their imports filled with parts retrieved from the container, and their exports will be available to other parts. Imports marked as recomposable will be registered for recomposition.  \n  \n The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A> method allows a part to have its imports filled without being added to the container. If the composition is successful, the part's imports will be filled, but the part's exports will not be available to other parts and no imports will be registered for recomposition.  \n  \n CompositionContainer objects should always be disposed. When the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A> method is called, the CompositionContainer object also disposes all the parts that it has created.  \n  \n A CompositionContainer object that can be accessed from multiple threads must be constructed with the  parameter set to `true`, using the [CompositionContainer(ComposablePartCatalog, Boolean, ExportProvider\\[\\])](assetId:///M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])?qualifyHint=False&autoUpgrade=False) constructor. Performance will be slightly slower when  is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios. The default is `false`.  \n  \n> [!WARNING]\n>  A CompositionContainer should never import itself, or a part that has a reference to it. Such a reference could allow an untrusted part to gain access all the parts in the container."
  example:
  - "In the following example, a CompositionContainer object is initialized with a catalog and is used to fill the imports of a part. This example uses the Attributed Programming Model.  \n  \n [!code-cs[Composition.CompositionContainer#1](../../add/codesnippet/CSharp/consoleapplication1/program.cs#1)]\n [!code-vb[Composition.CompositionContainer#1](../../add/codesnippet/VisualBasic/compositioncontainerexample/module1.vb#1)]"
  syntax:
    content: 'public class CompositionContainer : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable, System.ComponentModel.Composition.ICompositionService'
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Hosting.ExportProvider
  implements:
  - System.ComponentModel.Composition.ICompositionService
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged
  - System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2
  - System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer()
  nameWithType: CompositionContainer.CompositionContainer()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> class.
  remarks: To be added.
  syntax:
    content: public CompositionContainer ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> class with the specified export providers.
  remarks: To be added.
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"> objects that provide the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> access to <xref:System.ComponentModel.Composition.Primitives.Export> objects, or `null` to set <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers%2A> to an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> class with the specified export providers and options.
  remarks: To be added.
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: compositionOptions
      type: System.ComponentModel.Composition.Hosting.CompositionOptions
      description: An object that specifies the behavior of this container.
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"> objects that provide the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> access to <xref:System.ComponentModel.Composition.Primitives.Export> objects, or `null` to set <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers%2A> to an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> class with the specified catalog and export providers.
  remarks: To be added.
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export"> objects to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"> objects that provide the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> access to <xref:System.ComponentModel.Composition.Primitives.Export> objects, or `null` to set <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers%2A> to an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> class with the specified catalog, thread-safe mode, and export providers.
  remarks: A <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object that can be accessed from multiple threads must set the  parameter to `true`. Performance will be slightly slower when  is `true`, so we recommend that you set this parameter to `false` in single-threaded scenarios. The default is `false`.
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export"> objects to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.
    - id: isThreadSafe
      type: System.Boolean
      description: '`true` if this <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> object must be thread-safe; otherwise, `false`.'
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"> objects that provide the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> access to <xref:System.ComponentModel.Composition.Primitives.Export> objects, or `null` to set the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers%2A> property to an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  id: '#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])'
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> class with the specified catalog, options, and export providers.
  remarks: To be added.
  syntax:
    content: public CompositionContainer (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions, System.ComponentModel.Composition.Hosting.ExportProvider[] providers);
    parameters:
    - id: catalog
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: A catalog that provides <see cref="T:System.ComponentModel.Composition.Primitives.Export"> objects to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.
    - id: compositionOptions
      type: System.ComponentModel.Composition.Hosting.CompositionOptions
      description: An object that specifies options that affect the behavior of the container.
    - id: providers
      type: System.ComponentModel.Composition.Hosting.ExportProvider[]
      description: An array of <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider"> objects that provide the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> access to <xref:System.ComponentModel.Composition.Primitives.Export> objects, or `null` to set <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers%2A> to an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  id: Catalog
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Catalog
  nameWithType: CompositionContainer.Catalog
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets the <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"> that provides the container access to <xref:System.ComponentModel.Composition.Primitives.Export> objects.
  remarks: To be added.
  syntax:
    content: public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }
    return:
      type: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  id: Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Compose(CompositionBatch)
  nameWithType: CompositionContainer.Compose(CompositionBatch)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(CompositionBatch)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Adds or removes the parts in the specified <see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch"> from the container and executes composition.
  remarks: "This method is the primary way of directly adding or removing parts from the container. The <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> will always maintain a stable, composed state. Therefore, calling Compose with an empty <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> is never necessary to start composition. Instead, call the Compose method whenever you need to make changes to the parts available to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.  \n  \n The <xref:System.ComponentModel.Composition.Hosting.CompositionBatch> can contain both parts to be added and parts to be removed.  Recomposition will take place only once for each call to Compose."
  example:
  - "In this simple example, three parts are created and added to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>, and one part is retrieved to show that all imports have been filled. This example uses the Attributed Programming Model.  \n  \n [!CODE [Composition.CompositionContainer.Compose#1](../../add/codesnippet/composition.compositioncontainer.md)]"
  syntax:
    content: public void Compose (System.ComponentModel.Composition.Hosting.CompositionBatch batch);
    parameters:
    - id: batch
      type: System.ComponentModel.Composition.Hosting.CompositionBatch
      description: Changes to the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> to include during the composition.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  id: Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Dispose()
  nameWithType: CompositionContainer.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> class.
  remarks: "Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>. The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](../Topic/Cleaning%20Up%20Unmanaged%20Resources.md) and [Implementing a Dispose Method](../Topic/Implementing%20a%20Dispose%20Method.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object's `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CompositionContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer"> and optionally releases the managed resources.
  remarks: To be added.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  id: GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Returns a collection of all exports that match the conditions in the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"> object.
  remarks: Implementations should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches. For example, if the import requests exactly one export and the provider has either no matching exports or more than one, the GetExportsCore method should return an empty <xref:System.Collections.Generic.IEnumerable%601> collection of <xref:System.ComponentModel.Composition.Primitives.Export> objects.
  syntax:
    content: protected override System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export"> objects to get.
    - id: atomicComposition
      type: System.ComponentModel.Composition.Hosting.AtomicComposition
      description: The composition transaction to use, or `null` to disable transactional composition.
    return:
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export"> objects in this <xref:System.ComponentModel.Composition.Hosting.CompositionContainer> object that match the conditions specified by .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  id: Providers
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: Providers
  nameWithType: CompositionContainer.Providers
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Gets the export providers that provide the container access to additional <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog"> objects.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider> Providers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  id: ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExport(Export)
  nameWithType: CompositionContainer.ReleaseExport(Export)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Export)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Releases the specified <see cref="T:System.ComponentModel.Composition.Primitives.Export"> object from the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.
  remarks: "The behavior of this method may vary depending on the implementation of the <xref:System.ComponentModel.Composition.Hosting.ExportProvider> that produced the <xref:System.ComponentModel.Composition.Primitives.Export> instance. As a rule, non-shared exports should be detached from the container.  \n  \n For example, the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> will only release an <xref:System.ComponentModel.Composition.Primitives.Export> if it comes from a <xref:System.ComponentModel.Composition.Primitives.ComposablePart> that was constructed under a <xref:System.ComponentModel.Composition.CreationPolicy> context. Release in this context means walking the dependency chain of the <xref:System.ComponentModel.Composition.Primitives.Export> objects, detaching references from the container and calling `Dispose` on the <xref:System.ComponentModel.Composition.Primitives.ComposablePart> objects as needed. If the <xref:System.ComponentModel.Composition.Primitives.Export> was constructed under a <xref:System.ComponentModel.Composition.CreationPolicy> context the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> will do nothing, as the specified <xref:System.ComponentModel.Composition.Primitives.Export> may being used by other requestors. Those will only be detached when the container is itself disposed."
  syntax:
    content: public void ReleaseExport (System.ComponentModel.Composition.Primitives.Export export);
    parameters:
    - id: export
      type: System.ComponentModel.Composition.Primitives.Export
      description: The <see cref="T:System.ComponentModel.Composition.Primitives.Export"> that needs to be released.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  id: ReleaseExport``1(System.Lazy{``0})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExport(Lazy<T>)
  nameWithType: CompositionContainer.ReleaseExport(Lazy<T>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Lazy<T>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void ReleaseExport<T> (Lazy<T> export);
    parameters:
    - id: export
      type: System.Lazy{T}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  id: ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Export>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Export>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Releases a set of <see cref="T:System.ComponentModel.Composition.Primitives.Export"> objects from the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.
  remarks: The behavior of this method may vary depending on the context in which the <xref:System.ComponentModel.Composition.Primitives.Export> was constructed. For more information, see the <xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A> method.
  syntax:
    content: public void ReleaseExports (System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
      description: A collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export"> objects to be released.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  id: ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Lazy<T>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void ReleaseExports<T> (System.Collections.Generic.IEnumerable<Lazy<T>> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.Lazy{T}}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  id: ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public void ReleaseExports<T,TMetadataView> (System.Collections.Generic.IEnumerable<Lazy<T,TMetadataView>> exports);
    parameters:
    - id: exports
      type: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  id: SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  langs:
  - csharp
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionContainer.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(ComposablePart)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: Satisfies the imports of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"> object without registering it for recomposition.
  remarks: To be added.
  syntax:
    content: public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: The part to satisfy the imports of.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  isExternal: false
  name: System.ComponentModel.Composition.Hosting.ExportProvider
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer()
  nameWithType: CompositionContainer.CompositionContainer()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer()
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider[]
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(CompositionOptions,ExportProvider[])
- uid: System.ComponentModel.Composition.Hosting.CompositionOptions
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionOptions
  nameWithType: CompositionOptions
  fullName: System.ComponentModel.Composition.Hosting.CompositionOptions
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider[]
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,ExportProvider[])
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider[]
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,Boolean,ExportProvider[])
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider[]
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  nameWithType: CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.CompositionContainer(ComposablePartCatalog,CompositionOptions,ExportProvider[])
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.ComponentModel.Composition.Hosting.CompositionOptions
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionOptions
  nameWithType: CompositionOptions
  fullName: System.ComponentModel.Composition.Hosting.CompositionOptions
- uid: System.ComponentModel.Composition.Hosting.ExportProvider
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ExportProvider
  nameWithType: ExportProvider
  fullName: System.ComponentModel.Composition.Hosting.ExportProvider[]
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Catalog
  nameWithType: CompositionContainer.Catalog
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePartCatalog
  nameWithType: ComposablePartCatalog
  fullName: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Compose(CompositionBatch)
  nameWithType: CompositionContainer.Compose(CompositionBatch)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(CompositionBatch)
- uid: System.ComponentModel.Composition.Hosting.CompositionBatch
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: CompositionBatch
  nameWithType: CompositionBatch
  fullName: System.ComponentModel.Composition.Hosting.CompositionBatch
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose()
  nameWithType: CompositionContainer.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose()
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CompositionContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: GetExportsCore(ImportDefinition,AtomicComposition)
  nameWithType: CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(ImportDefinition,AtomicComposition)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Export>
  nameWithType: IEnumerable<Export>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export>
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.AtomicComposition
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: AtomicComposition
  nameWithType: AtomicComposition
  fullName: System.ComponentModel.Composition.Hosting.AtomicComposition
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: Providers
  nameWithType: CompositionContainer.Providers
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.Providers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.Hosting.ExportProvider}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<ExportProvider>
  nameWithType: ReadOnlyCollection<ExportProvider>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.Hosting.ExportProvider>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport(Export)
  nameWithType: CompositionContainer.ReleaseExport(Export)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Export)
- uid: System.ComponentModel.Composition.Primitives.Export
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: Export
  nameWithType: Export
  fullName: System.ComponentModel.Composition.Primitives.Export
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExport(Lazy<T>)
  nameWithType: CompositionContainer.ReleaseExport(Lazy<T>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(Lazy<T>)
- uid: System.Lazy{T}
  parent: System
  isExternal: true
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Export>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Export>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Export>)
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Export>
  nameWithType: IEnumerable<Export>
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.Export>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Lazy<T>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T>>)
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Lazy<T>>
  nameWithType: IEnumerable<Lazy<T>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T>>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``0MetadataView}})
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  nameWithType: CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(IEnumerable<Lazy<T,TMetadataView>>)
- uid: System.Collections.Generic.IEnumerable{System.Lazy{T,TMetadataView}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Lazy<T,TMetadataView>>
  nameWithType: IEnumerable<Lazy<T,TMetadataView>>
  fullName: System.Collections.Generic.IEnumerable<System.Lazy<T,TMetadataView>>
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionContainer.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(ComposablePart)
- uid: System.ComponentModel.Composition.Primitives.ComposablePart
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePart
  nameWithType: ComposablePart
  fullName: System.ComponentModel.Composition.Primitives.ComposablePart
- uid: System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose*
  parent: System.ComponentModel.Composition.Hosting.CompositionContainer
  isExternal: false
  nameWithType: CompositionContainer.
