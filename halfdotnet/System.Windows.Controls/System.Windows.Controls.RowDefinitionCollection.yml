### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.RowDefinitionCollection
  id: RowDefinitionCollection
  children:
  - System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.Clear
  - System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.Count
  - System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.IsReadOnly
  - System.Windows.Controls.RowDefinitionCollection.IsSynchronized
  - System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)
  - System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.SyncRoot
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: RowDefinitionCollection
  nameWithType: RowDefinitionCollection
  fullName: System.Windows.Controls.RowDefinitionCollection
  type: Class
  summary: Provides access to an ordered, strongly typed collection of <see cref="T:System.Windows.Controls.RowDefinition"> objects.
  remarks: To be added.
  syntax:
    content: 'public sealed class RowDefinitionCollection : System.Collections.Generic.ICollection<System.Windows.Controls.RowDefinition>, System.Collections.Generic.IEnumerable<System.Windows.Controls.RowDefinition>, System.Collections.Generic.IList<System.Windows.Controls.RowDefinition>, System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Windows.Controls.RowDefinition>
  - System.Collections.Generic.IEnumerable<System.Windows.Controls.RowDefinition>
  - System.Collections.Generic.IList<System.Windows.Controls.RowDefinition>
  - System.Collections.IList
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)
  id: Add(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Add(RowDefinition)
  nameWithType: RowDefinitionCollection.Add(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Add(RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Adds a <see cref="T:System.Windows.Controls.RowDefinition"> element to a <xref:System.Windows.Controls.RowDefinitionCollection>.
  remarks: ''
  example:
  - "The following example demonstrates how to use the Add method to add a <xref:System.Windows.Controls.RowDefinition> to a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#3](../../add/codesnippet/VisualBasic/ColumnDefinitionsGrid/Window1.xaml.vb#3)]\n [!code-cs[columndefinitionsgrid#3](../../add/codesnippet/CSharp/columndefinitions_grid/Window1.xaml.cs#3)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](../Topic/How%20to:%20Manipulate%20Columns%20and%20Rows%20by%20Using%20ColumnDefinitionsCollections%20and%20RowDefinitionsCollections.md)."
  syntax:
    content: public void Add (System.Windows.Controls.RowDefinition value);
    parameters:
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: Identifies the <see cref="T:System.Windows.Controls.RowDefinition"> to add to the collection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.Clear
  id: Clear
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: RowDefinitionCollection.Clear()
  fullName: System.Windows.Controls.RowDefinitionCollection.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Clears the content of the <see cref="T:System.Windows.Controls.RowDefinitionCollection">.
  remarks: ''
  example:
  - "The following example demonstrates how to use the Clear method to clear the content of a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#4](../../add/codesnippet/VisualBasic/ColumnDefinitionsGrid/Window1.xaml.vb#4)]\n [!code-cs[columndefinitionsgrid#4](../../add/codesnippet/CSharp/columndefinitions_grid/Window1.xaml.cs#4)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](../Topic/How%20to:%20Manipulate%20Columns%20and%20Rows%20by%20Using%20ColumnDefinitionsCollections%20and%20RowDefinitionsCollections.md)."
  syntax:
    content: public void Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)
  id: Contains(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Contains(RowDefinition)
  nameWithType: RowDefinitionCollection.Contains(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Contains(RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Determines whether a given <see cref="T:System.Windows.Controls.RowDefinition"> exists within a <xref:System.Windows.Controls.RowDefinitionCollection>.
  remarks: ''
  example:
  - "The following example demonstrates how to use the Contains method to determine whether a <xref:System.Windows.Controls.RowDefinition> exists in a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#8](../../add/codesnippet/VisualBasic/ColumnDefinitionsGrid/Window1.xaml.vb#8)]\n [!code-cs[columndefinitionsgrid#8](../../add/codesnippet/CSharp/columndefinitions_grid/Window1.xaml.cs#8)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](../Topic/How%20to:%20Manipulate%20Columns%20and%20Rows%20by%20Using%20ColumnDefinitionsCollections%20and%20RowDefinitionsCollections.md)."
  syntax:
    content: public bool Contains (System.Windows.Controls.RowDefinition value);
    parameters:
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: Identifies the <see cref="T:System.Windows.Controls.RowDefinition"> that is being tested.
    return:
      type: System.Boolean
      description: '`true` if the <see cref="T:System.Windows.Controls.RowDefinition"> exists within the collection; otherwise `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)
  id: CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: CopyTo(RowDefinition[],Int32)
  nameWithType: RowDefinitionCollection.CopyTo(RowDefinition[],Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.CopyTo(RowDefinition[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Copies an array of <see cref="T:System.Windows.Controls.RowDefinition"> objects to a given index position within a <xref:System.Windows.Controls.RowDefinitionCollection>.
  remarks: <xref:System.Windows.Controls.RowDefinitionCollection> uses a zero-based indexing system.
  syntax:
    content: public void CopyTo (System.Windows.Controls.RowDefinition[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Controls.RowDefinition[]
      description: An array of <see cref="T:System.Windows.Controls.RowDefinition"> objects.
    - id: index
      type: System.Int32
      description: Identifies the index position within  to which the <see cref="T:System.Windows.Controls.RowDefinition"> objects are copied.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.Count
  id: Count
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Count
  nameWithType: RowDefinitionCollection.Count
  fullName: System.Windows.Controls.RowDefinitionCollection.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets the total number of items within this instance of <see cref="T:System.Windows.Controls.RowDefinitionCollection">.
  remarks: <xref:System.Windows.Controls.RowDefinitionCollection> uses a zero-based indexing system.
  example:
  - "The following example demonstrates how to use the Count property.  \n  \n [!code-vb[columndefinitionsgrid#7](../../add/codesnippet/VisualBasic/ColumnDefinitionsGrid/Window1.xaml.vb#7)]\n [!code-cs[columndefinitionsgrid#7](../../add/codesnippet/CSharp/columndefinitions_grid/Window1.xaml.cs#7)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](../Topic/How%20to:%20Manipulate%20Columns%20and%20Rows%20by%20Using%20ColumnDefinitionsCollections%20and%20RowDefinitionsCollections.md)."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)
  id: IndexOf(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: IndexOf(RowDefinition)
  nameWithType: RowDefinitionCollection.IndexOf(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.IndexOf(RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Returns the index position of a given <see cref="T:System.Windows.Controls.RowDefinition"> within a <xref:System.Windows.Controls.RowDefinitionCollection>.
  remarks: ''
  example:
  - "The following example demonstrates how to use the IndexOf method to determine the index position of a <xref:System.Windows.Controls.RowDefinition> within a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#9](../../add/codesnippet/VisualBasic/ColumnDefinitionsGrid/Window1.xaml.vb#9)]\n [!code-cs[columndefinitionsgrid#9](../../add/codesnippet/CSharp/columndefinitions_grid/Window1.xaml.cs#9)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](../Topic/How%20to:%20Manipulate%20Columns%20and%20Rows%20by%20Using%20ColumnDefinitionsCollections%20and%20RowDefinitionsCollections.md)."
  syntax:
    content: public int IndexOf (System.Windows.Controls.RowDefinition value);
    parameters:
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: The <see cref="T:System.Windows.Controls.RowDefinition"> whose index position is desired.
    return:
      type: System.Int32
      description: The index of  if found in the collection; otherwise, -1.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)
  id: Insert(System.Int32,System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Insert(Int32,RowDefinition)
  nameWithType: RowDefinitionCollection.Insert(Int32,RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Insert(Int32,RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Inserts a <see cref="T:System.Windows.Controls.RowDefinition"> at the specified index position within a <xref:System.Windows.Controls.RowDefinitionCollection>.
  remarks: <xref:System.Windows.Controls.RowDefinitionCollection> uses a zero-based indexing system.
  example:
  - "The following example demonstrates how to use the Insert method to insert a <xref:System.Windows.Controls.RowDefinition> to a specific  position within a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#9](../../add/codesnippet/VisualBasic/ColumnDefinitionsGrid/Window1.xaml.vb#9)]\n [!code-cs[columndefinitionsgrid#9](../../add/codesnippet/CSharp/columndefinitions_grid/Window1.xaml.cs#9)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](../Topic/How%20to:%20Manipulate%20Columns%20and%20Rows%20by%20Using%20ColumnDefinitionsCollections%20and%20RowDefinitionsCollections.md)."
  syntax:
    content: public void Insert (int index, System.Windows.Controls.RowDefinition value);
    parameters:
    - id: index
      type: System.Int32
      description: The position within the collection where the item is inserted.
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: The <see cref="T:System.Windows.Controls.RowDefinition"> to insert.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: RowDefinitionCollection.IsReadOnly
  fullName: System.Windows.Controls.RowDefinitionCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets a value that indicates whether a <see cref="T:System.Windows.Controls.RowDefinitionCollection"> is read-only.
  remarks: ''
  example:
  - "The following example demonstrates how to get the value of the IsReadOnly property.  \n  \n [!code-vb[columndefinitionsgrid#10](../../add/codesnippet/VisualBasic/ColumnDefinitionsGrid/Window1.xaml.vb#10)]\n [!code-cs[columndefinitionsgrid#10](../../add/codesnippet/CSharp/columndefinitions_grid/Window1.xaml.cs#10)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](../Topic/How%20to:%20Manipulate%20Columns%20and%20Rows%20by%20Using%20ColumnDefinitionsCollections%20and%20RowDefinitionsCollections.md)."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: RowDefinitionCollection.IsSynchronized
  fullName: System.Windows.Controls.RowDefinitionCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets a value that indicates whether access to this <see cref="T:System.Windows.Controls.RowDefinitionCollection"> is synchronized (thread-safe).
  remarks: Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: RowDefinitionCollection.Item(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets a value that indicates the current item within a <see cref="T:System.Windows.Controls.RowDefinitionCollection">.
  remarks: <xref:System.Windows.Controls.RowDefinitionCollection> uses a zero-based indexing system.
  syntax:
    content: public System.Windows.Controls.RowDefinition this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The current item in the collection.
    return:
      type: System.Windows.Controls.RowDefinition
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)
  id: Remove(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: Remove(RowDefinition)
  nameWithType: RowDefinitionCollection.Remove(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Remove(RowDefinition)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Removes a <see cref="T:System.Windows.Controls.RowDefinition"> from a <xref:System.Windows.Controls.RowDefinitionCollection>.
  remarks: To be added.
  syntax:
    content: public bool Remove (System.Windows.Controls.RowDefinition value);
    parameters:
    - id: value
      type: System.Windows.Controls.RowDefinition
      description: The <see cref="T:System.Windows.Controls.RowDefinition"> to remove from the collection.
    return:
      type: System.Boolean
      description: '`true` if the <see cref="T:System.Windows.Controls.RowDefinition"> was found in the collection and removed; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: RowDefinitionCollection.RemoveAt(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Removes a <see cref="T:System.Windows.Controls.RowDefinition"> from a <xref:System.Windows.Controls.RowDefinitionCollection> at the specified index position.
  remarks: <xref:System.Windows.Controls.RowDefinitionCollection> uses a zero-based indexing system.
  example:
  - "The following example demonstrates how to use the RemoveAt method to remove a <xref:System.Windows.Controls.RowDefinition> to a <xref:System.Windows.Controls.RowDefinitionCollection> at a specific  position.  \n  \n [!code-vb[columndefinitionsgrid#5](../../add/codesnippet/VisualBasic/ColumnDefinitionsGrid/Window1.xaml.vb#5)]\n [!code-cs[columndefinitionsgrid#5](../../add/codesnippet/CSharp/columndefinitions_grid/Window1.xaml.cs#5)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](../Topic/How%20to:%20Manipulate%20Columns%20and%20Rows%20by%20Using%20ColumnDefinitionsCollections%20and%20RowDefinitionsCollections.md)."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The position within the collection at which the <see cref="T:System.Windows.Controls.RowDefinition"> is removed.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: RowDefinitionCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Removes a range of <see cref="T:System.Windows.Controls.RowDefinition"> objects from a <xref:System.Windows.Controls.RowDefinitionCollection>.
  remarks: <xref:System.Windows.Controls.RowDefinitionCollection> uses a zero-based indexing system.
  example:
  - "The following example demonstrates how to use the RemoveRange method to remove a range of <xref:System.Windows.Controls.RowDefinition> elements from a <xref:System.Windows.Controls.RowDefinitionCollection>.  \n  \n [!code-vb[columndefinitionsgrid#6](../../add/codesnippet/VisualBasic/ColumnDefinitionsGrid/Window1.xaml.vb#6)]\n [!code-cs[columndefinitionsgrid#6](../../add/codesnippet/CSharp/columndefinitions_grid/Window1.xaml.cs#6)]  \n  \n To view the complete sample, see [How to: Manipulate Columns and Rows by Using ColumnDefinitionsCollections and RowDefinitionsCollections](../Topic/How%20to:%20Manipulate%20Columns%20and%20Rows%20by%20Using%20ColumnDefinitionsCollections%20and%20RowDefinitionsCollections.md)."
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: The position within the collection at which the first <see cref="T:System.Windows.Controls.RowDefinition"> is removed.
    - id: count
      type: System.Int32
      description: The total number of <see cref="T:System.Windows.Controls.RowDefinition"> objects to remove from the collection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: RowDefinitionCollection.SyncRoot
  fullName: System.Windows.Controls.RowDefinitionCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Controls.RowDefinitionCollection">.
  remarks: Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: RowDefinitionCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: To be added.
  remarks: To be added.
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Windows.Controls.RowDefinition> IEnumerable<RowDefinition>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Windows.Controls.RowDefinition}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: RowDefinitionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Copies the elements of the collection to an <see cref="T:System.Array">, starting at a particular <see cref="T:System.Array"> index.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.RowDefinitionCollection> instance is cast to an <xref:System.Collections.ICollection> interface.
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: A zero-based <see cref="T:System.Array"> that receives the copied items from the <xref:System.Windows.Controls.RowDefinitionCollection>.
    - id: index
      type: System.Int32
      description: The first position in the specified <see cref="T:System.Array"> to receive the copied contents.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: RowDefinitionCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Returns an enumerator that iterates through the collection.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.RowDefinitionCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <see cref="T:System.Collections.IEnumerator"> object that can be used to iterate through the collection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Adds an item to the collection.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.RowDefinitionCollection> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to add to the <xref:System.Windows.Controls.RowDefinitionCollection>.
    return:
      type: System.Int32
      description: The position into which the new element was inserted.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Determines whether the collection contains a specific value.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.RowDefinitionCollection> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to locate in the <xref:System.Windows.Controls.RowDefinitionCollection>.
    return:
      type: System.Boolean
      description: '`true` if the <see cref="T:System.Object"> is found in the <xref:System.Windows.Controls.RowDefinitionCollection>; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Determines the index of a specific item in the collection.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.RowDefinitionCollection> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to locate in the <xref:System.Windows.Controls.RowDefinitionCollection>.
    return:
      type: System.Int32
      description: The index of  if found in the list; otherwise, -1.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Inserts an item to the collection at the specified index.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.RowDefinitionCollection> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which to insert the <see cref="T:System.Object">.
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to insert into the <xref:System.Windows.Controls.RowDefinitionCollection>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: RowDefinitionCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets a value indicating whether the collection has a fixed size.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.RowDefinitionCollection> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets or sets the element at the specified index.
  remarks: "This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.RowDefinitionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the element to get or set.
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Controls.RowDefinitionCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Removes the first occurrence of a specific object from the collection.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.Controls.RowDefinitionCollection> instance is cast to an <xref:System.Collections.IList> interface.
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object"> to remove from the <xref:System.Windows.Controls.RowDefinitionCollection>.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Add(RowDefinition)
  nameWithType: RowDefinitionCollection.Add(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Add(RowDefinition)
- uid: System.Windows.Controls.RowDefinition
  parent: System.Windows.Controls
  isExternal: false
  name: RowDefinition
  nameWithType: RowDefinition
  fullName: System.Windows.Controls.RowDefinition
- uid: System.Windows.Controls.RowDefinitionCollection.Clear
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Clear()
  nameWithType: RowDefinitionCollection.Clear()
  fullName: System.Windows.Controls.RowDefinitionCollection.Clear()
- uid: System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Contains(RowDefinition)
  nameWithType: RowDefinitionCollection.Contains(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Contains(RowDefinition)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.RowDefinition
  parent: System.Windows.Controls
  isExternal: false
  name: RowDefinition
  nameWithType: RowDefinition
  fullName: System.Windows.Controls.RowDefinition
- uid: System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: CopyTo(RowDefinition[],Int32)
  nameWithType: RowDefinitionCollection.CopyTo(RowDefinition[],Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.CopyTo(RowDefinition[],Int32)
- uid: System.Windows.Controls.RowDefinition
  parent: System.Windows.Controls
  isExternal: false
  name: RowDefinition
  nameWithType: RowDefinition
  fullName: System.Windows.Controls.RowDefinition[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinitionCollection.Count
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Count
  nameWithType: RowDefinitionCollection.Count
  fullName: System.Windows.Controls.RowDefinitionCollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: IndexOf(RowDefinition)
  nameWithType: RowDefinitionCollection.IndexOf(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.IndexOf(RowDefinition)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinition
  parent: System.Windows.Controls
  isExternal: false
  name: RowDefinition
  nameWithType: RowDefinition
  fullName: System.Windows.Controls.RowDefinition
- uid: System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Insert(Int32,RowDefinition)
  nameWithType: RowDefinitionCollection.Insert(Int32,RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Insert(Int32,RowDefinition)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinition
  parent: System.Windows.Controls
  isExternal: false
  name: RowDefinition
  nameWithType: RowDefinition
  fullName: System.Windows.Controls.RowDefinition
- uid: System.Windows.Controls.RowDefinitionCollection.IsReadOnly
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: RowDefinitionCollection.IsReadOnly
  fullName: System.Windows.Controls.RowDefinitionCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.RowDefinitionCollection.IsSynchronized
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: RowDefinitionCollection.IsSynchronized
  fullName: System.Windows.Controls.RowDefinitionCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: RowDefinitionCollection.Item(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.Item(Int32)
- uid: System.Windows.Controls.RowDefinition
  parent: System.Windows.Controls
  isExternal: false
  name: RowDefinition
  nameWithType: RowDefinition
  fullName: System.Windows.Controls.RowDefinition
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: Remove(RowDefinition)
  nameWithType: RowDefinitionCollection.Remove(RowDefinition)
  fullName: System.Windows.Controls.RowDefinitionCollection.Remove(RowDefinition)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.RowDefinition
  parent: System.Windows.Controls
  isExternal: false
  name: RowDefinition
  nameWithType: RowDefinition
  fullName: System.Windows.Controls.RowDefinition
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: RowDefinitionCollection.RemoveAt(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.RemoveAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: RowDefinitionCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.RemoveRange(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinitionCollection.SyncRoot
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: RowDefinitionCollection.SyncRoot
  fullName: System.Windows.Controls.RowDefinitionCollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#Generic#IEnumerable{System#Windows#Controls#RowDefinition}#GetEnumerator
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: RowDefinitionCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.Generic.IEnumerable()
- uid: System.Collections.Generic.IEnumerator{System.Windows.Controls.RowDefinition}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<RowDefinition>
  nameWithType: IEnumerator<RowDefinition>
  fullName: System.Collections.Generic.IEnumerator<System.Windows.Controls.RowDefinition>
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: RowDefinitionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: RowDefinitionCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Add(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: RowDefinitionCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Item(Int32)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.RowDefinitionCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Controls.RowDefinitionCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: RowDefinitionCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Remove(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
