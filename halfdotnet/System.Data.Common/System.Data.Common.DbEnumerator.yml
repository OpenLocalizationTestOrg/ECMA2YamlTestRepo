### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbEnumerator
  id: DbEnumerator
  children:
  - System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  - System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  - System.Data.Common.DbEnumerator.Current
  - System.Data.Common.DbEnumerator.MoveNext
  - System.Data.Common.DbEnumerator.Reset
  langs:
  - csharp
  name: DbEnumerator
  nameWithType: DbEnumerator
  fullName: System.Data.Common.DbEnumerator
  type: Class
  summary: Exposes the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method, which supports a simple iteration over a collection by a .NET Framework data provider.
  remarks: "The DbEnumerator class is implemented by a .NET Framework data provider to provide data binding support.  \n  \n By design, the DbEnumerator object is intended for use with only one resultset. For example, if you execute a batch statement containing two SQL SELECT statements that return different schemas, the second statement might not retun the entire schema. To avoid this situation, obtain a DbEnumerator for each resultset, and then call the `NextResult` method of a .NET Framework data provider DataReader object."
  syntax:
    content: 'public class DbEnumerator : System.Collections.IEnumerator'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  id: '#ctor(System.Data.Common.DbDataReader)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(DbDataReader)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator"> class with the give n data reader.
  remarks: To be added.
  syntax:
    content: public DbEnumerator (System.Data.Common.DbDataReader reader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: The DataReader through which to iterate.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  id: '#ctor(System.Data.IDataReader)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(IDataReader)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator"> class using the specified `DataReader`.
  remarks: To be added.
  syntax:
    content: public DbEnumerator (System.Data.IDataReader reader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: The `DataReader` through which to iterate.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  id: '#ctor(System.Data.Common.DbDataReader,System.Boolean)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(DbDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator"> class using the specified reader and indicates whether to automatically close the reader after iterating through its data.
  remarks: To be added.
  syntax:
    content: public DbEnumerator (System.Data.Common.DbDataReader reader, bool closeReader);
    parameters:
    - id: reader
      type: System.Data.Common.DbDataReader
      description: The DataReader through which to iterate.
    - id: closeReader
      type: System.Boolean
      description: '`true` to automatically close the DataReader after iterating through its data; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  id: '#ctor(System.Data.IDataReader,System.Boolean)'
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: DbEnumerator(IDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Initializes a new instance of the <see cref="T:System.Data.Common.DbEnumerator"> class using the specified `DataReader`, and indicates whether to automatically close the `DataReader` after iterating through its data.
  remarks: To be added.
  syntax:
    content: public DbEnumerator (System.Data.IDataReader reader, bool closeReader);
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: The `DataReader` through which to iterate.
    - id: closeReader
      type: System.Boolean
      description: '`true` to automatically close the `DataReader` after iterating through its data; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbEnumerator.Current
  id: Current
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: DbEnumerator.Current
  fullName: System.Data.Common.DbEnumerator.Current
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets the current element in the collection.
  remarks: After an enumerator is created or after a <xref:System.Data.Common.DbEnumerator.Reset%2A>, <xref:System.Data.Common.DbEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of Current; otherwise, Current is undefined. Current also throws an exception if the last call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> returned false, which indicates the end of the collection. Current does not move the position of the enumerator and consecutive calls to Current return the same object until either <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> is called. An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or <xref:System.Data.Common.DbEnumerator.Reset%2A> generates an <xref:System.InvalidOperationException>. If the collection is modified between <xref:System.Data.Common.DbEnumerator.MoveNext%2A> and Current, Current returns the element to which it is set, even if the enumerator is already invalidated.
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbEnumerator.MoveNext
  id: MoveNext
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: DbEnumerator.MoveNext()
  fullName: System.Data.Common.DbEnumerator.MoveNext()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Advances the enumerator to the next element of the collection.
  remarks: After an enumerator is created or after a call to <xref:System.Data.Common.DbEnumerator.Reset%2A>, an enumerator is positioned before the first element of the collection, and the first call to MoveNext moves the enumerator over the first element of the collection. After the end of the collection is passed, subsequent calls to MoveNext return false until <xref:System.Data.Common.DbEnumerator.Reset%2A> is called. An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to MoveNext or <xref:System.Data.Common.DbEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the enumerator was successfully advanced to the next element; `false` if the enumerator has passed the end of the collection.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbEnumerator.Reset
  id: Reset
  parent: System.Data.Common.DbEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: DbEnumerator.Reset()
  fullName: System.Data.Common.DbEnumerator.Reset()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Sets the enumerator to its initial position, which is before the first element in the collection.
  remarks: An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Data.Common.DbEnumerator.MoveNext%2A> or Reset throws an <xref:System.InvalidOperationException>.
  syntax:
    content: public void Reset ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(DbDataReader)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(IDataReader)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.Common.DbDataReader,System.Boolean)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(DbDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(DbDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(DbDataReader,Boolean)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbEnumerator.#ctor(System.Data.IDataReader,System.Boolean)
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: DbEnumerator(IDataReader,Boolean)
  nameWithType: DbEnumerator.DbEnumerator(IDataReader,Boolean)
  fullName: System.Data.Common.DbEnumerator.DbEnumerator(IDataReader,Boolean)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbEnumerator.Current
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Current
  nameWithType: DbEnumerator.Current
  fullName: System.Data.Common.DbEnumerator.Current
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbEnumerator.MoveNext
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: DbEnumerator.MoveNext()
  fullName: System.Data.Common.DbEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbEnumerator.Reset
  parent: System.Data.Common.DbEnumerator
  isExternal: false
  name: Reset()
  nameWithType: DbEnumerator.Reset()
  fullName: System.Data.Common.DbEnumerator.Reset()
