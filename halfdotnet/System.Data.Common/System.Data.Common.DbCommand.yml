### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbCommand
  id: DbCommand
  children:
  - System.Data.Common.DbCommand.#ctor
  - System.Data.Common.DbCommand.Cancel
  - System.Data.Common.DbCommand.CommandText
  - System.Data.Common.DbCommand.CommandTimeout
  - System.Data.Common.DbCommand.CommandType
  - System.Data.Common.DbCommand.Connection
  - System.Data.Common.DbCommand.CreateDbParameter
  - System.Data.Common.DbCommand.CreateParameter
  - System.Data.Common.DbCommand.DbConnection
  - System.Data.Common.DbCommand.DbParameterCollection
  - System.Data.Common.DbCommand.DbTransaction
  - System.Data.Common.DbCommand.DesignTimeVisible
  - System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQuery
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReader
  - System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalar
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.Parameters
  - System.Data.Common.DbCommand.Prepare
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.Data.Common.DbCommand.Transaction
  - System.Data.Common.DbCommand.UpdatedRowSource
  langs:
  - csharp
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
  type: Class
  summary: Represents an SQL statement or stored procedure to execute against a data source. Provides a base class for database-specific classes that represent commands. <xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync%2A>
  remarks: To be added.
  syntax:
    content: 'public abstract class DbCommand : System.ComponentModel.Component, IDisposable, System.Data.IDbCommand'
  inheritance:
  - System.ComponentModel.Component
  implements:
  - System.Data.IDbCommand
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DbCommand()
  nameWithType: DbCommand.DbCommand()
  fullName: System.Data.Common.DbCommand.DbCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Constructs an instance of the <see cref="T:System.Data.Common.DbCommand"> object.
  remarks: To be added.
  syntax:
    content: protected DbCommand ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.Cancel
  id: Cancel
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: DbCommand.Cancel()
  fullName: System.Data.Common.DbCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Attempts to cancels the execution of a <see cref="T:System.Data.Common.DbCommand">.
  remarks: If there is nothing to cancel, nothing happens. However, if there is a command in process, and the attempt to cancel fails, no exception is generated.
  syntax:
    content: public abstract void Cancel ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.CommandText
  id: CommandText
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: DbCommand.CommandText
  fullName: System.Data.Common.DbCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets the text command to run against the data source.
  remarks: When you set the <xref:System.Data.CommandType> to `StoredProcedure`, you should set the CommandText property to the name of the stored procedure. The command executes this stored procedure when you call one of the `Execute` methods.
  syntax:
    content: public abstract string CommandText { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: DbCommand.CommandTimeout
  fullName: System.Data.Common.DbCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets the wait time before terminating the attempt to execute a command and generating an error.
  remarks: "An <xref:System.ArgumentException> is generated if the assigned CommandTimeout property value is less than 0.  \n  \n Note to implementers, it is recommended that 0 means no timeout."
  syntax:
    content: public abstract int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.CommandType
  id: CommandType
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: DbCommand.CommandType
  fullName: System.Data.Common.DbCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Indicates or specifies how the <xref:System.Data.Common.DbCommand.CommandText%2A> property is interpreted.
  remarks: When you set the <xref:System.Data.CommandType> to `StoredProcedure`, you should set the <xref:System.Data.Common.DbCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the `Execute` methods.
  syntax:
    content: public abstract System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.Connection
  id: Connection
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Connection
  nameWithType: DbCommand.Connection
  fullName: System.Data.Common.DbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets the <see cref="T:System.Data.Common.DbConnection"> used by this <xref:System.Data.Common.DbCommand>.
  remarks: To be added.
  syntax:
    content: public System.Data.Common.DbConnection Connection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: DbCommand.CreateDbParameter()
  fullName: System.Data.Common.DbCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Creates a new instance of a <see cref="T:System.Data.Common.DbParameter"> object.
  remarks: To be added.
  syntax:
    content: protected abstract System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: A <see cref="T:System.Data.Common.DbParameter"> object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: DbCommand.CreateParameter()
  fullName: System.Data.Common.DbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Creates a new instance of a <see cref="T:System.Data.Common.DbParameter"> object.
  remarks: To be added.
  syntax:
    content: public System.Data.Common.DbParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: A <see cref="T:System.Data.Common.DbParameter"> object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.DbConnection
  id: DbConnection
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: DbCommand.DbConnection
  fullName: System.Data.Common.DbCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets the <see cref="T:System.Data.Common.DbConnection"> used by this <xref:System.Data.Common.DbCommand>.
  remarks: To be added.
  syntax:
    content: protected abstract System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: DbCommand.DbParameterCollection
  fullName: System.Data.Common.DbCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets the collection of <see cref="T:System.Data.Common.DbParameter"> objects.
  remarks: To be added.
  syntax:
    content: protected abstract System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: DbCommand.DbTransaction
  fullName: System.Data.Common.DbCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets the DbTransaction within which this <see cref="T:System.Data.Common.DbCommand"> object executes.
  remarks: To be added.
  syntax:
    content: protected abstract System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: DbCommand.DesignTimeVisible
  fullName: System.Data.Common.DbCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets a value indicating whether the command object should be visible in a customized interface control.
  remarks: To be added.
  syntax:
    content: public abstract bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: DbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Executes the command text against the connection.
  remarks: To be added.
  syntax:
    content: protected abstract System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: An instance of <see cref="T:System.Data.CommandBehavior">.
    return:
      type: System.Data.Common.DbDataReader
      description: A task representing the operation.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Providers should implement this method to provide a non-default implementation for <xref:System.Data.Common.DbCommand.ExecuteReader%2A> overloads.  \n  \n The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteReader%2A> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteReader will be communicated via the returned Task Exception property.  \n  \n This method accepts a cancellation token that can be used to request the operation to be cancelled early. Implementations may ignore this request."
  remarks: For more information about asynchronous programming, see [Asynchronous Programming](../Topic/Asynchronous%20Programming.md).
  syntax:
    content: protected virtual System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteDbDataReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: Options for statement execution and data retrieval.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: A task representing the asynchronous operation.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: DbCommand.ExecuteNonQuery()
  fullName: System.Data.Common.DbCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Executes a SQL statement against a connection object.
  remarks: "You can use ExecuteNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database by executing UPDATE, INSERT, or DELETE statements.  \n  \n Although ExecuteNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data.  \n  \n For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1."
  syntax:
    content: public abstract int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: The number of rows affected.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync
  id: ExecuteNonQueryAsync
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync()
  nameWithType: DbCommand.ExecuteNonQueryAsync()
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteNonQuery%2A>, which executes a SQL statement against a connection object.  \n  \n Invokes <xref:System.Data.Common.DbCommand.ExecuteNonQueryAsync%2A> with CancellationToken.None."
  remarks: For more information about asynchronous programming, see [Asynchronous Programming](../Topic/Asynchronous%20Programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<int> ExecuteNonQueryAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbCommand.ExecuteNonQueryAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  id: ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "This is the asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteNonQuery%2A>. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  \n  \n The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteNonQuery%2A> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token.  Exceptions thrown by <xref:System.Data.Common.DbCommand.ExecuteNonQuery%2A> will be communicated via the returned Task Exception property.  \n  \n Do not invoke other methods and properties of the `DbCommand` object until the returned Task is complete."
  remarks: For more information about asynchronous programming, see [Asynchronous Programming](../Topic/Asynchronous%20Programming.md).
  syntax:
    content: public virtual System.Threading.Tasks.Task<int> ExecuteNonQueryAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbCommand.ExecuteNonQueryAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: DbCommand.ExecuteReader()
  fullName: System.Data.Common.DbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Executes the <xref:System.Data.Common.DbCommand.CommandText%2A> against the <xref:System.Data.Common.DbCommand.Connection%2A>, and returns an <xref:System.Data.Common.DbDataReader>.
  remarks: To be added.
  syntax:
    content: public System.Data.Common.DbDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.Common.DbDataReader
      description: A <see cref="T:System.Data.Common.DbDataReader"> object.
  overload: System.Data.Common.DbCommand.ExecuteReader*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: DbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Executes the <xref:System.Data.Common.DbCommand.CommandText%2A> against the <xref:System.Data.Common.DbCommand.Connection%2A>, and returns an <xref:System.Data.Common.DbDataReader> using one of the <xref:System.Data.CommandBehavior> values.
  remarks: To be added.
  syntax:
    content: public System.Data.Common.DbDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: One of the <see cref="T:System.Data.CommandBehavior"> values.
    return:
      type: System.Data.Common.DbDataReader
      description: An <see cref="T:System.Data.Common.DbDataReader"> object.
  overload: System.Data.Common.DbCommand.ExecuteReader*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync
  id: ExecuteReaderAsync
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReaderAsync()
  nameWithType: DbCommand.ExecuteReaderAsync()
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteReader%2A>, which executes the <xref:System.Data.Common.DbCommand.CommandText%2A> against the <xref:System.Data.Common.DbCommand.Connection%2A> and returns a <xref:System.Data.Common.DbDataReader>.  \n  \n Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> with CancellationToken.None."
  remarks: Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](../Topic/Asynchronous%20Programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  id: ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteReader%2A>, which executes the <xref:System.Data.Common.DbCommand.CommandText%2A> against the <xref:System.Data.Common.DbCommand.Connection%2A> and returns a <xref:System.Data.Common.DbDataReader>.  \n  \n Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A>."
  remarks: Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](../Topic/Asynchronous%20Programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: One of the <see cref="T:System.Data.CommandBehavior"> values.
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteReader%2A>, which executes the <xref:System.Data.Common.DbCommand.CommandText%2A> against the <xref:System.Data.Common.DbCommand.Connection%2A> and returns a <xref:System.Data.Common.DbDataReader>. This method propagates a notification that operations should be canceled.  \n  \n Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A>."
  remarks: Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](../Topic/Asynchronous%20Programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  id: ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Invokes <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A>.
  remarks: Managed provider implementers must call <xref:System.Data.Common.DbCommand.ExecuteDbDataReaderAsync%2A> in <xref:System.Data.Common.DbCommand.ExecuteReaderAsync%2A>. For more information about asynchronous programming, see [Asynchronous Programming](../Topic/Asynchronous%20Programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<System.Data.Common.DbDataReader> ExecuteReaderAsync (System.Data.CommandBehavior behavior, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: One of the <see cref="T:System.Data.CommandBehavior"> values.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbCommand.ExecuteReaderAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: DbCommand.ExecuteScalar()
  fullName: System.Data.Common.DbCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Executes the query and returns the first column of the first row in the result set returned by the query. All other columns and rows are ignored.
  remarks: "Use the ExecuteScalar method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.Common.DbCommand.ExecuteReader%2A> method and performing the operations necessary to generate the single value using the data returned by a <xref:System.Data.Common.DbDataReader>.  \n  \n If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned. If the value in the database is `null`, the query returns `DBNull.Value`."
  syntax:
    content: public abstract object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: The first column of the first row in the result set.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync
  id: ExecuteScalarAsync
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteScalarAsync()
  nameWithType: DbCommand.ExecuteScalarAsync()
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "An asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteScalar%2A>, which executes the query and returns the first column of the first row in the result set returned by the query. All other columns and rows are ignored.  \n  \n Invokes <xref:System.Data.Common.DbCommand.ExecuteScalarAsync%2A> with CancellationToken.None."
  remarks: For more information about asynchronous programming, see [Asynchronous Programming](../Topic/Asynchronous%20Programming.md).
  syntax:
    content: public System.Threading.Tasks.Task<object> ExecuteScalarAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbCommand.ExecuteScalarAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  id: ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "This is the asynchronous version of <xref:System.Data.Common.DbCommand.ExecuteScalar%2A>. Providers should override with an appropriate implementation. The cancellation token may optionally be ignored.  \n  \n The default implementation invokes the synchronous <xref:System.Data.Common.DbCommand.ExecuteScalar%2A> method and returns a completed task, blocking the calling thread. The default implementation will return a cancelled task if passed an already cancelled cancellation token. Exceptions thrown by ExecuteScalar will be communicated via the returned Task Exception property.  \n  \n Do not invoke other methods and properties of the `DbCommand` object until the returned Task is complete."
  remarks: For more information about asynchronous programming, see [Asynchronous Programming](../Topic/Asynchronous%20Programming.md).
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> ExecuteScalarAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: A task representing the asynchronous operation.
  overload: System.Data.Common.DbCommand.ExecuteScalarAsync*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.Parameters
  id: Parameters
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: DbCommand.Parameters
  fullName: System.Data.Common.DbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets the collection of <see cref="T:System.Data.Common.DbParameter"> objects. For more information on parameters, see [Configuring Parameters and Parameter Data Types](../Topic/Configuring%20Parameters%20and%20Parameter%20Data%20Types.md).
  remarks: To be added.
  syntax:
    content: public System.Data.Common.DbParameterCollection Parameters { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.Prepare
  id: Prepare
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: DbCommand.Prepare()
  fullName: System.Data.Common.DbCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Creates a prepared (or compiled) version of the command on the data source.
  remarks: If the <xref:System.Data.Common.DbCommand.CommandType%2A> property is set to `TableDirect`, `Prepare` does nothing. If <xref:System.Data.Common.DbCommand.CommandType%2A> is set to `StoredProcedure`, the call to `Prepare` should succeed, although it may result in a no-op.
  syntax:
    content: public abstract void Prepare ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  id: System#Data#IDbCommand#Connection
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.Connection
  nameWithType: DbCommand.System.Data.IDbCommand.Connection
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets the <see cref="T:System.Data.IDbConnection"> used by this instance of the <xref:System.Data.IDbCommand>.
  remarks: For more information, see <xref:System.Data.IDbCommand.Connection%2A>.
  syntax:
    content: System.Data.IDbConnection System.Data.IDbCommand.Connection { get; set; }
    return:
      type: System.Data.IDbConnection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  id: System#Data#IDbCommand#CreateParameter
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.CreateParameter()
  nameWithType: DbCommand.System.Data.IDbCommand.CreateParameter()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Creates a new instance of an <see cref="T:System.Data.IDbDataParameter"> object.
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.  \n  \n For more information, see <xref:System.Data.IDbCommand.CreateParameter%2A>."
  syntax:
    content: System.Data.IDbDataParameter IDbCommand.CreateParameter ();
    parameters: []
    return:
      type: System.Data.IDbDataParameter
      description: An `IDbDataParameter` object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  id: System#Data#IDbCommand#ExecuteReader
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Executes the <xref:System.Data.IDbCommand.CommandText%2A> against the <xref:System.Data.IDbCommand.Connection%2A> and builds an <xref:System.Data.IDataReader>.
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.  \n  \n For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>."
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader ();
    parameters: []
    return:
      type: System.Data.IDataReader
      description: An <see cref="T:System.Data.IDataReader"> object.
  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  id: System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Executes the <xref:System.Data.IDbCommand.CommandText%2A> against the <xref:System.Data.IDbCommand.Connection%2A>, and builds an <xref:System.Data.IDataReader> using one of the <xref:System.Data.CommandBehavior> values.
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.  \n  \n For more information, see <xref:System.Data.IDbCommand.ExecuteReader%2A>."
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: One of the <see cref="T:System.Data.CommandBehavior"> values.
    return:
      type: System.Data.IDataReader
      description: An <see cref="T:System.Data.IDataReader"> object.
  overload: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  id: System#Data#IDbCommand#Parameters
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.Parameters
  nameWithType: DbCommand.System.Data.IDbCommand.Parameters
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets the <see cref="T:System.Data.IDataParameterCollection">.
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.Common.DbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.  \n  \n For more information, see <xref:System.Data.IDbCommand.Parameters%2A>."
  syntax:
    content: System.Data.IDataParameterCollection System.Data.IDbCommand.Parameters { get; }
    return:
      type: System.Data.IDataParameterCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  id: System#Data#IDbCommand#Transaction
  isEii: true
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.Transaction
  nameWithType: DbCommand.System.Data.IDbCommand.Transaction
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets the <xref:System.Data.Common.DbCommand.DbTransaction%2A> within which this <xref:System.Data.Common.DbCommand> object executes.
  remarks: For more information, see <xref:System.Data.IDbCommand.Ttransaction%2A>.
  syntax:
    content: System.Data.IDbTransaction System.Data.IDbCommand.Transaction { get; set; }
    return:
      type: System.Data.IDbTransaction
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.Transaction
  id: Transaction
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: DbCommand.Transaction
  fullName: System.Data.Common.DbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets the <see cref="T:System.Data.Common.DbTransaction"> within which this <xref:System.Data.Common.DbCommand> object executes.
  remarks: To be added.
  syntax:
    content: public System.Data.Common.DbTransaction Transaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.DbCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.Common.DbCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: DbCommand.UpdatedRowSource
  fullName: System.Data.Common.DbCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow"> when used by the Update method of a <xref:System.Data.Common.DbDataAdapter>.
  remarks: Throws a <xref:System.ArgumentException> if the value entered was not one of the <xref:System.Data.UpdateRowSource> values.
  syntax:
    content: public abstract System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Data.Common.DbCommand.#ctor
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbCommand()
  nameWithType: DbCommand.DbCommand()
  fullName: System.Data.Common.DbCommand.DbCommand()
- uid: System.Data.Common.DbCommand.Cancel
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Cancel()
  nameWithType: DbCommand.Cancel()
  fullName: System.Data.Common.DbCommand.Cancel()
- uid: System.Data.Common.DbCommand.CommandText
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CommandText
  nameWithType: DbCommand.CommandText
  fullName: System.Data.Common.DbCommand.CommandText
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbCommand.CommandTimeout
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: DbCommand.CommandTimeout
  fullName: System.Data.Common.DbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbCommand.CommandType
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CommandType
  nameWithType: DbCommand.CommandType
  fullName: System.Data.Common.DbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.Common.DbCommand.Connection
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Connection
  nameWithType: DbCommand.Connection
  fullName: System.Data.Common.DbCommand.Connection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common.DbCommand.CreateDbParameter
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: DbCommand.CreateDbParameter()
  fullName: System.Data.Common.DbCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.Common.DbCommand.CreateParameter
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: DbCommand.CreateParameter()
  fullName: System.Data.Common.DbCommand.CreateParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.Common.DbCommand.DbConnection
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbConnection
  nameWithType: DbCommand.DbConnection
  fullName: System.Data.Common.DbCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Common.DbCommand.DbParameterCollection
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbCommand.DbParameterCollection
  fullName: System.Data.Common.DbCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.Common.DbCommand.DbTransaction
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: DbCommand.DbTransaction
  fullName: System.Data.Common.DbCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.Common.DbCommand.DesignTimeVisible
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: DbCommand.DesignTimeVisible
  fullName: System.Data.Common.DbCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: DbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbCommand.ExecuteNonQuery
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: DbCommand.ExecuteNonQuery()
  fullName: System.Data.Common.DbCommand.ExecuteNonQuery()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteNonQueryAsync()
  nameWithType: DbCommand.ExecuteNonQueryAsync()
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync()
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteNonQueryAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteNonQueryAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbCommand.ExecuteReader
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: DbCommand.ExecuteReader()
  fullName: System.Data.Common.DbCommand.ExecuteReader()
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: DbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReaderAsync()
  nameWithType: DbCommand.ExecuteReaderAsync()
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync()
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior)
  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReaderAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteReaderAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteReaderAsync(CommandBehavior,CancellationToken)
  nameWithType: DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteReaderAsync(CommandBehavior,CancellationToken)
- uid: System.Threading.Tasks.Task{System.Data.Common.DbDataReader}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<DbDataReader>
  nameWithType: Task<DbDataReader>
  fullName: System.Threading.Tasks.Task<System.Data.Common.DbDataReader>
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbCommand.ExecuteScalar
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: DbCommand.ExecuteScalar()
  fullName: System.Data.Common.DbCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteScalarAsync()
  nameWithType: DbCommand.ExecuteScalarAsync()
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync()
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: ExecuteScalarAsync(CancellationToken)
  nameWithType: DbCommand.ExecuteScalarAsync(CancellationToken)
  fullName: System.Data.Common.DbCommand.ExecuteScalarAsync(CancellationToken)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbCommand.Parameters
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Parameters
  nameWithType: DbCommand.Parameters
  fullName: System.Data.Common.DbCommand.Parameters
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.Common.DbCommand.Prepare
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Prepare()
  nameWithType: DbCommand.Prepare()
  fullName: System.Data.Common.DbCommand.Prepare()
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.Connection
  nameWithType: DbCommand.System.Data.IDbCommand.Connection
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Connection
- uid: System.Data.IDbConnection
  parent: System.Data
  isExternal: false
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.CreateParameter()
  nameWithType: DbCommand.System.Data.IDbCommand.CreateParameter()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.CreateParameter()
- uid: System.Data.IDbDataParameter
  parent: System.Data
  isExternal: false
  name: IDbDataParameter
  nameWithType: IDbDataParameter
  fullName: System.Data.IDbDataParameter
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.Parameters
  nameWithType: DbCommand.System.Data.IDbCommand.Parameters
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Parameters
- uid: System.Data.IDataParameterCollection
  parent: System.Data
  isExternal: false
  name: IDataParameterCollection
  nameWithType: IDataParameterCollection
  fullName: System.Data.IDataParameterCollection
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.IDbCommand.Transaction
  nameWithType: DbCommand.System.Data.IDbCommand.Transaction
  fullName: System.Data.Common.DbCommand.System.Data.IDbCommand.Transaction
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.Common.DbCommand.Transaction
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: Transaction
  nameWithType: DbCommand.Transaction
  fullName: System.Data.Common.DbCommand.Transaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.Common.DbCommand.UpdatedRowSource
  parent: System.Data.Common.DbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: DbCommand.UpdatedRowSource
  fullName: System.Data.Common.DbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.Common.DbCommand.ExecuteNonQueryAsync*
  parent: System.Data.Common.DbCommand
  isExternal: false
  nameWithType: DbCommand.
- uid: System.Data.Common.DbCommand.ExecuteReader*
  parent: System.Data.Common.DbCommand
  isExternal: false
  nameWithType: DbCommand.
- uid: System.Data.Common.DbCommand.ExecuteReaderAsync*
  parent: System.Data.Common.DbCommand
  isExternal: false
  nameWithType: DbCommand.
- uid: System.Data.Common.DbCommand.ExecuteScalarAsync*
  parent: System.Data.Common.DbCommand
  isExternal: false
  nameWithType: DbCommand.
- uid: System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader*
  parent: System.Data.Common.DbCommand
  isExternal: false
  nameWithType: DbCommand.
