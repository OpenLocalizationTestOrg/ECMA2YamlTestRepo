### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Imaging.BitmapEncoder
  id: BitmapEncoder
  children:
  - System.Windows.Media.Imaging.BitmapEncoder.#ctor
  - System.Windows.Media.Imaging.BitmapEncoder.CodecInfo
  - System.Windows.Media.Imaging.BitmapEncoder.ColorContexts
  - System.Windows.Media.Imaging.BitmapEncoder.Create(System.Guid)
  - System.Windows.Media.Imaging.BitmapEncoder.Frames
  - System.Windows.Media.Imaging.BitmapEncoder.Metadata
  - System.Windows.Media.Imaging.BitmapEncoder.Palette
  - System.Windows.Media.Imaging.BitmapEncoder.Preview
  - System.Windows.Media.Imaging.BitmapEncoder.Save(System.IO.Stream)
  - System.Windows.Media.Imaging.BitmapEncoder.Thumbnail
  langs:
  - csharp
  name: BitmapEncoder
  nameWithType: BitmapEncoder
  fullName: System.Windows.Media.Imaging.BitmapEncoder
  type: Class
  summary: Encodes a collection of <see cref="T:System.Windows.Media.Imaging.BitmapFrame"> objects to an image stream.
  remarks: "A derived codec may also provide support for specialized encoding properties, which are used to determine how a bitmap is encoded. For example, a codec may support specialized compression routines or interlacing of an encoded image.  \n  \n You can specify multiple frames for any derived encoder, even if the bitmap format only supports one frame. In this case, only the first frame is saved.  \n  \n The collection of frames can be encoded one at a time to any number of file streams.  \n  \n Encoding does not work in partial trust. See [WPF Partial Trust Security](../Topic/WPF%20Partial%20Trust%20Security.md) for information on partial trust."
  example:
  - "The following example demonstrates how to use the derived <xref:System.Windows.Media.Imaging.TiffBitmapEncoder> class to encode an image.  \n  \n [!code-vb[bitmapframeexample#3](../../add/codesnippet/VisualBasic/BitmapFrame/BitmapFrame.vb#3)]\n [!code-cs[bitmapframeexample#3](../../add/codesnippet/CSharp/BitmapFrame/BitmapFrame.cs#3)]"
  syntax:
    content: 'public abstract class BitmapEncoder : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: BitmapEncoder()
  nameWithType: BitmapEncoder.BitmapEncoder()
  fullName: System.Windows.Media.Imaging.BitmapEncoder.BitmapEncoder()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Initializes a new instance of the <see cref="T:System.Windows.Media.Imaging.BitmapEncoder"> class.
  remarks: To be added.
  syntax:
    content: protected BitmapEncoder ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.CodecInfo
  id: CodecInfo
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: CodecInfo
  nameWithType: BitmapEncoder.CodecInfo
  fullName: System.Windows.Media.Imaging.BitmapEncoder.CodecInfo
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Gets information that describes this codec.
  remarks: A <xref:System.Windows.Media.Imaging.BitmapCodecInfo> implementation is required for every codec.
  example:
  - "The following example shows how to read information from a <xref:System.Windows.Media.Imaging.BitmapCodecInfo> object and send it to a string.  \n  \n [!code-vb[bitmapframeexample#3](../../add/codesnippet/VisualBasic/BitmapFrame/BitmapFrame.vb#3)]\n [!code-cs[bitmapframeexample#3](../../add/codesnippet/CSharp/BitmapFrame/BitmapFrame.cs#3)]"
  syntax:
    content: public virtual System.Windows.Media.Imaging.BitmapCodecInfo CodecInfo { get; }
    return:
      type: System.Windows.Media.Imaging.BitmapCodecInfo
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.ColorContexts
  id: ColorContexts
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: ColorContexts
  nameWithType: BitmapEncoder.ColorContexts
  fullName: System.Windows.Media.Imaging.BitmapEncoder.ColorContexts
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Gets or sets a value that represents the color profile that is associated with this encoder.
  remarks: To be added.
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Media.ColorContext> ColorContexts { get; set; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Media.ColorContext}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.Create(System.Guid)
  id: Create(System.Guid)
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: Create(Guid)
  nameWithType: BitmapEncoder.Create(Guid)
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Create(Guid)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Creates a <see cref="T:System.Windows.Media.Imaging.BitmapEncoder"> from a <xref:System.Guid> that identifies the desired bitmap format.
  remarks: This method is provided for extensibility purposes only. Codec authors must generate their own <xref:System.Guid> to identify their newly created encoder. Use the derived <xref:System.Windows.Media.Imaging.BitmapEncoder> classes, such as the <xref:System.Windows.Media.Imaging.BmpBitmapEncoder> class, to create an encoder for a built in codec.
  syntax:
    content: public static System.Windows.Media.Imaging.BitmapEncoder Create (Guid containerFormat);
    parameters:
    - id: containerFormat
      type: System.Guid
      description: Identifies the desired bitmap encoding format.
    return:
      type: System.Windows.Media.Imaging.BitmapEncoder
      description: A <see cref="T:System.Windows.Media.Imaging.BitmapEncoder"> that can encode to the specified .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.Frames
  id: Frames
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: Frames
  nameWithType: BitmapEncoder.Frames
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Frames
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Gets or sets the individual frames within an image.
  remarks: "Only [!INCLUDE[TLA#tla_tiff](../../add/includes/tlasharptla-tiff-md.md)], [!INCLUDE[TLA#tla_gif](../../add/includes/tlasharptla-gif-md.md)], and [!INCLUDE[TLA#tla_wdp](../../add/includes/tlasharptla-wdp-md.md)] images support more than one frame. Attempts to add additional frames to formats that do not support them will result in only the first frame being encoded.  \n  \n<a name=\"xamlTextUsage_Frames\"></a>   \n## XAML Text Usage  \n You cannot use this property in [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)]."
  example:
  - "The following example shows how to add a frame to an encoder.  \n  \n [!code-vb[bitmapframeexample#3](../../add/codesnippet/VisualBasic/BitmapFrame/BitmapFrame.vb#3)]\n [!code-cs[bitmapframeexample#3](../../add/codesnippet/CSharp/BitmapFrame/BitmapFrame.cs#3)]"
  syntax:
    content: public virtual System.Collections.Generic.IList<System.Windows.Media.Imaging.BitmapFrame> Frames { get; set; }
    return:
      type: System.Collections.Generic.IList{System.Windows.Media.Imaging.BitmapFrame}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.Metadata
  id: Metadata
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: Metadata
  nameWithType: BitmapEncoder.Metadata
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Metadata
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Gets or sets the metadata that will be associated with this bitmap during encoding.
  remarks: Bitmap images support and store metadata differently. For more information about the metadata types that are supported for each bitmap, see the <xref:System.Windows.Media.Imaging.BitmapMetadata> class.
  syntax:
    content: public virtual System.Windows.Media.Imaging.BitmapMetadata Metadata { get; set; }
    return:
      type: System.Windows.Media.Imaging.BitmapMetadata
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.Palette
  id: Palette
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: Palette
  nameWithType: BitmapEncoder.Palette
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Palette
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Gets or sets a value that represents the <see cref="T:System.Windows.Media.Imaging.BitmapPalette"> of an encoded bitmap.
  remarks: Only [!INCLUDE[TLA#tla_tiff](../../add/includes/tlasharptla-tiff-md.md)] and [!INCLUDE[TLA#tla_gif](../../add/includes/tlasharptla-gif-md.md)] images (and some older, non-standard [!INCLUDE[TLA#tla_bmp](../../add/includes/tlasharptla-bmp-md.md)] images) support palettes.
  example:
  - "The following example demonstrates how to apply a custom palette to a [!INCLUDE[TLA#tla_tiff](../../add/includes/tlasharptla-tiff-md.md)] image and subsequently encode it.  \n  \n [!code-vb[bitmapframeexample#1](../../add/codesnippet/VisualBasic/BitmapFrame/BitmapFrame.vb#1)]\n [!code-cs[bitmapframeexample#1](../../add/codesnippet/CSharp/BitmapFrame/BitmapFrame.cs#1)]"
  syntax:
    content: public virtual System.Windows.Media.Imaging.BitmapPalette Palette { get; set; }
    return:
      type: System.Windows.Media.Imaging.BitmapPalette
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.Preview
  id: Preview
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: Preview
  nameWithType: BitmapEncoder.Preview
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Preview
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Gets or sets a <see cref="T:System.Windows.Media.Imaging.BitmapSource"> that represents the global preview of a bitmap, if there is one.
  remarks: To be added.
  syntax:
    content: public virtual System.Windows.Media.Imaging.BitmapSource Preview { get; set; }
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: BitmapEncoder.Save(Stream)
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Save(Stream)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Encodes a bitmap image to a specified <see cref="T:System.IO.Stream">.
  remarks: In the context of this [!INCLUDE[TLA#tla_api](../../add/includes/tlasharptla-api-md.md)], "save" and "encode" are synonymous.
  example:
  - "The following example demonstrates how to save a bitmap image to a file stream by using the derived <xref:System.Windows.Media.Imaging.TiffBitmapEncoder> class.  \n  \n [!code-vb[bitmapframeexample#3](../../add/codesnippet/VisualBasic/BitmapFrame/BitmapFrame.vb#3)]\n [!code-cs[bitmapframeexample#3](../../add/codesnippet/CSharp/BitmapFrame/BitmapFrame.cs#3)]"
  syntax:
    content: public virtual void Save (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Identifies the file stream that this bitmap is encoded to.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Imaging.BitmapEncoder.Thumbnail
  id: Thumbnail
  parent: System.Windows.Media.Imaging.BitmapEncoder
  langs:
  - csharp
  name: Thumbnail
  nameWithType: BitmapEncoder.Thumbnail
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Thumbnail
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Imaging
  summary: Gets or sets a <see cref="T:System.Windows.Media.Imaging.BitmapSource"> that represents the global embedded thumbnail.
  remarks: To be added.
  syntax:
    content: public virtual System.Windows.Media.Imaging.BitmapSource Thumbnail { get; set; }
    return:
      type: System.Windows.Media.Imaging.BitmapSource
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.Imaging.BitmapEncoder.#ctor
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: BitmapEncoder()
  nameWithType: BitmapEncoder.BitmapEncoder()
  fullName: System.Windows.Media.Imaging.BitmapEncoder.BitmapEncoder()
- uid: System.Windows.Media.Imaging.BitmapEncoder.CodecInfo
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: CodecInfo
  nameWithType: BitmapEncoder.CodecInfo
  fullName: System.Windows.Media.Imaging.BitmapEncoder.CodecInfo
- uid: System.Windows.Media.Imaging.BitmapCodecInfo
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapCodecInfo
  nameWithType: BitmapCodecInfo
  fullName: System.Windows.Media.Imaging.BitmapCodecInfo
- uid: System.Windows.Media.Imaging.BitmapEncoder.ColorContexts
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: ColorContexts
  nameWithType: BitmapEncoder.ColorContexts
  fullName: System.Windows.Media.Imaging.BitmapEncoder.ColorContexts
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Media.ColorContext}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<ColorContext>
  nameWithType: ReadOnlyCollection<ColorContext>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Media.ColorContext>
- uid: System.Windows.Media.Imaging.BitmapEncoder.Create(System.Guid)
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: Create(Guid)
  nameWithType: BitmapEncoder.Create(Guid)
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Create(Guid)
- uid: System.Windows.Media.Imaging.BitmapEncoder
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapEncoder
  nameWithType: BitmapEncoder
  fullName: System.Windows.Media.Imaging.BitmapEncoder
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Windows.Media.Imaging.BitmapEncoder.Frames
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: Frames
  nameWithType: BitmapEncoder.Frames
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Frames
- uid: System.Collections.Generic.IList{System.Windows.Media.Imaging.BitmapFrame}
  parent: System.Collections.Generic
  isExternal: false
  name: IList<BitmapFrame>
  nameWithType: IList<BitmapFrame>
  fullName: System.Collections.Generic.IList<System.Windows.Media.Imaging.BitmapFrame>
- uid: System.Windows.Media.Imaging.BitmapEncoder.Metadata
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: Metadata
  nameWithType: BitmapEncoder.Metadata
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Metadata
- uid: System.Windows.Media.Imaging.BitmapMetadata
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapMetadata
  nameWithType: BitmapMetadata
  fullName: System.Windows.Media.Imaging.BitmapMetadata
- uid: System.Windows.Media.Imaging.BitmapEncoder.Palette
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: Palette
  nameWithType: BitmapEncoder.Palette
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Palette
- uid: System.Windows.Media.Imaging.BitmapPalette
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapPalette
  nameWithType: BitmapPalette
  fullName: System.Windows.Media.Imaging.BitmapPalette
- uid: System.Windows.Media.Imaging.BitmapEncoder.Preview
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: Preview
  nameWithType: BitmapEncoder.Preview
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Preview
- uid: System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
- uid: System.Windows.Media.Imaging.BitmapEncoder.Save(System.IO.Stream)
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: Save(Stream)
  nameWithType: BitmapEncoder.Save(Stream)
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Save(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Media.Imaging.BitmapEncoder.Thumbnail
  parent: System.Windows.Media.Imaging.BitmapEncoder
  isExternal: false
  name: Thumbnail
  nameWithType: BitmapEncoder.Thumbnail
  fullName: System.Windows.Media.Imaging.BitmapEncoder.Thumbnail
- uid: System.Windows.Media.Imaging.BitmapSource
  parent: System.Windows.Media.Imaging
  isExternal: false
  name: BitmapSource
  nameWithType: BitmapSource
  fullName: System.Windows.Media.Imaging.BitmapSource
