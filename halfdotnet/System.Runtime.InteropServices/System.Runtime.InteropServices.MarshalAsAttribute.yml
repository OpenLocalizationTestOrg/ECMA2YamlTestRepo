### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.MarshalAsAttribute
  id: MarshalAsAttribute
  children:
  - System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)
  - System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
  - System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType
  - System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex
  - System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie
  - System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
  - System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
  - System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
  - System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType
  - System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
  - System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex
  - System.Runtime.InteropServices.MarshalAsAttribute.Value
  langs:
  - csharp
  name: MarshalAsAttribute
  nameWithType: MarshalAsAttribute
  fullName: System.Runtime.InteropServices.MarshalAsAttribute
  type: Class
  summary: Indicates how to marshal the data between managed and unmanaged code.
  remarks: "You can apply this attribute to parameters, fields, or return values.  \n  \n This attribute is optional, as each data type has a default marshaling behavior. This attribute is only necessary when a given type can be marshaled to multiple types. For example, you can marshal a string to unmanaged code as either a <xref:System.Runtime.InteropServices.UnmanagedType>, a <xref:System.Runtime.InteropServices.UnmanagedType>, a <xref:System.Runtime.InteropServices.UnmanagedType>, or a <xref:System.Runtime.InteropServices.UnmanagedType>. By default, the common language runtime marshals a string parameter as a <xref:System.Runtime.InteropServices.UnmanagedType> to COM methods. You can apply the MarshalAsAttribute attribute to an individual field or parameter to cause that particular string to be marshaled as a <xref:System.Runtime.InteropServices.UnmanagedType> instead of a <xref:System.Runtime.InteropServices.UnmanagedType>. The [Tlbexp.exe (Type Library Exporter)](../Topic/Tlbexp.exe%20\\(Type%20Library%20Exporter\\).md) passes your marshaling preferences to the common language runtime.  \n  \n Some parameters and return values have different default marshaling behavior when used with COM interop or platform invoke. By default, the runtime marshals a string parameter (and fields in a value type) as a <xref:System.Runtime.InteropServices.UnmanagedType> to a platform invoke method or function. For additional information, see [Default Marshaling Behavior](../Topic/Default%20Marshaling%20Behavior.md).  \n  \n In most cases, the attribute simply identifies the format of the unmanaged data using the <xref:System.Runtime.InteropServices.UnmanagedType> enumeration, as shown in the following C# signature:  \n  \n [!CODE [system.runtime.interopservices.MarshalAsAttribute#2](../CodeSnippet/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute#2)]  \n  \n Some <xref:System.Runtime.InteropServices.UnmanagedType> enumeration members require additional information. For example, additional information is needed when the <xref:System.Runtime.InteropServices.UnmanagedType> is <xref:System.Runtime.InteropServices.UnmanagedType>. For a complete description of how to use this attribute with arrays, see [Default Marshaling for Arrays](../Topic/Default%20Marshaling%20for%20Arrays.md).  \n  \n The [Tlbimp.exe (Type Library Importer)](../Topic/Tlbimp.exe%20\\(Type%20Library%20Importer\\).md) also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type. Tlbimp.exe always applies the MarshalAsAttribute to <xref:System.String> and <xref:System.Object> types for clarity, regardless of the type specified in the input type library.  \n  \n> [!NOTE]\n>  The MarshalAsAttribute does not support marshaling of generic types."
  example:
  - "The following example applies the MarshalAsAttribute to a field, a method parameter, and a method return value in a managed type.  \n  \n [!CODE [System.Runtime.InteropServices.MarshalAsAttribute#1](../CodeSnippet/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute#1)]  \n  \n The following example applies the MarshalAsAttribute attribute to a property:  \n  \n [!CODE [System.Runtime.InteropServices.MarshalAsAttribute#3](../CodeSnippet/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute#3)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class MarshalAsAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)
  id: '#ctor(System.Int16)'
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: MarshalAsAttribute(Int16)
  nameWithType: MarshalAsAttribute.MarshalAsAttribute(Int16)
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalAsAttribute(Int16)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute"> class with the specified <xref:System.Runtime.InteropServices.UnmanagedType> value.
  remarks: This constructor takes an underlying 16-bit signed integer that represents each <xref:System.Runtime.InteropServices.UnmanagedType> enumeration member. The [Tlbimp.exe (Type Library Importer)](../Topic/Tlbimp.exe%20\(Type%20Library%20Importer\).md) uses this constructor.
  syntax:
    content: public MarshalAsAttribute (short unmanagedType);
    parameters:
    - id: unmanagedType
      type: System.Int16
      description: The value the data is to be marshaled as.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
  id: '#ctor(System.Runtime.InteropServices.UnmanagedType)'
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: MarshalAsAttribute(UnmanagedType)
  nameWithType: MarshalAsAttribute.MarshalAsAttribute(UnmanagedType)
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalAsAttribute(UnmanagedType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.MarshalAsAttribute"> class with the specified <xref:System.Runtime.InteropServices.UnmanagedType> enumeration member.
  remarks: For readable code that is less prone to error, always use this constructor.
  syntax:
    content: public MarshalAsAttribute (System.Runtime.InteropServices.UnmanagedType unmanagedType);
    parameters:
    - id: unmanagedType
      type: System.Runtime.InteropServices.UnmanagedType
      description: The value the data is to be marshaled as.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType
  id: ArraySubType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: ArraySubType
  nameWithType: MarshalAsAttribute.ArraySubType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Specifies the element type of the unmanaged <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> or <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>.
  remarks: You can set this parameter to a value from the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration to specify the type of the array's elements. If a type is not specified, the default unmanaged type corresponding to the managed array's element type is used. For example, the `ArraySubType` for a `LPWStr` array in COM is <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>. For additional information, see [Default Marshaling for Arrays](../Topic/Default%20Marshaling%20for%20Arrays.md).
  syntax:
    content: public System.Runtime.InteropServices.UnmanagedType ArraySubType;
    return:
      type: System.Runtime.InteropServices.UnmanagedType
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex
  id: IidParameterIndex
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: IidParameterIndex
  nameWithType: MarshalAsAttribute.IidParameterIndex
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Specifies the parameter index of the unmanaged `iid_is` attribute used by COM.
  remarks: To be added.
  syntax:
    content: public int IidParameterIndex;
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie
  id: MarshalCookie
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: MarshalCookie
  nameWithType: MarshalAsAttribute.MarshalCookie
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Provides additional information to a custom marshaler.
  remarks: "This field is optional when using a custom marshaler.  \n  \n You can set this field to a string that supplies additional information to a custom marshaler. For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper."
  syntax:
    content: public string MarshalCookie;
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
  id: MarshalType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: MarshalType
  nameWithType: MarshalAsAttribute.MarshalType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Specifies the fully qualified name of a custom marshaler.
  remarks: You can use either the MarshalType or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=fullName> field specify a custom marshaler type for the attributed parameter, field, or return type. The MarshalType field enables you to specify a string representing the fully qualified name of a custom marshaler. It is useful for late-bound references, but is less preferred than <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> for specifying a custom marshaler. For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079).
  syntax:
    content: public string MarshalType;
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
  id: MarshalTypeRef
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: MarshalTypeRef
  nameWithType: MarshalAsAttribute.MarshalTypeRef
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Implements <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType?displayProperty=fullName> as a type.
  remarks: "You can use either the MarshalTypeRef or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field to specify a custom marshaler type for the attributed parameter, field, or return type. The MarshalTypeRef field allows easier usage of <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> by shortening the syntax. In the following example, the first line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> and the second line represents syntax using MarshalTypeRef.  \n  \n```  \n[MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = \"Assembly, NameSpace.TypeName\")]   \n```  \n  \n```  \n[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NameSpace.TypeName)]  \n```  \n  \n You can set a <xref:System.Type> object using `typeof` in C#, `GetType` in Visual Basic, or `typeid` in C++. For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079)."
  syntax:
    content: public Type MarshalTypeRef;
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
  id: SafeArraySubType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: SafeArraySubType
  nameWithType: MarshalAsAttribute.SafeArraySubType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates the element type of the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>.
  remarks: You can set this field to a value from the <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName> enumeration to specify the type of the safe array's elements. If a type is not specified, the managed element type's default type (if passed as a VARIANT) is used. For example, the `SafeArraySubType` for an `int` array in COM is <xref:System.Runtime.InteropServices.VarEnum>. For additional information, see [Default Marshaling for Arrays](../Topic/Default%20Marshaling%20for%20Arrays.md).
  syntax:
    content: public System.Runtime.InteropServices.VarEnum SafeArraySubType;
    return:
      type: System.Runtime.InteropServices.VarEnum
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType
  id: SafeArrayUserDefinedSubType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: SafeArrayUserDefinedSubType
  nameWithType: MarshalAsAttribute.SafeArrayUserDefinedSubType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates the user-defined element type of the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>.
  remarks: Initialize this field with your custom type to enable the elements of the `SAFEARRAY` to be marshaled successfully. This field is only needed when the <xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=fullName> is either <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, or <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>. For additional information, see [Default Marshaling for Arrays](../Topic/Default%20Marshaling%20for%20Arrays.md).
  syntax:
    content: public Type SafeArrayUserDefinedSubType;
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
  id: SizeConst
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: SizeConst
  nameWithType: MarshalAsAttribute.SizeConst
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.
  remarks: "This field is required for the <xref:System.Runtime.InteropServices.UnmanagedType> and <xref:System.Runtime.InteropServices.UnmanagedType> members of the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration. Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for SizeConst are (>= 0 and <= 0x1FFFFFFF).  \n  \n For additional information, see [Default Marshaling for Arrays](../Topic/Default%20Marshaling%20for%20Arrays.md)."
  syntax:
    content: public int SizeConst;
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex
  id: SizeParamIndex
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: SizeParamIndex
  nameWithType: MarshalAsAttribute.SizeParamIndex
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates the zero-based parameter that contains the count of array elements, similar to `size_is` in COM.
  remarks: "The SizeParamIndex field supports managed-to-unmanaged and unmanaged-to-managed calls. It does not have any effect on managed code that calls COM objects.  \n  \n Depending on the managed type and the attributes applied to it, the array can be passed as a safe array or C-style array.  \n  \n When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array. Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:  \n  \n-   The array, defined by reference or value.  \n  \n-   The array size, defined by reference or value.  \n  \n The zero-based index of the array size parameter is defined by using the SizeParamIndex field.  \n  \n If you specify both SizeParamIndex and <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=fullName> with a <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> field, the sum of the fields' values produces a size total.  \n  \n For more information, see [Default Marshaling for Arrays](../Topic/Default%20Marshaling%20for%20Arrays.md)."
  example:
  - '[!CODE [System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex#1](../CodeSnippet/VS_Snippets_CLR_System/system.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex#1)]'
  syntax:
    content: public short SizeParamIndex;
    return:
      type: System.Int16
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.MarshalAsAttribute.Value
  id: Value
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  langs:
  - csharp
  name: Value
  nameWithType: MarshalAsAttribute.Value
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Gets the <see cref="T:System.Runtime.InteropServices.UnmanagedType"> value the data is to be marshaled as.
  remarks: This value is used with <xref:System.Runtime.InteropServices.MarshalAsAttribute> to indicate how types should be marshaled between managed and unmanaged code. In some cases, you can use this field with certain `UnmanagedType` enumeration members. For <xref:System.Runtime.InteropServices.UnmanagedType> and <xref:System.Runtime.InteropServices.UnmanagedType>, you must use additional named parameters.
  syntax:
    content: public System.Runtime.InteropServices.UnmanagedType Value { get; }
    return:
      type: System.Runtime.InteropServices.UnmanagedType
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: MarshalAsAttribute(Int16)
  nameWithType: MarshalAsAttribute.MarshalAsAttribute(Int16)
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalAsAttribute(Int16)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: MarshalAsAttribute(UnmanagedType)
  nameWithType: MarshalAsAttribute.MarshalAsAttribute(UnmanagedType)
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalAsAttribute(UnmanagedType)
- uid: System.Runtime.InteropServices.UnmanagedType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: UnmanagedType
  nameWithType: UnmanagedType
  fullName: System.Runtime.InteropServices.UnmanagedType
- uid: System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: ArraySubType
  nameWithType: MarshalAsAttribute.ArraySubType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType
- uid: System.Runtime.InteropServices.UnmanagedType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: UnmanagedType
  nameWithType: UnmanagedType
  fullName: System.Runtime.InteropServices.UnmanagedType
- uid: System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: IidParameterIndex
  nameWithType: MarshalAsAttribute.IidParameterIndex
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: MarshalCookie
  nameWithType: MarshalAsAttribute.MarshalCookie
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: MarshalType
  nameWithType: MarshalAsAttribute.MarshalType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalType
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: MarshalTypeRef
  nameWithType: MarshalAsAttribute.MarshalTypeRef
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: SafeArraySubType
  nameWithType: MarshalAsAttribute.SafeArraySubType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType
- uid: System.Runtime.InteropServices.VarEnum
  parent: System.Runtime.InteropServices
  isExternal: false
  name: VarEnum
  nameWithType: VarEnum
  fullName: System.Runtime.InteropServices.VarEnum
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: SafeArrayUserDefinedSubType
  nameWithType: MarshalAsAttribute.SafeArrayUserDefinedSubType
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: SizeConst
  nameWithType: MarshalAsAttribute.SizeConst
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SizeConst
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: SizeParamIndex
  nameWithType: MarshalAsAttribute.SizeParamIndex
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices.MarshalAsAttribute.Value
  parent: System.Runtime.InteropServices.MarshalAsAttribute
  isExternal: false
  name: Value
  nameWithType: MarshalAsAttribute.Value
  fullName: System.Runtime.InteropServices.MarshalAsAttribute.Value
- uid: System.Runtime.InteropServices.UnmanagedType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: UnmanagedType
  nameWithType: UnmanagedType
  fullName: System.Runtime.InteropServices.UnmanagedType
