### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.UnknownWrapper
  id: UnknownWrapper
  children:
  - System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)
  - System.Runtime.InteropServices.UnknownWrapper.WrappedObject
  langs:
  - csharp
  name: UnknownWrapper
  nameWithType: UnknownWrapper
  fullName: System.Runtime.InteropServices.UnknownWrapper
  type: Class
  summary: Wraps objects the marshaler should marshal as a `VT_UNKNOWN`.
  remarks: "Only applies when the managed signature of a method takes an object.  \n  \n```  \nint MyMethod(Object o); //Managed signature  \n    HRESULT MyMethod(VARIANT o); //COM signature  \n    MyObject o = new MyObject();  \n    MyMethod(o); //o gets passed as VARIANT VT_DISPATCH  \n    MyMethod(new UnknownWrapper(o)); //o gets passed as VARIANT VT_UNKNOWN  \n```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UnknownWrapper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Runtime.InteropServices.UnknownWrapper
  langs:
  - csharp
  name: UnknownWrapper(Object)
  nameWithType: UnknownWrapper.UnknownWrapper(Object)
  fullName: System.Runtime.InteropServices.UnknownWrapper.UnknownWrapper(Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.UnknownWrapper"> class with the object to be wrapped.
  remarks: To be added.
  syntax:
    content: public UnknownWrapper (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object being wrapped.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.UnknownWrapper.WrappedObject
  id: WrappedObject
  parent: System.Runtime.InteropServices.UnknownWrapper
  langs:
  - csharp
  name: WrappedObject
  nameWithType: UnknownWrapper.WrappedObject
  fullName: System.Runtime.InteropServices.UnknownWrapper.WrappedObject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Gets the object contained by this wrapper.
  remarks: To be added.
  syntax:
    content: public object WrappedObject { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.InteropServices.UnknownWrapper.#ctor(System.Object)
  parent: System.Runtime.InteropServices.UnknownWrapper
  isExternal: false
  name: UnknownWrapper(Object)
  nameWithType: UnknownWrapper.UnknownWrapper(Object)
  fullName: System.Runtime.InteropServices.UnknownWrapper.UnknownWrapper(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices.UnknownWrapper.WrappedObject
  parent: System.Runtime.InteropServices.UnknownWrapper
  isExternal: false
  name: WrappedObject
  nameWithType: UnknownWrapper.WrappedObject
  fullName: System.Runtime.InteropServices.UnknownWrapper.WrappedObject
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
