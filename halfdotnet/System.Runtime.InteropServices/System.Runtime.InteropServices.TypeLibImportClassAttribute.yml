### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.TypeLibImportClassAttribute
  id: TypeLibImportClassAttribute
  children:
  - System.Runtime.InteropServices.TypeLibImportClassAttribute.#ctor(System.Type)
  - System.Runtime.InteropServices.TypeLibImportClassAttribute.Value
  langs:
  - csharp
  name: TypeLibImportClassAttribute
  nameWithType: TypeLibImportClassAttribute
  fullName: System.Runtime.InteropServices.TypeLibImportClassAttribute
  type: Class
  summary: Specifies which <see cref="T:System.Type"> exclusively uses an interface. This class cannot be inherited.
  remarks: Apply the TypeLibImportClassAttribute attribute to a managed interface to specify which <xref:System.Type> object exclusively uses the interface.  This attribute allows COM interoperation to map the interface back to the original type when converting the interface from metadata to a type library and back again.
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Interface, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class TypeLibImportClassAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.TypeLibImportClassAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.InteropServices.TypeLibImportClassAttribute
  langs:
  - csharp
  name: TypeLibImportClassAttribute(Type)
  nameWithType: TypeLibImportClassAttribute.TypeLibImportClassAttribute(Type)
  fullName: System.Runtime.InteropServices.TypeLibImportClassAttribute.TypeLibImportClassAttribute(Type)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.TypeLibImportClassAttribute"> class specifying the <xref:System.Type> that exclusively uses an interface.
  remarks: Apply the <xref:System.Runtime.InteropServices.TypeLibImportClassAttribute> attribute to a managed interface to specify the <xref:System.Type> object that exclusively uses the interface.
  syntax:
    content: public TypeLibImportClassAttribute (Type importClass);
    parameters:
    - id: importClass
      type: System.Type
      description: The <see cref="T:System.Type"> object that exclusively uses an interface.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.TypeLibImportClassAttribute.Value
  id: Value
  parent: System.Runtime.InteropServices.TypeLibImportClassAttribute
  langs:
  - csharp
  name: Value
  nameWithType: TypeLibImportClassAttribute.Value
  fullName: System.Runtime.InteropServices.TypeLibImportClassAttribute.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Gets the name of a <see cref="T:System.Type"> object that exclusively uses an interface.
  remarks: Apply the <xref:System.Runtime.InteropServices.TypeLibImportClassAttribute> attribute to a managed interface to specify the type that exclusively uses an interface.
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.InteropServices.TypeLibImportClassAttribute.#ctor(System.Type)
  parent: System.Runtime.InteropServices.TypeLibImportClassAttribute
  isExternal: false
  name: TypeLibImportClassAttribute(Type)
  nameWithType: TypeLibImportClassAttribute.TypeLibImportClassAttribute(Type)
  fullName: System.Runtime.InteropServices.TypeLibImportClassAttribute.TypeLibImportClassAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.TypeLibImportClassAttribute.Value
  parent: System.Runtime.InteropServices.TypeLibImportClassAttribute
  isExternal: false
  name: Value
  nameWithType: TypeLibImportClassAttribute.Value
  fullName: System.Runtime.InteropServices.TypeLibImportClassAttribute.Value
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
