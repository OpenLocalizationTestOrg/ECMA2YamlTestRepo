### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.ClassInterfaceType
  id: ClassInterfaceType
  children:
  - System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch
  - System.Runtime.InteropServices.ClassInterfaceType.AutoDual
  - System.Runtime.InteropServices.ClassInterfaceType.None
  langs:
  - csharp
  name: ClassInterfaceType
  nameWithType: ClassInterfaceType
  fullName: System.Runtime.InteropServices.ClassInterfaceType
  type: Enum
  summary: Identifies the type of class interface that is generated for a class.
  remarks: This enumeration is used in conjunction with the <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> attribute.
  example:
  - "This example shows how to apply the <xref:System.Runtime.InteropServices.ClassInterfaceAttribute> to a type, setting the ClassInterfaceType. Classes defined this way can be used from unmanaged COM.  \n  \n [!CODE [ClassInterfaceType#1](../CodeSnippet/VS_Snippets_CLR/ClassInterfaceType#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ClassInterfaceType
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch
  id: AutoDispatch
  parent: System.Runtime.InteropServices.ClassInterfaceType
  langs:
  - csharp
  name: AutoDispatch
  nameWithType: ClassInterfaceType.AutoDispatch
  fullName: System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates that the class only supports late binding for COM clients. A `dispinterface` for the class is automatically exposed to COM clients on request. The type library produced by [Tlbexp.exe (Type Library Exporter)](../Topic/Tlbexp.exe%20\(Type%20Library%20Exporter\).md) does not contain type information for the `dispinterface` in order to prevent clients from caching the DISPIDs of the interface. The `dispinterface` does not exhibit the versioning problems described in T:System.Runtime.InteropServices.ClassInterfaceAttribute?qualifyHint=False&autoUpgrade=True because clients can only late-bind to the interface.
  remarks: This is the default setting for T:System.Runtime.InteropServices.ClassInterfaceAttribute?qualifyHint=False&autoUpgrade=True.
  syntax:
    content: AutoDispatch
    return:
      type: System.Runtime.InteropServices.ClassInterfaceType
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.ClassInterfaceType.AutoDual
  id: AutoDual
  parent: System.Runtime.InteropServices.ClassInterfaceType
  langs:
  - csharp
  name: AutoDual
  nameWithType: ClassInterfaceType.AutoDual
  fullName: System.Runtime.InteropServices.ClassInterfaceType.AutoDual
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates that a dual class interface is automatically generated for the class and exposed to COM. Type information is produced for the class interface and published in the type library. Using `AutoDual` is strongly discouraged because of the versioning limitations described in T:System.Runtime.InteropServices.ClassInterfaceAttribute?qualifyHint=False&autoUpgrade=True.
  syntax:
    content: AutoDual
    return:
      type: System.Runtime.InteropServices.ClassInterfaceType
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.ClassInterfaceType.None
  id: None
  parent: System.Runtime.InteropServices.ClassInterfaceType
  langs:
  - csharp
  name: None
  nameWithType: ClassInterfaceType.None
  fullName: System.Runtime.InteropServices.ClassInterfaceType.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates that no class interface is generated for the class. If no interfaces are implemented explicitly, the class can only provide late-bound access through the `IDispatch` interface. This is the recommended setting for <see cref="T:System.Runtime.InteropServices.ClassInterfaceAttribute">. Using `ClassInterfaceType.None` is the only way to expose functionality through interfaces implemented explicitly by the class.
  remarks: '[Tlbexp.exe (Type Library Exporter)](../Topic/Tlbexp.exe%20\(Type%20Library%20Exporter\).md) exposes the first public, COM-visible interface implemented by the class as the default interface of the coclass. Beginning with the .NET Framework version 2.0, you can specify the default interface exposed to COM by using the T:System.Runtime.InteropServices.ComDefaultInterfaceAttribute?qualifyHint=False&autoUpgrade=True attribute. If the class implements no interfaces, the first public, COM-visible interface implemented by a base class becomes the default interface (starting with the most recently derived base class and working backward). Tlbexp.exe exposes `_Object` as the default interface if neither the class nor its base classes implement interfaces.'
  syntax:
    content: None
    return:
      type: System.Runtime.InteropServices.ClassInterfaceType
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch
  parent: System.Runtime.InteropServices.ClassInterfaceType
  isExternal: false
  name: AutoDispatch
  nameWithType: ClassInterfaceType.AutoDispatch
  fullName: System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch
- uid: System.Runtime.InteropServices.ClassInterfaceType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ClassInterfaceType
  nameWithType: ClassInterfaceType
  fullName: System.Runtime.InteropServices.ClassInterfaceType
- uid: System.Runtime.InteropServices.ClassInterfaceType.AutoDual
  parent: System.Runtime.InteropServices.ClassInterfaceType
  isExternal: false
  name: AutoDual
  nameWithType: ClassInterfaceType.AutoDual
  fullName: System.Runtime.InteropServices.ClassInterfaceType.AutoDual
- uid: System.Runtime.InteropServices.ClassInterfaceType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ClassInterfaceType
  nameWithType: ClassInterfaceType
  fullName: System.Runtime.InteropServices.ClassInterfaceType
- uid: System.Runtime.InteropServices.ClassInterfaceType.None
  parent: System.Runtime.InteropServices.ClassInterfaceType
  isExternal: false
  name: None
  nameWithType: ClassInterfaceType.None
  fullName: System.Runtime.InteropServices.ClassInterfaceType.None
- uid: System.Runtime.InteropServices.ClassInterfaceType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ClassInterfaceType
  nameWithType: ClassInterfaceType
  fullName: System.Runtime.InteropServices.ClassInterfaceType
