### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.TypeIdentifierAttribute
  id: TypeIdentifierAttribute
  children:
  - System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor
  - System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)
  - System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier
  - System.Runtime.InteropServices.TypeIdentifierAttribute.Scope
  langs:
  - csharp
  name: TypeIdentifierAttribute
  nameWithType: TypeIdentifierAttribute
  fullName: System.Runtime.InteropServices.TypeIdentifierAttribute
  type: Class
  summary: Provides support for type equivalence.
  remarks: "The TypeIdentifierAttribute attribute is primarily emitted by compilers. It serves two purposes:  \n  \n-   For all imported types, it indicates that the type is intended to be used for type equivalence.  \n  \n-   For types that donâ€™t have GUIDs in their type library, it has a constructor that takes two strings ( and ). These are combined into a GUID and become the key that is used for type equivalence.  \n  \n Type equivalence is discussed in the <xref:System.Type.IsEquivalentTo%2A?displayProperty=fullName> topic."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class TypeIdentifierAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor
  id: '#ctor'
  parent: System.Runtime.InteropServices.TypeIdentifierAttribute
  langs:
  - csharp
  name: TypeIdentifierAttribute()
  nameWithType: TypeIdentifierAttribute.TypeIdentifierAttribute()
  fullName: System.Runtime.InteropServices.TypeIdentifierAttribute.TypeIdentifierAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Creates a new instance of the <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute"> class.
  remarks: This constructor overload does not accept parameters. Therefore, interfaces that have this attribute use the type's GUID and simple name to establish type equivalence.
  syntax:
    content: public TypeIdentifierAttribute ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Runtime.InteropServices.TypeIdentifierAttribute
  langs:
  - csharp
  name: TypeIdentifierAttribute(String,String)
  nameWithType: TypeIdentifierAttribute.TypeIdentifierAttribute(String,String)
  fullName: System.Runtime.InteropServices.TypeIdentifierAttribute.TypeIdentifierAttribute(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Creates a new instance of the <see cref="T:System.Runtime.InteropServices.TypeIdentifierAttribute"> class with the specified scope and identifier.
  remarks: "The  and  parameters are used to establish type equivalence. They are combined into a GUID and become the key that is used for type equivalence. This constructor is particularly useful for types that do not have GUIDs in their type library.  \n  \n The <xref:System.Runtime.InteropServices.TypeIdentifierAttribute> class internally maintains the  and  parameters as private members."
  syntax:
    content: public TypeIdentifierAttribute (string scope, string identifier);
    parameters:
    - id: scope
      type: System.String
      description: The first type equivalence string.
    - id: identifier
      type: System.String
      description: The second type equivalence string.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier
  id: Identifier
  parent: System.Runtime.InteropServices.TypeIdentifierAttribute
  langs:
  - csharp
  name: Identifier
  nameWithType: TypeIdentifierAttribute.Identifier
  fullName: System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Gets the value of the  parameter that was passed to the <xref:System.Runtime.InteropServices.TypeIdentifierAttribute.%23ctor%28System.String%2CSystem.String%29> constructor.
  remarks: To be added.
  syntax:
    content: public string Identifier { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.TypeIdentifierAttribute.Scope
  id: Scope
  parent: System.Runtime.InteropServices.TypeIdentifierAttribute
  langs:
  - csharp
  name: Scope
  nameWithType: TypeIdentifierAttribute.Scope
  fullName: System.Runtime.InteropServices.TypeIdentifierAttribute.Scope
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Gets the value of the  parameter that was passed to the <xref:System.Runtime.InteropServices.TypeIdentifierAttribute.%23ctor%28System.String%2CSystem.String%29> constructor.
  remarks: To be added.
  syntax:
    content: public string Scope { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor
  parent: System.Runtime.InteropServices.TypeIdentifierAttribute
  isExternal: false
  name: TypeIdentifierAttribute()
  nameWithType: TypeIdentifierAttribute.TypeIdentifierAttribute()
  fullName: System.Runtime.InteropServices.TypeIdentifierAttribute.TypeIdentifierAttribute()
- uid: System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)
  parent: System.Runtime.InteropServices.TypeIdentifierAttribute
  isExternal: false
  name: TypeIdentifierAttribute(String,String)
  nameWithType: TypeIdentifierAttribute.TypeIdentifierAttribute(String,String)
  fullName: System.Runtime.InteropServices.TypeIdentifierAttribute.TypeIdentifierAttribute(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier
  parent: System.Runtime.InteropServices.TypeIdentifierAttribute
  isExternal: false
  name: Identifier
  nameWithType: TypeIdentifierAttribute.Identifier
  fullName: System.Runtime.InteropServices.TypeIdentifierAttribute.Identifier
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.TypeIdentifierAttribute.Scope
  parent: System.Runtime.InteropServices.TypeIdentifierAttribute
  isExternal: false
  name: Scope
  nameWithType: TypeIdentifierAttribute.Scope
  fullName: System.Runtime.InteropServices.TypeIdentifierAttribute.Scope
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
