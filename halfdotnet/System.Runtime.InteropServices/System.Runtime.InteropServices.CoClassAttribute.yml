### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.CoClassAttribute
  id: CoClassAttribute
  children:
  - System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)
  - System.Runtime.InteropServices.CoClassAttribute.CoClass
  langs:
  - csharp
  name: CoClassAttribute
  nameWithType: CoClassAttribute
  fullName: System.Runtime.InteropServices.CoClassAttribute
  type: Class
  summary: Specifies the class identifier of a coclass imported from a type library.
  remarks: "You can apply this attribute to coclass interfaces, although the [Tlbimp.exe (Type Library Importer)](../Topic/Tlbimp.exe%20\\(Type%20Library%20Importer\\).md) typically applies it for you when it imports a type library.  \n  \n When Tlbimp.exe imports a coclass, it produces a managed class and an interface to represent the coclass. The coclass interface has the same interface identifier (IID) as the default interface of the original coclass. The imported coclass interface also retains the name of the coclass. Tlbimp.exe appends the original coclass name with \"class\" to identify the imported class.  \n  \n You rarely apply this attribute. However, if plan to write source code that produces metadata that closely simulates metadata produced by Tlbimp.exe, you should create a coclass interface for each coclass. Use the name of the original coclass to name the coclass interface and derive it from the default interface. In addition to the CoClassAttribute, you must also apply the <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=fullName> and <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=fullName> to the coclass interface. For additional information about how Tlbimp.exe imports interfaces and coclasses from a type library, see [Imported Type Conversion](http://msdn.microsoft.com/en-us/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3)."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Interface, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class CoClassAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.InteropServices.CoClassAttribute
  langs:
  - csharp
  name: CoClassAttribute(Type)
  nameWithType: CoClassAttribute.CoClassAttribute(Type)
  fullName: System.Runtime.InteropServices.CoClassAttribute.CoClassAttribute(Type)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Initializes new instance of the <see cref="T:System.Runtime.InteropServices.CoClassAttribute"> with the class identifier of the original coclass.
  remarks: To be added.
  syntax:
    content: public CoClassAttribute (Type coClass);
    parameters:
    - id: coClass
      type: System.Type
      description: A <see cref="T:System.Type"> that contains the class identifier of the original coclass.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.CoClassAttribute.CoClass
  id: CoClass
  parent: System.Runtime.InteropServices.CoClassAttribute
  langs:
  - csharp
  name: CoClass
  nameWithType: CoClassAttribute.CoClass
  fullName: System.Runtime.InteropServices.CoClassAttribute.CoClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Gets the class identifier of the original coclass.
  remarks: To be added.
  syntax:
    content: public Type CoClass { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.InteropServices.CoClassAttribute.#ctor(System.Type)
  parent: System.Runtime.InteropServices.CoClassAttribute
  isExternal: false
  name: CoClassAttribute(Type)
  nameWithType: CoClassAttribute.CoClassAttribute(Type)
  fullName: System.Runtime.InteropServices.CoClassAttribute.CoClassAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.CoClassAttribute.CoClass
  parent: System.Runtime.InteropServices.CoClassAttribute
  isExternal: false
  name: CoClass
  nameWithType: CoClassAttribute.CoClass
  fullName: System.Runtime.InteropServices.CoClassAttribute.CoClass
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
