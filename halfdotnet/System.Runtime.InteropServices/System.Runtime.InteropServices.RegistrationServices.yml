### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.RegistrationServices
  id: RegistrationServices
  children:
  - System.Runtime.InteropServices.RegistrationServices.#ctor
  - System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid
  - System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)
  - System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  - System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  - System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  - System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  - System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)
  - System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)
  - System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  - System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)
  langs:
  - csharp
  name: RegistrationServices
  nameWithType: RegistrationServices
  fullName: System.Runtime.InteropServices.RegistrationServices
  type: Class
  summary: Provides a set of services for registering and unregistering managed assemblies for use from COM.
  remarks: "Registration is needed when the objects within an assembly are being used by COM clients. The [Regasm.exe (Assembly Registration Tool)](../Topic/Regasm.exe%20\\(Assembly%20Registration%20Tool\\).md) and [!INCLUDE[vsprvsext](../../add/includes/vsprvsext-md.md)] use methods exposed by the RegistrationServices class to add or remove COM-enabling registry entries for managed assemblies.  \n  \n You can use the following methods to assist you in preparing a registration file:  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid%2A>  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.GetProgIdForType%2A>  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly%2A>  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A>  \n  \n Although these methods help in gathering information to be used in a registration file, they do not actually produce a registration file. Instead, you can use the [Regasm.exe (Assembly Registration Tool)](../Topic/Regasm.exe%20\\(Assembly%20Registration%20Tool\\).md) tool with the `/regfile` option to perform this task. RegistrationServices methods cannot export and register a type library. To export and register a type library, you can use the [Regasm.exe (Assembly Registration Tool)](../Topic/Regasm.exe%20\\(Assembly%20Registration%20Tool\\).md) tool and the [Tlbexp.exe (Type Library Exporter)](../Topic/Tlbexp.exe%20\\(Type%20Library%20Exporter\\).md) tool."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("475E398F-8AFA-43a7-A3BE-F4EF8D6787C9")]

      public class RegistrationServices : System.Runtime.InteropServices.IRegistrationServices
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices.IRegistrationServices
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.#ctor
  id: '#ctor'
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegistrationServices()
  nameWithType: RegistrationServices.RegistrationServices()
  fullName: System.Runtime.InteropServices.RegistrationServices.RegistrationServices()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.RegistrationServices"> class.
  remarks: To be added.
  syntax:
    content: public RegistrationServices ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid
  id: GetManagedCategoryGuid
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: GetManagedCategoryGuid()
  nameWithType: RegistrationServices.GetManagedCategoryGuid()
  fullName: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Returns the GUID of the COM category that contains the managed classes.
  remarks: To be added.
  syntax:
    content: public virtual Guid GetManagedCategoryGuid ();
    parameters: []
    return:
      type: System.Guid
      description: The GUID of the COM category that contains the managed classes.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)
  id: GetProgIdForType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: GetProgIdForType(Type)
  nameWithType: RegistrationServices.GetProgIdForType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Retrieves the COM ProgID for the specified type.
  remarks: To be added.
  syntax:
    content: public virtual string GetProgIdForType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The type corresponding to the ProgID that is being requested.
    return:
      type: System.String
      description: The ProgID for the specified type.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  id: GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: GetRegistrableTypesInAssembly(Assembly)
  nameWithType: RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Retrieves a list of classes in an assembly that would be registered by a call to <xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly%2A>.
  remarks: To be added.
  syntax:
    content: public virtual Type[] GetRegistrableTypesInAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to search for classes.
    return:
      type: System.Type[]
      description: A <see cref="T:System.Type"> array containing a list of classes in .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  id: RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  nameWithType: RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Registers the classes in a managed assembly to enable creation from COM.
  remarks: "`RegisterAssembly` adds the appropriate registry entries for the types in the specified assembly. This method also calls any registration functions found in the assembly.  \n  \n Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> to get an assembly."
  syntax:
    content: public virtual bool RegisterAssembly (System.Reflection.Assembly assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags flags);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to be registered.
    - id: flags
      type: System.Runtime.InteropServices.AssemblyRegistrationFlags
      description: An <see cref="T:System.Runtime.InteropServices.AssemblyRegistrationFlags"> value indicating any special settings used when registering .
    return:
      type: System.Boolean
      description: '`true` if  contains types that were successfully registered; otherwise `false` if the assembly contains no eligible types.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  id: RegisterTypeForComClients(System.Type,System.Guid@)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegisterTypeForComClients(Type,Guid)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,Guid)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Registers the specified type with COM using the specified GUID.
  remarks: "This method is equivalent to calling `CoRegisterClassObject` in COM. The RegisterTypeForComClients method is not atomic and can cause unpredictable results when used in a multithreaded context.  \n  \n In version 2.0 and later, use the <xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A> method to unregister a type in COM.  \n  \n Note that using platform invoke to call the unmanaged `CoRegisterClassObject` and  `CoDisconnectObject` methods for registration and unregistration of COM objects is not supported."
  syntax:
    content: public virtual void RegisterTypeForComClients (Type type, ref Guid g);
    parameters:
    - id: type
      type: System.Type
      description: The <see cref="T:System.Type"> to be registered for use from COM.
    - id: g
      type: System.Guid
      description: The <see cref="T:System.Guid"> used to register the specified type.
  overload: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  id: RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Registers the specified type with COM using the specified execution context and connection type.
  remarks: "This method is equivalent to calling `CoRegisterClassObject` in COM. The RegisterTypeForComClients method is not atomic and can cause unpredictable results when used in a multithreaded context.  \n  \n In the .NET Framework version 2.0 and later, use the <xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A> method to unregister a type in COM.  \n  \n Note that using platform invoke to call the unmanaged `CoRegisterClassObject` and  `CoDisconnectObject` methods for registration and unregistration of COM objects is not supported."
  syntax:
    content: public virtual int RegisterTypeForComClients (Type type, System.Runtime.InteropServices.RegistrationClassContext classContext, System.Runtime.InteropServices.RegistrationConnectionType flags);
    parameters:
    - id: type
      type: System.Type
      description: The <see cref="T:System.Type"> object to register for use from COM.
    - id: classContext
      type: System.Runtime.InteropServices.RegistrationClassContext
      description: One of the <see cref="T:System.Runtime.InteropServices.RegistrationClassContext"> values that indicates the context in which the executable code will be run.
    - id: flags
      type: System.Runtime.InteropServices.RegistrationConnectionType
      description: One of the <see cref="T:System.Runtime.InteropServices.RegistrationConnectionType"> values that specifies how connections are made to the class object.
    return:
      type: System.Int32
      description: An integer that represents a cookie value.
  overload: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)
  id: TypeRepresentsComType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: TypeRepresentsComType(Type)
  nameWithType: RegistrationServices.TypeRepresentsComType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates whether a type is marked with the <see cref="T:System.Runtime.InteropServices.ComImportAttribute">, or derives from a type marked with the <see cref="T:System.Runtime.InteropServices.ComImportAttribute"> and shares the same GUID as the parent.
  remarks: To be added.
  syntax:
    content: public virtual bool TypeRepresentsComType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The type to check for being a COM type.
    return:
      type: System.Boolean
      description: '`true` if a type is marked with the <see cref="T:System.Runtime.InteropServices.ComImportAttribute">, or derives from a type marked with the <see cref="T:System.Runtime.InteropServices.ComImportAttribute"> and shares the same GUID as the parent; otherwise `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)
  id: TypeRequiresRegistration(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: TypeRequiresRegistration(Type)
  nameWithType: RegistrationServices.TypeRequiresRegistration(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Determines whether the specified type requires registration.
  remarks: To be added.
  syntax:
    content: public virtual bool TypeRequiresRegistration (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The type to check for COM registration requirements.
    return:
      type: System.Boolean
      description: '`true` if the type must be registered for use from COM; otherwise `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  id: UnregisterAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: UnregisterAssembly(Assembly)
  nameWithType: RegistrationServices.UnregisterAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Unregisters the classes in a managed assembly.
  remarks: '`UnregisterAssembly` removes the registry entries for the types in the specified assembly previously added by <xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly%2A>. This method also calls any unregistration functions found in the assembly.'
  syntax:
    content: public virtual bool UnregisterAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly to be unregistered.
    return:
      type: System.Boolean
      description: '`true` if  contains types that were successfully unregistered; otherwise `false` if the assembly contains no eligible types.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)
  id: UnregisterTypeForComClients(System.Int32)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: UnregisterTypeForComClients(Int32)
  nameWithType: RegistrationServices.UnregisterTypeForComClients(Int32)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Removes references to a type registered with the <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients%2A> method.
  remarks: Note that using platform invoke to call the unmanaged `CoRegisterClassObject` and  `CoDisconnectObject` methods to register and unregister COM objects is not supported.
  syntax:
    content: public virtual void UnregisterTypeForComClients (int cookie);
    parameters:
    - id: cookie
      type: System.Int32
      description: The cookie value returned by a previous call to the <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients%2A> method overload.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.InteropServices.RegistrationServices.#ctor
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegistrationServices()
  nameWithType: RegistrationServices.RegistrationServices()
  fullName: System.Runtime.InteropServices.RegistrationServices.RegistrationServices()
- uid: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetManagedCategoryGuid()
  nameWithType: RegistrationServices.GetManagedCategoryGuid()
  fullName: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid()
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetProgIdForType(Type)
  nameWithType: RegistrationServices.GetProgIdForType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(Type)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetRegistrableTypesInAssembly(Assembly)
  nameWithType: RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  nameWithType: RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices.AssemblyRegistrationFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: AssemblyRegistrationFlags
  nameWithType: AssemblyRegistrationFlags
  fullName: System.Runtime.InteropServices.AssemblyRegistrationFlags
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterTypeForComClients(Type,Guid)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,Guid)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,Guid)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.RegistrationClassContext
  parent: System.Runtime.InteropServices
  isExternal: false
  name: RegistrationClassContext
  nameWithType: RegistrationClassContext
  fullName: System.Runtime.InteropServices.RegistrationClassContext
- uid: System.Runtime.InteropServices.RegistrationConnectionType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: RegistrationConnectionType
  nameWithType: RegistrationConnectionType
  fullName: System.Runtime.InteropServices.RegistrationConnectionType
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRepresentsComType(Type)
  nameWithType: RegistrationServices.TypeRepresentsComType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRequiresRegistration(Type)
  nameWithType: RegistrationServices.TypeRequiresRegistration(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterAssembly(Assembly)
  nameWithType: RegistrationServices.UnregisterAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(Assembly)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterTypeForComClients(Int32)
  nameWithType: RegistrationServices.UnregisterTypeForComClients(Int32)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  nameWithType: RegistrationServices.
