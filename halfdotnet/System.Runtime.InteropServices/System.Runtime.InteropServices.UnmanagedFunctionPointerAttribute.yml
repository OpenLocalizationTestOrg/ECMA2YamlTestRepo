### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  id: UnmanagedFunctionPointerAttribute
  children:
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError
  - System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  langs:
  - csharp
  name: UnmanagedFunctionPointerAttribute
  nameWithType: UnmanagedFunctionPointerAttribute
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  type: Class
  summary: Controls the marshaling behavior of a delegate signature passed as an unmanaged function pointer to or from unmanaged code. This class cannot be inherited.
  remarks: "The fields of the UnmanagedFunctionPointerAttribute attribute control various aspects of the transition of a delegate to an unmanaged function pointer, and are the same as the fields with identical names in the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute. These fields are optional, but if you do not specify a field name, UnmanagedFunctionPointerAttribute is ignored.  \n  \n For more information about using attributes, see [Attributes](../Topic/Extending%20Metadata%20Using%20Attributes.md)."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UnmanagedFunctionPointerAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)
  id: '#ctor(System.Runtime.InteropServices.CallingConvention)'
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  name: UnmanagedFunctionPointerAttribute(CallingConvention)
  nameWithType: UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute(CallingConvention)
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute(CallingConvention)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute"> class with the specified calling convention.
  remarks: This method specifies the calling convention for the delegate in unmanaged code and is the most common use of the <xref:System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute> attribute. You can set the  parameter to one of the values in the <xref:System.Runtime.InteropServices.CallingConvention> enumeration.
  syntax:
    content: public UnmanagedFunctionPointerAttribute (System.Runtime.InteropServices.CallingConvention callingConvention);
    parameters:
    - id: callingConvention
      type: System.Runtime.InteropServices.CallingConvention
      description: The specified calling convention.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping
  id: BestFitMapping
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  name: BestFitMapping
  nameWithType: UnmanagedFunctionPointerAttribute.BestFitMapping
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.
  remarks: "The BestFitMapping field is `true` by default, which means that best-fit mapping behavior is enabled. If the field is `false`, best-fit mapping is disabled. Settings for this field override any level settings for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute> attribute.  \n  \n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping>."
  syntax:
    content: public bool BestFitMapping;
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  name: CallingConvention
  nameWithType: UnmanagedFunctionPointerAttribute.CallingConvention
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Gets the value of the calling convention.
  remarks: To be added.
  syntax:
    content: public System.Runtime.InteropServices.CallingConvention CallingConvention { get; }
    return:
      type: System.Runtime.InteropServices.CallingConvention
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet
  id: CharSet
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  name: CharSet
  nameWithType: UnmanagedFunctionPointerAttribute.CharSet
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates how to marshal string parameters to the method, and controls name mangling.
  remarks: "Use this field with a member of the <xref:System.Runtime.InteropServices.CharSet> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with \"A\" or \"W\").  \n  \n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.CharSet>."
  syntax:
    content: public System.Runtime.InteropServices.CharSet CharSet;
    return:
      type: System.Runtime.InteropServices.CharSet
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError
  id: SetLastError
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  name: SetLastError
  nameWithType: UnmanagedFunctionPointerAttribute.SetLastError
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Indicates whether the callee calls the `SetLastError` Win32 API function before returning from the attributed method.
  remarks: "The SetLastError field is `false` by default, which means the caller calls `SetLastError`. Set this field to `true` to indicate that the callee calls `SetLastError` before returning from the attributed method.  \n  \n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError>."
  syntax:
    content: public bool SetLastError;
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  id: ThrowOnUnmappableChar
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  langs:
  - csharp
  name: ThrowOnUnmappableChar
  nameWithType: UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI "?" character.
  remarks: "The ThrowOnUnmappableChar field is `false` by default, which means that the field is disabled. Set this field to `true` to indicate that an exception is thrown each time the interop marshaler converts an unmappable character.  \n  \n For more information, see <xref:System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar>."
  syntax:
    content: public bool ThrowOnUnmappableChar;
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.#ctor(System.Runtime.InteropServices.CallingConvention)
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  isExternal: false
  name: UnmanagedFunctionPointerAttribute(CallingConvention)
  nameWithType: UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute(CallingConvention)
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.UnmanagedFunctionPointerAttribute(CallingConvention)
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  isExternal: false
  name: BestFitMapping
  nameWithType: UnmanagedFunctionPointerAttribute.BestFitMapping
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.BestFitMapping
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  isExternal: false
  name: CallingConvention
  nameWithType: UnmanagedFunctionPointerAttribute.CallingConvention
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CallingConvention
- uid: System.Runtime.InteropServices.CallingConvention
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: System.Runtime.InteropServices.CallingConvention
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  isExternal: false
  name: CharSet
  nameWithType: UnmanagedFunctionPointerAttribute.CharSet
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.CharSet
- uid: System.Runtime.InteropServices.CharSet
  parent: System.Runtime.InteropServices
  isExternal: false
  name: CharSet
  nameWithType: CharSet
  fullName: System.Runtime.InteropServices.CharSet
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  isExternal: false
  name: SetLastError
  nameWithType: UnmanagedFunctionPointerAttribute.SetLastError
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.SetLastError
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  parent: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
  isExternal: false
  name: ThrowOnUnmappableChar
  nameWithType: UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
  fullName: System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute.ThrowOnUnmappableChar
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
