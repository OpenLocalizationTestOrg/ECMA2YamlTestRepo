### YamlMime:ManagedReference
items:
- uid: System.IO.FileLoadException
  id: FileLoadException
  children:
  - System.IO.FileLoadException.#ctor
  - System.IO.FileLoadException.#ctor(System.String)
  - System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileLoadException.#ctor(System.String,System.Exception)
  - System.IO.FileLoadException.#ctor(System.String,System.String)
  - System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  - System.IO.FileLoadException.FileName
  - System.IO.FileLoadException.FusionLog
  - System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileLoadException.Message
  - System.IO.FileLoadException.ToString
  langs:
  - csharp
  name: FileLoadException
  nameWithType: FileLoadException
  fullName: System.IO.FileLoadException
  type: Class
  summary: The exception that is thrown when a managed assembly is found but cannot be loaded.
  remarks: "Represents the error that occurs when a <xref:System.Reflection.Assembly> file is found but cannot be loaded.  \n  \n The <xref:System.IO.FileNotFoundException> exception is thrown when the file fails to load because it cannot be located. If the file is located, but cannot be loaded due to insufficient permissions, a <xref:System.Security.SecurityException> is thrown.  \n  \n `FileLoadException` has the default HRESULT of COR_E_FILELOAD, which has the value 0x80131621, but this is not the only possible HRESULT.  \n  \n If your code does not have <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths.  \n  \n> [!NOTE]\n>  This exception is not included in the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the , but it is thrown by some members that are. To catch the exception in that case, write a `catch` statement for <xref:System.IO.IOException> instead.  \n  \n **Associated Tips**  \n  \n **Make sure that the file is a valid .NET Framework assembly.**  \n This exception is thrown if the file is not a valid .NET Framework assembly. For more information, see <xref:System.Reflection.Assembly>.  \n  \n **Check to make sure an assembly or module was not loaded twice with two different evidences.**  \n Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code. For more information, see <xref:System.EnterpriseServices.Internal.Publish.GacRemove%2A> and <xref:System.Reflection.Assembly.Evidence%2A>  \n  \n **If using the RegisterAssembly or UnregisterAssembly methods, check to make sure the assembly name is not longer than MAX_PATH characters.**  \n The assembly name's length cannot exceed MAX_PATH. For more information, see <xref:System.EnterpriseServices.Internal.IComSoapPublisher.RegisterAssembly%2A> and <xref:System.EnterpriseServices.Internal.IComSoapPublisher.UnRegisterAssembly%2A>.  \n  \n **If loading a satellite assembly, make sure the specified CultureInfo matches the file's CultureInfo.**  \n Satellite assemblies contain localized resources which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture. For more information, see <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A>."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class FileLoadException : System.IO.IOException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.IO.IOException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.#ctor
  id: '#ctor'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException()
  nameWithType: FileLoadException.FileLoadException()
  fullName: System.IO.FileLoadException.FileLoadException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.FileLoadException"> class, setting the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Could not load the specified file." This message takes into account the current system culture.
  remarks: The <xref:System.Exception.InnerException%2A> property and <xref:System.IO.FileLoadException.FileName%2A> property of the new instance are initialized to `null`.
  syntax:
    content: public FileLoadException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(String)
  nameWithType: FileLoadException.FileLoadException(String)
  fullName: System.IO.FileLoadException.FileLoadException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.FileLoadException"> class with the specified error message.
  remarks: This constructor initializes the <xref:System.IO.FileLoadException.Message%2A> property of the new instance using . The <xref:System.Exception.InnerException%2A> property and <xref:System.IO.FileLoadException.FileName%2A> property of the new instance are initialized to `null`.
  syntax:
    content: public FileLoadException (string message);
    parameters:
    - id: message
      type: System.String
      description: A <xref:System.String> that describes the error. The content of  is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(SerializationInfo,StreamingContext)
  nameWithType: FileLoadException.FileLoadException(SerializationInfo,StreamingContext)
  fullName: System.IO.FileLoadException.FileLoadException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.FileLoadException"> class with serialized data.
  remarks: To be added.
  syntax:
    content: protected FileLoadException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref:System.Runtime.Serialization.SerializationInfo> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref:System.Runtime.Serialization.StreamingContext> that contains contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(String,Exception)
  nameWithType: FileLoadException.FileLoadException(String,Exception)
  fullName: System.IO.FileLoadException.FileLoadException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.FileLoadException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The `InnerException` property returns the same value that is passed into the constructor, or `null` if the `InnerException` property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.IO.FileLoadException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.IO.FileLoadException.Message%2A>|The error message string.|  \n  \n For more information on inner exceptions, see <xref:System.Exception.InnerException%2A>."
  syntax:
    content: public FileLoadException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: A <xref:System.String> that describes the error. The content of  is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(String,String)
  nameWithType: FileLoadException.FileLoadException(String,String)
  fullName: System.IO.FileLoadException.FileLoadException(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.FileLoadException"> class with a specified error message and the name of the file that could not be loaded.
  remarks: "This constructor initializes the <xref:System.IO.FileLoadException.Message%2A> property of the new instance using  and the <xref:System.IO.FileLoadException.FileName%2A> property using . The <xref:System.Exception.InnerException%2A> property of the new instance is initialized to `null`.  \n  \n <xref:System.IO.FileLoadException.FileName%2A> is not required to be a file stored on disk; it can be any part of a system that supports access to streams. For example, depending on the system, this class might be able to access a physical device."
  syntax:
    content: public FileLoadException (string message, string fileName);
    parameters:
    - id: message
      type: System.String
      description: A <xref:System.String> that describes the error. The content of  is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
    - id: fileName
      type: System.String
      description: A <xref:System.String> containing the name of the file that was not loaded.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.Exception)'
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileLoadException(String,String,Exception)
  nameWithType: FileLoadException.FileLoadException(String,String,Exception)
  fullName: System.IO.FileLoadException.FileLoadException(String,String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.FileLoadException"> class with a specified error message, the name of the file that could not be loaded, and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The `InnerException` property returns the same value that is passed into the constructor, or `null` if the `InnerException` property does not supply the inner exception value to the constructor.  \n  \n <xref:System.IO.FileLoadException.FileName%2A> is not required to be a file stored on disk; it can be any part of a system that supports access to streams. For example, depending on the system, this class might be able to access a physical device.  \n  \n The following table shows the initial property values for an instance of <xref:System.IO.FileLoadException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.IO.FileLoadException.Message%2A>|The error message string.|  \n  \n For more information on inner exceptions, see <xref:System.Exception.InnerException%2A>."
  syntax:
    content: public FileLoadException (string message, string fileName, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: A <xref:System.String> that describes the error. The content of  is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
    - id: fileName
      type: System.String
      description: A <xref:System.String> containing the name of the file that was not loaded.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.FileName
  id: FileName
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FileName
  nameWithType: FileLoadException.FileName
  fullName: System.IO.FileLoadException.FileName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Gets the name of the file that causes this exception.
  remarks: "This property returns the name of the file supplied to the constructor for the current instance, if any. If the file name was not specified or is a null reference, this property returns a null reference.  \n  \n This property is read-only."
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.FusionLog
  id: FusionLog
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: FusionLog
  nameWithType: FileLoadException.FusionLog
  fullName: System.IO.FileLoadException.FusionLog
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Gets the log file that describes why an assembly load failed.
  remarks: To be added.
  syntax:
    content: public string FusionLog { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileLoadException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.FileLoadException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Sets the <xref:System.Runtime.Serialization.SerializationInfo> with the file name and additional exception information.
  remarks: To be added.
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref:System.Runtime.Serialization.SerializationInfo> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref:System.Runtime.Serialization.StreamingContext> that contains contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.Message
  id: Message
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: Message
  nameWithType: FileLoadException.Message
  fullName: System.IO.FileLoadException.Message
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Gets the error message and the name of the file that caused this exception.
  remarks: "This property overrides <xref:System.Exception.Message%2A>.  \n  \n If no message was supplied to the constructor for the current exception, this property returns a system-supplied error message. If the <xref:System.IO.FileLoadException.FileName%2A> property is not a null reference, the message includes the file name, for example, \"Unable to load file a .\" (a  represents the value returned by <xref:System.IO.FileLoadException.FileName%2A>.) If <xref:System.IO.FileLoadException.FileName%2A> is `null`, this is indicated in the system-supplied message as \"(null)\". The system-supplied message takes into account the current system culture.  \n  \n This property is read-only."
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.FileLoadException.ToString
  id: ToString
  parent: System.IO.FileLoadException
  langs:
  - csharp
  name: ToString()
  nameWithType: FileLoadException.ToString()
  fullName: System.IO.FileLoadException.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Returns the fully qualified name of the current exception, and possibly the error message, the name of the inner exception, and the stack trace.
  remarks: "This method overrides <xref:System.Object.ToString%2A>.  \n  \n The string representation returned by this method includes the name of the exception, the value of the <xref:System.IO.FileLoadException.Message%2A> the value of the <xref:System.IO.FileLoadException.FileName%2A> property, and the result of calling <xref:System.Environment.StackTrace%2A>. If any of these members is a null reference, its value is not included in the returned string."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string containing the fully qualified name of this exception, and possibly the error message, the name of the inner exception, and the stack trace, depending on which <see cref="T:System.IO.FileLoadException"> constructor is used.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.IO.IOException
  isExternal: false
  name: System.IO.IOException
- uid: System.IO.FileLoadException.#ctor
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException()
  nameWithType: FileLoadException.FileLoadException()
  fullName: System.IO.FileLoadException.FileLoadException()
- uid: System.IO.FileLoadException.#ctor(System.String)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(String)
  nameWithType: FileLoadException.FileLoadException(String)
  fullName: System.IO.FileLoadException.FileLoadException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(SerializationInfo,StreamingContext)
  nameWithType: FileLoadException.FileLoadException(SerializationInfo,StreamingContext)
  fullName: System.IO.FileLoadException.FileLoadException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.FileLoadException.#ctor(System.String,System.Exception)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(String,Exception)
  nameWithType: FileLoadException.FileLoadException(String,Exception)
  fullName: System.IO.FileLoadException.FileLoadException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IO.FileLoadException.#ctor(System.String,System.String)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(String,String)
  nameWithType: FileLoadException.FileLoadException(String,String)
  fullName: System.IO.FileLoadException.FileLoadException(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileLoadException(String,String,Exception)
  nameWithType: FileLoadException.FileLoadException(String,String,Exception)
  fullName: System.IO.FileLoadException.FileLoadException(String,String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IO.FileLoadException.FileName
  parent: System.IO.FileLoadException
  isExternal: false
  name: FileName
  nameWithType: FileLoadException.FileName
  fullName: System.IO.FileLoadException.FileName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileLoadException.FusionLog
  parent: System.IO.FileLoadException
  isExternal: false
  name: FusionLog
  nameWithType: FileLoadException.FusionLog
  fullName: System.IO.FileLoadException.FusionLog
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileLoadException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileLoadException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.FileLoadException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.FileLoadException.Message
  parent: System.IO.FileLoadException
  isExternal: false
  name: Message
  nameWithType: FileLoadException.Message
  fullName: System.IO.FileLoadException.Message
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileLoadException.ToString
  parent: System.IO.FileLoadException
  isExternal: false
  name: ToString()
  nameWithType: FileLoadException.ToString()
  fullName: System.IO.FileLoadException.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
