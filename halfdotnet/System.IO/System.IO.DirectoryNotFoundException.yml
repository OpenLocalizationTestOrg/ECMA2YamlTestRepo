### YamlMime:ManagedReference
items:
- uid: System.IO.DirectoryNotFoundException
  id: DirectoryNotFoundException
  children:
  - System.IO.DirectoryNotFoundException.#ctor
  - System.IO.DirectoryNotFoundException.#ctor(System.String)
  - System.IO.DirectoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: DirectoryNotFoundException
  nameWithType: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
  type: Class
  summary: The exception that is thrown when part of a file or directory cannot be found.
  remarks: "`DirectoryNotFoundException` uses the HRESULT COR_E_DIRECTORYNOTFOUND which has the value 0x80070003. Note that `DirectoryNotFoundException` is also thrown when COM interop programs see the HRESULT STG_E_PATHNOTFOUND, which has the value 0x80030003.  \n  \n If your code does not have <xref:System.Security.Permissions.FileIOPermissionAttribute.PathDiscovery%2A> permission, the error message for this exception may only contain file or directory names instead of fully qualified paths."
  example:
  - "The following example shows how to force and recover from a DirectoryNotFoundException.  \n  \n [!CODE [DirectoryNotFoundException#1](../CodeSnippet/VS_Snippets_CLR/DirectoryNotFoundException#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DirectoryNotFoundException : System.IO.IOException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.IO.IOException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.DirectoryNotFoundException.#ctor
  id: '#ctor'
  parent: System.IO.DirectoryNotFoundException
  langs:
  - csharp
  name: DirectoryNotFoundException()
  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException()
  fullName: System.IO.DirectoryNotFoundException.DirectoryNotFoundException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.DirectoryNotFoundException"> class with its message string set to a system-supplied message and its HRESULT set to COR_E_DIRECTORYNOTFOUND.
  remarks: "This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance to a system-supplied message that describes the error, such as \"Could not find the specified directory.\" This message takes into account the current system culture.  \n  \n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`."
  example:
  - "The following code example demonstrates how to call the DirectoryNotFoundException constructor.  \n  \n [!CODE [DirectoryNotFoundException#1](../CodeSnippet/VS_Snippets_CLR/DirectoryNotFoundException#1)]"
  syntax:
    content: public DirectoryNotFoundException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.DirectoryNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.DirectoryNotFoundException
  langs:
  - csharp
  name: DirectoryNotFoundException(String)
  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(String)
  fullName: System.IO.DirectoryNotFoundException.DirectoryNotFoundException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.DirectoryNotFoundException"> class with its message string set to  and its HRESULT set to COR_E_DIRECTORYNOTFOUND.
  remarks: "This constructor initializes the <xref:System.Exception.Message%2A?displayProperty=fullName> property of the new instance using .  \n  \n The <xref:System.Exception.InnerException%2A?displayProperty=fullName> property of the new instance is initialized to `null`."
  syntax:
    content: public DirectoryNotFoundException (string message);
    parameters:
    - id: message
      type: System.String
      description: A <xref:System.String> that describes the error. The content of  is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.DirectoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IO.DirectoryNotFoundException
  langs:
  - csharp
  name: DirectoryNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.IO.DirectoryNotFoundException.DirectoryNotFoundException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.DirectoryNotFoundException"> class with the specified serialization and context information.
  remarks: To be added.
  syntax:
    content: protected DirectoryNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref:System.Runtime.Serialization.SerializationInfo> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <xref:System.Runtime.Serialization.StreamingContext> that contains contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.IO.DirectoryNotFoundException
  langs:
  - csharp
  name: DirectoryNotFoundException(String,Exception)
  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(String,Exception)
  fullName: System.IO.DirectoryNotFoundException.DirectoryNotFoundException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: Initializes a new instance of the <see cref="T:System.IO.DirectoryNotFoundException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.IO.DirectoryNotFoundException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public DirectoryNotFoundException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.IO.IOException
  isExternal: false
  name: System.IO.IOException
- uid: System.IO.DirectoryNotFoundException.#ctor
  parent: System.IO.DirectoryNotFoundException
  isExternal: false
  name: DirectoryNotFoundException()
  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException()
  fullName: System.IO.DirectoryNotFoundException.DirectoryNotFoundException()
- uid: System.IO.DirectoryNotFoundException.#ctor(System.String)
  parent: System.IO.DirectoryNotFoundException
  isExternal: false
  name: DirectoryNotFoundException(String)
  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(String)
  fullName: System.IO.DirectoryNotFoundException.DirectoryNotFoundException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.DirectoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.DirectoryNotFoundException
  isExternal: false
  name: DirectoryNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.IO.DirectoryNotFoundException.DirectoryNotFoundException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.DirectoryNotFoundException.#ctor(System.String,System.Exception)
  parent: System.IO.DirectoryNotFoundException
  isExternal: false
  name: DirectoryNotFoundException(String,Exception)
  nameWithType: DirectoryNotFoundException.DirectoryNotFoundException(String,Exception)
  fullName: System.IO.DirectoryNotFoundException.DirectoryNotFoundException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
