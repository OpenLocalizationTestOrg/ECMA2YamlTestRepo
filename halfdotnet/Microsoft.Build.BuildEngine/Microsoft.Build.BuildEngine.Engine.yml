### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.BuildEngine.Engine
  id: Engine
  children:
  - Microsoft.Build.BuildEngine.Engine.#ctor
  - Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup)
  - Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)
  - Microsoft.Build.BuildEngine.Engine.#ctor(System.String)
  - Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)
  - Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations,System.Int32,System.String)
  - Microsoft.Build.BuildEngine.Engine.BinPath
  - Microsoft.Build.BuildEngine.Engine.BuildEnabled
  - Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project)
  - Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String)
  - Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[])
  - Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary)
  - Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)
  - Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String)
  - Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String)
  - Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[])
  - Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup)
  - Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary)
  - Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)
  - Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings,System.String)
  - Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(System.String[],System.String[][],Microsoft.Build.BuildEngine.BuildPropertyGroup[],System.Collections.IDictionary[],Microsoft.Build.BuildEngine.BuildSettings,System.String[])
  - Microsoft.Build.BuildEngine.Engine.CreateNewProject
  - Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion
  - Microsoft.Build.BuildEngine.Engine.GetLoadedProject(System.String)
  - Microsoft.Build.BuildEngine.Engine.GlobalEngine
  - Microsoft.Build.BuildEngine.Engine.GlobalProperties
  - Microsoft.Build.BuildEngine.Engine.IsBuilding
  - Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents
  - Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(Microsoft.Build.Framework.ILogger,Microsoft.Build.BuildEngine.LoggerDescription)
  - Microsoft.Build.BuildEngine.Engine.RegisterLogger(Microsoft.Build.Framework.ILogger)
  - Microsoft.Build.BuildEngine.Engine.Shutdown
  - Microsoft.Build.BuildEngine.Engine.Toolsets
  - Microsoft.Build.BuildEngine.Engine.UnloadAllProjects
  - Microsoft.Build.BuildEngine.Engine.UnloadProject(Microsoft.Build.BuildEngine.Project)
  - Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers
  - Microsoft.Build.BuildEngine.Engine.Version
  langs:
  - csharp
  name: Engine
  nameWithType: Engine
  fullName: Microsoft.Build.BuildEngine.Engine
  type: Class
  summary: Represents the [!INCLUDE[vstecmsbuild](../../add/includes/vstecmsbuild-md.md)] engine.
  remarks: In a system of project-to-project dependencies, the Engine maintains the building projects, making it possible to avoid building the same target in the same project more than once in a given build.
  example:
  - "## Examples  \n The following example creates an Engine object and uses the <xref:Microsoft.Build.BuildEngine.Engine.BuildProjectFile%2A> method to build a project file. The <xref:Microsoft.Build.BuildEngine.FileLogger> class is used to log information to a file.  \n  \n [!code-vb[msbuild_BuildAProject#1](../../add/codesnippet/VisualBasic/BuildAProjectVB/Module1.vb#1)]\n [!code-cs[msbuild_BuildAProject#1](../../add/codesnippet/CSharp/BuildAProjectCS/Program.cs#1)]"
  syntax:
    content: >-
      [System.Obsolete("This class has been deprecated. Please use Microsoft.Build.Evaluation.ProjectCollection from the Microsoft.Build assembly instead.")]

      public class Engine
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.#ctor
  id: '#ctor'
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: Engine()
  nameWithType: Engine.Engine()
  fullName: Microsoft.Build.BuildEngine.Engine.Engine()
  type: Constructor
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine"> class.
  remarks: ''
  example:
  - "## Examples  \n The following example creates an <xref:Microsoft.Build.BuildEngine.Engine> object and uses the <xref:Microsoft.Build.BuildEngine.Engine.BuildProjectFile%2A> method to build a project file. The <xref:Microsoft.Build.BuildEngine.FileLogger> class is used to log information to a file.  \n  \n [!code-vb[msbuild_BuildAProject#1](../../add/codesnippet/VisualBasic/BuildAProjectVB/Module1.vb#1)]\n [!code-cs[msbuild_BuildAProject#1](../../add/codesnippet/CSharp/BuildAProjectCS/Program.cs#1)]"
  syntax:
    content: public Engine ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup)
  id: '#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup)'
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: Engine(BuildPropertyGroup)
  nameWithType: Engine.Engine(BuildPropertyGroup)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(BuildPropertyGroup)
  type: Constructor
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine"> class.
  remarks: To be added.
  syntax:
    content: public Engine (Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties);
    parameters:
    - id: globalProperties
      type: Microsoft.Build.BuildEngine.BuildPropertyGroup
      description: A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"> that represents properties to be passed to the child engine.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)
  id: '#ctor(Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)'
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: Engine(ToolsetDefinitionLocations)
  nameWithType: Engine.Engine(ToolsetDefinitionLocations)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(ToolsetDefinitionLocations)
  type: Constructor
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine"> class.
  remarks: To be added.
  syntax:
    content: public Engine (Microsoft.Build.BuildEngine.ToolsetDefinitionLocations locations);
    parameters:
    - id: locations
      type: Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
      description: A <see cref="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations"> enumeration that specifies the location of the Toolset definition.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: Engine(String)
  nameWithType: Engine.Engine(String)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(String)
  type: Constructor
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine"> class that has the specified <xref:Microsoft.Build.BuildEngine.Engine.BinPath%2A>.
  remarks: To be added.
  syntax:
    content: public Engine (string binPath);
    parameters:
    - id: binPath
      type: System.String
      description: The path to MSBuild.exe.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)
  id: '#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)'
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: Engine(BuildPropertyGroup,ToolsetDefinitionLocations)
  nameWithType: Engine.Engine(BuildPropertyGroup,ToolsetDefinitionLocations)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(BuildPropertyGroup,ToolsetDefinitionLocations)
  type: Constructor
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine"> class.
  remarks: To be added.
  syntax:
    content: public Engine (Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, Microsoft.Build.BuildEngine.ToolsetDefinitionLocations locations);
    parameters:
    - id: globalProperties
      type: Microsoft.Build.BuildEngine.BuildPropertyGroup
      description: A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"> that represents properties to be passed to the child engine.
    - id: locations
      type: Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
      description: A <see cref="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations"> enumeration specifies the location of the Toolset definition.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations,System.Int32,System.String)
  id: '#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations,System.Int32,System.String)'
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: Engine(BuildPropertyGroup,ToolsetDefinitionLocations,Int32,String)
  nameWithType: Engine.Engine(BuildPropertyGroup,ToolsetDefinitionLocations,Int32,String)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(BuildPropertyGroup,ToolsetDefinitionLocations,Int32,String)
  type: Constructor
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Engine"> class.
  remarks: To be added.
  syntax:
    content: public Engine (Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, Microsoft.Build.BuildEngine.ToolsetDefinitionLocations locations, int numberOfCpus, string localNodeProviderParameters);
    parameters:
    - id: globalProperties
      type: Microsoft.Build.BuildEngine.BuildPropertyGroup
      description: A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"> that represents properties to be passed to the child engine.
    - id: locations
      type: Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
      description: A <see cref="T:Microsoft.Build.BuildEngine.ToolsetDefinitionLocations"> enumeration specifies the location of the Toolset definition.
    - id: numberOfCpus
      type: System.Int32
      description: An integer that specifies the number of CPUs or cores in the system.
    - id: localNodeProviderParameters
      type: System.String
      description: "A string of parameters that are used to configure the [!INCLUDE[vstecmsbuild](../../add/includes/vstecmsbuild-md.md)] engine. You must format the parameters as =. The valid semicolon-separated, optional parameters are as follows:  \n  \n `MSBUILDLOCATION` Indicates where the build process can find MSBuild.exe. This path enables the [!INCLUDE[vstecmsbuild](../../add/includes/vstecmsbuild-md.md)] engine to locate MSBuild.exe and start it as a local node. `MSBUILDLOCATION` is the only essential parameter for a host. The default value is C:\\Windows\\Microsoft.Net\\Framework\\v3.5\\\\.  \n  \n `NODEREUSE` Indicates whether the child nodes should remain after the build finishes, in case they can be used later by another build. The nodes are discarded automatically after one minute of non-use. The default value is `true`."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BinPath
  id: BinPath
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BinPath
  nameWithType: Engine.BinPath
  fullName: Microsoft.Build.BuildEngine.Engine.BinPath
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets or sets the path to MSBuild.exe.
  remarks: "In [!INCLUDE[vstecmsbuild](../../add/includes/vstecmsbuild-md.md)] 3.5, the \"BinPath\" is superseded by the \"ToolsPath.\" Therefore, in the .Targets file, use MSBuildToolsPath rather than MBBuildBinPath. In the [!INCLUDE[vstecmsbuild](../../add/includes/vstecmsbuild-md.md)] object model, \"BinPath\" relates to the Toolset you are running. The steps to get the path from the build engine are as follows:  \n  \n1.  Get the default tools version.  \n  \n2.  Get the Toolset map.  \n  \n3.  Find the Toolset, based on the string in the map.  \n  \n4.  Get the Toolset.  \n  \n5.  Get the path from the Toolset.  \n  \n This procedure is not required if you are creating the engine. In that case, you already know the Toolset path.  \n  \n Because projects in a solution can use different Toolsets, you can also obtain the MSBuild.exe path from the project, as follows.  \n  \n```  \nproject.EvaluatedProperties[ReservedPropertyNames.toolsPath].FinalValue   \n```  \n  \n For more information about Toolsets, see `MSBuild Tool Set (ToolsVersion)`."
  example:
  - "## Examples  \n The following example creates an <xref:Microsoft.Build.BuildEngine.Engine> object and uses the <xref:Microsoft.Build.BuildEngine.Engine.BuildProjectFile%2A> method to build a project file. The <xref:Microsoft.Build.BuildEngine.FileLogger> class is used to log information to a file.  \n  \n [!code-vb[msbuild_BuildAProject#1](../../add/codesnippet/VisualBasic/BuildAProjectVB/Module1.vb#1)]\n [!code-cs[msbuild_BuildAProject#1](../../add/codesnippet/CSharp/BuildAProjectCS/Program.cs#1)]"
  syntax:
    content: public string BinPath { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildEnabled
  id: BuildEnabled
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildEnabled
  nameWithType: Engine.BuildEnabled
  fullName: Microsoft.Build.BuildEngine.Engine.BuildEnabled
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets or sets a value that indicates whether the building of targets in the project is enabled.
  remarks: To be added.
  syntax:
    content: public bool BuildEnabled { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project)
  id: BuildProject(Microsoft.Build.BuildEngine.Project)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProject(Project)
  nameWithType: Engine.BuildProject(Project)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Builds the specified <see cref="T:Microsoft.Build.BuildEngine.Project">.
  remarks: To be added.
  syntax:
    content: public bool BuildProject (Microsoft.Build.BuildEngine.Project project);
    parameters:
    - id: project
      type: Microsoft.Build.BuildEngine.Project
      description: The <see cref="T:Microsoft.Build.BuildEngine.Project"> to build.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProject*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String)
  id: BuildProject(Microsoft.Build.BuildEngine.Project,System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProject(Project,String)
  nameWithType: Engine.BuildProject(Project,String)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project,String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Builds the specified target of the specified <see cref="T:Microsoft.Build.BuildEngine.Project">.
  remarks: To be added.
  syntax:
    content: public bool BuildProject (Microsoft.Build.BuildEngine.Project project, string targetName);
    parameters:
    - id: project
      type: Microsoft.Build.BuildEngine.Project
      description: The <see cref="T:Microsoft.Build.BuildEngine.Project"> to build.
    - id: targetName
      type: System.String
      description: The `Name` attribute of the Target element to build.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProject*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[])
  id: BuildProject(Microsoft.Build.BuildEngine.Project,System.String[])
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProject(Project,String[])
  nameWithType: Engine.BuildProject(Project,String[])
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project,String[])
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Builds the specified targets of the specified <see cref="T:Microsoft.Build.BuildEngine.Project">.
  remarks: To be added.
  syntax:
    content: public bool BuildProject (Microsoft.Build.BuildEngine.Project project, string[] targetNames);
    parameters:
    - id: project
      type: Microsoft.Build.BuildEngine.Project
      description: The <see cref="T:Microsoft.Build.BuildEngine.Project"> to build.
    - id: targetNames
      type: System.String[]
      description: An array that contains the `Name` attributes of the Target elements to build.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProject*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary)
  id: BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProject(Project,String[],IDictionary)
  nameWithType: Engine.BuildProject(Project,String[],IDictionary)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project,String[],IDictionary)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Builds the specified targets of the specified <see cref="T:Microsoft.Build.BuildEngine.Project">, and returns the outputs of the targets.
  remarks: To be added.
  syntax:
    content: public bool BuildProject (Microsoft.Build.BuildEngine.Project project, string[] targetNames, System.Collections.IDictionary targetOutputs);
    parameters:
    - id: project
      type: Microsoft.Build.BuildEngine.Project
      description: The <see cref="T:Microsoft.Build.BuildEngine.Project"> to build.
    - id: targetNames
      type: System.String[]
      description: An array that contains the `Name` attributes of the Target elements to build.
    - id: targetOutputs
      type: System.Collections.IDictionary
      description: The outputs of the built targets. This parameter can be a null reference (`Nothing` in [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]) if outputs are not required.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProject*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)
  id: BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProject(Project,String[],IDictionary,BuildSettings)
  nameWithType: Engine.BuildProject(Project,String[],IDictionary,BuildSettings)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project,String[],IDictionary,BuildSettings)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Builds the specified targets of the specified <see cref="T:Microsoft.Build.BuildEngine.Project"> with the specified <xref:Microsoft.Build.BuildEngine.BuildSettings>, and returns the outputs of the targets.
  remarks: To be added.
  syntax:
    content: public bool BuildProject (Microsoft.Build.BuildEngine.Project project, string[] targetNames, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags);
    parameters:
    - id: project
      type: Microsoft.Build.BuildEngine.Project
      description: The <see cref="T:Microsoft.Build.BuildEngine.Project"> to build.
    - id: targetNames
      type: System.String[]
      description: An array that contains the `Name` attributes of the Target elements to build.
    - id: targetOutputs
      type: System.Collections.IDictionary
      description: The outputs of the built targets. This parameter can be a null reference (`Nothing` in [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]) if outputs are not required.
    - id: buildFlags
      type: Microsoft.Build.BuildEngine.BuildSettings
      description: The <see cref="T:Microsoft.Build.BuildEngine.BuildSettings"> to apply to the build.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProject*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String)
  id: BuildProjectFile(System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProjectFile(String)
  nameWithType: Engine.BuildProjectFile(String)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Loads the specified project file and builds the project.
  remarks: ''
  example:
  - "## Examples  \n The following example creates an <xref:Microsoft.Build.BuildEngine.Engine> object and uses the BuildProjectFile method to build a project file. The <xref:Microsoft.Build.BuildEngine.FileLogger> class is used to log information to a file.  \n  \n [!code-vb[msbuild_BuildAProject#1](../../add/codesnippet/VisualBasic/BuildAProjectVB/Module1.vb#1)]\n [!code-cs[msbuild_BuildAProject#1](../../add/codesnippet/CSharp/BuildAProjectCS/Program.cs#1)]"
  syntax:
    content: public bool BuildProjectFile (string projectFile);
    parameters:
    - id: projectFile
      type: System.String
      description: The project file to load and build.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProjectFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String)
  id: BuildProjectFile(System.String,System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProjectFile(String,String)
  nameWithType: Engine.BuildProjectFile(String,String)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Loads the specified project file and builds the specified target of the project.
  remarks: To be added.
  syntax:
    content: public bool BuildProjectFile (string projectFile, string targetName);
    parameters:
    - id: projectFile
      type: System.String
      description: The project file to load and build.
    - id: targetName
      type: System.String
      description: The `Name` attribute of the Target element to build.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProjectFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[])
  id: BuildProjectFile(System.String,System.String[])
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProjectFile(String,String[])
  nameWithType: Engine.BuildProjectFile(String,String[])
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[])
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Loads the specified project file and builds the specified targets of the project.
  remarks: To be added.
  syntax:
    content: public bool BuildProjectFile (string projectFile, string[] targetNames);
    parameters:
    - id: projectFile
      type: System.String
      description: The project file to load and build.
    - id: targetNames
      type: System.String[]
      description: An array that contains the `Name` attributes of the Target elements to build.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProjectFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup)
  id: BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProjectFile(String,String[],BuildPropertyGroup)
  nameWithType: Engine.BuildProjectFile(String,String[],BuildPropertyGroup)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[],BuildPropertyGroup)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Loads the specified project file and builds the specified targets of the project with the specified <xref:Microsoft.Build.BuildEngine.Engine.GlobalProperties%2A>, and returns the outputs of the targets.
  remarks: To be added.
  syntax:
    content: public bool BuildProjectFile (string projectFile, string[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties);
    parameters:
    - id: projectFile
      type: System.String
      description: The project file to load and build.
    - id: targetNames
      type: System.String[]
      description: An array that contains the `Name` attributes of the Target elements to build.
    - id: globalProperties
      type: Microsoft.Build.BuildEngine.BuildPropertyGroup
      description: The <xref:Microsoft.Build.BuildEngine.Engine.GlobalProperties%2A> to apply to the build.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProjectFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary)
  id: BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary)
  nameWithType: Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Loads the specified project file and builds the specified targets of the project with the specified <xref:Microsoft.Build.BuildEngine.Engine.GlobalProperties%2A>, and returns the outputs of the targets.
  remarks: To be added.
  syntax:
    content: public bool BuildProjectFile (string projectFile, string[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, System.Collections.IDictionary targetOutputs);
    parameters:
    - id: projectFile
      type: System.String
      description: The project file to load and build.
    - id: targetNames
      type: System.String[]
      description: An array that contains the `Name` attributes of the Target elements to build.
    - id: globalProperties
      type: Microsoft.Build.BuildEngine.BuildPropertyGroup
      description: The <xref:Microsoft.Build.BuildEngine.Engine.GlobalProperties%2A> to apply to the build.
    - id: targetOutputs
      type: System.Collections.IDictionary
      description: The outputs of the built targets. This parameter can be a null reference (`Nothing` in [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]) if outputs are not required.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProjectFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)
  id: BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings)
  nameWithType: Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Loads the specified project file and builds the specified targets of the project with the specified <see cref="T:Microsoft.Build.BuildEngine.BuildSettings"> and <xref:Microsoft.Build.BuildEngine.Engine.GlobalProperties%2A>, and returns the outputs of the targets.
  remarks: To be added.
  syntax:
    content: public bool BuildProjectFile (string projectFile, string[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags);
    parameters:
    - id: projectFile
      type: System.String
      description: The project file to load and build.
    - id: targetNames
      type: System.String[]
      description: An array that contains the `Name` attributes of the Target elements to build.
    - id: globalProperties
      type: Microsoft.Build.BuildEngine.BuildPropertyGroup
      description: The <xref:Microsoft.Build.BuildEngine.Engine.GlobalProperties%2A> to apply to the build.
    - id: targetOutputs
      type: System.Collections.IDictionary
      description: The outputs of the built targets. This parameter can be a null reference (`Nothing` in [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]) if outputs are not required.
    - id: buildFlags
      type: Microsoft.Build.BuildEngine.BuildSettings
      description: The <see cref="T:Microsoft.Build.BuildEngine.BuildSettings"> to apply to the build.
    return:
      type: System.Boolean
      description: '`true` if the build was successful; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProjectFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings,System.String)
  id: BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings,System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings,String)
  nameWithType: Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings,String)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings,String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Loads a project file from disk and builds the given targets.
  remarks: This overload takes a set of global properties for each project to use for the build, returns the target outputs, and also enables the caller to specify additional build flags.
  syntax:
    content: public bool BuildProjectFile (string projectFile, string[] targetNames, Microsoft.Build.BuildEngine.BuildPropertyGroup globalProperties, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags, string toolsVersion);
    parameters:
    - id: projectFile
      type: System.String
      description: The name of the project to build.
    - id: targetNames
      type: System.String[]
      description: A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"> array of targets for each project. Can be `null` if you want to build the default targets for the project.
    - id: globalProperties
      type: Microsoft.Build.BuildEngine.BuildPropertyGroup
      description: An <xref:System.Collections.IDictionary> array of properties for each project. Can be `null` if no global properties are required.
    - id: targetOutputs
      type: System.Collections.IDictionary
      description: A <see cref="T:Microsoft.Build.BuildEngine.BuildSettings"> array of tables for target outputs. Can be `null` if outputs are not required.
    - id: buildFlags
      type: Microsoft.Build.BuildEngine.BuildSettings
      description: A string array of additional build flags.
    - id: toolsVersion
      type: System.String
      description: The ToolsVersion to impose on the project in this build.
    return:
      type: System.Boolean
      description: '`true` if the build succeeds; otherwise, `false`.'
  overload: Microsoft.Build.BuildEngine.Engine.BuildProjectFile*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(System.String[],System.String[][],Microsoft.Build.BuildEngine.BuildPropertyGroup[],System.Collections.IDictionary[],Microsoft.Build.BuildEngine.BuildSettings,System.String[])
  id: BuildProjectFiles(System.String[],System.String[][],Microsoft.Build.BuildEngine.BuildPropertyGroup[],System.Collections.IDictionary[],Microsoft.Build.BuildEngine.BuildSettings,System.String[])
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: BuildProjectFiles(String[],String[][],BuildPropertyGroup[],IDictionary[],BuildSettings,String[])
  nameWithType: Engine.BuildProjectFiles(String[],String[][],BuildPropertyGroup[],IDictionary[],BuildSettings,String[])
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(String[],String[][],BuildPropertyGroup[],IDictionary[],BuildSettings,String[])
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Loads a set of project files from disk and then builds the given list of targets for each project.
  remarks: This overload takes a set of global properties for each project to use for the build, returns the target outputs, and also enables the caller to specify additional build flags.
  syntax:
    content: public bool BuildProjectFiles (string[] projectFiles, string[][] targetNamesPerProject, Microsoft.Build.BuildEngine.BuildPropertyGroup[] globalPropertiesPerProject, System.Collections.IDictionary[] targetOutputsPerProject, Microsoft.Build.BuildEngine.BuildSettings buildFlags, string[] toolsVersions);
    parameters:
    - id: projectFiles
      type: System.String[]
      description: A string list of project files to build. This value cannot be `null`.
    - id: targetNamesPerProject
      type: System.String[][]
      description: A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"> array of targets for each project.
    - id: globalPropertiesPerProject
      type: Microsoft.Build.BuildEngine.BuildPropertyGroup[]
      description: An <xref:System.Collections.IDictionary> array of properties for each project. This value cannot be `null`.
    - id: targetOutputsPerProject
      type: System.Collections.IDictionary[]
      description: A <see cref="T:Microsoft.Build.BuildEngine.BuildSettings"> array of tables for target outputs. This value cannot be `null`.
    - id: buildFlags
      type: Microsoft.Build.BuildEngine.BuildSettings
      description: A string array of additional build flags.
    - id: toolsVersions
      type: System.String[]
      description: The ToolsVersion to impose on the project in this build.
    return:
      type: System.Boolean
      description: '`true` if the project built successfully; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.CreateNewProject
  id: CreateNewProject
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: CreateNewProject()
  nameWithType: Engine.CreateNewProject()
  fullName: Microsoft.Build.BuildEngine.Engine.CreateNewProject()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Creates an empty <see cref="T:Microsoft.Build.BuildEngine.Project"> object that is associated with this <xref:Microsoft.Build.BuildEngine.Engine>.
  remarks: To be added.
  syntax:
    content: public Microsoft.Build.BuildEngine.Project CreateNewProject ();
    parameters: []
    return:
      type: Microsoft.Build.BuildEngine.Project
      description: The created <see cref="T:Microsoft.Build.BuildEngine.Project"> object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion
  id: DefaultToolsVersion
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: DefaultToolsVersion
  nameWithType: Engine.DefaultToolsVersion
  fullName: Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: The default ToolsVersion of this build engine.
  remarks: Projects use this ToolsVersion if they are not otherwise told which ToolsVersion to use. This value is retrieved from either the .exe.config file or the registry. If neither specify a default ToolsVersion, then the version is hard-coded to version "2.0." For more information about ToolsVersion, see [Building for Specific Versions of the .NET Framework](http://msdn.microsoft.com/en-us/24a6530c-e837-4774-9da0-6893614524d8).
  syntax:
    content: public string DefaultToolsVersion { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.GetLoadedProject(System.String)
  id: GetLoadedProject(System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: GetLoadedProject(String)
  nameWithType: Engine.GetLoadedProject(String)
  fullName: Microsoft.Build.BuildEngine.Engine.GetLoadedProject(String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Returns the <see cref="T:Microsoft.Build.BuildEngine.Project"> object that is associated with the specified project file.
  remarks: To be added.
  syntax:
    content: public Microsoft.Build.BuildEngine.Project GetLoadedProject (string projectFullFileName);
    parameters:
    - id: projectFullFileName
      type: System.String
      description: The fully qualified file path to the project file of the <see cref="T:Microsoft.Build.BuildEngine.Project"> object.
    return:
      type: Microsoft.Build.BuildEngine.Project
      description: The <see cref="T:Microsoft.Build.BuildEngine.Project"> object that associated with the specified project file. If no <see cref="T:Microsoft.Build.BuildEngine.Project"> object is associated with the specified project file, the method returns a null reference (`Nothing` in [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]).
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.GlobalEngine
  id: GlobalEngine
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: GlobalEngine
  nameWithType: Engine.GlobalEngine
  fullName: Microsoft.Build.BuildEngine.Engine.GlobalEngine
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets the <see cref="T:Microsoft.Build.BuildEngine.Engine"> that is global (shared) for this <xref:System.AppDomain>.
  remarks: To be added.
  syntax:
    content: public static Microsoft.Build.BuildEngine.Engine GlobalEngine { get; }
    return:
      type: Microsoft.Build.BuildEngine.Engine
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.GlobalProperties
  id: GlobalProperties
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: GlobalProperties
  nameWithType: Engine.GlobalProperties
  fullName: Microsoft.Build.BuildEngine.Engine.GlobalProperties
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets or sets a collection of the global properties for the project.
  remarks: Global properties are properties that are set by using the **/property** switch on the command line, or properties that are set by the integrated development environment (IDE) before a project is built. These global properties are applied to all projects that are built by using this <xref:Microsoft.Build.BuildEngine.Engine>.
  syntax:
    content: public Microsoft.Build.BuildEngine.BuildPropertyGroup GlobalProperties { get; set; }
    return:
      type: Microsoft.Build.BuildEngine.BuildPropertyGroup
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.IsBuilding
  id: IsBuilding
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: IsBuilding
  nameWithType: Engine.IsBuilding
  fullName: Microsoft.Build.BuildEngine.Engine.IsBuilding
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets whether a project is currently being built.
  remarks: This property can be checked to prevent a project from being modified while it is being built.
  syntax:
    content: public bool IsBuilding { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents
  id: OnlyLogCriticalEvents
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: OnlyLogCriticalEvents
  nameWithType: Engine.OnlyLogCriticalEvents
  fullName: Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets or sets a value that indicates whether to only log critical events, such as warnings and errors, during the build.
  remarks: To be added.
  syntax:
    content: public bool OnlyLogCriticalEvents { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(Microsoft.Build.Framework.ILogger,Microsoft.Build.BuildEngine.LoggerDescription)
  id: RegisterDistributedLogger(Microsoft.Build.Framework.ILogger,Microsoft.Build.BuildEngine.LoggerDescription)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: RegisterDistributedLogger(ILogger,LoggerDescription)
  nameWithType: Engine.RegisterDistributedLogger(ILogger,LoggerDescription)
  fullName: Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(ILogger,LoggerDescription)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Registers distributed loggers with the build engine.
  remarks: This method is not thread-safe. To ensure uniform behavior, all loggers should register before the build is started. For more information, see [Writing Multi-Processor-Aware Loggers](../Topic/Writing%20Multi-Processor-Aware%20Loggers.md).
  syntax:
    content: public void RegisterDistributedLogger (Microsoft.Build.Framework.ILogger centralLogger, Microsoft.Build.BuildEngine.LoggerDescription forwardingLogger);
    parameters:
    - id: centralLogger
      type: Microsoft.Build.Framework.ILogger
      description: An <see cref="T:Microsoft.Build.Framework.ILogger"> that represents the central logger.
    - id: forwardingLogger
      type: Microsoft.Build.BuildEngine.LoggerDescription
      description: A <see cref="T:Microsoft.Build.BuildEngine.LoggerDescription"> that represents the forwarding logger.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.RegisterLogger(Microsoft.Build.Framework.ILogger)
  id: RegisterLogger(Microsoft.Build.Framework.ILogger)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: RegisterLogger(ILogger)
  nameWithType: Engine.RegisterLogger(ILogger)
  fullName: Microsoft.Build.BuildEngine.Engine.RegisterLogger(ILogger)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Registers the specified logger with the <see cref="T:Microsoft.Build.BuildEngine.Engine">.
  remarks: "When a logger is registered with the <xref:Microsoft.Build.BuildEngine.Engine>, it receives all build events.  \n  \n To unregister loggers, use the <xref:Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers%2A> method."
  example:
  - "## Examples  \n The following example creates an <xref:Microsoft.Build.BuildEngine.Engine> object and uses the <xref:Microsoft.Build.BuildEngine.Engine.BuildProjectFile%2A> method to build a project file. The <xref:Microsoft.Build.BuildEngine.FileLogger> class is used to log information to a file.  \n  \n [!code-vb[msbuild_BuildAProject#1](../../add/codesnippet/VisualBasic/BuildAProjectVB/Module1.vb#1)]\n [!code-cs[msbuild_BuildAProject#1](../../add/codesnippet/CSharp/BuildAProjectCS/Program.cs#1)]"
  syntax:
    content: public void RegisterLogger (Microsoft.Build.Framework.ILogger logger);
    parameters:
    - id: logger
      type: Microsoft.Build.Framework.ILogger
      description: The logger to associate with the <see cref="T:Microsoft.Build.BuildEngine.Engine">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.Shutdown
  id: Shutdown
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: Shutdown()
  nameWithType: Engine.Shutdown()
  fullName: Microsoft.Build.BuildEngine.Engine.Shutdown()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Called when the host is finished with this build engine. It unregisters loggers and shuts down nodes.
  remarks: To be added.
  syntax:
    content: public void Shutdown ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.Toolsets
  id: Toolsets
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: Toolsets
  nameWithType: Engine.Toolsets
  fullName: Microsoft.Build.BuildEngine.Engine.Toolsets
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Sets or Gets the collection of Toolsets that are recognized by this build engine instance.
  remarks: For more information about ToolSets, see [Building for Specific Versions of the .NET Framework](http://msdn.microsoft.com/en-us/24a6530c-e837-4774-9da0-6893614524d8).
  syntax:
    content: public Microsoft.Build.BuildEngine.ToolsetCollection Toolsets { get; }
    return:
      type: Microsoft.Build.BuildEngine.ToolsetCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.UnloadAllProjects
  id: UnloadAllProjects
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: UnloadAllProjects()
  nameWithType: Engine.UnloadAllProjects()
  fullName: Microsoft.Build.BuildEngine.Engine.UnloadAllProjects()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Removes all references to <see cref="T:Microsoft.Build.BuildEngine.Project"> objects from the <xref:Microsoft.Build.BuildEngine.Engine>.
  remarks: To be added.
  syntax:
    content: public void UnloadAllProjects ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.UnloadProject(Microsoft.Build.BuildEngine.Project)
  id: UnloadProject(Microsoft.Build.BuildEngine.Project)
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: UnloadProject(Project)
  nameWithType: Engine.UnloadProject(Project)
  fullName: Microsoft.Build.BuildEngine.Engine.UnloadProject(Project)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Removes the reference to the specified <see cref="T:Microsoft.Build.BuildEngine.Project"> from the <xref:Microsoft.Build.BuildEngine.Engine>.
  remarks: To be added.
  syntax:
    content: public void UnloadProject (Microsoft.Build.BuildEngine.Project project);
    parameters:
    - id: project
      type: Microsoft.Build.BuildEngine.Project
      description: The <see cref="T:Microsoft.Build.BuildEngine.Project"> to remove from the <xref:Microsoft.Build.BuildEngine.Engine>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers
  id: UnregisterAllLoggers
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: UnregisterAllLoggers()
  nameWithType: Engine.UnregisterAllLoggers()
  fullName: Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Unregisters all loggers from the <see cref="T:Microsoft.Build.BuildEngine.Engine">.
  remarks: The UnregisterAllLoggers method calls the <xref:Microsoft.Build.Framework.ILogger.Shutdown%2A> method on every registered logger before unregistering each of them from the <xref:Microsoft.Build.BuildEngine.Engine>.
  example:
  - "## Examples  \n The following example creates an <xref:Microsoft.Build.BuildEngine.Engine> object and uses the <xref:Microsoft.Build.BuildEngine.Engine.BuildProjectFile%2A> method to build a project file. The <xref:Microsoft.Build.BuildEngine.FileLogger> class is used to log information to a file.  \n  \n [!code-vb[msbuild_BuildAProject#1](../../add/codesnippet/VisualBasic/BuildAProjectVB/Module1.vb#1)]\n [!code-cs[msbuild_BuildAProject#1](../../add/codesnippet/CSharp/BuildAProjectCS/Program.cs#1)]"
  syntax:
    content: public void UnregisterAllLoggers ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.Engine.Version
  id: Version
  parent: Microsoft.Build.BuildEngine.Engine
  langs:
  - csharp
  name: Version
  nameWithType: Engine.Version
  fullName: Microsoft.Build.BuildEngine.Engine.Version
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  summary: Gets the version of the <see cref="T:Microsoft.Build.BuildEngine.Engine">.
  remarks: To be added.
  syntax:
    content: public static Version Version { get; }
    return:
      type: System.Version
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.BuildEngine.Engine.#ctor
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: Engine()
  nameWithType: Engine.Engine()
  fullName: Microsoft.Build.BuildEngine.Engine.Engine()
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: Engine(BuildPropertyGroup)
  nameWithType: Engine.Engine(BuildPropertyGroup)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(BuildPropertyGroup)
- uid: Microsoft.Build.BuildEngine.BuildPropertyGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildPropertyGroup
  nameWithType: BuildPropertyGroup
  fullName: Microsoft.Build.BuildEngine.BuildPropertyGroup
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: Engine(ToolsetDefinitionLocations)
  nameWithType: Engine.Engine(ToolsetDefinitionLocations)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(ToolsetDefinitionLocations)
- uid: Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: ToolsetDefinitionLocations
  nameWithType: ToolsetDefinitionLocations
  fullName: Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: Engine(String)
  nameWithType: Engine.Engine(String)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: Engine(BuildPropertyGroup,ToolsetDefinitionLocations)
  nameWithType: Engine.Engine(BuildPropertyGroup,ToolsetDefinitionLocations)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(BuildPropertyGroup,ToolsetDefinitionLocations)
- uid: Microsoft.Build.BuildEngine.BuildPropertyGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildPropertyGroup
  nameWithType: BuildPropertyGroup
  fullName: Microsoft.Build.BuildEngine.BuildPropertyGroup
- uid: Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: ToolsetDefinitionLocations
  nameWithType: ToolsetDefinitionLocations
  fullName: Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
- uid: Microsoft.Build.BuildEngine.Engine.#ctor(Microsoft.Build.BuildEngine.BuildPropertyGroup,Microsoft.Build.BuildEngine.ToolsetDefinitionLocations,System.Int32,System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: Engine(BuildPropertyGroup,ToolsetDefinitionLocations,Int32,String)
  nameWithType: Engine.Engine(BuildPropertyGroup,ToolsetDefinitionLocations,Int32,String)
  fullName: Microsoft.Build.BuildEngine.Engine.Engine(BuildPropertyGroup,ToolsetDefinitionLocations,Int32,String)
- uid: Microsoft.Build.BuildEngine.BuildPropertyGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildPropertyGroup
  nameWithType: BuildPropertyGroup
  fullName: Microsoft.Build.BuildEngine.BuildPropertyGroup
- uid: Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: ToolsetDefinitionLocations
  nameWithType: ToolsetDefinitionLocations
  fullName: Microsoft.Build.BuildEngine.ToolsetDefinitionLocations
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Engine.BinPath
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BinPath
  nameWithType: Engine.BinPath
  fullName: Microsoft.Build.BuildEngine.Engine.BinPath
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Engine.BuildEnabled
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildEnabled
  nameWithType: Engine.BuildEnabled
  fullName: Microsoft.Build.BuildEngine.Engine.BuildEnabled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProject(Project)
  nameWithType: Engine.BuildProject(Project)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.Project
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.BuildEngine.Project
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProject(Project,String)
  nameWithType: Engine.BuildProject(Project,String)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project,String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.Project
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.BuildEngine.Project
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[])
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProject(Project,String[])
  nameWithType: Engine.BuildProject(Project,String[])
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project,String[])
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.Project
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.BuildEngine.Project
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProject(Project,String[],IDictionary)
  nameWithType: Engine.BuildProject(Project,String[],IDictionary)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project,String[],IDictionary)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.Project
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.BuildEngine.Project
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject(Microsoft.Build.BuildEngine.Project,System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProject(Project,String[],IDictionary,BuildSettings)
  nameWithType: Engine.BuildProject(Project,String[],IDictionary,BuildSettings)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProject(Project,String[],IDictionary,BuildSettings)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.Project
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.BuildEngine.Project
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: Microsoft.Build.BuildEngine.BuildSettings
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildSettings
  nameWithType: BuildSettings
  fullName: Microsoft.Build.BuildEngine.BuildSettings
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProjectFile(String)
  nameWithType: Engine.BuildProjectFile(String)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProjectFile(String,String)
  nameWithType: Engine.BuildProjectFile(String,String)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[])
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProjectFile(String,String[])
  nameWithType: Engine.BuildProjectFile(String,String[])
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[])
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProjectFile(String,String[],BuildPropertyGroup)
  nameWithType: Engine.BuildProjectFile(String,String[],BuildPropertyGroup)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[],BuildPropertyGroup)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: Microsoft.Build.BuildEngine.BuildPropertyGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildPropertyGroup
  nameWithType: BuildPropertyGroup
  fullName: Microsoft.Build.BuildEngine.BuildPropertyGroup
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary)
  nameWithType: Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: Microsoft.Build.BuildEngine.BuildPropertyGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildPropertyGroup
  nameWithType: BuildPropertyGroup
  fullName: Microsoft.Build.BuildEngine.BuildPropertyGroup
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings)
  nameWithType: Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: Microsoft.Build.BuildEngine.BuildPropertyGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildPropertyGroup
  nameWithType: BuildPropertyGroup
  fullName: Microsoft.Build.BuildEngine.BuildPropertyGroup
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: Microsoft.Build.BuildEngine.BuildSettings
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildSettings
  nameWithType: BuildSettings
  fullName: Microsoft.Build.BuildEngine.BuildSettings
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(System.String,System.String[],Microsoft.Build.BuildEngine.BuildPropertyGroup,System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings,System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings,String)
  nameWithType: Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings,String)
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFile(String,String[],BuildPropertyGroup,IDictionary,BuildSettings,String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: Microsoft.Build.BuildEngine.BuildPropertyGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildPropertyGroup
  nameWithType: BuildPropertyGroup
  fullName: Microsoft.Build.BuildEngine.BuildPropertyGroup
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: Microsoft.Build.BuildEngine.BuildSettings
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildSettings
  nameWithType: BuildSettings
  fullName: Microsoft.Build.BuildEngine.BuildSettings
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(System.String[],System.String[][],Microsoft.Build.BuildEngine.BuildPropertyGroup[],System.Collections.IDictionary[],Microsoft.Build.BuildEngine.BuildSettings,System.String[])
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: BuildProjectFiles(String[],String[][],BuildPropertyGroup[],IDictionary[],BuildSettings,String[])
  nameWithType: Engine.BuildProjectFiles(String[],String[][],BuildPropertyGroup[],IDictionary[],BuildSettings,String[])
  fullName: Microsoft.Build.BuildEngine.Engine.BuildProjectFiles(String[],String[][],BuildPropertyGroup[],IDictionary[],BuildSettings,String[])
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[][]
- uid: Microsoft.Build.BuildEngine.BuildPropertyGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildPropertyGroup
  nameWithType: BuildPropertyGroup
  fullName: Microsoft.Build.BuildEngine.BuildPropertyGroup[]
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: false
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary[]
- uid: Microsoft.Build.BuildEngine.BuildSettings
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildSettings
  nameWithType: BuildSettings
  fullName: Microsoft.Build.BuildEngine.BuildSettings
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: Microsoft.Build.BuildEngine.Engine.CreateNewProject
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: CreateNewProject()
  nameWithType: Engine.CreateNewProject()
  fullName: Microsoft.Build.BuildEngine.Engine.CreateNewProject()
- uid: Microsoft.Build.BuildEngine.Project
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.BuildEngine.Project
- uid: Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: DefaultToolsVersion
  nameWithType: Engine.DefaultToolsVersion
  fullName: Microsoft.Build.BuildEngine.Engine.DefaultToolsVersion
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Engine.GetLoadedProject(System.String)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: GetLoadedProject(String)
  nameWithType: Engine.GetLoadedProject(String)
  fullName: Microsoft.Build.BuildEngine.Engine.GetLoadedProject(String)
- uid: Microsoft.Build.BuildEngine.Project
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.BuildEngine.Project
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.Engine.GlobalEngine
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: GlobalEngine
  nameWithType: Engine.GlobalEngine
  fullName: Microsoft.Build.BuildEngine.Engine.GlobalEngine
- uid: Microsoft.Build.BuildEngine.Engine
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Engine
  nameWithType: Engine
  fullName: Microsoft.Build.BuildEngine.Engine
- uid: Microsoft.Build.BuildEngine.Engine.GlobalProperties
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: GlobalProperties
  nameWithType: Engine.GlobalProperties
  fullName: Microsoft.Build.BuildEngine.Engine.GlobalProperties
- uid: Microsoft.Build.BuildEngine.BuildPropertyGroup
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: BuildPropertyGroup
  nameWithType: BuildPropertyGroup
  fullName: Microsoft.Build.BuildEngine.BuildPropertyGroup
- uid: Microsoft.Build.BuildEngine.Engine.IsBuilding
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: IsBuilding
  nameWithType: Engine.IsBuilding
  fullName: Microsoft.Build.BuildEngine.Engine.IsBuilding
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: OnlyLogCriticalEvents
  nameWithType: Engine.OnlyLogCriticalEvents
  fullName: Microsoft.Build.BuildEngine.Engine.OnlyLogCriticalEvents
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(Microsoft.Build.Framework.ILogger,Microsoft.Build.BuildEngine.LoggerDescription)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: RegisterDistributedLogger(ILogger,LoggerDescription)
  nameWithType: Engine.RegisterDistributedLogger(ILogger,LoggerDescription)
  fullName: Microsoft.Build.BuildEngine.Engine.RegisterDistributedLogger(ILogger,LoggerDescription)
- uid: Microsoft.Build.Framework.ILogger
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Build.Framework.ILogger
- uid: Microsoft.Build.BuildEngine.LoggerDescription
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: LoggerDescription
  nameWithType: LoggerDescription
  fullName: Microsoft.Build.BuildEngine.LoggerDescription
- uid: Microsoft.Build.BuildEngine.Engine.RegisterLogger(Microsoft.Build.Framework.ILogger)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: RegisterLogger(ILogger)
  nameWithType: Engine.RegisterLogger(ILogger)
  fullName: Microsoft.Build.BuildEngine.Engine.RegisterLogger(ILogger)
- uid: Microsoft.Build.Framework.ILogger
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Build.Framework.ILogger
- uid: Microsoft.Build.BuildEngine.Engine.Shutdown
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: Shutdown()
  nameWithType: Engine.Shutdown()
  fullName: Microsoft.Build.BuildEngine.Engine.Shutdown()
- uid: Microsoft.Build.BuildEngine.Engine.Toolsets
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: Toolsets
  nameWithType: Engine.Toolsets
  fullName: Microsoft.Build.BuildEngine.Engine.Toolsets
- uid: Microsoft.Build.BuildEngine.ToolsetCollection
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: ToolsetCollection
  nameWithType: ToolsetCollection
  fullName: Microsoft.Build.BuildEngine.ToolsetCollection
- uid: Microsoft.Build.BuildEngine.Engine.UnloadAllProjects
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: UnloadAllProjects()
  nameWithType: Engine.UnloadAllProjects()
  fullName: Microsoft.Build.BuildEngine.Engine.UnloadAllProjects()
- uid: Microsoft.Build.BuildEngine.Engine.UnloadProject(Microsoft.Build.BuildEngine.Project)
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: UnloadProject(Project)
  nameWithType: Engine.UnloadProject(Project)
  fullName: Microsoft.Build.BuildEngine.Engine.UnloadProject(Project)
- uid: Microsoft.Build.BuildEngine.Project
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.BuildEngine.Project
- uid: Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: UnregisterAllLoggers()
  nameWithType: Engine.UnregisterAllLoggers()
  fullName: Microsoft.Build.BuildEngine.Engine.UnregisterAllLoggers()
- uid: Microsoft.Build.BuildEngine.Engine.Version
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  name: Version
  nameWithType: Engine.Version
  fullName: Microsoft.Build.BuildEngine.Engine.Version
- uid: System.Version
  parent: System
  isExternal: false
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Microsoft.Build.BuildEngine.Engine.BuildProject*
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  nameWithType: Engine.
- uid: Microsoft.Build.BuildEngine.Engine.BuildProjectFile*
  parent: Microsoft.Build.BuildEngine.Engine
  isExternal: false
  nameWithType: Engine.
