### YamlMime:ManagedReference
items:
- uid: System.Activities.InOutArgument`1
  id: InOutArgument`1
  children:
  - System.Activities.InOutArgument`1.#ctor
  - System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  - System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)
  - System.Activities.InOutArgument`1.#ctor(System.Activities.Variable`1)
  - System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  - System.Activities.InOutArgument`1.Expression
  - System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  - System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable`1)
  - System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)
  - System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)
  - System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})
  - System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable`1)
  - System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)
  langs:
  - csharp
  - vb
  name: InOutArgument<T>
  nameWithType: InOutArgument<T>
  fullName: System.Activities.InOutArgument<T>
  type: Class
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.InOutArgumentConverter))]

      [System.Windows.Markup.ContentProperty("Expression")]

      [System.Windows.Markup.ValueSerializer(typeof(System.Activities.XamlIntegration.ArgumentValueSerializer))]

      public sealed class InOutArgument<T> : System.Activities.InOutArgument
    typeParameters:
    - id: T
      description: Parameter description to be filled
  inheritance:
  - System.Object
  - System.Activities.Argument
  - System.Activities.InOutArgument
  implements: []
  inheritedMembers:
  - System.Activities.Argument.ArgumentType
  - System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)
  - System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)
  - System.Activities.Argument.Direction
  - System.Activities.Argument.EvaluationOrder
  - System.Activities.Argument.Get``1(System.Activities.ActivityContext)
  - System.Activities.Argument.ResultValue
  - System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)
  - System.Activities.Argument.UnspecifiedEvaluationOrder
  - System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Activities.InOutArgument`1.#ctor
  id: '#ctor'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: InOutArgument()
  nameWithType: InOutArgument<T>.InOutArgument()
  fullName: System.Activities.InOutArgument<T>.InOutArgument()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public InOutArgument ();
    parameters: []
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  id: '#ctor(System.Activities.Activity{System.Activities.Location{`0}})'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: InOutArgument(Activity)
  nameWithType: InOutArgument<T>.InOutArgument(Activity)
  fullName: System.Activities.InOutArgument<T>.InOutArgument(Activity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public InOutArgument (System.Activities.Activity<System.Activities.Location<T>> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: Parameter description to be filled
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)
  id: '#ctor(System.Activities.Variable)'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: InOutArgument(Variable)
  nameWithType: InOutArgument<T>.InOutArgument(Variable)
  fullName: System.Activities.InOutArgument<T>.InOutArgument(Variable)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public InOutArgument (System.Activities.Variable variable);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: Parameter description to be filled
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable`1)
  id: '#ctor(System.Activities.Variable`1)'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: InOutArgument(Variable)
  nameWithType: InOutArgument<T>.InOutArgument(Variable)
  fullName: System.Activities.InOutArgument<T>.InOutArgument(Variable)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public InOutArgument (System.Activities.Variable<T> variable);
    parameters:
    - id: variable
      type: System.Activities.Variable{T}
      description: Parameter description to be filled
- uid: System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: InOutArgument(Expression)
  nameWithType: InOutArgument<T>.InOutArgument(Expression)
  fullName: System.Activities.InOutArgument<T>.InOutArgument(Expression)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public InOutArgument (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
      description: Parameter description to be filled
- uid: System.Activities.InOutArgument`1.Expression
  id: Expression
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: InOutArgument<T>.Expression
  fullName: System.Activities.InOutArgument<T>.Expression
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.Activity<System.Activities.Location<T>> Expression { get; set; }
    return:
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: Return description to be filled
- uid: System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  id: FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: FromExpression(Activity)
  nameWithType: InOutArgument<T>.FromExpression(Activity)
  fullName: System.Activities.InOutArgument<T>.FromExpression(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public static System.Activities.InOutArgument<T> FromExpression (System.Activities.Activity<System.Activities.Location<T>> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: Parameter description to be filled
    return:
      type: System.Activities.InOutArgument{T}
      description: Return description to be filled
- uid: System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable`1)
  id: FromVariable(System.Activities.Variable`1)
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: FromVariable(Variable)
  nameWithType: InOutArgument<T>.FromVariable(Variable)
  fullName: System.Activities.InOutArgument<T>.FromVariable(Variable)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public static System.Activities.InOutArgument<T> FromVariable (System.Activities.Variable<T> variable);
    parameters:
    - id: variable
      type: System.Activities.Variable{T}
      description: Parameter description to be filled
    return:
      type: System.Activities.InOutArgument{T}
      description: Return description to be filled
- uid: System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: Get(ActivityContext)
  nameWithType: InOutArgument<T>.Get(ActivityContext)
  fullName: System.Activities.InOutArgument<T>.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public T Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: Parameter description to be filled
    return:
      type: T
      description: Return description to be filled
- uid: System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: GetLocation(ActivityContext)
  nameWithType: InOutArgument<T>.GetLocation(ActivityContext)
  fullName: System.Activities.InOutArgument<T>.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.Location<T> GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: Parameter description to be filled
    return:
      type: System.Activities.Location{T}
      description: Return description to be filled
- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})
  id: op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: op_Implicit(Activity)
  nameWithType: InOutArgument<T>.op_Implicit(Activity)
  fullName: System.Activities.InOutArgument<T>.op_Implicit(Activity)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public static System.Activities.InOutArgument<T> op_Implicit (System.Activities.Activity<System.Activities.Location<T>> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{System.Activities.Location{T}}
      description: Parameter description to be filled
    return:
      type: System.Activities.InOutArgument{T}
      description: Return description to be filled
- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable`1)
  id: op_Implicit(System.Activities.Variable`1)
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: op_Implicit(Variable)
  nameWithType: InOutArgument<T>.op_Implicit(Variable)
  fullName: System.Activities.InOutArgument<T>.op_Implicit(Variable)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public static System.Activities.InOutArgument<T> op_Implicit (System.Activities.Variable<T> variable);
    parameters:
    - id: variable
      type: System.Activities.Variable{T}
      description: Parameter description to be filled
    return:
      type: System.Activities.InOutArgument{T}
      description: Return description to be filled
- uid: System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)
  id: Set(System.Activities.ActivityContext,`0)
  parent: System.Activities.InOutArgument`1
  langs:
  - csharp
  - vb
  name: Set(ActivityContext,T)
  nameWithType: InOutArgument<T>.Set(ActivityContext,T)
  fullName: System.Activities.InOutArgument<T>.Set(ActivityContext,T)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public void Set (System.Activities.ActivityContext context, T value);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: Parameter description to be filled
    - id: value
      type: T
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
references:
- uid: System.Activities.InOutArgument
  isExternal: false
  name: System.Activities.InOutArgument
- uid: System.Activities.InOutArgument`1.#ctor
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument()
  nameWithType: InOutArgument<T>.InOutArgument()
  fullName: System.Activities.InOutArgument<T>.InOutArgument()
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument(Activity)
  nameWithType: InOutArgument<T>.InOutArgument(Activity)
  fullName: System.Activities.InOutArgument<T>.InOutArgument(Activity)
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument(Variable)
  nameWithType: InOutArgument<T>.InOutArgument(Variable)
  fullName: System.Activities.InOutArgument<T>.InOutArgument(Variable)
- uid: System.Activities.Variable
  parent: System.Activities
  isExternal: false
  name: Variable
  nameWithType: Variable
  fullName: System.Activities.Variable
- uid: System.Activities.InOutArgument`1.#ctor(System.Activities.Variable`1)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument(Variable)
  nameWithType: InOutArgument<T>.InOutArgument(Variable)
  fullName: System.Activities.InOutArgument<T>.InOutArgument(Variable)
- uid: System.Activities.Variable`1
  parent: System.Activities
  isExternal: false
  name: Variable<T>
  nameWithType: Variable<T>
  fullName: System.Activities.Variable<T>
- uid: System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: InOutArgument(Expression)
  nameWithType: InOutArgument<T>.InOutArgument(Expression)
  fullName: System.Activities.InOutArgument<T>.InOutArgument(Expression)
- uid: System.Activities.InOutArgument`1.Expression
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: Expression
  nameWithType: InOutArgument<T>.Expression
  fullName: System.Activities.InOutArgument<T>.Expression
- uid: System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: FromExpression(Activity)
  nameWithType: InOutArgument<T>.FromExpression(Activity)
  fullName: System.Activities.InOutArgument<T>.FromExpression(Activity)
- uid: System.Activities.InOutArgument`1
  parent: System.Activities
  isExternal: false
  name: InOutArgument<T>
  nameWithType: InOutArgument<T>
  fullName: System.Activities.InOutArgument<T>
- uid: System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable`1)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: FromVariable(Variable)
  nameWithType: InOutArgument<T>.FromVariable(Variable)
  fullName: System.Activities.InOutArgument<T>.FromVariable(Variable)
- uid: System.Activities.InOutArgument`1
  parent: System.Activities
  isExternal: false
  name: InOutArgument<T>
  nameWithType: InOutArgument<T>
  fullName: System.Activities.InOutArgument<T>
- uid: System.Activities.Variable`1
  parent: System.Activities
  isExternal: false
  name: Variable<T>
  nameWithType: Variable<T>
  fullName: System.Activities.Variable<T>
- uid: System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: InOutArgument<T>.Get(ActivityContext)
  fullName: System.Activities.InOutArgument<T>.Get(ActivityContext)
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: InOutArgument<T>.GetLocation(ActivityContext)
  fullName: System.Activities.InOutArgument<T>.GetLocation(ActivityContext)
- uid: System.Activities.Location`1
  parent: System.Activities
  isExternal: false
  name: Location<T>
  nameWithType: Location<T>
  fullName: System.Activities.Location<T>
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: op_Implicit(Activity)
  nameWithType: InOutArgument<T>.op_Implicit(Activity)
  fullName: System.Activities.InOutArgument<T>.op_Implicit(Activity)
- uid: System.Activities.InOutArgument`1
  parent: System.Activities
  isExternal: false
  name: InOutArgument<T>
  nameWithType: InOutArgument<T>
  fullName: System.Activities.InOutArgument<T>
- uid: System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable`1)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: op_Implicit(Variable)
  nameWithType: InOutArgument<T>.op_Implicit(Variable)
  fullName: System.Activities.InOutArgument<T>.op_Implicit(Variable)
- uid: System.Activities.InOutArgument`1
  parent: System.Activities
  isExternal: false
  name: InOutArgument<T>
  nameWithType: InOutArgument<T>
  fullName: System.Activities.InOutArgument<T>
- uid: System.Activities.Variable`1
  parent: System.Activities
  isExternal: false
  name: Variable<T>
  nameWithType: Variable<T>
  fullName: System.Activities.Variable<T>
- uid: System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)
  parent: System.Activities.InOutArgument`1
  isExternal: false
  name: Set(ActivityContext,T)
  nameWithType: InOutArgument<T>.Set(ActivityContext,T)
  fullName: System.Activities.InOutArgument<T>.Set(ActivityContext,T)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
