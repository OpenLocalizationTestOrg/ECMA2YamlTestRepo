### YamlMime:ManagedReference
items:
- uid: System.Activities.RuntimeArgument
  id: RuntimeArgument
  children:
  - System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection)
  - System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)
  - System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})
  - System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})
  - System.Activities.RuntimeArgument.Direction
  - System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)
  - System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)
  - System.Activities.RuntimeArgument.GetLocation(System.Activities.ActivityContext)
  - System.Activities.RuntimeArgument.IsRequired
  - System.Activities.RuntimeArgument.NameCore
  - System.Activities.RuntimeArgument.OverloadGroupNames
  - System.Activities.RuntimeArgument.Set(System.Activities.ActivityContext,System.Object)
  - System.Activities.RuntimeArgument.TypeCore
  langs:
  - csharp
  name: RuntimeArgument
  nameWithType: RuntimeArgument
  fullName: System.Activities.RuntimeArgument
  type: Class
  summary: Describes the characteristics of an argument of an activity to the runtime.
  remarks: To be added.
  syntax:
    content: 'public sealed class RuntimeArgument : System.Activities.LocationReference'
  inheritance:
  - System.Object
  - System.Activities.LocationReference
  implements: []
  inheritedMembers:
  - System.Activities.LocationReference.Name
  - System.Activities.LocationReference.Type
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection)
  id: '#ctor(System.String,System.Type,System.Activities.ArgumentDirection)'
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: RuntimeArgument(String,Type,ArgumentDirection)
  nameWithType: RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection)
  fullName: System.Activities.RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <see cref="T:System.Activities.RuntimeArgument"> class using a name, data type, and argument direction.
  remarks: To be added.
  syntax:
    content: public RuntimeArgument (string name, Type argumentType, System.Activities.ArgumentDirection direction);
    parameters:
    - id: name
      type: System.String
      description: The name of the <see cref="T:System.Activities.RuntimeArgument">.
    - id: argumentType
      type: System.Type
      description: The type of the <see cref="T:System.Activities.RuntimeArgument">.
    - id: direction
      type: System.Activities.ArgumentDirection
      description: The direction of data flow through an argument.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)
  id: '#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)'
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: RuntimeArgument(String,Type,ArgumentDirection,Boolean)
  nameWithType: RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,Boolean)
  fullName: System.Activities.RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,Boolean)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <see cref="T:System.Activities.RuntimeArgument"> class using a name, data type, argument direction, and a value that indicates whether the <see cref="T:System.Activities.RuntimeArgument"> is required to be bound to a value.
  remarks: To be added.
  syntax:
    content: public RuntimeArgument (string name, Type argumentType, System.Activities.ArgumentDirection direction, bool isRequired);
    parameters:
    - id: name
      type: System.String
      description: The name of the <see cref="T:System.Activities.RuntimeArgument">.
    - id: argumentType
      type: System.Type
      description: The data type of the <see cref="T:System.Activities.RuntimeArgument">.
    - id: direction
      type: System.Activities.ArgumentDirection
      description: The direction of data flow through an argument.
    - id: isRequired
      type: System.Boolean
      description: '`true` to indicate that the <see cref="T:System.Activities.RuntimeArgument"> is required to be bound to a value; otherwise `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})
  id: '#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})'
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: RuntimeArgument(String,Type,ArgumentDirection,List<String>)
  nameWithType: RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,List<String>)
  fullName: System.Activities.RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,List<String>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <see cref="T:System.Activities.RuntimeArgument"> class using a name, data type, argument direction, and a list of overload group names.
  remarks: To be added.
  syntax:
    content: public RuntimeArgument (string name, Type argumentType, System.Activities.ArgumentDirection direction, System.Collections.Generic.List<string> overloadGroupNames);
    parameters:
    - id: name
      type: System.String
      description: The name of the <see cref="T:System.Activities.RuntimeArgument">.
    - id: argumentType
      type: System.Type
      description: The data type of the <see cref="T:System.Activities.RuntimeArgument">.
    - id: direction
      type: System.Activities.ArgumentDirection
      description: The direction of data flow through an argument.
    - id: overloadGroupNames
      type: System.Collections.Generic.List{System.String}
      description: The overload groups that apply to this <see cref="T:System.Activities.RuntimeArgument">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})
  id: '#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})'
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: RuntimeArgument(String,Type,ArgumentDirection,Boolean,List<String>)
  nameWithType: RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,Boolean,List<String>)
  fullName: System.Activities.RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,Boolean,List<String>)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Initializes a new instance of the <see cref="T:System.Activities.RuntimeArgument"> class with a name, data type, argument direction, whether the <see cref="T:System.Activities.RuntimeArgument"> is required to be bound to a value, and a list of overload group names.
  remarks: "Required arguments that are unbound result in validation errors that are displayed at design time.  \n  \n The <xref:System.Activities.RuntimeArgument.IsRequired%2A?displayProperty=fullName> is set to `true` if the <xref:System.Activities.RequiredArgumentAttribute?displayProperty=fullName> is applied to an argument.  \n  \n Overload groups can be set on arguments through the <xref:System.Activities.OverloadGroupAttribute>."
  syntax:
    content: public RuntimeArgument (string name, Type argumentType, System.Activities.ArgumentDirection direction, bool isRequired, System.Collections.Generic.List<string> overloadGroupNames);
    parameters:
    - id: name
      type: System.String
      description: The name of the <see cref="T:System.Activities.RuntimeArgument">.
    - id: argumentType
      type: System.Type
      description: The data type of the <see cref="T:System.Activities.RuntimeArgument">.
    - id: direction
      type: System.Activities.ArgumentDirection
      description: The direction of data flow through an argument.
    - id: isRequired
      type: System.Boolean
      description: '`true` to indicate that the <see cref="T:System.Activities.RuntimeArgument"> is required to be bound to a value; otherwise `false`.'
    - id: overloadGroupNames
      type: System.Collections.Generic.List{System.String}
      description: The names of the overload groups that apply to this <see cref="T:System.Activities.RuntimeArgument">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.Direction
  id: Direction
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: Direction
  nameWithType: RuntimeArgument.Direction
  fullName: System.Activities.RuntimeArgument.Direction
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets the direction of the data flow through this <see cref="T:System.Activities.RuntimeArgument">.
  remarks: To be added.
  syntax:
    content: public System.Activities.ArgumentDirection Direction { get; }
    return:
      type: System.Activities.ArgumentDirection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)
  id: Get(System.Activities.ActivityContext)
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: RuntimeArgument.Get(ActivityContext)
  fullName: System.Activities.RuntimeArgument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets the value of the <see cref="T:System.Activities.RuntimeArgument"> using the specified activity context.
  remarks: To be added.
  syntax:
    content: public object Get (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: The current activity context.
    return:
      type: System.Object
      description: The value of the <see cref="T:System.Activities.RuntimeArgument">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)
  id: Get``1(System.Activities.ActivityContext)
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: Get(ActivityContext)
  nameWithType: RuntimeArgument.Get(ActivityContext)
  fullName: System.Activities.RuntimeArgument.Get(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public T Get<T> (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: To be added.
    return:
      type: T
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.GetLocation(System.Activities.ActivityContext)
  id: GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: GetLocation(ActivityContext)
  nameWithType: RuntimeArgument.GetLocation(ActivityContext)
  fullName: System.Activities.RuntimeArgument.GetLocation(ActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Returns the <see cref="T:System.Activities.Location"> for this <xref:System.Activities.RuntimeArgument>.
  remarks: To be added.
  syntax:
    content: public override System.Activities.Location GetLocation (System.Activities.ActivityContext context);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: The argument location.
    return:
      type: System.Activities.Location
      description: The location of the <see cref="T:System.Activities.RuntimeArgument">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.IsRequired
  id: IsRequired
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: IsRequired
  nameWithType: RuntimeArgument.IsRequired
  fullName: System.Activities.RuntimeArgument.IsRequired
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets a value that indicates whether the <see cref="T:System.Activities.RuntimeArgument"> is required to be bound to a value.
  remarks: If an argument is required and not bound to a value a <xref:System.Activities.ValidationException> is thrown when the containing activity is prepared for execution, unless overload groups are used and the required arguments of an overload group are bound. [!INCLUDE[crdefault](../../add/includes/crdefault-md.md)]<xref:System.Activities.RuntimeArgument.OverloadGroupNames%2A>.
  syntax:
    content: public bool IsRequired { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.NameCore
  id: NameCore
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: NameCore
  nameWithType: RuntimeArgument.NameCore
  fullName: System.Activities.RuntimeArgument.NameCore
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override string NameCore { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.OverloadGroupNames
  id: OverloadGroupNames
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: OverloadGroupNames
  nameWithType: RuntimeArgument.OverloadGroupNames
  fullName: System.Activities.RuntimeArgument.OverloadGroupNames
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Gets a list of the overload groups that this <see cref="T:System.Activities.RuntimeArgument"> belongs to.
  remarks: "Arguments can be grouped together to form valid overload groups. OverloadGroupNames identifies the overload groups to which this argument belongs. An overload group cannot be a subset or an equivalent set of another overload group. The only exception to this rule is a subset that contains only arguments where <xref:System.Activities.RuntimeArgument.IsRequired%2A> is `false`. Overload groups can overlap but it is an error if the intersection of the groups contains all the required arguments of one or both the overload groups.  \n  \n An overload group is considered bound if all the <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments in the group are bound. If a group has zero <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments and at least one argument bound, then the group is considered bound. It is an error if none of the groups are bound unless one overload group has no <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments in it. Binding <xref:System.Activities.RuntimeArgument.IsRequired%2A> arguments from more than one overload group is not permitted. It is an error to have more than one overload group bound, that is, all required arguments in one overload group are bound and any argument in another overload group is also bound.  \n  \n Any violation of the preceding rules results in a <xref:System.Activities.ValidationException> being thrown when the containing activity is prepared for execution.  \n  \n [!INCLUDE[crdefault](../../add/includes/crdefault-md.md)] <xref:System.Activities.OverloadGroupAttribute>."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> OverloadGroupNames { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.Set(System.Activities.ActivityContext,System.Object)
  id: Set(System.Activities.ActivityContext,System.Object)
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: Set(ActivityContext,Object)
  nameWithType: RuntimeArgument.Set(ActivityContext,Object)
  fullName: System.Activities.RuntimeArgument.Set(ActivityContext,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: Sets the value of the <see cref="T:System.Activities.RuntimeArgument">.
  remarks: To be added.
  syntax:
    content: public void Set (System.Activities.ActivityContext context, object value);
    parameters:
    - id: context
      type: System.Activities.ActivityContext
      description: The current activity context.
    - id: value
      type: System.Object
      description: The new value for the <see cref="T:System.Activities.RuntimeArgument">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.RuntimeArgument.TypeCore
  id: TypeCore
  parent: System.Activities.RuntimeArgument
  langs:
  - csharp
  name: TypeCore
  nameWithType: RuntimeArgument.TypeCore
  fullName: System.Activities.RuntimeArgument.TypeCore
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override Type TypeCore { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Activities.LocationReference
  isExternal: false
  name: System.Activities.LocationReference
- uid: System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection)
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: RuntimeArgument(String,Type,ArgumentDirection)
  nameWithType: RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection)
  fullName: System.Activities.RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: RuntimeArgument(String,Type,ArgumentDirection,Boolean)
  nameWithType: RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,Boolean)
  fullName: System.Activities.RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,Boolean)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: RuntimeArgument(String,Type,ArgumentDirection,List<String>)
  nameWithType: RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,List<String>)
  fullName: System.Activities.RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,List<String>)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
- uid: System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: RuntimeArgument(String,Type,ArgumentDirection,Boolean,List<String>)
  nameWithType: RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,Boolean,List<String>)
  fullName: System.Activities.RuntimeArgument.RuntimeArgument(String,Type,ArgumentDirection,Boolean,List<String>)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
- uid: System.Activities.RuntimeArgument.Direction
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: Direction
  nameWithType: RuntimeArgument.Direction
  fullName: System.Activities.RuntimeArgument.Direction
- uid: System.Activities.ArgumentDirection
  parent: System.Activities
  isExternal: false
  name: ArgumentDirection
  nameWithType: ArgumentDirection
  fullName: System.Activities.ArgumentDirection
- uid: System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: RuntimeArgument.Get(ActivityContext)
  fullName: System.Activities.RuntimeArgument.Get(ActivityContext)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: Get(ActivityContext)
  nameWithType: RuntimeArgument.Get(ActivityContext)
  fullName: System.Activities.RuntimeArgument.Get(ActivityContext)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.RuntimeArgument.GetLocation(System.Activities.ActivityContext)
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: GetLocation(ActivityContext)
  nameWithType: RuntimeArgument.GetLocation(ActivityContext)
  fullName: System.Activities.RuntimeArgument.GetLocation(ActivityContext)
- uid: System.Activities.Location
  parent: System.Activities
  isExternal: false
  name: Location
  nameWithType: Location
  fullName: System.Activities.Location
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Activities.RuntimeArgument.IsRequired
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: IsRequired
  nameWithType: RuntimeArgument.IsRequired
  fullName: System.Activities.RuntimeArgument.IsRequired
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.RuntimeArgument.NameCore
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: NameCore
  nameWithType: RuntimeArgument.NameCore
  fullName: System.Activities.RuntimeArgument.NameCore
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.RuntimeArgument.OverloadGroupNames
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: OverloadGroupNames
  nameWithType: RuntimeArgument.OverloadGroupNames
  fullName: System.Activities.RuntimeArgument.OverloadGroupNames
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
- uid: System.Activities.RuntimeArgument.Set(System.Activities.ActivityContext,System.Object)
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: Set(ActivityContext,Object)
  nameWithType: RuntimeArgument.Set(ActivityContext,Object)
  fullName: System.Activities.RuntimeArgument.Set(ActivityContext,Object)
- uid: System.Activities.ActivityContext
  parent: System.Activities
  isExternal: false
  name: ActivityContext
  nameWithType: ActivityContext
  fullName: System.Activities.ActivityContext
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.RuntimeArgument.TypeCore
  parent: System.Activities.RuntimeArgument
  isExternal: false
  name: TypeCore
  nameWithType: RuntimeArgument.TypeCore
  fullName: System.Activities.RuntimeArgument.TypeCore
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
