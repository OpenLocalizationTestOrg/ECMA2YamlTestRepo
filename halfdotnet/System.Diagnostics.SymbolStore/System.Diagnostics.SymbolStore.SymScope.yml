### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymScope
  id: SymScope
  children:
  - System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)
  - System.Diagnostics.SymbolStore.SymScope.Dispose
  - System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymScope.EndOffset
  - System.Diagnostics.SymbolStore.SymScope.Finalize
  - System.Diagnostics.SymbolStore.SymScope.GetChildren
  - System.Diagnostics.SymbolStore.SymScope.GetLocals
  - System.Diagnostics.SymbolStore.SymScope.GetNamespaces
  - System.Diagnostics.SymbolStore.SymScope.Method
  - System.Diagnostics.SymbolStore.SymScope.Parent
  - System.Diagnostics.SymbolStore.SymScope.StartOffset
  langs:
  - csharp
  name: SymScope
  nameWithType: SymScope
  fullName: System.Diagnostics.SymbolStore.SymScope
  type: Class
  summary: Represents a lexical scope within <see cref="T:System.Diagnostics.SymbolStore.SymMethod">, providing access to the start and end offsets of the scope, as well as its child and parent scopes.
  remarks: The SymScope class also provides access to all locals defined within the current scope.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymScope : System.Diagnostics.SymbolStore.SymScopeBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolScope
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymScopeBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolScope
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymScopeBase.{dtor}
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)
  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)'
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: SymScope(ISymUnmanagedScope*)
  nameWithType: SymScope.SymScope(ISymUnmanagedScope*)
  fullName: System.Diagnostics.SymbolStore.SymScope.SymScope(ISymUnmanagedScope*)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public SymScope (System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope* pScope);
    parameters:
    - id: pScope
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymScope.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymScope"> class.
  remarks: To be added.
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymScope.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymScope.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Called by the <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> methods to release the managed and unmanaged resources used by the current instance of the <xref:System.Diagnostics.SymbolStore.SymScope> class.
  remarks: This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymScope.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymScope.Finalize%2A> methods; do not call this method directly.
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: '`true` to release managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.Diagnostics.SymbolStore.SymScope.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset
  id: EndOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: EndOffset
  nameWithType: SymScope.EndOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.EndOffset
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Gets the end offset of the current lexical scope.
  remarks: To be added.
  syntax:
    content: public virtual int EndOffset { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymScope.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymScope.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymScope"> is reclaimed by garbage collection.
  remarks: This method overrides  <xref:System.Object.Finalize%2A>. Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.
  syntax:
    content: ~SymScope ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren
  id: GetChildren
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: GetChildren()
  nameWithType: SymScope.GetChildren()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetChildren()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Gets the child lexical scopes of the current lexical scope.
  remarks: To be added.
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope[] GetChildren ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope[]
      description: The lexical scopes enclosed by the current lexical scope.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals
  id: GetLocals
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: GetLocals()
  nameWithType: SymScope.GetLocals()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetLocals()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Gets the local variables within the current lexical scope.
  remarks: The local variables are returned in no particular order. If a local variable changes its address within the current scope, that variable is returned multiple times, each with a different offset range.
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetLocals ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolVariable[]
      description: The local variables within the current lexical scope.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces
  id: GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: GetNamespaces()
  nameWithType: SymScope.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetNamespaces()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Throws a <see cref="T:System.NotSupportedException"> in all cases.
  remarks: To be added.
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.ISymbolNamespace[]
      description: Throws a <see cref="T:System.NotSupportedException"> in all cases.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.Method
  id: Method
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Method
  nameWithType: SymScope.Method
  fullName: System.Diagnostics.SymbolStore.SymScope.Method
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Gets the method that contains the current lexical scope.
  remarks: To be added.
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolMethod Method { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolMethod
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.Parent
  id: Parent
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: Parent
  nameWithType: SymScope.Parent
  fullName: System.Diagnostics.SymbolStore.SymScope.Parent
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Gets the parent lexical scope of the current scope.
  remarks: To be added.
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope Parent { get; }
    return:
      type: System.Diagnostics.SymbolStore.ISymbolScope
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset
  id: StartOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  langs:
  - csharp
  name: StartOffset
  nameWithType: SymScope.StartOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.StartOffset
  type: Property
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: Gets the start offset of the current lexical scope.
  remarks: To be added.
  syntax:
    content: public virtual int StartOffset { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Diagnostics.SymbolStore.SymScopeBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymScopeBase
- uid: System.Diagnostics.SymbolStore.SymScope.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedScope*)
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: SymScope(ISymUnmanagedScope*)
  nameWithType: SymScope.SymScope(ISymUnmanagedScope*)
  fullName: System.Diagnostics.SymbolStore.SymScope.SymScope(ISymUnmanagedScope*)
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Dispose()
  nameWithType: SymScope.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose()
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymScope.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymScope.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymScope.EndOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: EndOffset
  nameWithType: SymScope.EndOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.EndOffset
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymScope.Finalize
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Finalize()
  nameWithType: SymScope.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymScope.Finalize()
- uid: System.Diagnostics.SymbolStore.SymScope.GetChildren
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetChildren()
  nameWithType: SymScope.GetChildren()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetChildren()
- uid: System.Diagnostics.SymbolStore.ISymbolScope
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope[]
- uid: System.Diagnostics.SymbolStore.SymScope.GetLocals
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetLocals()
  nameWithType: SymScope.GetLocals()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetLocals()
- uid: System.Diagnostics.SymbolStore.ISymbolVariable
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolVariable
  nameWithType: ISymbolVariable
  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]
- uid: System.Diagnostics.SymbolStore.SymScope.GetNamespaces
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: GetNamespaces()
  nameWithType: SymScope.GetNamespaces()
  fullName: System.Diagnostics.SymbolStore.SymScope.GetNamespaces()
- uid: System.Diagnostics.SymbolStore.ISymbolNamespace
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolNamespace
  nameWithType: ISymbolNamespace
  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace[]
- uid: System.Diagnostics.SymbolStore.SymScope.Method
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Method
  nameWithType: SymScope.Method
  fullName: System.Diagnostics.SymbolStore.SymScope.Method
- uid: System.Diagnostics.SymbolStore.ISymbolMethod
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolMethod
  nameWithType: ISymbolMethod
  fullName: System.Diagnostics.SymbolStore.ISymbolMethod
- uid: System.Diagnostics.SymbolStore.SymScope.Parent
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: Parent
  nameWithType: SymScope.Parent
  fullName: System.Diagnostics.SymbolStore.SymScope.Parent
- uid: System.Diagnostics.SymbolStore.ISymbolScope
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolScope
  nameWithType: ISymbolScope
  fullName: System.Diagnostics.SymbolStore.ISymbolScope
- uid: System.Diagnostics.SymbolStore.SymScope.StartOffset
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  name: StartOffset
  nameWithType: SymScope.StartOffset
  fullName: System.Diagnostics.SymbolStore.SymScope.StartOffset
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymScope.Dispose*
  parent: System.Diagnostics.SymbolStore.SymScope
  isExternal: false
  nameWithType: SymScope.
