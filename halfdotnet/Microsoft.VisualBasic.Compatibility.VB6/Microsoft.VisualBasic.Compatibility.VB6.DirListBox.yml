### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  id: DirListBox
  children:
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.#ctor
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ColumnWidth
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList(System.Int32)
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DrawMode
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ItemHeight
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Items
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.MultiColumn
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnBackColorChanged(System.EventArgs)
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnChange(System.EventArgs)
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDoubleClick(System.EventArgs)
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnFontChanged(System.EventArgs)
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnHandleCreated(System.EventArgs)
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnSelectedIndexChanged(System.EventArgs)
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Refresh
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.SelectionMode
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Sorted
  - Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ValueMember
  langs:
  - csharp
  name: DirListBox
  nameWithType: DirListBox
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  type: Class
  summary: Displays directories and paths at run time.
  remarks: "Use this control to display a hierarchical list of directories. You can create dialog boxes that, for example, enable a user to open a file from a list of files in all available directories.  \n  \n Set the [DirList\\<xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList%2A>, <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount%2A>, and <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex%2A> properties to enable a user to access items in a list. If you also display the <xref:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox> and <xref:Microsoft.VisualBasic.Compatibility.VB6.FileListBox> controls, you can write code to synchronize them with the DirListBox control and with each other.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(Microsoft.VisualBasic.Compatibility.VB6.CompatibilityListBoxDesigner))]

      [System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]

      public class DirListBox : System.Windows.Forms.ListBox
  inheritance:
  - System.Windows.Forms.ListBox
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: DirListBox()
  nameWithType: DirListBox.DirListBox()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListBox()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox"> class.
  remarks: "A `DirListBox` control displays directories and paths at run time.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public DirListBox ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change
  id: Change
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: Change
  nameWithType: DirListBox.Change
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change
  type: Event
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Occurs when the contents of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox"> control has changed.
  remarks: "The `Change` event occurs when the selection in a <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control changes, either when the user double-clicks a new directory or when you change the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path%2A> property setting through code.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public event EventHandler Change;
    return:
      type: System.EventHandler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ColumnWidth
  id: ColumnWidth
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: ColumnWidth
  nameWithType: DirListBox.ColumnWidth
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ColumnWidth
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets or sets the width of columns in a multicolumn <xref:System.Windows.Forms.ListBox>.
  remarks: "This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public int ColumnWidth { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource
  id: DataSource
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: DataSource
  nameWithType: DirListBox.DataSource
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets or sets the data source for a <xref:System.Windows.Forms.ListControl>.
  remarks: "This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public object DataSource { get; set; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList(System.Int32)
  id: DirList(System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: DirList(Int32)
  nameWithType: DirListBox.DirList(Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList(Int32)
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets the items that are contained in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox"> control's list portion.
  remarks: "Use this property to access list items. The `DirList` property works together with the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount%2A> and <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex%2A> properties.  \n  \n For a <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control, the  number sequence is based on the current directories and subdirectories when the control is created at run time.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public string DirList[int Index] { get; }
    parameters:
    - id: Index
      type: System.Int32
      description: The number of a specific item in the list.
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount
  id: DirListCount
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: DirListCount
  nameWithType: DirListBox.DirListCount
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets the number of items in the list section of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox"> control.
  remarks: "Use this property to return the number of subdirectories in the currently selected directory. The `DirListCount` property works together with the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList%2A> and <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex%2A> properties.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public int DirListCount { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex
  id: DirListIndex
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: DirListIndex
  nameWithType: DirListBox.DirListIndex
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets or sets the index of the currently selected item in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox"> control.
  remarks: "Use this property to return the index of the currently selected directory. The `DirListIndex` property works together with the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList%2A> and <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount%2A> properties.  \n  \n The expression `instance.DirList(instance.DirListIndex)` returns the string for the currently selected directory.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public int DirListIndex { get; set; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirListBox.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox"> control and optionally releases the managed resources.
  remarks: "This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with the disposing parameter set to `false`.  \n  \n When the disposing parameter is `true`, this method releases all resources held by any managed objects that this control references. This method invokes the `Dispose()` method of each referenced object.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected override void Dispose (bool Disposing);
    parameters:
    - id: Disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DrawMode
  id: DrawMode
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: DrawMode
  nameWithType: DirListBox.DrawMode
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DrawMode
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets or sets the drawing mode for a <xref:System.Windows.Forms.ListBox>.
  remarks: "This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public override System.Windows.Forms.DrawMode DrawMode { get; set; }
    return:
      type: System.Windows.Forms.DrawMode
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ItemHeight
  id: ItemHeight
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: ItemHeight
  nameWithType: DirListBox.ItemHeight
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ItemHeight
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets the height of an item in the <xref:System.Windows.Forms.ListBox>.
  remarks: "This property is not required for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> does not support items of variable height. It is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public int ItemHeight { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Items
  id: Items
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: Items
  nameWithType: DirListBox.Items
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Items
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets the items that are contained in a <xref:System.Windows.Forms.ListBox>.
  remarks: "This property should not be used for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; trying to add or remove directories from the collection could cause an exception. It is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public System.Windows.Forms.ListBox.ObjectCollection Items { get; }
    return:
      type: System.Windows.Forms.ListBox+ObjectCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.MultiColumn
  id: MultiColumn
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: MultiColumn
  nameWithType: DirListBox.MultiColumn
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.MultiColumn
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets or sets a value that indicates whether a <xref:System.Windows.Forms.ListBox> supports multiple columns.
  remarks: "This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public bool MultiColumn { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnBackColorChanged(System.EventArgs)
  id: OnBackColorChanged(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: OnBackColorChanged(EventArgs)
  nameWithType: DirListBox.OnBackColorChanged(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnBackColorChanged(EventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Raises the <xref:System.Windows.Forms.Control.BackColorChanged> event.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The `OnBackColorChanged` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected override void OnBackColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: A <see cref="T:System.EventArgs"> that contains the event data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnChange(System.EventArgs)
  id: OnChange(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: OnChange(EventArgs)
  nameWithType: DirListBox.OnChange(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnChange(EventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Raises the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change"> event.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The `OnChanged` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected virtual void OnChange (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: A <see cref="T:System.EventArgs"> that contains the event data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDoubleClick(System.EventArgs)
  id: OnDoubleClick(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: OnDoubleClick(EventArgs)
  nameWithType: DirListBox.OnDoubleClick(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDoubleClick(EventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Raises the <xref:System.Windows.Forms.Control.DoubleClick> event.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The `OnDoubleClick` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected override void OnDoubleClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: A <see cref="T:System.EventArgs"> that contains the event data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  id: OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: DirListBox.OnDrawItem(DrawItemEventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDrawItem(DrawItemEventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Raise the <xref:System.Windows.Forms.ListBox.DrawItem> event.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The `OnDrawItem` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected override void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.DrawItemEventArgs
      description: A <see cref="T:System.EventArgs"> that contains the event data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: DirListBox.OnFontChanged(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Raises the <xref:System.Windows.Forms.Control.FontChanged> event.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The `OnFontChanged` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected override void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: A <see cref="T:System.EventArgs"> that contains the event data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: DirListBox.OnHandleCreated(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Raises the <xref:System.Windows.Forms.Control.HandleCreated> event.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The `OnHandleCreated` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected override void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: A <see cref="T:System.EventArgs"> that contains the event data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnSelectedIndexChanged(System.EventArgs)
  id: OnSelectedIndexChanged(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: DirListBox.OnSelectedIndexChanged(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnSelectedIndexChanged(EventArgs)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Raises the <xref:System.Windows.Forms.ListBox.SelectedIndexChanged> event.
  remarks: "Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).  \n  \n The `OnSelectedIndexChanged` method also enables derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected override void OnSelectedIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: A <see cref="T:System.EventArgs"> that contains the event data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path
  id: Path
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: Path
  nameWithType: DirListBox.Path
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets or sets the current path in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox"> control.
  remarks: "Use this property when you are building an application's file-browsing and manipulation capabilities. When you set the `Path` property, the effects are similar to the effects of the MS-DOS `chdir` command; relative paths are enabled with or without a drive specification. If you specify only a drive with a colon (:),the current directory on that drive is selected.  \n  \n The `Path` property can also be set to a qualified network path without a drive connection using the following syntax:  \n  \n```  \n\\\\servername\\sharename\\path  \n```  \n  \n Changing the value of `Path` for a <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control generates an <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change> event.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Refresh
  id: Refresh
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: Refresh()
  nameWithType: DirListBox.Refresh()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Refresh()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Forces the control to invalidate its client area and immediately redraw itself.
  remarks: >-
    > [!NOTE]

    >  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation.
  syntax:
    content: public override void Refresh ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.SelectionMode
  id: SelectionMode
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: SelectionMode
  nameWithType: DirListBox.SelectionMode
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.SelectionMode
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets or sets the method in which items are selected in a <xref:System.Windows.Forms.ListBox>.
  remarks: "This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public System.Windows.Forms.SelectionMode SelectionMode { get; set; }
    return:
      type: System.Windows.Forms.SelectionMode
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Sorted
  id: Sorted
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: Sorted
  nameWithType: DirListBox.Sorted
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Sorted
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets a value that indicates whether the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox"> are sorted alphabetically.
  remarks: "For the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control, `Sorted` always returns false.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public bool Sorted { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ValueMember
  id: ValueMember
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  langs:
  - csharp
  name: ValueMember
  nameWithType: DirListBox.ValueMember
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ValueMember
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets or sets the property to use as the actual value for the items in a <xref:System.Windows.Forms.ListControl>.
  remarks: "This property should not be set for the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control; it is provided only because the <xref:Microsoft.VisualBasic.Compatibility.VB6.DirListBox> control inherits from <xref:System.Windows.Forms.ListBox>.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public string ValueMember { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.Forms.ListBox
  isExternal: false
  name: System.Windows.Forms.ListBox
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.#ctor
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: DirListBox()
  nameWithType: DirListBox.DirListBox()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListBox()
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: Change
  nameWithType: DirListBox.Change
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ColumnWidth
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: ColumnWidth
  nameWithType: DirListBox.ColumnWidth
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ColumnWidth
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: DataSource
  nameWithType: DirListBox.DataSource
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList(System.Int32)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: DirList(Int32)
  nameWithType: DirListBox.DirList(Int32)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList(Int32)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: DirListCount
  nameWithType: DirListBox.DirListCount
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: DirListIndex
  nameWithType: DirListBox.DirListIndex
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirListBox.Dispose(Boolean)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DrawMode
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: DrawMode
  nameWithType: DirListBox.DrawMode
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DrawMode
- uid: System.Windows.Forms.DrawMode
  parent: System.Windows.Forms
  isExternal: true
  name: DrawMode
  nameWithType: DrawMode
  fullName: System.Windows.Forms.DrawMode
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ItemHeight
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: ItemHeight
  nameWithType: DirListBox.ItemHeight
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ItemHeight
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Items
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: Items
  nameWithType: DirListBox.Items
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Items
- uid: System.Windows.Forms.ListBox
  parent: System.Windows.Forms
  isExternal: true
  name: ListBox
  nameWithType: ListBox
  fullName: System.Windows.Forms.ListBox+ObjectCollection
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.MultiColumn
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: MultiColumn
  nameWithType: DirListBox.MultiColumn
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.MultiColumn
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnBackColorChanged(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: OnBackColorChanged(EventArgs)
  nameWithType: DirListBox.OnBackColorChanged(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnBackColorChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnChange(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: OnChange(EventArgs)
  nameWithType: DirListBox.OnChange(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnChange(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDoubleClick(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: OnDoubleClick(EventArgs)
  nameWithType: DirListBox.OnDoubleClick(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDoubleClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: OnDrawItem(DrawItemEventArgs)
  nameWithType: DirListBox.OnDrawItem(DrawItemEventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDrawItem(DrawItemEventArgs)
- uid: System.Windows.Forms.DrawItemEventArgs
  parent: System.Windows.Forms
  isExternal: true
  name: DrawItemEventArgs
  nameWithType: DrawItemEventArgs
  fullName: System.Windows.Forms.DrawItemEventArgs
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnFontChanged(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: DirListBox.OnFontChanged(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnFontChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnHandleCreated(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: DirListBox.OnHandleCreated(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnHandleCreated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnSelectedIndexChanged(System.EventArgs)
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: OnSelectedIndexChanged(EventArgs)
  nameWithType: DirListBox.OnSelectedIndexChanged(EventArgs)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnSelectedIndexChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: Path
  nameWithType: DirListBox.Path
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Refresh
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: Refresh()
  nameWithType: DirListBox.Refresh()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Refresh()
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.SelectionMode
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: SelectionMode
  nameWithType: DirListBox.SelectionMode
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.SelectionMode
- uid: System.Windows.Forms.SelectionMode
  parent: System.Windows.Forms
  isExternal: true
  name: SelectionMode
  nameWithType: SelectionMode
  fullName: System.Windows.Forms.SelectionMode
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Sorted
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: Sorted
  nameWithType: DirListBox.Sorted
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Sorted
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ValueMember
  parent: Microsoft.VisualBasic.Compatibility.VB6.DirListBox
  isExternal: false
  name: ValueMember
  nameWithType: DirListBox.ValueMember
  fullName: Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ValueMember
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
