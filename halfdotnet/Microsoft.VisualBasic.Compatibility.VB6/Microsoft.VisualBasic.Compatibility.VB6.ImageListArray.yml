### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  id: ImageListArray
  children:
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor(System.ComponentModel.IContainer)
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.CanExtend(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetControlInstanceType
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetIndex(System.Windows.Forms.ImageList)
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.HookUpControlEvents(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.Item(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ResetIndex(System.Windows.Forms.ImageList)
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.SetIndex(System.Windows.Forms.ImageList,System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ShouldSerializeIndex(System.Windows.Forms.ImageList)
  langs:
  - csharp
  name: ImageListArray
  nameWithType: ImageListArray
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  type: Class
  summary: Provides a control array of <xref:System.Windows.Forms.ImageList> controls.
  remarks: "The `ImageListArray` class provides an equivalent for the run-time functionality of a Visual Basic 6.0 `ImageList` array. It does not provide the design-time features of a Visual Basic 6.0 control array.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: >-
      [System.ComponentModel.ProvideProperty("Index", typeof(System.Windows.Forms.ImageList))]

      [System.Obsolete("Microsoft.VisualBasic.Compatibility.* classes are obsolete and supported within 32 bit processes only. http://go.microsoft.com/fwlink/?linkid=160862")]

      public class ImageListArray : Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray, System.ComponentModel.IExtenderProvider
  inheritance:
  - System.ComponentModel.Component
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  implements:
  - System.ComponentModel.IExtenderProvider
  inheritedMembers:
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound
  - Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: ImageListArray()
  nameWithType: ImageListArray.ImageListArray()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ImageListArray()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray"> class.
  remarks: "When you instantiate an <xref:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray>, you must also call the <xref:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.SetIndex%2A> method to create the initial element in the array.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public ImageListArray ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: ImageListArray(IContainer)
  nameWithType: ImageListArray.ImageListArray(IContainer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ImageListArray(IContainer)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray"> class, specifying its container.
  remarks: "When you instantiate an <xref:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray>, you must also call the <xref:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.SetIndex%2A> method to create the initial element in the array.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public ImageListArray (System.ComponentModel.IContainer Container);
    parameters:
    - id: Container
      type: System.ComponentModel.IContainer
      description: The <xref:System.ComponentModel.IContainer> where the control array will be hosted.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.CanExtend(System.Object)
  id: CanExtend(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: CanExtend(Object)
  nameWithType: ImageListArray.CanExtend(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.CanExtend(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray">.
  remarks: "The `CanExtend` method can be used to determine whether a specific <xref:System.Windows.Forms.ImageList> control is the base element of the control array from which the other elements were cloned.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public bool CanExtend (object target);
    parameters:
    - id: target
      type: System.Object
      description: An <xref:System.Windows.Forms.ImageList> control.
    return:
      type: System.Boolean
      description: '`true` if  is a member of the control array; otherwise `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetControlInstanceType
  id: GetControlInstanceType
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: GetControlInstanceType()
  nameWithType: ImageListArray.GetControlInstanceType()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetControlInstanceType()
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Overrides <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType%2A>.
  remarks: "This method cannot be called from your application's code. Use the <xref:System.Object.GetType%2A> method instead.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected override Type GetControlInstanceType ();
    parameters: []
    return:
      type: System.Type
      description: The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray"> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0. Because this class is not typically used to create an instance of the class, this `Protected` method is usually not called directly but is instead called by a derived class.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetIndex(System.Windows.Forms.ImageList)
  id: GetIndex(System.Windows.Forms.ImageList)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: GetIndex(ImageList)
  nameWithType: ImageListArray.GetIndex(ImageList)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetIndex(ImageList)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets the index of an <xref:System.Windows.Forms.ImageList> in an <xref:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray>.
  remarks: "This method can be used to retrieve the index for the selected <xref:System.Windows.Forms.ImageList>.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public short GetIndex (System.Windows.Forms.ImageList o);
    parameters:
    - id: o
      type: System.Windows.Forms.ImageList
      description: An <xref:System.Windows.Forms.ImageList> in the control array.
    return:
      type: System.Int16
      description: A `Short` that represents the index of the specified <xref:System.Windows.Forms.ImageList>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.HookUpControlEvents(System.Object)
  id: HookUpControlEvents(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: HookUpControlEvents(Object)
  nameWithType: ImageListArray.HookUpControlEvents(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.HookUpControlEvents(Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Overrides <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents%2A>.
  remarks: "This method cannot be called from your application's code. Use `AddHandler` to hook up events for any controls that are added by using the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: protected override void HookUpControlEvents (object o);
    parameters:
    - id: o
      type: System.Object
      description: An <see cref="T:System.Object">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.Item(System.Int16)
  id: Item(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: Item(Int16)
  nameWithType: ImageListArray.Item(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.Item(Int16)
  type: Property
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Gets a specific element of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray"> by index. Read-only.
  remarks: "The `Item` property is the default property for a control array. Therefore, the following lines of code are equivalent.  \n  \n```vb#  \nMsgBox(CStr(ImageListArray.Item(1).Text))  \nMsgBox(CStr(ImageListArray(1).Text))  \n```  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public System.Windows.Forms.ImageList this[short Index] { get; }
    parameters:
    - id: Index
      type: System.Int16
      description: A `Short` that specifies the position of an element of the control array.
    return:
      type: System.Windows.Forms.ImageList
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ResetIndex(System.Windows.Forms.ImageList)
  id: ResetIndex(System.Windows.Forms.ImageList)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: ResetIndex(ImageList)
  nameWithType: ImageListArray.ResetIndex(ImageList)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ResetIndex(ImageList)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: The `ResetIndex` method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray"> class.
  remarks: "This method is not supported, and calling it does not raise an exception.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public void ResetIndex (System.Windows.Forms.ImageList o);
    parameters:
    - id: o
      type: System.Windows.Forms.ImageList
      description: A <xref:System.Windows.Forms.Control>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.SetIndex(System.Windows.Forms.ImageList,System.Int16)
  id: SetIndex(System.Windows.Forms.ImageList,System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: SetIndex(ImageList,Int16)
  nameWithType: ImageListArray.SetIndex(ImageList,Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.SetIndex(ImageList,Int16)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Sets the index of the initial <xref:System.Windows.Forms.ImageList> in a <xref:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray>.
  remarks: "The `SetIndex` method should only be called when you are creating the initial element in the control array. To add subsequent elements, call the <xref:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load%2A> method and specify the .  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public void SetIndex (System.Windows.Forms.ImageList o, short Index);
    parameters:
    - id: o
      type: System.Windows.Forms.ImageList
      description: An <xref:System.Windows.Forms.ImageList> in the control array.
    - id: Index
      type: System.Int16
      description: A `Short` that represents the index of the specified <xref:System.Windows.Forms.ImageList>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ShouldSerializeIndex(System.Windows.Forms.ImageList)
  id: ShouldSerializeIndex(System.Windows.Forms.ImageList)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  langs:
  - csharp
  name: ShouldSerializeIndex(ImageList)
  nameWithType: ImageListArray.ShouldSerializeIndex(ImageList)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ShouldSerializeIndex(ImageList)
  type: Method
  assemblies:
  - Microsoft.VisualBasic.Compatibility
  namespace: Microsoft.VisualBasic.Compatibility.VB6
  summary: Returns a value that indicates whether an <xref:System.Windows.Forms.ImageList> is a member of this <xref:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray>.
  remarks: "If the specified <xref:System.Windows.Forms.ImageList> is a member of a different <xref:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray>, `ShouldSerializeIndex` returns `false`.  \n  \n> [!NOTE]\n>  Functions and objects in the <xref:Microsoft.VisualBasic.Compatibility.VB6> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. They are necessary only when the Visual Basic 6.0 code model differs significantly from the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] implementation."
  syntax:
    content: public bool ShouldSerializeIndex (System.Windows.Forms.ImageList o);
    parameters:
    - id: o
      type: System.Windows.Forms.ImageList
      description: An <xref:System.Windows.Forms.ImageList> in the control array.
    return:
      type: System.Boolean
      description: '`true` if  is a member of this control array; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
  isExternal: false
  name: Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: ImageListArray()
  nameWithType: ImageListArray.ImageListArray()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ImageListArray()
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor(System.ComponentModel.IContainer)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: ImageListArray(IContainer)
  nameWithType: ImageListArray.ImageListArray(IContainer)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ImageListArray(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: true
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.CanExtend(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: CanExtend(Object)
  nameWithType: ImageListArray.CanExtend(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.CanExtend(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetControlInstanceType
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: GetControlInstanceType()
  nameWithType: ImageListArray.GetControlInstanceType()
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetControlInstanceType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetIndex(System.Windows.Forms.ImageList)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: GetIndex(ImageList)
  nameWithType: ImageListArray.GetIndex(ImageList)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetIndex(ImageList)
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Windows.Forms.ImageList
  parent: System.Windows.Forms
  isExternal: true
  name: ImageList
  nameWithType: ImageList
  fullName: System.Windows.Forms.ImageList
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.HookUpControlEvents(System.Object)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: HookUpControlEvents(Object)
  nameWithType: ImageListArray.HookUpControlEvents(Object)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.HookUpControlEvents(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.Item(System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: Item(Int16)
  nameWithType: ImageListArray.Item(Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.Item(Int16)
- uid: System.Windows.Forms.ImageList
  parent: System.Windows.Forms
  isExternal: true
  name: ImageList
  nameWithType: ImageList
  fullName: System.Windows.Forms.ImageList
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ResetIndex(System.Windows.Forms.ImageList)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: ResetIndex(ImageList)
  nameWithType: ImageListArray.ResetIndex(ImageList)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ResetIndex(ImageList)
- uid: System.Windows.Forms.ImageList
  parent: System.Windows.Forms
  isExternal: true
  name: ImageList
  nameWithType: ImageList
  fullName: System.Windows.Forms.ImageList
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.SetIndex(System.Windows.Forms.ImageList,System.Int16)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: SetIndex(ImageList,Int16)
  nameWithType: ImageListArray.SetIndex(ImageList,Int16)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.SetIndex(ImageList,Int16)
- uid: System.Windows.Forms.ImageList
  parent: System.Windows.Forms
  isExternal: true
  name: ImageList
  nameWithType: ImageList
  fullName: System.Windows.Forms.ImageList
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ShouldSerializeIndex(System.Windows.Forms.ImageList)
  parent: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray
  isExternal: false
  name: ShouldSerializeIndex(ImageList)
  nameWithType: ImageListArray.ShouldSerializeIndex(ImageList)
  fullName: Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ShouldSerializeIndex(ImageList)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.ImageList
  parent: System.Windows.Forms
  isExternal: true
  name: ImageList
  nameWithType: ImageList
  fullName: System.Windows.Forms.ImageList
