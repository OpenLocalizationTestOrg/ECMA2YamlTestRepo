### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  id: ArgumentToExpressionConverter
  children:
  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor
  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: ArgumentToExpressionConverter
  nameWithType: ArgumentToExpressionConverter
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  type: Class
  summary: Defines the mapping between arguments and expressions and provides the functionality to convert between these objects. Typically, this converter is used declaratively when using an <see cref="T:System.Activities.Presentation.View.ExpressionTextBox"> in a custom activity designer.
  remarks: This converter can also be used imperatively; however, this usage is not recommended.
  example:
  - "The following XAML snippet shows how to use the ArgumentToExpressionConverter in a custom activity designer that uses an ExpressionTextBox.  \n  \n```  \n<sapv:ExpressionTextBox   \n    Expression=\"{Binding Path=ModelItem.SampleValue,   \n                         Mode=TwoWay,   \n                         Converter={StaticResource ArgumentToExpressionConverter},   \n                         ConverterParameter=In }\"  \n    ExpressionType=\"s:String\"  \n    OwnerActivity=\"{Binding Path=ModelItem}\"  \n   />  \n  \n```"
  syntax:
    content: 'public class ArgumentToExpressionConverter : System.Windows.Data.IValueConverter'
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  langs:
  - csharp
  name: ArgumentToExpressionConverter()
  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter()
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ArgumentToExpressionConverter()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: Initializes a new instance of the <see cref="T:System.Activities.Presentation.Converters.ArgumentToExpressionConverter"> class.
  remarks: To be added.
  syntax:
    content: public ArgumentToExpressionConverter ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  langs:
  - csharp
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: Converts the specified argument into an expression.
  remarks: The ,
  syntax:
    content: public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: The value produced by the binding source.
    - id: targetType
      type: System.Type
      description: The type of the binding target property.
    - id: parameter
      type: System.Object
      description: The converter parameter to use.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The <see cref="T:System.Globalization.CultureInfo"> to use in the converter.
    return:
      type: System.Object
      description: "An instance of <see cref=\"T:System.Object\"> that contains the converted Argument.Expression..  \n  \n Contains the converted Argument.Expression."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: Converts the specified Argument.Expression into an argument.
  remarks: To be added.
  syntax:
    content: public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: The Argument.Expression to convert.
    - id: targetType
      type: System.Type
      description: Not implemented.
    - id: parameter
      type: System.Object
      description: Not implemented.
    - id: culture
      type: System.Globalization.CultureInfo
      description: Not implemented.
    return:
      type: System.Object
      description: "Returns <see cref=\"T:System.Object\">.  \n  \n Contains the converted argument."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.#ctor
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  isExternal: false
  name: ArgumentToExpressionConverter()
  nameWithType: ArgumentToExpressionConverter.ArgumentToExpressionConverter()
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ArgumentToExpressionConverter()
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  isExternal: false
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.Convert(Object,Type,Object,CultureInfo)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ArgumentToExpressionConverter
  isExternal: false
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionConverter.ConvertBack(Object,Type,Object,CultureInfo)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
