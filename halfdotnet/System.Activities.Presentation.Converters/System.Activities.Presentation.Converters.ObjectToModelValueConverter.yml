### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Converters.ObjectToModelValueConverter
  id: ObjectToModelValueConverter
  children:
  - System.Activities.Presentation.Converters.ObjectToModelValueConverter.#ctor
  - System.Activities.Presentation.Converters.ObjectToModelValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Activities.Presentation.Converters.ObjectToModelValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: ObjectToModelValueConverter
  nameWithType: ObjectToModelValueConverter
  fullName: System.Activities.Presentation.Converters.ObjectToModelValueConverter
  type: Class
  summary: Converts objects to model values.
  remarks: This class is used in `PropertyGrid` scenarios to convert an object into a `ModelItem`. It converts from a `ModelPropertyEntry` to the `ModelItem` that owns the property.
  syntax:
    content: 'public class ObjectToModelValueConverter : System.Windows.Data.IMultiValueConverter'
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IMultiValueConverter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Converters.ObjectToModelValueConverter.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Converters.ObjectToModelValueConverter
  langs:
  - csharp
  name: ObjectToModelValueConverter()
  nameWithType: ObjectToModelValueConverter.ObjectToModelValueConverter()
  fullName: System.Activities.Presentation.Converters.ObjectToModelValueConverter.ObjectToModelValueConverter()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: Creates a new instance of the <see cref="T:System.Activities.Presentation.Converters.ObjectToModelValueConverter"> class.
  remarks: To be added.
  syntax:
    content: public ObjectToModelValueConverter ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Converters.ObjectToModelValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ObjectToModelValueConverter
  langs:
  - csharp
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: ObjectToModelValueConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ObjectToModelValueConverter.Convert(Object[],Type,Object,CultureInfo)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: Converts the specified `ModelPropertyEntry` to a `ModelItem` that contains the original entry.
  remarks: This method is a two-way binding with the `PropertyValue` object.
  syntax:
    content: public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: values
      type: System.Object[]
      description: The `ModelPropertyEntry` to convert.
    - id: targetType
      type: System.Type
      description: Not used in this implementation.
    - id: parameter
      type: System.Object
      description: Not used in this implementation.
    - id: culture
      type: System.Globalization.CultureInfo
      description: Not used in this implementation.
    return:
      type: System.Object
      description: Returns <see cref="T:System.Object">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Converters.ObjectToModelValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ObjectToModelValueConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: ObjectToModelValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ObjectToModelValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Converters
  summary: Converts the specified `ModelItem` to a `ModelPropertyEntry`.
  remarks: This method is a one-way binding with the `ModelPropertyEntry`.
  syntax:
    content: public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: The `ModelItem` to convert.
    - id: targetTypes
      type: System.Type[]
      description: Not used in this implementation.
    - id: parameter
      type: System.Object
      description: Not used in this implementation.
    - id: culture
      type: System.Globalization.CultureInfo
      description: Not used in this implementation.
    return:
      type: System.Object[]
      description: Returns a <see cref="T:System.Object"> that contains the converted `ModelPropertyEntry`..
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Converters.ObjectToModelValueConverter.#ctor
  parent: System.Activities.Presentation.Converters.ObjectToModelValueConverter
  isExternal: false
  name: ObjectToModelValueConverter()
  nameWithType: ObjectToModelValueConverter.ObjectToModelValueConverter()
  fullName: System.Activities.Presentation.Converters.ObjectToModelValueConverter.ObjectToModelValueConverter()
- uid: System.Activities.Presentation.Converters.ObjectToModelValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ObjectToModelValueConverter
  isExternal: false
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: ObjectToModelValueConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ObjectToModelValueConverter.Convert(Object[],Type,Object,CultureInfo)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Activities.Presentation.Converters.ObjectToModelValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Activities.Presentation.Converters.ObjectToModelValueConverter
  isExternal: false
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: ObjectToModelValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Activities.Presentation.Converters.ObjectToModelValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object[]
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type[]
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
