### YamlMime:ManagedReference
items:
- uid: System.ValueTuple
  id: ValueTuple
  children:
  - System.ValueTuple.CompareTo(System.ValueTuple)
  - System.ValueTuple.Create
  - System.ValueTuple.Create``1(``0)
  - System.ValueTuple.Create``2(``0,``1)
  - System.ValueTuple.Create``3(``0,``1,``2)
  - System.ValueTuple.Create``4(``0,``1,``2,``3)
  - System.ValueTuple.Create``5(``0,``1,``2,``3,``4)
  - System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)
  - System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  - System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  - System.ValueTuple.Equals(System.Object)
  - System.ValueTuple.Equals(System.ValueTuple)
  - System.ValueTuple.GetHashCode
  - System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  - System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  - System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  - System.ValueTuple.System#IComparable#CompareTo(System.Object)
  - System.ValueTuple.ToString
  langs:
  - csharp
  name: ValueTuple
  nameWithType: ValueTuple
  fullName: System.ValueTuple
  type: Struct
  summary: Provides static methods for creating value tuples.
  remarks: "A tuple is a data structure that has a specific number and sequence of elements. An example of a tuple is a data structure with three elements (known as a 3-tuple or triple) that is used to store an identifier such as a person's name in the first element, a year in the second element, and the person's income for that year in the third element.  \n  \n Value tuples are tuple types introduced in the [!INCLUDE[net_v463](../../add/includes/net-v463-md.md)] to provide the runtime implementation of tuples in C# and struct tuples in F#. They differ from the tuple classes, such as  <xref:System.Tuple%601>, <xref:System.Tuple%601>, etc., as follows:  \n  \n-   They are structures (value types) rather than classes (reference types).  \n  \n-   They are mutable rather than read-only. That is, the value of tuple components can change.  \n  \n-   Their data members, such as `Item1`, `Item2`, etc., are fields rather than properties.  \n  \n The ValueTuple structure itself does not represent a value tuple. Instead, it provides static methods for creating instances of value tuple types. It provides helper methods that you can call to instantiate value tuples without having to explicitly specify the type of each value tuple component. By calling its static `Create` methods, you can create value tuples that have from zero to eight components. For value tuples with more than eight components, you must call the <xref:System.ValueTuple%608.%23ctor%2A> constructor."
  syntax:
    content: 'public struct ValueTuple : IComparable, IComparable<ValueTuple>, IEquatable<ValueTuple>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.Collections.IStructuralComparable
  - System.Collections.IStructuralEquatable
  - System.IComparable
  - System.IComparable<System.ValueTuple>
  - System.IEquatable<System.ValueTuple>
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.CompareTo(System.ValueTuple)
  id: CompareTo(System.ValueTuple)
  parent: System.ValueTuple
  langs:
  - csharp
  name: CompareTo(ValueTuple)
  nameWithType: ValueTuple.CompareTo(ValueTuple)
  fullName: System.ValueTuple.CompareTo(ValueTuple)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares the current <see cref="T:System.ValueTuple"> instance with a specified object.
  remarks: To be added.
  syntax:
    content: public int CompareTo (ValueTuple other);
    parameters:
    - id: other
      type: System.ValueTuple
      description: The object to compare with the current instance.
    return:
      type: System.Int32
      description: Returns 0 if  is a <see cref="T:System.ValueTuple"> instance and 1 if  is `null`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Create
  id: Create
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create()
  nameWithType: ValueTuple.Create()
  fullName: System.ValueTuple.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Creates a new value tuple with zero components.
  remarks: To be added.
  syntax:
    content: public static ValueTuple Create ();
    parameters: []
    return:
      type: System.ValueTuple
      description: A new value tuple with no components.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Create``1(``0)
  id: Create``1(``0)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create(T1)
  nameWithType: ValueTuple.Create(T1)
  fullName: System.ValueTuple.Create(T1)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static ValueTuple<T1> Create<T1> (T1 item1);
    parameters:
    - id: item1
      type: T1
      description: To be added.
    return:
      type: System.ValueTuple`1
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Create``2(``0,``1)
  id: Create``2(``0,``1)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create(T1,T2)
  nameWithType: ValueTuple.Create(T1,T2)
  fullName: System.ValueTuple.Create(T1,T2)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static ValueTuple<T1,T2> Create<T1,T2> (T1 item1, T2 item2);
    parameters:
    - id: item1
      type: T1
      description: To be added.
    - id: item2
      type: T2
      description: To be added.
    return:
      type: System.ValueTuple`2
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Create``3(``0,``1,``2)
  id: Create``3(``0,``1,``2)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create(T1,T2,T3)
  nameWithType: ValueTuple.Create(T1,T2,T3)
  fullName: System.ValueTuple.Create(T1,T2,T3)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static ValueTuple<T1,T2,T3> Create<T1,T2,T3> (T1 item1, T2 item2, T3 item3);
    parameters:
    - id: item1
      type: T1
      description: To be added.
    - id: item2
      type: T2
      description: To be added.
    - id: item3
      type: T3
      description: To be added.
    return:
      type: System.ValueTuple`3
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Create``4(``0,``1,``2,``3)
  id: Create``4(``0,``1,``2,``3)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create(T1,T2,T3,T4)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4> Create<T1,T2,T3,T4> (T1 item1, T2 item2, T3 item3, T4 item4);
    parameters:
    - id: item1
      type: T1
      description: To be added.
    - id: item2
      type: T2
      description: To be added.
    - id: item3
      type: T3
      description: To be added.
    - id: item4
      type: T4
      description: To be added.
    return:
      type: System.ValueTuple`4
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Create``5(``0,``1,``2,``3,``4)
  id: Create``5(``0,``1,``2,``3,``4)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create(T1,T2,T3,T4,T5)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4,T5> Create<T1,T2,T3,T4,T5> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);
    parameters:
    - id: item1
      type: T1
      description: To be added.
    - id: item2
      type: T2
      description: To be added.
    - id: item3
      type: T3
      description: To be added.
    - id: item4
      type: T4
      description: To be added.
    - id: item5
      type: T5
      description: To be added.
    return:
      type: System.ValueTuple`5
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)
  id: Create``6(``0,``1,``2,``3,``4,``5)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create(T1,T2,T3,T4,T5,T6)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4,T5,T6> Create<T1,T2,T3,T4,T5,T6> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);
    parameters:
    - id: item1
      type: T1
      description: To be added.
    - id: item2
      type: T2
      description: To be added.
    - id: item3
      type: T3
      description: To be added.
    - id: item4
      type: T4
      description: To be added.
    - id: item5
      type: T5
      description: To be added.
    - id: item6
      type: T6
      description: To be added.
    return:
      type: System.ValueTuple`6
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  id: Create``7(``0,``1,``2,``3,``4,``5,``6)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create(T1,T2,T3,T4,T5,T6,T7)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4,T5,T6,T7> Create<T1,T2,T3,T4,T5,T6,T7> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);
    parameters:
    - id: item1
      type: T1
      description: To be added.
    - id: item2
      type: T2
      description: To be added.
    - id: item3
      type: T3
      description: To be added.
    - id: item4
      type: T4
      description: To be added.
    - id: item5
      type: T5
      description: To be added.
    - id: item6
      type: T6
      description: To be added.
    - id: item7
      type: T7
      description: To be added.
    return:
      type: System.ValueTuple`7
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  id: Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Create(T1,T2,T3,T4,T5,T6,T7,T8)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7,T8)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7,T8)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>> Create<T1,T2,T3,T4,T5,T6,T7,T8> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8);
    parameters:
    - id: item1
      type: T1
      description: To be added.
    - id: item2
      type: T2
      description: To be added.
    - id: item3
      type: T3
      description: To be added.
    - id: item4
      type: T4
      description: To be added.
    - id: item5
      type: T5
      description: To be added.
    - id: item6
      type: T6
      description: To be added.
    - id: item7
      type: T7
      description: To be added.
    - id: item8
      type: T8
      description: To be added.
    return:
      type: System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,System.ValueTuple{T8}}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValueTuple.Equals(Object)
  fullName: System.ValueTuple.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a value that indicates whether the current <see cref="T:System.ValueTuple"> instance is equal to a specified object.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to the current instance.
    return:
      type: System.Boolean
      description: '`true` if  is a <see cref="T:System.ValueTuple"> instance; otherwise, `false`.'
  overload: System.ValueTuple.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.Equals(System.ValueTuple)
  id: Equals(System.ValueTuple)
  parent: System.ValueTuple
  langs:
  - csharp
  name: Equals(ValueTuple)
  nameWithType: ValueTuple.Equals(ValueTuple)
  fullName: System.ValueTuple.Equals(ValueTuple)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether two <see cref="T:System.ValueTuple"> instances are equal. This method always returns `true`.
  remarks: To be added.
  syntax:
    content: public bool Equals (ValueTuple other);
    parameters:
    - id: other
      type: System.ValueTuple
      description: The value tuple to compare with the current instance.
    return:
      type: System.Boolean
      description: This method always returns `true`.
  overload: System.ValueTuple.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.GetHashCode
  id: GetHashCode
  parent: System.ValueTuple
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValueTuple.GetHashCode()
  fullName: System.ValueTuple.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the hash code for the current <see cref="T:System.ValueTuple"> instance.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash code for the current <see cref="T:System.ValueTuple"> instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
  nameWithType: ValueTuple.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
  fullName: System.ValueTuple.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares the current <see cref="T:System.ValueTuple"> instance to a specified object.
  remarks: To be added.
  syntax:
    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);
    parameters:
    - id: other
      type: System.Object
      description: The object to compare with the current instance.
    - id: comparer
      type: System.Collections.IComparer
      description: An object that provides custom rules for comparison. This parameter is ignored.
    return:
      type: System.Int32
      description: Returns 0 if  is a <see cref="T:System.ValueTuple"> instance and 1 if  is `null`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
  fullName: System.ValueTuple.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a value that indicates whether the current <see cref="T:System.ValueTuple"> instance is equal to a specified object based on a specified comparison method.
  remarks: This member is an explicit interface implementation. It can only be used when the <xref:System.ValueTuple>t> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface. The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> implementation is called only if  is not `null`, and if it can be successfully cast to a <xref:System.ValueTuple> object.
  syntax:
    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);
    parameters:
    - id: other
      type: System.Object
      description: The object to compare with this instance.
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: An object that defines the method to use to evaluate whether the two objects are equal.
    return:
      type: System.Boolean
      description: '`true` if the current instance is equal to the specified object; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName: System.ValueTuple.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the hash code for this <see cref="T:System.ValueTuple"> instance.
  remarks: To be added.
  syntax:
    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IEqualityComparer
      description: An object whose <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> method computes the hash code. This parameter is ignored.
    return:
      type: System.Int32
      description: The hash code for this <see cref="T:System.ValueTuple"> instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.System#IComparable#CompareTo(System.Object)
  id: System#IComparable#CompareTo(System.Object)
  isEii: true
  parent: System.ValueTuple
  langs:
  - csharp
  name: System.IComparable.CompareTo(Object)
  nameWithType: ValueTuple.System.IComparable.CompareTo(Object)
  fullName: System.ValueTuple.System.IComparable.CompareTo(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares this <see cref="T:System.ValueTuple"> instance with a specified object and returns an indication of their relative values.
  remarks: To be added.
  syntax:
    content: int IComparable.CompareTo (object other);
    parameters:
    - id: other
      type: System.Object
      description: The object to compare with the current instance
    return:
      type: System.Int32
      description: 0 if  is a <see cref="T:System.ValueTuple"> instance; otherwise, 1 if  is `null`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ValueTuple.ToString
  id: ToString
  parent: System.ValueTuple
  langs:
  - csharp
  name: ToString()
  nameWithType: ValueTuple.ToString()
  fullName: System.ValueTuple.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the string representation of this <see cref="T:System.ValueTuple"> instance.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: This method always returns "()".
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ValueTuple.CompareTo(System.ValueTuple)
  parent: System.ValueTuple
  isExternal: false
  name: CompareTo(ValueTuple)
  nameWithType: ValueTuple.CompareTo(ValueTuple)
  fullName: System.ValueTuple.CompareTo(ValueTuple)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueTuple
  parent: System
  isExternal: false
  name: ValueTuple
  nameWithType: ValueTuple
  fullName: System.ValueTuple
- uid: System.ValueTuple.Create
  parent: System.ValueTuple
  isExternal: false
  name: Create()
  nameWithType: ValueTuple.Create()
  fullName: System.ValueTuple.Create()
- uid: System.ValueTuple
  parent: System
  isExternal: false
  name: ValueTuple
  nameWithType: ValueTuple
  fullName: System.ValueTuple
- uid: System.ValueTuple.Create``1(``0)
  parent: System.ValueTuple
  isExternal: false
  name: Create(T1)
  nameWithType: ValueTuple.Create(T1)
  fullName: System.ValueTuple.Create(T1)
- uid: System.ValueTuple`1
  parent: System
  isExternal: false
  name: ValueTuple<T1>
  nameWithType: ValueTuple<T1>
  fullName: System.ValueTuple<T1>
- uid: T1
  parent: ''
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: System.ValueTuple.Create``2(``0,``1)
  parent: System.ValueTuple
  isExternal: false
  name: Create(T1,T2)
  nameWithType: ValueTuple.Create(T1,T2)
  fullName: System.ValueTuple.Create(T1,T2)
- uid: System.ValueTuple`2
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2>
  nameWithType: ValueTuple<T1,T2>
  fullName: System.ValueTuple<T1,T2>
- uid: T1
  parent: ''
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  parent: ''
  isExternal: true
  name: T2
  nameWithType: T2
  fullName: T2
- uid: System.ValueTuple.Create``3(``0,``1,``2)
  parent: System.ValueTuple
  isExternal: false
  name: Create(T1,T2,T3)
  nameWithType: ValueTuple.Create(T1,T2,T3)
  fullName: System.ValueTuple.Create(T1,T2,T3)
- uid: System.ValueTuple`3
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3>
  nameWithType: ValueTuple<T1,T2,T3>
  fullName: System.ValueTuple<T1,T2,T3>
- uid: T1
  parent: ''
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  parent: ''
  isExternal: true
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  parent: ''
  isExternal: true
  name: T3
  nameWithType: T3
  fullName: T3
- uid: System.ValueTuple.Create``4(``0,``1,``2,``3)
  parent: System.ValueTuple
  isExternal: false
  name: Create(T1,T2,T3,T4)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4)
- uid: System.ValueTuple`4
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4>
  nameWithType: ValueTuple<T1,T2,T3,T4>
  fullName: System.ValueTuple<T1,T2,T3,T4>
- uid: T1
  parent: ''
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  parent: ''
  isExternal: true
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  parent: ''
  isExternal: true
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  parent: ''
  isExternal: true
  name: T4
  nameWithType: T4
  fullName: T4
- uid: System.ValueTuple.Create``5(``0,``1,``2,``3,``4)
  parent: System.ValueTuple
  isExternal: false
  name: Create(T1,T2,T3,T4,T5)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5)
- uid: System.ValueTuple`5
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4,T5>
  nameWithType: ValueTuple<T1,T2,T3,T4,T5>
  fullName: System.ValueTuple<T1,T2,T3,T4,T5>
- uid: T1
  parent: ''
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  parent: ''
  isExternal: true
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  parent: ''
  isExternal: true
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  parent: ''
  isExternal: true
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T5
  parent: ''
  isExternal: true
  name: T5
  nameWithType: T5
  fullName: T5
- uid: System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)
  parent: System.ValueTuple
  isExternal: false
  name: Create(T1,T2,T3,T4,T5,T6)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6)
- uid: System.ValueTuple`6
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4,T5,T6>
  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>
  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>
- uid: T1
  parent: ''
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  parent: ''
  isExternal: true
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  parent: ''
  isExternal: true
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  parent: ''
  isExternal: true
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T5
  parent: ''
  isExternal: true
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T6
  parent: ''
  isExternal: true
  name: T6
  nameWithType: T6
  fullName: T6
- uid: System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)
  parent: System.ValueTuple
  isExternal: false
  name: Create(T1,T2,T3,T4,T5,T6,T7)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7)
- uid: System.ValueTuple`7
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7>
  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7>
  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7>
- uid: T1
  parent: ''
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  parent: ''
  isExternal: true
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  parent: ''
  isExternal: true
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  parent: ''
  isExternal: true
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T5
  parent: ''
  isExternal: true
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T6
  parent: ''
  isExternal: true
  name: T6
  nameWithType: T6
  fullName: T6
- uid: T7
  parent: ''
  isExternal: true
  name: T7
  nameWithType: T7
  fullName: T7
- uid: System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)
  parent: System.ValueTuple
  isExternal: false
  name: Create(T1,T2,T3,T4,T5,T6,T7,T8)
  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7,T8)
  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7,T8)
- uid: System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,System.ValueTuple{T8}}
  parent: System
  isExternal: false
  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>
  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>
  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,System.ValueTuple<T8>>
- uid: T1
  parent: ''
  isExternal: true
  name: T1
  nameWithType: T1
  fullName: T1
- uid: T2
  parent: ''
  isExternal: true
  name: T2
  nameWithType: T2
  fullName: T2
- uid: T3
  parent: ''
  isExternal: true
  name: T3
  nameWithType: T3
  fullName: T3
- uid: T4
  parent: ''
  isExternal: true
  name: T4
  nameWithType: T4
  fullName: T4
- uid: T5
  parent: ''
  isExternal: true
  name: T5
  nameWithType: T5
  fullName: T5
- uid: T6
  parent: ''
  isExternal: true
  name: T6
  nameWithType: T6
  fullName: T6
- uid: T7
  parent: ''
  isExternal: true
  name: T7
  nameWithType: T7
  fullName: T7
- uid: T8
  parent: ''
  isExternal: true
  name: T8
  nameWithType: T8
  fullName: T8
- uid: System.ValueTuple.Equals(System.Object)
  parent: System.ValueTuple
  isExternal: false
  name: Equals(Object)
  nameWithType: ValueTuple.Equals(Object)
  fullName: System.ValueTuple.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ValueTuple.Equals(System.ValueTuple)
  parent: System.ValueTuple
  isExternal: false
  name: Equals(ValueTuple)
  nameWithType: ValueTuple.Equals(ValueTuple)
  fullName: System.ValueTuple.Equals(ValueTuple)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueTuple
  parent: System
  isExternal: false
  name: ValueTuple
  nameWithType: ValueTuple
  fullName: System.ValueTuple
- uid: System.ValueTuple.GetHashCode
  parent: System.ValueTuple
  isExternal: false
  name: GetHashCode()
  nameWithType: ValueTuple.GetHashCode()
  fullName: System.ValueTuple.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)
  parent: System.ValueTuple
  isExternal: false
  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
  nameWithType: ValueTuple.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
  fullName: System.ValueTuple.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)
  parent: System.ValueTuple
  isExternal: false
  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
  fullName: System.ValueTuple.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)
  parent: System.ValueTuple
  isExternal: false
  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
  fullName: System.ValueTuple.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: false
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.ValueTuple.System#IComparable#CompareTo(System.Object)
  parent: System.ValueTuple
  isExternal: false
  name: System.IComparable.CompareTo(Object)
  nameWithType: ValueTuple.System.IComparable.CompareTo(Object)
  fullName: System.ValueTuple.System.IComparable.CompareTo(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ValueTuple.ToString
  parent: System.ValueTuple
  isExternal: false
  name: ToString()
  nameWithType: ValueTuple.ToString()
  fullName: System.ValueTuple.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueTuple.Equals*
  parent: System.ValueTuple
  isExternal: false
  nameWithType: ValueTuple.
