### YamlMime:ManagedReference
items:
- uid: System.DivideByZeroException
  id: DivideByZeroException
  children:
  - System.DivideByZeroException.#ctor
  - System.DivideByZeroException.#ctor(System.String)
  - System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.DivideByZeroException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: DivideByZeroException
  nameWithType: DivideByZeroException
  fullName: System.DivideByZeroException
  type: Class
  summary: The exception that is thrown when there is an attempt to divide an integral or <see cref="T:System.Decimal"> value by zero.
  remarks: "Trying to divide an integer or <xref:System.Decimal> number by zero throws a DivideByZeroException exception. To prevent the exception, ensure that the denominator in a division operation with integer or <xref:System.Decimal> values is non-zero.  \n  \n Dividing a floating-point value by zero doesn't throw an exception; it results in positive infinity, negative infinity, or not a number (NaN), according to the rules of IEEE 754 arithmetic. Because the following example uses floating-point division rather than integer division, the operation does not throw a DivideByZeroException exception.  \n  \n [!CODE [System.DivideByZeroException.Class#2](../CodeSnippet/VS_Snippets_CLR_System/system.dividebyzeroexception.class#2)]  \n  \n For more information, see <xref:System.Single> and <xref:System.Double>.  \n  \n The following Microsoft intermediate language (MSIL) instructions throw DivideByZeroException:  \n  \n-   div  \n  \n-   div.un  \n  \n-   rem  \n  \n-   rem.un  \n  \n DivideByZeroException uses the HRESULT COR_E_DIVIDEBYZERO, which has the value 0x80020012.  \n  \n For a list of initial property values for an instance of DivideByZeroException, see the <xref:System.DivideByZeroException.%23ctor%2A> constructors."
  example:
  - "The following example handles a DivideByZeroException exception in integer division.  \n  \n [!CODE [System.DivideByZeroException.Class#1](../CodeSnippet/VS_Snippets_CLR_System/system.dividebyzeroexception.class#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DivideByZeroException : ArithmeticException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.ArithmeticException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DivideByZeroException.#ctor
  id: '#ctor'
  parent: System.DivideByZeroException
  langs:
  - csharp
  name: DivideByZeroException()
  nameWithType: DivideByZeroException.DivideByZeroException()
  fullName: System.DivideByZeroException.DivideByZeroException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.DivideByZeroException"> class.
  remarks: "This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to divide by zero.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  syntax:
    content: public DivideByZeroException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DivideByZeroException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DivideByZeroException
  langs:
  - csharp
  name: DivideByZeroException(String)
  nameWithType: DivideByZeroException.DivideByZeroException(String)
  fullName: System.DivideByZeroException.DivideByZeroException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.DivideByZeroException"> class with a specified error message.
  remarks: "The content of  is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public DivideByZeroException (string message);
    parameters:
    - id: message
      type: System.String
      description: A <see cref="T:System.String"> that describes the error.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.DivideByZeroException
  langs:
  - csharp
  name: DivideByZeroException(SerializationInfo,StreamingContext)
  nameWithType: DivideByZeroException.DivideByZeroException(SerializationInfo,StreamingContext)
  fullName: System.DivideByZeroException.DivideByZeroException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.DivideByZeroException"> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
  syntax:
    content: protected DivideByZeroException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DivideByZeroException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.DivideByZeroException
  langs:
  - csharp
  name: DivideByZeroException(String,Exception)
  nameWithType: DivideByZeroException.DivideByZeroException(String,Exception)
  fullName: System.DivideByZeroException.DivideByZeroException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.DivideByZeroException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \n  \n|Property Type|Condition|  \n|-------------------|---------------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public DivideByZeroException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ArithmeticException
  isExternal: false
  name: System.ArithmeticException
- uid: System.DivideByZeroException.#ctor
  parent: System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException()
  nameWithType: DivideByZeroException.DivideByZeroException()
  fullName: System.DivideByZeroException.DivideByZeroException()
- uid: System.DivideByZeroException.#ctor(System.String)
  parent: System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException(String)
  nameWithType: DivideByZeroException.DivideByZeroException(String)
  fullName: System.DivideByZeroException.DivideByZeroException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException(SerializationInfo,StreamingContext)
  nameWithType: DivideByZeroException.DivideByZeroException(SerializationInfo,StreamingContext)
  fullName: System.DivideByZeroException.DivideByZeroException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.DivideByZeroException.#ctor(System.String,System.Exception)
  parent: System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException(String,Exception)
  nameWithType: DivideByZeroException.DivideByZeroException(String,Exception)
  fullName: System.DivideByZeroException.DivideByZeroException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
