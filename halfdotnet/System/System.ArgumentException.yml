### YamlMime:ManagedReference
items:
- uid: System.ArgumentException
  id: ArgumentException
  children:
  - System.ArgumentException.#ctor
  - System.ArgumentException.#ctor(System.String)
  - System.ArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ArgumentException.#ctor(System.String,System.Exception)
  - System.ArgumentException.#ctor(System.String,System.String)
  - System.ArgumentException.#ctor(System.String,System.String,System.Exception)
  - System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.ArgumentException.Message
  - System.ArgumentException.ParamName
  langs:
  - csharp
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
  type: Class
  summary: The exception that is thrown when one of the arguments provided to a method is not valid.
  remarks: "ArgumentException is thrown when a method is invoked and at least one of the passed arguments does not meet the parameter specification of the called method. The <xref:System.ArgumentException.ParamName%2A> property identifies the invalid argument.  \n  \n Most commonly, an ArgumentException is thrown by the common language runtime or another class library and indicates developer error. If you throw an ArgumentException from your code, you should ensure that the exception's <xref:System.ArgumentException.Message%2A> property includes a meaningful error message that describes the invalid argument and the expected range of values for the argument.  \n  \n The primary derived classes of ArgumentException are <xref:System.ArgumentNullException> and <xref:System.ArgumentOutOfRangeException>. These derived classes should be used instead of ArgumentException, except in situations where neither of the derived classes is acceptable. For example, exceptions should be thrown by:  \n  \n-   <xref:System.ArgumentNullException> whenever `null` is passed to a method that does not accept it as a valid argument.  \n  \n-   <xref:System.ArgumentOutOfRangeException> when the value of an argument is outside the range of acceptable values; for example, when the value \"46\" is passed as the month argument during the creation of a <xref:System.DateTime>.  \n  \n If the method call does not have any argument or if the failure does not involve the arguments themselves, then <xref:System.InvalidOperationException> should be used.  \n  \n ArgumentException uses the HRESULT COR_E_ARGUMENT, which has the value 0x80070057.  \n  \n For a list of initial property values for an instance of ArgumentException, see the ArgumentException constructors."
  example:
  - "The following example demonstrates how to throw and catch an ArgumentException. It uses the [ArgumentException.GetType().Name](../../xml\\Microsoft.SqlServer.Server\\SqlFunctionAttribute.xml) property to display the name of the exception object, and also uses the <xref:System.ArgumentException.Message%2A> property to display the text of the exception message.  \n  \n [!CODE [ArgumentException#3](../CodeSnippet/VS_Snippets_CLR/ArgumentException#3)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ArgumentException : SystemException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ArgumentException.#ctor
  id: '#ctor'
  parent: System.ArgumentException
  langs:
  - csharp
  name: ArgumentException()
  nameWithType: ArgumentException.ArgumentException()
  fullName: System.ArgumentException.ArgumentException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.ArgumentException"> class.
  remarks: "This constructor initializes the <xref:System.ArgumentException.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"An invalid argument was specified.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.ArgumentException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  syntax:
    content: public ArgumentException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ArgumentException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ArgumentException
  langs:
  - csharp
  name: ArgumentException(String)
  nameWithType: ArgumentException.ArgumentException(String)
  fullName: System.ArgumentException.ArgumentException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.ArgumentException"> class with a specified error message.
  remarks: "This constructor initializes the <xref:System.ArgumentException.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"An invalid argument was specified.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.ArgumentException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.ArgumentException.Message%2A>|The error message string.|"
  syntax:
    content: public ArgumentException (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.ArgumentException
  langs:
  - csharp
  name: ArgumentException(SerializationInfo,StreamingContext)
  nameWithType: ArgumentException.ArgumentException(SerializationInfo,StreamingContext)
  fullName: System.ArgumentException.ArgumentException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.ArgumentException"> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](../Topic/XML%20and%20SOAP%20Serialization.md).
  syntax:
    content: protected ArgumentException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ArgumentException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.ArgumentException
  langs:
  - csharp
  name: ArgumentException(String,Exception)
  nameWithType: ArgumentException.ArgumentException(String,Exception)
  fullName: System.ArgumentException.ArgumentException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.ArgumentException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "This constructor initializes the <xref:System.ArgumentException.Message%2A> property of the new instance using the value of the  parameter. The content of the  parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.ArgumentException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|`Message`|The error message string.|"
  syntax:
    content: public ArgumentException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not a null reference, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ArgumentException.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ArgumentException
  langs:
  - csharp
  name: ArgumentException(String,String)
  nameWithType: ArgumentException.ArgumentException(String,String)
  fullName: System.ArgumentException.ArgumentException(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.ArgumentException"> class with a specified error message and the name of the parameter that causes this exception.
  remarks: "This constructor initializes the <xref:System.ArgumentException.Message%2A> property of the new instance using the value of the  parameter. The content of the  parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n This constructor initializes the <xref:System.ArgumentException.ParamName%2A> property of the new instance using . The content of  is intended to be understood by humans.  \n  \n The following table shows the initial property values for an instance of <xref:System.ArgumentException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.ArgumentException.Message%2A>|The error message string.|  \n|<xref:System.ArgumentException.ParamName%2A>|The parameter name string.|"
  example:
  - "The following code example demonstrates how to call the ArgumentException constructor. This code example is part of a larger example provided for the <xref:System.ArgumentException> class.  \n  \n [!CODE [ArgumentException#2](../CodeSnippet/VS_Snippets_CLR/ArgumentException#2)]"
  syntax:
    content: public ArgumentException (string message, string paramName);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: paramName
      type: System.String
      description: The name of the parameter that caused the current exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ArgumentException.#ctor(System.String,System.String,System.Exception)
  id: '#ctor(System.String,System.String,System.Exception)'
  parent: System.ArgumentException
  langs:
  - csharp
  name: ArgumentException(String,String,Exception)
  nameWithType: ArgumentException.ArgumentException(String,String,Exception)
  fullName: System.ArgumentException.ArgumentException(String,String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.ArgumentException"> class with a specified error message, the parameter name, and a reference to the inner exception that is the cause of this exception.
  remarks: "This constructor initializes the <xref:System.ArgumentException.Message%2A> property of the new instance using the value of the  parameter. The content of the  parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n This constructor initializes the <xref:System.ArgumentException.ParamName%2A> property of the new instance using . The content of  is intended to be understood by humans.  \n  \n An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.ArgumentException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|`Message`|The error message string.|  \n|`ParamName`|The parameter name string.|"
  syntax:
    content: public ArgumentException (string message, string paramName, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: paramName
      type: System.String
      description: The name of the parameter that caused the current exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not a null reference, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ArgumentException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ArgumentException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ArgumentException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"> object with the parameter name and additional exception information.
  remarks: "GetObjectData sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization. During deserialization, the exception object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.  \n  \n For more information, see <xref:System.Runtime.Serialization.SerializationInfo>."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ArgumentException.Message
  id: Message
  parent: System.ArgumentException
  langs:
  - csharp
  name: Message
  nameWithType: ArgumentException.Message
  fullName: System.ArgumentException.Message
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the error message and the parameter name, or only the error message if no parameter name is set.
  remarks: This property overrides <xref:System.Exception.Message%2A>. The error message should be localized.
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ArgumentException.ParamName
  id: ParamName
  parent: System.ArgumentException
  langs:
  - csharp
  name: ParamName
  nameWithType: ArgumentException.ParamName
  fullName: System.ArgumentException.ParamName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the name of the parameter that causes this exception.
  remarks: "Every <xref:System.ArgumentException> should carry the name of the parameter that causes this exception.  \n  \n This property is read-only, and returns the same value as was passed into the constructor. Overriding methods should be used solely to customize the format of the parameter name.  \n  \n The parameter name should not be translated for localization purposes."
  syntax:
    content: public virtual string ParamName { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.ArgumentException.#ctor
  parent: System.ArgumentException
  isExternal: false
  name: ArgumentException()
  nameWithType: ArgumentException.ArgumentException()
  fullName: System.ArgumentException.ArgumentException()
- uid: System.ArgumentException.#ctor(System.String)
  parent: System.ArgumentException
  isExternal: false
  name: ArgumentException(String)
  nameWithType: ArgumentException.ArgumentException(String)
  fullName: System.ArgumentException.ArgumentException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ArgumentException
  isExternal: false
  name: ArgumentException(SerializationInfo,StreamingContext)
  nameWithType: ArgumentException.ArgumentException(SerializationInfo,StreamingContext)
  fullName: System.ArgumentException.ArgumentException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ArgumentException.#ctor(System.String,System.Exception)
  parent: System.ArgumentException
  isExternal: false
  name: ArgumentException(String,Exception)
  nameWithType: ArgumentException.ArgumentException(String,Exception)
  fullName: System.ArgumentException.ArgumentException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ArgumentException.#ctor(System.String,System.String)
  parent: System.ArgumentException
  isExternal: false
  name: ArgumentException(String,String)
  nameWithType: ArgumentException.ArgumentException(String,String)
  fullName: System.ArgumentException.ArgumentException(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentException.#ctor(System.String,System.String,System.Exception)
  parent: System.ArgumentException
  isExternal: false
  name: ArgumentException(String,String,Exception)
  nameWithType: ArgumentException.ArgumentException(String,String,Exception)
  fullName: System.ArgumentException.ArgumentException(String,String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ArgumentException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ArgumentException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ArgumentException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ArgumentException.Message
  parent: System.ArgumentException
  isExternal: false
  name: Message
  nameWithType: ArgumentException.Message
  fullName: System.ArgumentException.Message
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ArgumentException.ParamName
  parent: System.ArgumentException
  isExternal: false
  name: ParamName
  nameWithType: ArgumentException.ParamName
  fullName: System.ArgumentException.ParamName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
