### YamlMime:ManagedReference
items:
- uid: System.ArraySegment`1
  id: ArraySegment`1
  children:
  - System.ArraySegment`1.#ctor(`0[])
  - System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)
  - System.ArraySegment`1.Array
  - System.ArraySegment`1.Count
  - System.ArraySegment`1.Equals(System.ArraySegment{`0})
  - System.ArraySegment`1.Equals(System.Object)
  - System.ArraySegment`1.GetHashCode
  - System.ArraySegment`1.Offset
  - System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})
  - System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})
  - System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Add(`0)
  - System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Clear
  - System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Contains(`0)
  - System.ArraySegment`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)
  - System.ArraySegment`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  - System.ArraySegment`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.ArraySegment`1.System#Collections#Generic#IList{T}#IndexOf(`0)
  - System.ArraySegment`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  - System.ArraySegment`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  - System.ArraySegment`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  - System.ArraySegment`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)
  - System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  type: Struct
  syntax:
    content: 'public struct ArraySegment<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.IReadOnlyList<T>'
    typeParameters:
    - id: T
      description: Parameter description to be filled
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.Collections.Generic.ICollection<T>
  - System.Collections.Generic.IEnumerable<T>
  - System.Collections.Generic.IList<T>
  - System.Collections.Generic.IReadOnlyCollection<T>
  - System.Collections.Generic.IReadOnlyList<T>
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.ValueType.ToString
- uid: System.ArraySegment`1.#ctor(`0[])
  id: '#ctor(`0[])'
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: ArraySegment<T>..ctor
  fullName: System.ArraySegment<T>..ctor
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public ArraySegment (T[] array);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
- uid: System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)
  id: '#ctor(`0[],System.Int32,System.Int32)'
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: ArraySegment<T>..ctor
  fullName: System.ArraySegment<T>..ctor
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public ArraySegment (T[] array, int offset, int count);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
    - id: offset
      type: System.Int32
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
- uid: System.ArraySegment`1.Array
  id: Array
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: Array
  nameWithType: ArraySegment<T>.Array
  fullName: System.ArraySegment<T>.Array
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public T[] Array { get; }
    return:
      type: T[]
      description: Return description to be filled
- uid: System.ArraySegment`1.Count
  id: Count
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ArraySegment<T>.Count
  fullName: System.ArraySegment<T>.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.ArraySegment`1.Equals(System.ArraySegment{`0})
  id: Equals(System.ArraySegment{`0})
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: Equals
  nameWithType: ArraySegment<T>.Equals
  fullName: System.ArraySegment<T>.Equals
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public bool Equals (ArraySegment<T> obj);
    parameters:
    - id: obj
      type: System.ArraySegment{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.ArraySegment`1.Equals*
- uid: System.ArraySegment`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: Equals
  nameWithType: ArraySegment<T>.Equals
  fullName: System.ArraySegment<T>.Equals
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.ArraySegment`1.Equals*
- uid: System.ArraySegment`1.GetHashCode
  id: GetHashCode
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: GetHashCode
  nameWithType: ArraySegment<T>.GetHashCode
  fullName: System.ArraySegment<T>.GetHashCode
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.ArraySegment`1.Offset
  id: Offset
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: ArraySegment<T>.Offset
  fullName: System.ArraySegment<T>.Offset
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public int Offset { get; }
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})
  id: op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: op_Equality
  nameWithType: ArraySegment<T>.op_Equality
  fullName: System.ArraySegment<T>.op_Equality
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static bool op_Equality (ArraySegment<T> a, ArraySegment<T> b);
    parameters:
    - id: a
      type: System.ArraySegment{T}
      description: Parameter description to be filled
    - id: b
      type: System.ArraySegment{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})
  id: op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: op_Inequality
  nameWithType: ArraySegment<T>.op_Inequality
  fullName: System.ArraySegment<T>.op_Inequality
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static bool op_Inequality (ArraySegment<T> a, ArraySegment<T> b);
    parameters:
    - id: a
      type: System.ArraySegment{T}
      description: Parameter description to be filled
    - id: b
      type: System.ArraySegment{T}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Add(`0)
  id: System#Collections#Generic#ICollection{T}#Add(`0)
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<T>.Add
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.Add
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.Add
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: void ICollection<T>.Add (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Clear
  id: System#Collections#Generic#ICollection{T}#Clear
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<T>.Clear
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.Clear
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.Clear
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: void ICollection<T>.Clear ();
    parameters: []
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Contains(`0)
  id: System#Collections#Generic#ICollection{T}#Contains(`0)
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<T>.Contains
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.Contains
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.Contains
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: bool ICollection<T>.Contains (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)
  id: System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<T>.CopyTo
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.CopyTo
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.CopyTo
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: void ICollection<T>.CopyTo (T[] array, int arrayIndex);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  id: System#Collections#Generic#ICollection{T}#Remove(`0)
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.ICollection<T>.Remove
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.Remove
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.Remove
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: bool ICollection<T>.Remove (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType: ArraySegment<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName: System.ArraySegment<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{T}
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#IList{T}#IndexOf(`0)
  id: System#Collections#Generic#IList{T}#IndexOf(`0)
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IList<T>.IndexOf
  nameWithType: ArraySegment<T>.System.Collections.Generic.IList<T>.IndexOf
  fullName: System.ArraySegment<T>.System.Collections.Generic.IList<T>.IndexOf
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: int IList<T>.IndexOf (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  id: System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IList<T>.Insert
  nameWithType: ArraySegment<T>.System.Collections.Generic.IList<T>.Insert
  fullName: System.ArraySegment<T>.System.Collections.Generic.IList<T>.Insert
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: void IList<T>.Insert (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  id: System#Collections#Generic#IList{T}#Item(System.Int32)
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IList<T>.Item
  nameWithType: ArraySegment<T>.System.Collections.Generic.IList<T>.Item
  fullName: System.ArraySegment<T>.System.Collections.Generic.IList<T>.Item
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: T System.Collections.Generic.IList<T>.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: T
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  id: System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IList<T>.RemoveAt
  nameWithType: ArraySegment<T>.System.Collections.Generic.IList<T>.RemoveAt
  fullName: System.ArraySegment<T>.System.Collections.Generic.IList<T>.RemoveAt
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: void IList<T>.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)
  id: System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IReadOnlyList<T>.Item
  nameWithType: ArraySegment<T>.System.Collections.Generic.IReadOnlyList<T>.Item
  fullName: System.ArraySegment<T>.System.Collections.Generic.IReadOnlyList<T>.Item
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: T System.Collections.Generic.IReadOnlyList<T>.Item[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: T
      description: Return description to be filled
- uid: System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.ArraySegment`1
  langs:
  - csharp
  - vb
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ArraySegment<T>.System.Collections.IEnumerable.GetEnumerator
  fullName: System.ArraySegment<T>.System.Collections.IEnumerable.GetEnumerator
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Return description to be filled
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ArraySegment`1.#ctor(`0[])
  parent: System.ArraySegment`1
  isExternal: false
  name: .ctor
  nameWithType: ArraySegment<T>..ctor
  fullName: System.ArraySegment<T>..ctor
- uid: System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)
  parent: System.ArraySegment`1
  isExternal: false
  name: .ctor
  nameWithType: ArraySegment<T>..ctor
  fullName: System.ArraySegment<T>..ctor
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.Array
  parent: System.ArraySegment`1
  isExternal: false
  name: Array
  nameWithType: ArraySegment<T>.Array
  fullName: System.ArraySegment<T>.Array
- uid: System.ArraySegment`1.Count
  parent: System.ArraySegment`1
  isExternal: false
  name: Count
  nameWithType: ArraySegment<T>.Count
  fullName: System.ArraySegment<T>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.Equals(System.ArraySegment{`0})
  parent: System.ArraySegment`1
  isExternal: false
  name: Equals
  nameWithType: ArraySegment<T>.Equals
  fullName: System.ArraySegment<T>.Equals
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArraySegment`1
  parent: System
  isExternal: false
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
- uid: System.ArraySegment`1.Equals(System.Object)
  parent: System.ArraySegment`1
  isExternal: false
  name: Equals
  nameWithType: ArraySegment<T>.Equals
  fullName: System.ArraySegment<T>.Equals
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArraySegment`1.GetHashCode
  parent: System.ArraySegment`1
  isExternal: false
  name: GetHashCode
  nameWithType: ArraySegment<T>.GetHashCode
  fullName: System.ArraySegment<T>.GetHashCode
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.Offset
  parent: System.ArraySegment`1
  isExternal: false
  name: Offset
  nameWithType: ArraySegment<T>.Offset
  fullName: System.ArraySegment<T>.Offset
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.op_Equality(System.ArraySegment{`0},System.ArraySegment{`0})
  parent: System.ArraySegment`1
  isExternal: false
  name: op_Equality
  nameWithType: ArraySegment<T>.op_Equality
  fullName: System.ArraySegment<T>.op_Equality
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArraySegment`1
  parent: System
  isExternal: false
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
- uid: System.ArraySegment`1
  parent: System
  isExternal: false
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
- uid: System.ArraySegment`1.op_Inequality(System.ArraySegment{`0},System.ArraySegment{`0})
  parent: System.ArraySegment`1
  isExternal: false
  name: op_Inequality
  nameWithType: ArraySegment<T>.op_Inequality
  fullName: System.ArraySegment<T>.op_Inequality
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArraySegment`1
  parent: System
  isExternal: false
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
- uid: System.ArraySegment`1
  parent: System
  isExternal: false
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Add(`0)
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.Add
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.Add
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.Add
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Clear
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.Clear
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.Clear
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.Clear
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Contains(`0)
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.Contains
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.Contains
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.Contains
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.CopyTo
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.CopyTo
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.CopyTo
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArraySegment`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.ICollection<T>.Remove
  nameWithType: ArraySegment<T>.System.Collections.Generic.ICollection<T>.Remove
  fullName: System.ArraySegment<T>.System.Collections.Generic.ICollection<T>.Remove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ArraySegment`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType: ArraySegment<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName: System.ArraySegment<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.ArraySegment`1.System#Collections#Generic#IList{T}#IndexOf(`0)
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.IList<T>.IndexOf
  nameWithType: ArraySegment<T>.System.Collections.Generic.IList<T>.IndexOf
  fullName: System.ArraySegment<T>.System.Collections.Generic.IList<T>.IndexOf
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.IList<T>.Insert
  nameWithType: ArraySegment<T>.System.Collections.Generic.IList<T>.Insert
  fullName: System.ArraySegment<T>.System.Collections.Generic.IList<T>.Insert
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.IList<T>.Item
  nameWithType: ArraySegment<T>.System.Collections.Generic.IList<T>.Item
  fullName: System.ArraySegment<T>.System.Collections.Generic.IList<T>.Item
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.IList<T>.RemoveAt
  nameWithType: ArraySegment<T>.System.Collections.Generic.IList<T>.RemoveAt
  fullName: System.ArraySegment<T>.System.Collections.Generic.IList<T>.RemoveAt
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.System#Collections#Generic#IReadOnlyList{T}#Item(System.Int32)
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.Generic.IReadOnlyList<T>.Item
  nameWithType: ArraySegment<T>.System.Collections.Generic.IReadOnlyList<T>.Item
  fullName: System.ArraySegment<T>.System.Collections.Generic.IReadOnlyList<T>.Item
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArraySegment`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.ArraySegment`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ArraySegment<T>.System.Collections.IEnumerable.GetEnumerator
  fullName: System.ArraySegment<T>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ArraySegment`1.Equals
  parent: System.ArraySegment`1
  isExternal: false
  name: Equals
  nameWithType: ArraySegment<T>.Equals
