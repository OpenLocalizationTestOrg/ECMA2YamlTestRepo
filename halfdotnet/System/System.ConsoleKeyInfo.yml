### YamlMime:ManagedReference
items:
- uid: System.ConsoleKeyInfo
  id: ConsoleKeyInfo
  children:
  - System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  - System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.Equals(System.Object)
  - System.ConsoleKeyInfo.GetHashCode
  - System.ConsoleKeyInfo.Key
  - System.ConsoleKeyInfo.KeyChar
  - System.ConsoleKeyInfo.Modifiers
  - System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  - System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  langs:
  - csharp
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
  type: Struct
  summary: Describes the console key that was pressed, including the character represented by the console key and the state of the SHIFT, ALT, and CTRL modifier keys.
  remarks: "The ConsoleKeyInfo type is not intended to be created by users. Instead, it is returned to the user in response to calling the <xref:System.Console.ReadKey%2A?displayProperty=fullName> method.  \n  \n The ConsoleKeyInfo object describes the <xref:System.ConsoleKey> constant and Unicode character, if any, that correspond to the pressed console key. The ConsoleKeyInfo object also describes, in a bitwise combination of <xref:System.ConsoleModifiers> values, whether one or more SHIFT, ALT, or CTRL modifier keys was pressed simultaneously with the console key."
  example:
  - "The following example demonstrates using a ConsoleKeyInfo object in a read operation.  \n  \n [!CODE [console.readkey1#1](../CodeSnippet/VS_Snippets_CLR/console.readkey1#1)]"
  syntax:
    content: public struct ConsoleKeyInfo
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)'
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.ConsoleKeyInfo"> structure using the specified character, console key, and modifier keys.
  remarks: "This type is not intended to be created by users. Instead, it is returned to the user in response to calling the <xref:System.Console.ReadKey%2A?displayProperty=fullName> method.  \n  \n The <xref:System.ConsoleKeyInfo> type does not specify whether the left or right SHIFT, ALT, or CTRL modifier key was pressed."
  syntax:
    content: public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);
    parameters:
    - id: keyChar
      type: System.Char
      description: The Unicode character that corresponds to the  parameter.
    - id: key
      type: System.ConsoleKey
      description: The console key that corresponds to the  parameter.
    - id: shift
      type: System.Boolean
      description: '`true` to indicate that a SHIFT key was pressed; otherwise, `false`.'
    - id: alt
      type: System.Boolean
      description: '`true` to indicate that an ALT key was pressed; otherwise, `false`.'
    - id: control
      type: System.Boolean
      description: '`true` to indicate that a CTRL key was pressed; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  id: Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a value indicating whether the specified <see cref="T:System.ConsoleKeyInfo"> object is equal to the current <see cref="T:System.ConsoleKeyInfo"> object.
  remarks: "Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.  \n  \n The Equals method performs slightly better than the <xref:System.ConsoleKeyInfo.Equals%28System.Object%29?displayProperty=fullName> method because it does not have to convert  to an object."
  syntax:
    content: public bool Equals (ConsoleKeyInfo obj);
    parameters:
    - id: obj
      type: System.ConsoleKeyInfo
      description: An object to compare to the current <see cref="T:System.ConsoleKeyInfo"> object.
    return:
      type: System.Boolean
      description: '`true` if  is equal to the current <see cref="T:System.ConsoleKeyInfo"> object; otherwise, `false`.'
  overload: System.ConsoleKeyInfo.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a value indicating whether the specified object is equal to the current <see cref="T:System.ConsoleKeyInfo"> object.
  remarks: Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.
  example:
  - "The following example demonstrates the Equals method.  \n  \n [!CODE [system.ConsoleKeyInfo.Equals#1](../CodeSnippet/VS_Snippets_CLR_System/system.ConsoleKeyInfo.Equals#1)]"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: An object to compare to the current <see cref="T:System.ConsoleKeyInfo"> object.
    return:
      type: System.Boolean
      description: '`true` if  is a <see cref="T:System.ConsoleKeyInfo"> object and is equal to the current <see cref="T:System.ConsoleKeyInfo"> object; otherwise, `false`.'
  overload: System.ConsoleKeyInfo.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ConsoleKeyInfo.GetHashCode
  id: GetHashCode
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the hash code for the current <see cref="T:System.ConsoleKeyInfo"> object.
  remarks: The value returned by the GetHashCode method is not suitable for distinguishing one <xref:System.ConsoleKeyInfo> object from another. If your application needs a unique hash code, override the GetHashCode method with your own method.
  example:
  - "The following example demonstrates the GetHashCode method.  \n  \n [!CODE [System.ConsoleKeyInfo.GetHashCode#1](../CodeSnippet/VS_Snippets_CLR_System/system.ConsoleKeyInfo.GetHashcode#1)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ConsoleKeyInfo.Key
  id: Key
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the console key represented by the current <see cref="T:System.ConsoleKeyInfo"> object.
  remarks: ''
  example:
  - "The following example demonstrates using a Key property in a read operation.  \n  \n [!CODE [console.readkey1#1](../CodeSnippet/VS_Snippets_CLR/console.readkey1#1)]"
  syntax:
    content: public ConsoleKey Key { get; }
    return:
      type: System.ConsoleKey
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ConsoleKeyInfo.KeyChar
  id: KeyChar
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the Unicode character represented by the current <see cref="T:System.ConsoleKeyInfo"> object.
  remarks: If the key pressed does not map to a Unicode character (for example, if the user presses the **F1** key or the **Home** key), the value of the KeyChar property is \U0000.
  example:
  - "The following example uses the KeyChar property to add the characters input by the user into a string. The example ignores special keys other than **ENTER**, **ESC**, and **BACKSPACE**.  \n  \n [!CODE [System.ConsoleKeyInfo.KeyChar#1](../CodeSnippet/VS_Snippets_CLR_System/system.consolekeyinfo.keychar#1)]"
  syntax:
    content: public char KeyChar { get; }
    return:
      type: System.Char
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ConsoleKeyInfo.Modifiers
  id: Modifiers
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a bitwise combination of <xref:System.ConsoleModifiers?displayProperty=fullName> values that specifies one or more modifier keys pressed simultaneously with the console key.
  remarks: ''
  example:
  - "The following example demonstrates using a Modifiers property in a read operation.  \n  \n [!CODE [console.readkey1#1](../CodeSnippet/VS_Snippets_CLR/console.readkey1#1)]"
  syntax:
    content: public ConsoleModifiers Modifiers { get; }
    return:
      type: System.ConsoleModifiers
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether the specified <see cref="T:System.ConsoleKeyInfo"> objects are equal.
  remarks: Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.
  syntax:
    content: public static bool op_Equality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: The first object to compare.
    - id: b
      type: System.ConsoleKeyInfo
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if  is equal to ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  id: op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  langs:
  - csharp
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether the specified <see cref="T:System.ConsoleKeyInfo"> objects are not equal.
  remarks: Two <xref:System.ConsoleKeyInfo> objects are equal if their corresponding <xref:System.ConsoleKeyInfo.KeyChar%2A>, <xref:System.ConsoleKeyInfo.Key%2A>, and <xref:System.ConsoleKeyInfo.Modifiers%2A> properties are equal.
  syntax:
    content: public static bool op_Inequality (ConsoleKeyInfo a, ConsoleKeyInfo b);
    parameters:
    - id: a
      type: System.ConsoleKeyInfo
      description: The first object to compare.
    - id: b
      type: System.ConsoleKeyInfo
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if  is not equal to ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ConsoleKey
  parent: System
  isExternal: false
  name: ConsoleKey
  nameWithType: ConsoleKey
  fullName: System.ConsoleKey
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals(System.Object)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: ConsoleKeyInfo.Equals(Object)
  fullName: System.ConsoleKeyInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ConsoleKeyInfo.GetHashCode
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: ConsoleKeyInfo.GetHashCode()
  fullName: System.ConsoleKeyInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ConsoleKeyInfo.Key
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Key
  nameWithType: ConsoleKeyInfo.Key
  fullName: System.ConsoleKeyInfo.Key
- uid: System.ConsoleKey
  parent: System
  isExternal: false
  name: ConsoleKey
  nameWithType: ConsoleKey
  fullName: System.ConsoleKey
- uid: System.ConsoleKeyInfo.KeyChar
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: KeyChar
  nameWithType: ConsoleKeyInfo.KeyChar
  fullName: System.ConsoleKeyInfo.KeyChar
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ConsoleKeyInfo.Modifiers
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: Modifiers
  nameWithType: ConsoleKeyInfo.Modifiers
  fullName: System.ConsoleKeyInfo.Modifiers
- uid: System.ConsoleModifiers
  parent: System
  isExternal: false
  name: ConsoleModifiers
  nameWithType: ConsoleModifiers
  fullName: System.ConsoleModifiers
- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)
  parent: System.ConsoleKeyInfo
  isExternal: false
  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.ConsoleKeyInfo.Equals*
  parent: System.ConsoleKeyInfo
  isExternal: false
  nameWithType: ConsoleKeyInfo.
