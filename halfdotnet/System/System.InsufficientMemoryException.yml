### YamlMime:ManagedReference
items:
- uid: System.InsufficientMemoryException
  id: InsufficientMemoryException
  children:
  - System.InsufficientMemoryException.#ctor
  - System.InsufficientMemoryException.#ctor(System.String)
  - System.InsufficientMemoryException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
  type: Class
  summary: The exception that is thrown when a check for sufficient available memory fails. This class cannot be inherited.
  remarks: "Unlike <xref:System.OutOfMemoryException>, InsufficientMemoryException is thrown before starting an operation, and thus does not imply state corruption. An application can catch this exception, throttle back its memory usage, and avoid actual out of memory conditions and their potential for corrupting program state.  \n  \n This exception is thrown by the <xref:System.Runtime.MemoryFailPoint.%23ctor%2A> constructor when you specify a projected memory allocation larger than the amount of currently available memory. Your program can catch the exception and either delay the task that needs the memory or execute it in smaller steps that require less memory.  \n  \n See the <xref:System.Runtime.MemoryFailPoint> class for a code example.  \n  \n> [!NOTE]\n>  This exception is not included in the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](../Topic/Cross-Platform%20Development%20with%20the%20Portable%20Class%20Library.md), but it is thrown by some members that are. To catch the exception in that case, write a `catch` statement for <xref:System.OutOfMemoryException> instead."
  syntax:
    content: 'public sealed class InsufficientMemoryException : OutOfMemoryException'
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.OutOfMemoryException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.InsufficientMemoryException.#ctor
  id: '#ctor'
  parent: System.InsufficientMemoryException
  langs:
  - csharp
  name: InsufficientMemoryException()
  nameWithType: InsufficientMemoryException.InsufficientMemoryException()
  fullName: System.InsufficientMemoryException.InsufficientMemoryException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.InsufficientMemoryException"> class with a system-supplied message that describes the error.
  remarks: "This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Insufficient available memory to meet the expected demands of an operation at this time. Please try again later.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  syntax:
    content: public InsufficientMemoryException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.InsufficientMemoryException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.InsufficientMemoryException
  langs:
  - csharp
  name: InsufficientMemoryException(String)
  nameWithType: InsufficientMemoryException.InsufficientMemoryException(String)
  fullName: System.InsufficientMemoryException.InsufficientMemoryException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.InsufficientMemoryException"> class with a specified message that describes the error.
  remarks: "The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string specified in .|"
  syntax:
    content: public InsufficientMemoryException (string message);
    parameters:
    - id: message
      type: System.String
      description: The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.InsufficientMemoryException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.InsufficientMemoryException
  langs:
  - csharp
  name: InsufficientMemoryException(String,Exception)
  nameWithType: InsufficientMemoryException.InsufficientMemoryException(String,Exception)
  fullName: System.InsufficientMemoryException.InsufficientMemoryException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.InsufficientMemoryException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string specified in .|"
  syntax:
    content: public InsufficientMemoryException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.OutOfMemoryException
  isExternal: false
  name: System.OutOfMemoryException
- uid: System.InsufficientMemoryException.#ctor
  parent: System.InsufficientMemoryException
  isExternal: false
  name: InsufficientMemoryException()
  nameWithType: InsufficientMemoryException.InsufficientMemoryException()
  fullName: System.InsufficientMemoryException.InsufficientMemoryException()
- uid: System.InsufficientMemoryException.#ctor(System.String)
  parent: System.InsufficientMemoryException
  isExternal: false
  name: InsufficientMemoryException(String)
  nameWithType: InsufficientMemoryException.InsufficientMemoryException(String)
  fullName: System.InsufficientMemoryException.InsufficientMemoryException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.InsufficientMemoryException.#ctor(System.String,System.Exception)
  parent: System.InsufficientMemoryException
  isExternal: false
  name: InsufficientMemoryException(String,Exception)
  nameWithType: InsufficientMemoryException.InsufficientMemoryException(String,Exception)
  fullName: System.InsufficientMemoryException.InsufficientMemoryException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
