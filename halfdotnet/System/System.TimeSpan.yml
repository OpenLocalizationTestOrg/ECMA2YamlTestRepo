### YamlMime:ManagedReference
items:
- uid: System.TimeSpan
  id: TimeSpan
  children:
  - System.TimeSpan.#ctor(System.Int64)
  - System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)
  - System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.TimeSpan.Add(System.TimeSpan)
  - System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.CompareTo(System.Object)
  - System.TimeSpan.CompareTo(System.TimeSpan)
  - System.TimeSpan.Days
  - System.TimeSpan.Duration
  - System.TimeSpan.Equals(System.Object)
  - System.TimeSpan.Equals(System.TimeSpan)
  - System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.FromDays(System.Double)
  - System.TimeSpan.FromHours(System.Double)
  - System.TimeSpan.FromMilliseconds(System.Double)
  - System.TimeSpan.FromMinutes(System.Double)
  - System.TimeSpan.FromSeconds(System.Double)
  - System.TimeSpan.FromTicks(System.Int64)
  - System.TimeSpan.GetHashCode
  - System.TimeSpan.Hours
  - System.TimeSpan.MaxValue
  - System.TimeSpan.Milliseconds
  - System.TimeSpan.Minutes
  - System.TimeSpan.MinValue
  - System.TimeSpan.Negate
  - System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)
  - System.TimeSpan.op_UnaryNegation(System.TimeSpan)
  - System.TimeSpan.op_UnaryPlus(System.TimeSpan)
  - System.TimeSpan.Parse(System.String)
  - System.TimeSpan.Parse(System.String,System.IFormatProvider)
  - System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)
  - System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)
  - System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)
  - System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)
  - System.TimeSpan.Seconds
  - System.TimeSpan.Subtract(System.TimeSpan)
  - System.TimeSpan.Ticks
  - System.TimeSpan.TicksPerDay
  - System.TimeSpan.TicksPerHour
  - System.TimeSpan.TicksPerMillisecond
  - System.TimeSpan.TicksPerMinute
  - System.TimeSpan.TicksPerSecond
  - System.TimeSpan.ToString
  - System.TimeSpan.ToString(System.String)
  - System.TimeSpan.ToString(System.String,System.IFormatProvider)
  - System.TimeSpan.TotalDays
  - System.TimeSpan.TotalHours
  - System.TimeSpan.TotalMilliseconds
  - System.TimeSpan.TotalMinutes
  - System.TimeSpan.TotalSeconds
  - System.TimeSpan.TryParse(System.String,System.TimeSpan@)
  - System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)
  - System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)
  - System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
  - System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  - System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  - System.TimeSpan.Zero
  langs:
  - csharp
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
  type: Struct
  summary: "Represents a time interval.  \n  \n To browse the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/timespan.cs#865ef7b89f41b632)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/timespan.cs#865ef7b89f41b632). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n A TimeSpan object represents a time interval (duration of time or elapsed time) that is measured as a positive or negative number of days, hours, minutes, seconds, and fractions of a second. The TimeSpan structure can also be used to represent the time of day, but only if the time is unrelated to a particular date. Otherwise, the <xref:System.DateTime> or <xref:System.DateTimeOffset> structure should be used instead. (For more information about using the TimeSpan structure to reflect the time of day, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](../Topic/Choosing%20Between%20DateTime,%20DateTimeOffset,%20TimeSpan,%20and%20TimeZoneInfo.md).)  \n  \n> [!NOTE]\n>  A TimeSpan value represents a time interval and can be expressed as a particular number of days, hours, minutes, seconds, and milliseconds. Because it represents a general interval without reference to a particular start or end point, it cannot be expressed in terms of years and months, both of which have a variable number of days. It differs from a <xref:System.DateTime> value, which represents a date and time without reference to a particular time zone, or a <xref:System.DateTimeOffset> value, which represents a specific moment of time.  \n  \n The largest unit of time that the TimeSpan structure uses to measure duration is a day. Time intervals are measured in days for consistency, because the number of days in larger units of time, such as months and years, varies.  \n  \n The value of a TimeSpan object is the number of ticks that equal the represented time interval. A tick is equal to 100 nanoseconds, or one ten-millionth of a second. The value of a TimeSpan object can range from <xref:System.TimeSpan.MinValue?displayProperty=fullName> to <xref:System.TimeSpan.MaxValue?displayProperty=fullName>.  \n  \n## Instantiating a TimeSpan Value  \n You can instantiate a TimeSpan value in a number of ways:  \n  \n-   By calling its implicit default constructor. This creates an object whose value is <xref:System.TimeSpan.Zero?displayProperty=fullName>, as the following example shows.  \n  \n     [!CODE [System.TimeSpan.Class#2](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.class#2)]  \n  \n-   By calling one of its explicit constructors. The following example initializes a TimeSpan value to a specified number of hours, minutes, and seconds.  \n  \n     [!CODE [System.TimeSpan.Class#3](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.class#3)]  \n  \n-   By calling a method or performing an operation that returns a TimeSpan value. For example, you can instantiate a TimeSpan value that represents the interval between two date and time values, as the following example shows.  \n  \n     [!CODE [System.TimeSpan.Class#4](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.class#4)]  \n  \n     You can also initialize a TimeSpan object to a zero time value in this way, as the following example shows.  \n  \n     [!CODE [System.TimeSpan.Class#6](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.class#6)]  \n  \n     TimeSpan values are returned by arithmetic operators and methods of the <xref:System.DateTime>, <xref:System.DateTimeOffset>, and TimeSpan structures.  \n  \n-   By parsing the string representation of a TimeSpan value. You can use the <xref:System.TimeSpan.Parse%2A> and <xref:System.TimeSpan.TryParse%2A> methods to convert strings that contain time intervals to TimeSpan values. The following example uses the <xref:System.TimeSpan.Parse%2A> method to convert an array of strings to TimeSpan values.  \n  \n     [!CODE [System.TimeSpan.Class#5](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.class#5)]  \n  \n     In addition, you can define the precise format of the input string to be parsed and converted to a TimeSpan value by calling the <xref:System.TimeSpan.ParseExact%2A> or <xref:System.TimeSpan.TryParseExact%2A> method.  \n  \n## Performing Operations on TimeSpan Values  \n You can add and subtract time durations either by using the <xref:System.TimeSpan.op_Addition%2A> and <xref:System.TimeSpan.op_Subtraction%2A> operators, or by calling the <xref:System.TimeSpan.Add%2A> and <xref:System.TimeSpan.Subtract%2A> methods. You can also compare two time durations by calling the <xref:System.TimeSpan.Compare%2A>, <xref:System.TimeSpan.CompareTo%2A>, and <xref:System.TimeSpan.Equals%2A> methods. The TimeSpan structure also includes the <xref:System.TimeSpan.Duration%2A> and <xref:System.TimeSpan.Negate%2A> methods, which convert time intervals to positive and negative values,  \n  \n The range of TimeSpan values is <xref:System.TimeSpan.MinValue> to <xref:System.TimeSpan.MaxValue>.  \n  \n## Formatting a TimeSpan Value  \n A TimeSpan value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second. That is, a time interval consists of a positive or negative number of days without a time of day, or a number of days with a time of day, or only a time of day.  \n  \n Beginning with the [!INCLUDE[net_v40_long](../../add/includes/net-v40-long-md.md)], the TimeSpan structure supports culture-sensitive formatting through the overloads of its <xref:System.TimeSpan.ToString%2A> method, which converts a TimeSpan value to its string representation. The default <xref:System.TimeSpan.ToString?displayProperty=fullName> method returns a time interval by using an invariant format that is identical to its return value in previous versions of the .NET Framework. The <xref:System.TimeSpan.ToString%28System.String%29?displayProperty=fullName> overload lets you specify a format string that defines the string representation of the time interval. The <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> overload lets you specify a format string and the culture whose formatting conventions are used to create the string representation of the time interval. TimeSpan supports both standard and custom format strings. (For more information, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).) However, only standard format strings are culture-sensitive.  \n  \n## Restoring Legacy TimeSpan Formatting  \n In some cases, code that successfully formats TimeSpan values in [!INCLUDE[net_v35_short](../../add/includes/net-v35-short-md.md)] and earlier versions fails in [!INCLUDE[net_v40_short](../../add/includes/net-v40-short-md.md)]. This is most common in code that calls a [<TimeSpan_LegacyFormatMode> element](../Topic/%3CTimeSpan_LegacyFormatMode%3E%20Element.md) method to format a TimeSpan value with a format string. The following example successfully formats a TimeSpan value in [!INCLUDE[net_v35_short](../../add/includes/net-v35-short-md.md)] and earlier versions, but throws an exception in [!INCLUDE[net_v40_short](../../add/includes/net-v40-short-md.md)] and later versions. Note that it attempts to format a TimeSpan value by using an unsupported format specifier, which is ignored in [!INCLUDE[net_v35_short](../../add/includes/net-v35-short-md.md)] and earlier versions.  \n  \n [!CODE [System.TimeSpan.Class.Legacy#1](../../add/codesnippet/system.timespan.class.md)]  \n  \n If you cannot modify the code, you can restore the legacy formatting of TimeSpan values in one of the following ways:  \n  \n-   By creating a configuration file that contains the [<TimeSpan_LegacyFormatMode> element](../Topic/%3CTimeSpan_LegacyFormatMode%3E%20Element.md). Setting this element's `enabled` attribute to `true` restores legacy TimeSpan formatting on a per-application basis.  \n  \n-   By setting the \"NetFx40_TimeSpanLegacyFormatMode\" compatibility switch when you create an application domain. This enables legacy TimeSpan formatting on a per-application-domain basis. The following example creates an application domain that uses legacy TimeSpan formatting.  \n  \n     [!CODE [System.TimeSpan.Class.AppDomain#1](../../add/codesnippet/system.timespan.class.md)]  \n  \n     When the following code executes in the new application domain, it reverts to legacy TimeSpan formatting behavior.  \n  \n     [!CODE [System.TimeSpan.Class.AppDomain#2](../../add/codesnippet/system.timespan.class.md)]"
  example:
  - "The following example instantiates a TimeSpan object that represents the difference between two dates. It then displays the TimeSpan object's properties.  \n  \n [!CODE [System.TimeSpan.Class#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.class#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct TimeSpan : IComparable, IComparable<TimeSpan>, IEquatable<TimeSpan>, IFormattable
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IComparable
  - System.IComparable<System.TimeSpan>
  - System.IEquatable<System.TimeSpan>
  - System.IFormattable
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: System.TimeSpan
  langs:
  - csharp
  name: TimeSpan(Int64)
  nameWithType: TimeSpan.TimeSpan(Int64)
  fullName: System.TimeSpan.TimeSpan(Int64)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.TimeSpan"> structure to the specified number of ticks.
  remarks: A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond.
  example:
  - "The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of ticks.  \n  \n [!CODE [System.TimeSpan.Ctor#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Ctor#1)]"
  syntax:
    content: public TimeSpan (long ticks);
    parameters:
    - id: ticks
      type: System.Int64
      description: A time period expressed in 100-nanosecond units.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: System.TimeSpan
  langs:
  - csharp
  name: TimeSpan(Int32,Int32,Int32)
  nameWithType: TimeSpan.TimeSpan(Int32,Int32,Int32)
  fullName: System.TimeSpan.TimeSpan(Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.TimeSpan"> structure to a specified number of hours, minutes, and seconds.
  remarks: The specified , , and  are converted to ticks, and that value initializes this instance.
  example:
  - "The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of hours, minutes, and seconds.  \n  \n [!CODE [System.TimeSpan.Ctor#2](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Ctor#2)]"
  syntax:
    content: public TimeSpan (int hours, int minutes, int seconds);
    parameters:
    - id: hours
      type: System.Int32
      description: Number of hours.
    - id: minutes
      type: System.Int32
      description: Number of minutes.
    - id: seconds
      type: System.Int32
      description: Number of seconds.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.TimeSpan
  langs:
  - csharp
  name: TimeSpan(Int32,Int32,Int32,Int32)
  nameWithType: TimeSpan.TimeSpan(Int32,Int32,Int32,Int32)
  fullName: System.TimeSpan.TimeSpan(Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.TimeSpan"> structure to a specified number of days, hours, minutes, and seconds.
  remarks: The specified , , , and  are converted to ticks, and that value initializes this instance.
  example:
  - "The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of days, hours, minutes, and seconds.  \n  \n [!CODE [System.TimeSpan.Ctor#3](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Ctor#3)]"
  syntax:
    content: public TimeSpan (int days, int hours, int minutes, int seconds);
    parameters:
    - id: days
      type: System.Int32
      description: Number of days.
    - id: hours
      type: System.Int32
      description: Number of hours.
    - id: minutes
      type: System.Int32
      description: Number of minutes.
    - id: seconds
      type: System.Int32
      description: Number of seconds.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.TimeSpan
  langs:
  - csharp
  name: TimeSpan(Int32,Int32,Int32,Int32,Int32)
  nameWithType: TimeSpan.TimeSpan(Int32,Int32,Int32,Int32,Int32)
  fullName: System.TimeSpan.TimeSpan(Int32,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.TimeSpan"> structure to a specified number of days, hours, minutes, seconds, and milliseconds.
  remarks: The specified , , , , and  are converted to ticks, and that value initializes this instance.
  example:
  - "The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of days, hours, minutes, seconds, and milliseconds.  \n  \n [!CODE [System.TimeSpan.Ctor#4](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Ctor#4)]"
  syntax:
    content: public TimeSpan (int days, int hours, int minutes, int seconds, int milliseconds);
    parameters:
    - id: days
      type: System.Int32
      description: Number of days.
    - id: hours
      type: System.Int32
      description: Number of hours.
    - id: minutes
      type: System.Int32
      description: Number of minutes.
    - id: seconds
      type: System.Int32
      description: Number of seconds.
    - id: milliseconds
      type: System.Int32
      description: Number of milliseconds.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Add(System.TimeSpan)
  id: Add(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: Add(TimeSpan)
  nameWithType: TimeSpan.Add(TimeSpan)
  fullName: System.TimeSpan.Add(TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <see cref="T:System.TimeSpan"> object whose value is the sum of the specified <see cref="T:System.TimeSpan"> object and this instance.
  remarks: "The return value must be between <xref:System.TimeSpan?displayProperty=fullName> and <xref:System.TimeSpan?displayProperty=fullName>; otherwise, an exception is thrown.  \n  \n The return value is a new <xref:System.TimeSpan>; the original <xref:System.TimeSpan> is not modified."
  example:
  - "The following example calls the Add method to add each element in an array of time intervals to a base <xref:System.TimeSpan> value.  \n  \n [!CODE [System.TimeSpan.Add#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.add#1)]"
  syntax:
    content: public TimeSpan Add (TimeSpan ts);
    parameters:
    - id: ts
      type: System.TimeSpan
      description: The time interval to add.
    return:
      type: System.TimeSpan
      description: A new object that represents the value of this instance plus the value of .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  id: Compare(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: Compare(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.Compare(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.Compare(TimeSpan,TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares two <see cref="T:System.TimeSpan"> values and returns an integer that indicates whether the first value is shorter than, equal to, or longer than the second value.
  remarks: ''
  example:
  - "The following example uses the Compare method to compare several <xref:System.TimeSpan> objects with a <xref:System.TimeSpan> object whose value is a 2-hour time interval.  \n  \n [!CODE [System.TimeSpan.Compare#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.compare#1)]"
  syntax:
    content: public static int Compare (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The first time interval to compare.
    - id: t2
      type: System.TimeSpan
      description: The second time interval to compare.
    return:
      type: System.Int32
      description: "One of the following values.  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|-1|is shorter than .|  \n|0|is equal to .|  \n|1|is longer than .|"
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.TimeSpan
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: TimeSpan.CompareTo(Object)
  fullName: System.TimeSpan.CompareTo(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares this instance to a specified object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the specified object.
  remarks: "Any instance of <xref:System.TimeSpan>, regardless of its value, is considered greater than `null`.  \n  \n The  parameter must be an instance of <xref:System.TimeSpan> or `null`; otherwise, an exception is thrown."
  example:
  - "The following example compares several <xref:System.TimeSpan> structures and other objects to a reference <xref:System.TimeSpan> structure using the CompareTo method.  \n  \n [!CODE [System.TimeSpan.Compare_Equals#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals#1)]"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: An object to compare, or `null`.
    return:
      type: System.Int32
      description: "One of the following values.  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|-1|This instance is shorter than .|  \n|0|This instance is equal to .|  \n|1|This instance is longer than .<br /><br /> -or-<br /><br /> is `null`.|"
  overload: System.TimeSpan.CompareTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.CompareTo(System.TimeSpan)
  id: CompareTo(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: CompareTo(TimeSpan)
  nameWithType: TimeSpan.CompareTo(TimeSpan)
  fullName: System.TimeSpan.CompareTo(TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares this instance to a specified <see cref="T:System.TimeSpan"> object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the <see cref="T:System.TimeSpan"> object.
  remarks: This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.TimeSpan.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the  parameter to an object.
  example:
  - "The following example demonstrates generic and nongeneric versions of the <xref:System.TimeSpan.CompareTo%2A> method for several value and reference types.  \n  \n [!CODE [T.CompareTo#1](../CodeSnippet/VS_Snippets_CLR/T.CompareTo#1)]"
  syntax:
    content: public int CompareTo (TimeSpan value);
    parameters:
    - id: value
      type: System.TimeSpan
      description: An object to compare to this instance.
    return:
      type: System.Int32
      description: "A signed number indicating the relative values of this instance and .  \n  \n|Value|Description|  \n|-----------|-----------------|  \n|A negative integer|This instance is shorter than .|  \n|Zero|This instance is equal to .|  \n|A positive integer|This instance is longer than .|"
  overload: System.TimeSpan.CompareTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Days
  id: Days
  parent: System.TimeSpan
  langs:
  - csharp
  name: Days
  nameWithType: TimeSpan.Days
  fullName: System.TimeSpan.Days
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the days component of the time interval represented by the current <see cref="T:System.TimeSpan"> structure.
  remarks: "A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second. The value of the Days property is the day component, *d*.  \n  \n The Days property represents whole days, whereas the <xref:System.TimeSpan.TotalDays%2A> property represents whole and fractional days."
  example:
  - "The following example creates several <xref:System.TimeSpan> objects and displays the Days property of each.  \n  \n [!CODE [System.TimeSpan.Properties#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Properties#1)]"
  syntax:
    content: public int Days { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Duration
  id: Duration
  parent: System.TimeSpan
  langs:
  - csharp
  name: Duration()
  nameWithType: TimeSpan.Duration()
  fullName: System.TimeSpan.Duration()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <see cref="T:System.TimeSpan"> object whose value is the absolute value of the current <see cref="T:System.TimeSpan"> object.
  remarks: ''
  example:
  - "The following example applies the Duration method to several <xref:System.TimeSpan> objects.  \n  \n [!CODE [System.TimeSpan.Dura_Nega_Unary#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary#1)]"
  syntax:
    content: public TimeSpan Duration ();
    parameters: []
    return:
      type: System.TimeSpan
      description: A new object whose value is the absolute value of the current <see cref="T:System.TimeSpan"> object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.TimeSpan
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: TimeSpan.Equals(Object)
  fullName: System.TimeSpan.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a value indicating whether this instance is equal to a specified object.
  remarks: ''
  example:
  - "The following example compares several <xref:System.TimeSpan> and other objects to a reference <xref:System.TimeSpan> using the Equals method.  \n  \n [!CODE [System.TimeSpan.Compare_Equals#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals#1)]"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: An object to compare with this instance.
    return:
      type: System.Boolean
      description: '`true` if  is a <see cref="T:System.TimeSpan"> object that represents the same time interval as the current <see cref="T:System.TimeSpan"> structure; otherwise, `false`.'
  overload: System.TimeSpan.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Equals(System.TimeSpan)
  id: Equals(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: Equals(TimeSpan)
  nameWithType: TimeSpan.Equals(TimeSpan)
  fullName: System.TimeSpan.Equals(TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a value indicating whether this instance is equal to a specified <see cref="T:System.TimeSpan"> object.
  remarks: This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.TimeSpan.Equals%2A> because it does not have to convert the  parameter to an object.
  example:
  - "The following example demonstrates generic and nongeneric versions of the <xref:System.TimeSpan.CompareTo%2A> method for several value and reference types.  \n  \n [!CODE [T.CompareTo#1](../CodeSnippet/VS_Snippets_CLR/T.CompareTo#1)]"
  syntax:
    content: public bool Equals (TimeSpan obj);
    parameters:
    - id: obj
      type: System.TimeSpan
      description: An object to compare with this instance.
    return:
      type: System.Boolean
      description: '`true` if  represents the same time interval as this instance; otherwise, `false`.'
  overload: System.TimeSpan.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)
  id: Equals(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: Equals(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.Equals(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.Equals(TimeSpan,TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a value that indicates whether two specified instances of <see cref="T:System.TimeSpan"> are equal.
  remarks: ''
  example:
  - "The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> object using the static Equals method.  \n  \n [!CODE [System.TimeSpan.Compare_Equals#2](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals#2)]"
  syntax:
    content: public static bool Equals (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The first time interval to compare.
    - id: t2
      type: System.TimeSpan
      description: The second time interval to compare.
    return:
      type: System.Boolean
      description: '`true` if the values of  and  are equal; otherwise, `false`.'
  overload: System.TimeSpan.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.FromDays(System.Double)
  id: FromDays(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  name: FromDays(Double)
  nameWithType: TimeSpan.FromDays(Double)
  fullName: System.TimeSpan.FromDays(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a <see cref="T:System.TimeSpan"> that represents a specified number of days, where the specification is accurate to the nearest millisecond.
  remarks: "The  parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>. Therefore,  will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can cause an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>. For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.  \n  \n [!CODE [System.TimeSpan.FromMinutes#2](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes#2)]"
  example:
  - "The following example creates several <xref:System.TimeSpan> objects using the FromDays method.  \n  \n [!CODE [System.TimeSpan.From#6](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.From#6)]"
  syntax:
    content: public static TimeSpan FromDays (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of days, accurate to the nearest millisecond.
    return:
      type: System.TimeSpan
      description: An object that represents .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.FromHours(System.Double)
  id: FromHours(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  name: FromHours(Double)
  nameWithType: TimeSpan.FromHours(Double)
  fullName: System.TimeSpan.FromHours(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a <see cref="T:System.TimeSpan"> that represents a specified number of hours, where the specification is accurate to the nearest millisecond.
  remarks: "The  parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>. Therefore,  will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can generate an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>. For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.  \n  \n [!CODE [System.TimeSpan.FromMinutes#3](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes#3)]"
  example:
  - "The following example creates several <xref:System.TimeSpan> objects using the FromHours method.  \n  \n [!CODE [System.TimeSpan.From#5](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.From#5)]"
  syntax:
    content: public static TimeSpan FromHours (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of hours accurate to the nearest millisecond.
    return:
      type: System.TimeSpan
      description: An object that represents .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.FromMilliseconds(System.Double)
  id: FromMilliseconds(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  name: FromMilliseconds(Double)
  nameWithType: TimeSpan.FromMilliseconds(Double)
  fullName: System.TimeSpan.FromMilliseconds(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a <see cref="T:System.TimeSpan"> that represents a specified number of milliseconds.
  remarks: "The  parameter is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>. Therefore,  will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can generate an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>. For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.  \n  \n [!CODE [System.TimeSpan.FromMinutes#4](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes#4)]"
  example:
  - "The following example creates several <xref:System.TimeSpan> objects by using the FromMilliseconds method.  \n  \n [!CODE [System.TimeSpan.From#2](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.From#2)]"
  syntax:
    content: public static TimeSpan FromMilliseconds (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of milliseconds.
    return:
      type: System.TimeSpan
      description: An object that represents .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.FromMinutes(System.Double)
  id: FromMinutes(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  name: FromMinutes(Double)
  nameWithType: TimeSpan.FromMinutes(Double)
  fullName: System.TimeSpan.FromMinutes(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a <see cref="T:System.TimeSpan"> that represents a specified number of minutes, where the specification is accurate to the nearest millisecond.
  remarks: "The  parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>. Therefore,  will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can generate an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>. For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.  \n  \n [!CODE [System.TimeSpan.FromMinutes#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes#1)]"
  example:
  - "The following example creates several <xref:System.TimeSpan> objects using the FromMinutes method.  \n  \n [!CODE [System.TimeSpan.From#4](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.From#4)]"
  syntax:
    content: public static TimeSpan FromMinutes (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of minutes, accurate to the nearest millisecond.
    return:
      type: System.TimeSpan
      description: An object that represents .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.FromSeconds(System.Double)
  id: FromSeconds(System.Double)
  parent: System.TimeSpan
  langs:
  - csharp
  name: FromSeconds(Double)
  nameWithType: TimeSpan.FromSeconds(Double)
  fullName: System.TimeSpan.FromSeconds(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a <see cref="T:System.TimeSpan"> that represents a specified number of seconds, where the specification is accurate to the nearest millisecond.
  remarks: "The  parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to intialize the new <xref:System.TimeSpan>. Therefore,  will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <xref:System.Double> data type, this can generate an <xref:System.OverflowException> for values that are near but still in the range of either  <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>, This is the cause of an <xref:System.OverflowException>, for example, in the following attempt to instantiate a <xref:System.TimeSpan> object.  \n  \n [!CODE [System.TimeSpan.FromMinutes#5](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes#5)]"
  example:
  - "The following example creates several <xref:System.TimeSpan> objects using the FromSeconds method.  \n  \n [!CODE [System.TimeSpan.From#3](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.From#3)]"
  syntax:
    content: public static TimeSpan FromSeconds (double value);
    parameters:
    - id: value
      type: System.Double
      description: A number of seconds, accurate to the nearest millisecond.
    return:
      type: System.TimeSpan
      description: An object that represents .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.FromTicks(System.Int64)
  id: FromTicks(System.Int64)
  parent: System.TimeSpan
  langs:
  - csharp
  name: FromTicks(Int64)
  nameWithType: TimeSpan.FromTicks(Int64)
  fullName: System.TimeSpan.FromTicks(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a <see cref="T:System.TimeSpan"> that represents a specified time, where the specification is in units of ticks.
  remarks: This is a convenience method with the same behavior as the <xref:System.TimeSpan.%23ctor%28System.Int64%29?displayProperty=fullName> constructor. A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond.
  example:
  - "The following example creates several <xref:System.TimeSpan> objects using the FromTicks method.  \n  \n [!CODE [System.TimeSpan.From#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.From#1)]"
  syntax:
    content: public static TimeSpan FromTicks (long value);
    parameters:
    - id: value
      type: System.Int64
      description: A number of ticks that represent a time.
    return:
      type: System.TimeSpan
      description: An object that represents .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.GetHashCode
  id: GetHashCode
  parent: System.TimeSpan
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: TimeSpan.GetHashCode()
  fullName: System.TimeSpan.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a hash code for this instance.
  remarks: Two <xref:System.TimeSpan> objects might have the same hash code even though they represent different time values.
  example:
  - "The following example generates the hash codes of several <xref:System.TimeSpan> objects using the GetHashCode method.  \n  \n [!CODE [System.TimeSpan.GetHashCode#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode#1)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Hours
  id: Hours
  parent: System.TimeSpan
  langs:
  - csharp
  name: Hours
  nameWithType: TimeSpan.Hours
  fullName: System.TimeSpan.Hours
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the hours component of the time interval represented by the current <see cref="T:System.TimeSpan"> structure.
  remarks: "A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second. The value of the Hours property is the hours component, *hh*.  \n  \n The Hours property represents whole hours, whereas the <xref:System.TimeSpan.TotalHours%2A> property represents whole and fractional hours."
  example:
  - "The following example creates several <xref:System.TimeSpan> objects and displays the Hours property of each.  \n  \n [!CODE [System.TimeSpan.Properties#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Properties#1)]"
  syntax:
    content: public int Hours { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.MaxValue
  id: MaxValue
  parent: System.TimeSpan
  langs:
  - csharp
  name: MaxValue
  nameWithType: TimeSpan.MaxValue
  fullName: System.TimeSpan.MaxValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the maximum <see cref="T:System.TimeSpan"> value. This field is read-only.
  remarks: The value of this field is equivalent to <xref:System.Int64.MaxValue?displayProperty=fullName> ticks. The string representation of this value is positive 10675199.02:48:05.4775807, or slightly more than 10,675,199 days.
  example:
  - "The following example references and displays the value of the MaxValue field.  \n  \n [!CODE [System.TimeSpan.Fields#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Fields#1)]"
  syntax:
    content: public static readonly TimeSpan MaxValue;
    return:
      type: System.TimeSpan
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Milliseconds
  id: Milliseconds
  parent: System.TimeSpan
  langs:
  - csharp
  name: Milliseconds
  nameWithType: TimeSpan.Milliseconds
  fullName: System.TimeSpan.Milliseconds
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the milliseconds component of the time interval represented by the current <see cref="T:System.TimeSpan"> structure.
  remarks: "A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second. The value of the Milliseconds property is the fractional second component, *ff*.  \n  \n The Milliseconds property represents whole milliseconds, whereas the <xref:System.TimeSpan.TotalMilliseconds%2A> property represents whole and fractional milliseconds."
  example:
  - "The following example creates several <xref:System.TimeSpan> objects and displays the Milliseconds property of each.  \n  \n [!CODE [System.TimeSpan.Properties#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Properties#1)]"
  syntax:
    content: public int Milliseconds { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Minutes
  id: Minutes
  parent: System.TimeSpan
  langs:
  - csharp
  name: Minutes
  nameWithType: TimeSpan.Minutes
  fullName: System.TimeSpan.Minutes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the minutes component of the time interval represented by the current <see cref="T:System.TimeSpan"> structure.
  remarks: "A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second. The value of the Minutes property is the minute component, *mm*.  \n  \n The Minutes property represents whole minutes, whereas the <xref:System.TimeSpan.TotalMinutes%2A> property represents whole and fractional minutes."
  example:
  - "The following example creates several <xref:System.TimeSpan> objects and displays the Minutes property of each.  \n  \n [!CODE [System.TimeSpan.Properties#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Properties#1)]"
  syntax:
    content: public int Minutes { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.MinValue
  id: MinValue
  parent: System.TimeSpan
  langs:
  - csharp
  name: MinValue
  nameWithType: TimeSpan.MinValue
  fullName: System.TimeSpan.MinValue
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the minimum <see cref="T:System.TimeSpan"> value. This field is read-only.
  remarks: The value of this field is equivalent to <xref:System.Int64.MinValue?displayProperty=fullName> ticks. The string representation of this value is negative 10675199.02:48:05.4775808, or slightly more than negative 10,675,199 days.
  example:
  - "The following example references and displays the value of the MinValue field.  \n  \n [!CODE [System.TimeSpan.Fields#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Fields#1)]"
  syntax:
    content: public static readonly TimeSpan MinValue;
    return:
      type: System.TimeSpan
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Negate
  id: Negate
  parent: System.TimeSpan
  langs:
  - csharp
  name: Negate()
  nameWithType: TimeSpan.Negate()
  fullName: System.TimeSpan.Negate()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <see cref="T:System.TimeSpan"> object whose value is the negated value of this instance.
  remarks: ''
  example:
  - "The following example applies the Negate method to several <xref:System.TimeSpan> objects.  \n  \n [!CODE [System.TimeSpan.Dura_Nega_Unary#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary#1)]"
  syntax:
    content: public TimeSpan Negate ();
    parameters: []
    return:
      type: System.TimeSpan
      description: A new object with the same numeric value as this instance, but with the opposite sign.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)
  id: op_Addition(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_Addition(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_Addition(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_Addition(TimeSpan,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Adds two specified <see cref="T:System.TimeSpan"> instances.
  remarks: "The Addition method defines the addition operator for <xref:System.TimeSpan> values. It enables code such as the following:  \n  \n [!CODE [System.TimeSpan.Operators#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.operators#1)]  \n  \n Languages that do not support custom operators can call the <xref:System.TimeSpan.Add%2A> method instead."
  syntax:
    content: public static TimeSpan op_Addition (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The first time interval to add.
    - id: t2
      type: System.TimeSpan
      description: The second time interval to add.
    return:
      type: System.TimeSpan
      description: An object whose value is the sum of the values of  and .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)
  id: op_Equality(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_Equality(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_Equality(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_Equality(TimeSpan,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether two <see cref="T:System.TimeSpan"> instances are equal.
  remarks: ''
  example:
  - "The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the Equality operator.  \n  \n [!CODE [System.TimeSpan.RelationalOps#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps#1)]"
  syntax:
    content: public static bool op_Equality (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The first time interval to compare.
    - id: t2
      type: System.TimeSpan
      description: The second time interval to compare.
    return:
      type: System.Boolean
      description: '`true` if the values of  and  are equal; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)
  id: op_GreaterThan(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_GreaterThan(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_GreaterThan(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_GreaterThan(TimeSpan,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether a specified <see cref="T:System.TimeSpan"> is greater than another specified <see cref="T:System.TimeSpan">.
  remarks: ''
  example:
  - "The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the GreaterThan operator.  \n  \n [!CODE [System.TimeSpan.RelationalOps#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps#1)]"
  syntax:
    content: public static bool op_GreaterThan (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The first time interval to compare.
    - id: t2
      type: System.TimeSpan
      description: The second time interval to compare.
    return:
      type: System.Boolean
      description: '`true` if the value of  is greater than the value of ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)
  id: op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_GreaterThanOrEqual(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_GreaterThanOrEqual(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_GreaterThanOrEqual(TimeSpan,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether a specified <see cref="T:System.TimeSpan"> is greater than or equal to another specified <see cref="T:System.TimeSpan">.
  remarks: ''
  example:
  - "The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the GreaterThanOrEqual operator.  \n  \n [!CODE [System.TimeSpan.RelationalOps#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps#1)]"
  syntax:
    content: public static bool op_GreaterThanOrEqual (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The first time interval to compare.
    - id: t2
      type: System.TimeSpan
      description: The second time interval to compare.
    return:
      type: System.Boolean
      description: '`true` if the value of  is greater than or equal to the value of ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)
  id: op_Inequality(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_Inequality(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_Inequality(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_Inequality(TimeSpan,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether two <see cref="T:System.TimeSpan"> instances are not equal.
  remarks: ''
  example:
  - "The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the Inequality operator.  \n  \n [!CODE [System.TimeSpan.RelationalOps#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps#1)]"
  syntax:
    content: public static bool op_Inequality (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The first time interval to compare.
    - id: t2
      type: System.TimeSpan
      description: The second time interval to compare.
    return:
      type: System.Boolean
      description: '`true` if the values of  and  are not equal; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)
  id: op_LessThan(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_LessThan(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_LessThan(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_LessThan(TimeSpan,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether a specified <see cref="T:System.TimeSpan"> is less than another specified <see cref="T:System.TimeSpan">.
  remarks: ''
  example:
  - "The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the LessThan operator.  \n  \n [!CODE [System.TimeSpan.RelationalOps#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps#1)]"
  syntax:
    content: public static bool op_LessThan (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The first time interval to compare.
    - id: t2
      type: System.TimeSpan
      description: The second time interval to compare.
    return:
      type: System.Boolean
      description: '`true` if the value of  is less than the value of ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)
  id: op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_LessThanOrEqual(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_LessThanOrEqual(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_LessThanOrEqual(TimeSpan,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether a specified <see cref="T:System.TimeSpan"> is less than or equal to another specified <see cref="T:System.TimeSpan">.
  remarks: ''
  example:
  - "The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the LessThanOrEqual operator.  \n  \n [!CODE [System.TimeSpan.RelationalOps#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps#1)]"
  syntax:
    content: public static bool op_LessThanOrEqual (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The first time interval to compare.
    - id: t2
      type: System.TimeSpan
      description: The second time interval to compare.
    return:
      type: System.Boolean
      description: '`true` if the value of  is less than or equal to the value of ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)
  id: op_Subtraction(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_Subtraction(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_Subtraction(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_Subtraction(TimeSpan,TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Subtracts a specified <see cref="T:System.TimeSpan"> from another specified <see cref="T:System.TimeSpan">.
  remarks: ''
  example:
  - "The following example uses the <xref:System.TimeSpan> subtraction operator to calculate the total length of the weekly work day. It also uses the <xref:System.TimeSpan> addition operator to compute the total time of the daily breaks before using it in a subtraction operation to compute the total actual daily working time.  \n  \n [!CODE [System.TimeSpan.Operators#2](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.operators#2)]"
  syntax:
    content: public static TimeSpan op_Subtraction (TimeSpan t1, TimeSpan t2);
    parameters:
    - id: t1
      type: System.TimeSpan
      description: The minuend.
    - id: t2
      type: System.TimeSpan
      description: The subtrahend.
    return:
      type: System.TimeSpan
      description: An object whose value is the result of the value of  minus the value of .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_UnaryNegation(System.TimeSpan)
  id: op_UnaryNegation(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_UnaryNegation(TimeSpan)
  nameWithType: TimeSpan.op_UnaryNegation(TimeSpan)
  fullName: System.TimeSpan.op_UnaryNegation(TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a <see cref="T:System.TimeSpan"> whose value is the negated value of the specified instance.
  remarks: ''
  example:
  - "The following example applies the UnaryNegation operator to several <xref:System.TimeSpan> objects.  \n  \n [!CODE [System.TimeSpan.Dura_Nega_Unary#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary#1)]"
  syntax:
    content: public static TimeSpan op_UnaryNegation (TimeSpan t);
    parameters:
    - id: t
      type: System.TimeSpan
      description: The time interval to be negated.
    return:
      type: System.TimeSpan
      description: An object that has the same numeric value as this instance, but the opposite sign.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.op_UnaryPlus(System.TimeSpan)
  id: op_UnaryPlus(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: op_UnaryPlus(TimeSpan)
  nameWithType: TimeSpan.op_UnaryPlus(TimeSpan)
  fullName: System.TimeSpan.op_UnaryPlus(TimeSpan)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the specified instance of <see cref="T:System.TimeSpan">.
  remarks: ''
  example:
  - "The following example applies the UnaryPlus operator to several <xref:System.TimeSpan> objects.  \n  \n [!CODE [System.TimeSpan.Dura_Nega_Unary#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary#1)]"
  syntax:
    content: public static TimeSpan op_UnaryPlus (TimeSpan t);
    parameters:
    - id: t
      type: System.TimeSpan
      description: The time interval to return.
    return:
      type: System.TimeSpan
      description: The time interval specified by .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Parse(System.String)
  id: Parse(System.String)
  parent: System.TimeSpan
  langs:
  - csharp
  name: Parse(String)
  nameWithType: TimeSpan.Parse(String)
  fullName: System.TimeSpan.Parse(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent.
  remarks: "The  parameter contains a time interval specification in the form:  \n  \n [*ws*][-]{ *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]] }[*ws*]  \n  \n Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space.|  \n|-|An optional minus sign, which indicates a negative <xref:System.TimeSpan>.|  \n|*d*|Days, ranging from 0 to 10675199.|  \n|.|A culture-sensitive symbol that separates days from hours. The invariant format uses a period (\".\") character.|  \n|*hh*|Hours, ranging from 0 to 23.|  \n|:|The culture-sensitive time separator symbol. The invariant format uses a colon (\":\") character.|  \n|*mm*|Minutes, ranging from 0 to 59.|  \n|*ss*|Optional seconds, ranging from 0 to 59.|  \n|*.*|A culture-sensitive symbol that separates seconds from fractions of a second. The invariant format uses a period (\".\") character.|  \n|*ff*|Optional fractional seconds, consisting of one to seven decimal digits.|  \n  \n The components of  must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan?displayProperty=fullName> and less than or equal to <xref:System.TimeSpan?displayProperty=fullName>.  \n  \n The Parse method tries to parse  by using each of the culture-specific formats for the current culture."
  example:
  - "The following example uses the Parse method to convert each element in a string array to a <xref:System.TimeSpan> value. It changes the current system culture to Croatian - Croatia (\"hr-HR\") and English - United States (\"en-US\") to illustrate how the current system culture affects the parsing operation.  \n  \n [!CODE [System.TimeSpan.Parse#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.parse#1)]"
  syntax:
    content: public static TimeSpan Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: A string that specifies the time interval to convert.
    return:
      type: System.TimeSpan
      description: A time interval that corresponds to .
  overload: System.TimeSpan.Parse*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: System.TimeSpan
  langs:
  - csharp
  name: Parse(String,IFormatProvider)
  nameWithType: TimeSpan.Parse(String,IFormatProvider)
  fullName: System.TimeSpan.Parse(String,IFormatProvider)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified culture-specific format information.
  remarks: "The  parameter contains a time interval specification in the form:  \n  \n [*ws*][-]{ *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]] }[*ws*]  \n  \n Elements in square brackets ([ and ]) are optional; one selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space.|  \n|-|An optional minus sign, which indicates a negative <xref:System.TimeSpan>.|  \n|*d*|Days, ranging from 0 to 10675199.|  \n|.|A culture-sensitive symbol that separates days from hours. The default value is a period (\".\") character.|  \n|*hh*|Hours, ranging from 0 to 23.|  \n|:|The culture-sensitive time separator symbol.|  \n|*mm*|Minutes, ranging from 0 to 59.|  \n|*ss*|Optional seconds, ranging from 0 to 59.|  \n|.|A culture-sensitive symbol that separates seconds from fractions of a second. The default value is a period (\".\") character.|  \n|*ff*|Optional fractional seconds, consisting of one to seven decimal digits.|  \n  \n The components of  must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan?displayProperty=fullName> and less than or equal to <xref:System.TimeSpan?displayProperty=fullName>.  \n  \n The <xref:System.TimeSpan.Parse%28System.String%29> method tries to parse  by using each of the culture-specific formats for the culture specified by .  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used."
  example:
  - "The following example defines an array of <xref:System.Globalization.CultureInfo> objects, and uses each object in calls to the Parse method to parse the elements in a string array. The example illustrates how the conventions of a specific culture influence the formatting operation.  \n  \n [!CODE [System.TimeSpan.Parse#2](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.parse#2)]"
  syntax:
    content: public static TimeSpan Parse (string input, IFormatProvider formatProvider);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.TimeSpan
      description: A time interval that corresponds to , as specified by .
  overload: System.TimeSpan.Parse*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)
  id: ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.TimeSpan
  langs:
  - csharp
  name: ParseExact(String,String,IFormatProvider)
  nameWithType: TimeSpan.ParseExact(String,String,IFormatProvider)
  fullName: System.TimeSpan.ParseExact(String,String,IFormatProvider)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.
  remarks: "The ParseExact method parses the string representation of a time interval, which must be in the format defined by the  parameter, except that leading and trailing white-space characters are ignored. Because  must conform to the format of  exactly, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method instead.  \n  \n The  parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of . For more information about valid format strings, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  \n  \n> [!IMPORTANT]\n>  The ParseExact method uses the conventions of the culture specified by the  parameter only if  is a standard <xref:System.TimeSpan> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if  is a standard format string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used."
  example:
  - "The following example uses the ParseExact method to parse several string representations of time intervals using various format strings and cultures.  \n  \n [!CODE [System.TimeSpan.ParseExact#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.parseexact#1)]"
  syntax:
    content: public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: format
      type: System.String
      description: A standard or custom format string that defines the required format of .
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.TimeSpan
      description: A time interval that corresponds to , as specified by  and .
  overload: System.TimeSpan.ParseExact*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)
  id: ParseExact(System.String,System.String[],System.IFormatProvider)
  parent: System.TimeSpan
  langs:
  - csharp
  name: ParseExact(String,String[],IFormatProvider)
  nameWithType: TimeSpan.ParseExact(String,String[],IFormatProvider)
  fullName: System.TimeSpan.ParseExact(String,String[],IFormatProvider)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified array of format strings and culture-specific format information. The format of the string representation must match one of the specified formats exactly.
  remarks: "The <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a time interval, which must be in one of the formats defined by the  parameter, except that leading and trailing white-space characters are ignored. Because  must exactly conform to one of the formats specified in , you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the [TryParseExact(String, String\\[\\], IFormatProvider, TimeSpan)](assetId:///M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)?qualifyHint=False&autoUpgrade=False) method instead.  \n  \n The  parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of . For more information about valid format strings, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  must correspond exactly to a member of  for the parse operation to succeed. The parse operation attempts to match  to each element in  starting with the first element in the array.  \n  \n> [!IMPORTANT]\n>  The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the  parameter only if the format string used to parse  is a standard <xref:System.TimeSpan> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse  is a standard format string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used."
  example:
  - "The following example calls the ParseExact method to convert each element of a string array to a <xref:System.TimeSpan> value. The example interprets the strings using the formatting conventions of the French - France (\"fr-FR\") culture. The strings can represent a time interval in either the general short format or the general long format.  \n  \n In addition, the example changes the way in which the time interval parsing methods interpret a single digit. Ordinarily, a single digit is interpreted as the number of days in a time interval. Instead, the `%h` custom format string is used to interpret a single digit as the number of hours. For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.  \n  \n [!CODE [System.TimeSpan.ParseExact#3](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.parseexact#3)]"
  syntax:
    content: public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: formats
      type: System.String[]
      description: A array of standard or custom format strings that defines the required format of .
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    return:
      type: System.TimeSpan
      description: A time interval that corresponds to , as specified by  and .
  overload: System.TimeSpan.ParseExact*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)
  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)
  parent: System.TimeSpan
  langs:
  - csharp
  name: ParseExact(String,String,IFormatProvider,TimeSpanStyles)
  nameWithType: TimeSpan.ParseExact(String,String,IFormatProvider,TimeSpanStyles)
  fullName: System.TimeSpan.ParseExact(String,String,IFormatProvider,TimeSpanStyles)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified format, culture-specific format information, and styles. The format of the string representation must match the specified format exactly.
  remarks: "The ParseExact method parses the string representation of a time interval, which must be in the format defined by the  parameter, except that leading and trailing white-space characters are ignored. Because  must conform to the format of  exactly, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method instead.  \n  \n The  parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of . For more information about valid format strings, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  \n  \n> [!IMPORTANT]\n>  The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the  parameter only if  is a standard <xref:System.TimeSpan> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if  is a standard format string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.  \n  \n The  parameter affects the interpretation of strings that are parsed using custom format strings. It determines whether  is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles?displayProperty=fullName>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles?displayProperty=fullName>). If <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> is not used,  must include a literal negative sign symbol (such as \"\\\\-\") to successfully parse a negative time interval."
  example:
  - "The following example uses the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method to parse several string representations of time intervals using various format strings and cultures. It also uses the <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> value to interpret each string as a negative time interval. The output from the example illustrates that the <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> style affects the return value only when it is used with custom format strings.  \n  \n [!CODE [System.TimeSpan.ParseExact#2](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.parseexact#2)]"
  syntax:
    content: public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: format
      type: System.String
      description: A standard or custom format string that defines the required format of .
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    - id: styles
      type: System.Globalization.TimeSpanStyles
      description: A bitwise combination of enumeration values that defines the style elements that may be present in .
    return:
      type: System.TimeSpan
      description: A time interval that corresponds to , as specified by , , and .
  overload: System.TimeSpan.ParseExact*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)
  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)
  parent: System.TimeSpan
  langs:
  - csharp
  name: ParseExact(String,String[],IFormatProvider,TimeSpanStyles)
  nameWithType: TimeSpan.ParseExact(String,String[],IFormatProvider,TimeSpanStyles)
  fullName: System.TimeSpan.ParseExact(String,String[],IFormatProvider,TimeSpanStyles)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified formats, culture-specific format information, and styles. The format of the string representation must match one of the specified formats exactly.
  remarks: "The ParseExact method parses the string representation of a time interval, which must be in one of the formats defined by the  parameter, except that leading and trailing white-space characters are ignored. Because  must exactly conform to one of the formats specified in , you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the [TryParseExact(String, String\\[\\], IFormatProvider, TimeSpanStyles, TimeSpan)](assetId:///M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)?qualifyHint=False&autoUpgrade=False) method instead.  \n  \n The  parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of . For more information about valid format strings, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  must correspond exactly to a member of  for the parse operation to succeed. The parse operation attempts to match  to each element in  starting with the first element in the array.  \n  \n> [!IMPORTANT]\n>  The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the  parameter only if the format string used to parse  is a standard <xref:System.TimeSpan> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse  is a standard format string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.  \n  \n The  parameter affects the interpretation of strings that are parsed using custom format strings. It determines whether  is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles?displayProperty=fullName>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles?displayProperty=fullName>). If <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> is not used,  must include a literal negative sign symbol (such as \"\\\\-\") to successfully parse a negative time interval."
  example:
  - "The following example calls the ParseExact method to convert each element of a string array to a <xref:System.TimeSpan> value. The strings can represent a time interval in either the general short format or the general long format.  \n  \n In addition, the example changes the way in which the time interval parsing methods interpret a single digit. Ordinarily, a single digit is interpreted as the number of days in a time interval. Instead, the `%h` custom format string is used to interpret a single digit as the number of hours. For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array. Also note from the output that the <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> flag specified in the method call is used only when parsing a string with this format specifier.  \n  \n [!CODE [System.TimeSpan.ParseExact#4](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.parseexact#4)]"
  syntax:
    content: public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: formats
      type: System.String[]
      description: A array of standard or custom format strings that define the required format of .
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    - id: styles
      type: System.Globalization.TimeSpanStyles
      description: A bitwise combination of enumeration values that defines the style elements that may be present in input.
    return:
      type: System.TimeSpan
      description: A time interval that corresponds to , as specified by , , and .
  overload: System.TimeSpan.ParseExact*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Seconds
  id: Seconds
  parent: System.TimeSpan
  langs:
  - csharp
  name: Seconds
  nameWithType: TimeSpan.Seconds
  fullName: System.TimeSpan.Seconds
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the seconds component of the time interval represented by the current <see cref="T:System.TimeSpan"> structure.
  remarks: "A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second. The value of the Seconds property is the seconds component, *ss*.  \n  \n The Seconds property represents whole seconds, whereas the <xref:System.TimeSpan.TotalSeconds%2A> property represents whole and fractional seconds."
  example:
  - "The following example creates several <xref:System.TimeSpan> objects and displays the Seconds property of each.  \n  \n [!CODE [System.TimeSpan.Properties#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Properties#1)]"
  syntax:
    content: public int Seconds { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Subtract(System.TimeSpan)
  id: Subtract(System.TimeSpan)
  parent: System.TimeSpan
  langs:
  - csharp
  name: Subtract(TimeSpan)
  nameWithType: TimeSpan.Subtract(TimeSpan)
  fullName: System.TimeSpan.Subtract(TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a new <see cref="T:System.TimeSpan"> object whose value is the difference between the specified <see cref="T:System.TimeSpan"> object and this instance.
  remarks: "The return value must be between <xref:System.TimeSpan?displayProperty=fullName> and <xref:System.TimeSpan?displayProperty=fullName>; otherwise, an exception is thrown.  \n  \n The return value is a new <xref:System.TimeSpan>; the original <xref:System.TimeSpan> is not modified."
  example:
  - "The following example uses the Subtract method to calculate the difference between a single <xref:System.TimeSpan> value and each of the time intervals in an array. Note that, because <xref:System.TimeSpan> format strings do not include negative signs in the result string, the example uses conditional logic to include a negative sign with negative time intervals.  \n  \n [!CODE [System.TimeSpan.Subtract#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.subtract#1)]"
  syntax:
    content: public TimeSpan Subtract (TimeSpan ts);
    parameters:
    - id: ts
      type: System.TimeSpan
      description: The time interval to be subtracted.
    return:
      type: System.TimeSpan
      description: A new time interval whose value is the result of the value of this instance minus the value of .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Ticks
  id: Ticks
  parent: System.TimeSpan
  langs:
  - csharp
  name: Ticks
  nameWithType: TimeSpan.Ticks
  fullName: System.TimeSpan.Ticks
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the number of ticks that represent the value of the current <see cref="T:System.TimeSpan"> structure.
  remarks: The smallest unit of time is the tick, which is equal to 100 nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond. The value of the Ticks property can be negative or positive to represent a negative or positive time interval.
  example:
  - "The following example creates several <xref:System.TimeSpan> objects and displays the Ticks property of each.  \n  \n [!CODE [System.TimeSpan.Properties#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Properties#1)]"
  syntax:
    content: public long Ticks { get; }
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TicksPerDay
  id: TicksPerDay
  parent: System.TimeSpan
  langs:
  - csharp
  name: TicksPerDay
  nameWithType: TimeSpan.TicksPerDay
  fullName: System.TimeSpan.TicksPerDay
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the number of ticks in 1 day. This field is constant.
  remarks: The value of this constant is 864 billion; that is, 864,000,000,000.
  example:
  - "The following example references and displays the value of the TicksPerDay field.  \n  \n [!CODE [System.TimeSpan.Fields#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Fields#1)]"
  syntax:
    content: public const long TicksPerDay = 864000000000;
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TicksPerHour
  id: TicksPerHour
  parent: System.TimeSpan
  langs:
  - csharp
  name: TicksPerHour
  nameWithType: TimeSpan.TicksPerHour
  fullName: System.TimeSpan.TicksPerHour
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the number of ticks in 1 hour. This field is constant.
  remarks: The value of this constant is 36 billion; that is, 36,000,000,000.
  example:
  - "The following example references and displays the value of the TicksPerHour field.  \n  \n [!CODE [System.TimeSpan.Fields#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Fields#1)]"
  syntax:
    content: public const long TicksPerHour = 36000000000;
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TicksPerMillisecond
  id: TicksPerMillisecond
  parent: System.TimeSpan
  langs:
  - csharp
  name: TicksPerMillisecond
  nameWithType: TimeSpan.TicksPerMillisecond
  fullName: System.TimeSpan.TicksPerMillisecond
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the number of ticks in 1 millisecond. This field is constant.
  remarks: The value of this constant is 10 thousand; that is, 10,000.
  example:
  - "The following example references and displays the value of the TicksPerMillisecond field.  \n  \n [!CODE [System.TimeSpan.Fields#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Fields#1)]"
  syntax:
    content: public const long TicksPerMillisecond = 10000;
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TicksPerMinute
  id: TicksPerMinute
  parent: System.TimeSpan
  langs:
  - csharp
  name: TicksPerMinute
  nameWithType: TimeSpan.TicksPerMinute
  fullName: System.TimeSpan.TicksPerMinute
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the number of ticks in 1 minute. This field is constant.
  remarks: The value of this constant is 600 million; that is, 600,000,000.
  example:
  - "The following example references and displays the value of the TicksPerMinute field.  \n  \n [!CODE [System.TimeSpan.Fields#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Fields#1)]"
  syntax:
    content: public const long TicksPerMinute = 600000000;
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TicksPerSecond
  id: TicksPerSecond
  parent: System.TimeSpan
  langs:
  - csharp
  name: TicksPerSecond
  nameWithType: TimeSpan.TicksPerSecond
  fullName: System.TimeSpan.TicksPerSecond
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the number of ticks in 1 second.
  remarks: The value of this constant is 10 million; that is, 10,000,000.
  example:
  - "The following example references and displays the value of the TicksPerSecond field.  \n  \n [!CODE [System.TimeSpan.Fields#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Fields#1)]"
  syntax:
    content: public const long TicksPerSecond = 10000000;
    return:
      type: System.Int64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.ToString
  id: ToString
  parent: System.TimeSpan
  langs:
  - csharp
  name: ToString()
  nameWithType: TimeSpan.ToString()
  fullName: System.TimeSpan.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of the current <see cref="T:System.TimeSpan"> object to its equivalent string representation.
  remarks: "The returned string is formatted with the \"c\" format specifier and has the following format:  \n  \n [-][*d*.]*hh*:*mm*:*ss*[.*fffffff*]  \n  \n Elements in square brackets ([ and ]) may not be included in the returned string. Colons and periods (: and.) are literal characters. The non-literal elements are listed in the following table. Note that the string returned by the ToString method is not culture-sensitive.  \n  \n|Item|Description|  \n|----------|-----------------|  \n|\"-\"|A minus sign, which indicates a negative time interval. No sign is included for a positive time span.|  \n|\"*d*\"|The number of days in the time interval. This element is omitted if the time interval is less than one day.|  \n|\"*hh*\"|The number of hours in the time interval, ranging from 0 to 23.|  \n|\"*mm*\"|The number of minutes in the time interval, ranging from 0 to 59.|  \n|\"*ss*\"|The number of seconds in the time interval, ranging from 0 to 59.|  \n|\"*fffffff*\"|Fractional seconds in the time interval. This element is omitted if the time interval does not include fractional seconds. If present, fractional seconds are always expressed using seven decimal digits.|  \n  \n> [!NOTE]\n>  For more information about comparing the string representation of <xref:System.TimeSpan> and Oracle data types, see Knowledge Base article [324577: System.TimeSpan Does Not Match Oracle 9i INTERVAL DAY TO SECOND Data Type](http://go.microsoft.com/fwlink/?LinkId=161146)."
  example:
  - "The following example displays the strings returned by calling the ToString method with a number of <xref:System.TimeSpan> values. Note that although the example does not call the ToString method directly, it is called by the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method when it attempts to convert a <xref:System.TimeSpan> value to its string representation.  \n  \n [!CODE [System.TimeSpan.ToString#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.ToString#1)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The string representation of the current <see cref="T:System.TimeSpan"> value.
  overload: System.TimeSpan.ToString*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.ToString(System.String)
  id: ToString(System.String)
  parent: System.TimeSpan
  langs:
  - csharp
  name: ToString(String)
  nameWithType: TimeSpan.ToString(String)
  fullName: System.TimeSpan.ToString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of the current <see cref="T:System.TimeSpan"> object to its equivalent string representation by using the specified format.
  remarks: "The  parameter can be any valid standard or custom format specifier for <xref:System.TimeSpan> values. If  is equal to <xref:System.String.Empty?displayProperty=fullName> or is `null`, the return value of the current <xref:System.TimeSpan> object is formatted with the common format specifier (\"c\"). If  is any other value, the method throws a <xref:System.FormatException>.  \n  \n If  is a standard format string, the format of the returned string is defined by the formatting conventions of the current culture.  \n  \n> [!IMPORTANT]\n>  The custom format strings for <xref:System.TimeSpan> values do not include a date or time separator. If you want to include these elements in your format string, you must treat them as character literals. See the example for an illustration, and see the [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md) topic for more information.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about format strings for <xref:System.TimeSpan> values, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  \n  \n-   For more information about support for formatting in the .NET Framework, see [Formatting Types](../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md)."
  example:
  - "The following example uses standard and custom <xref:System.TimeSpan> format strings to display the string representation of each element in an array of <xref:System.TimeSpan> values  \n  \n [!CODE [System.TimeSpan.ToString#3](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.ToString#3)]"
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: A standard or custom <see cref="T:System.TimeSpan"> format string.
    return:
      type: System.String
      description: The string representation of the current <see cref="T:System.TimeSpan"> value in the format specified by the  parameter.
  overload: System.TimeSpan.ToString*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.TimeSpan
  langs:
  - csharp
  name: ToString(String,IFormatProvider)
  nameWithType: TimeSpan.ToString(String,IFormatProvider)
  fullName: System.TimeSpan.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of the current <see cref="T:System.TimeSpan"> object to its equivalent string representation by using the specified format and culture-specific formatting information.
  remarks: "The  parameter can be any valid standard or custom format specifier for <xref:System.TimeSpan> values. If  is equal to <xref:System.String.Empty?displayProperty=fullName> or is `null`, the return value of the current <xref:System.TimeSpan> object is formatted with the common format specifier (\"c\"). If format is any other value, the method throws a <xref:System.FormatException>.  \n  \n> [!IMPORTANT]\n>  The custom format strings for <xref:System.TimeSpan> values do not include a date or time separator. If you want to include these elements in your format string, you must treat them as character literals. See the example for an illustration, and see the [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md) topic for more information.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about format strings for <xref:System.TimeSpan> values, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  \n  \n-   For more information about support for formatting in the .NET Framework, see [Formatting Types](../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md).  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object retuned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used. If  is a custom format string, the  parameter is ignored."
  example:
  - "The following example calls the ToString method to format two time intervals. The example calls the method twice for each format string, first to display it using the conventions of the en-US culture and then to display it using the conventions of the fr-FR culture.  \n  \n [!CODE [System.TimeSpan.ToString#4](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.ToString#4)]"
  syntax:
    content: public string ToString (string format, IFormatProvider formatProvider);
    parameters:
    - id: format
      type: System.String
      description: A standard or custom <see cref="T:System.TimeSpan"> format string.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: The string representation of the current <see cref="T:System.TimeSpan"> value, as specified by  and .
  overload: System.TimeSpan.ToString*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TotalDays
  id: TotalDays
  parent: System.TimeSpan
  langs:
  - csharp
  name: TotalDays
  nameWithType: TimeSpan.TotalDays
  fullName: System.TimeSpan.TotalDays
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the value of the current <see cref="T:System.TimeSpan"> structure expressed in whole and fractional days.
  remarks: "This property converts the value of this instance from ticks to days. This number might include whole and fractional days.  \n  \n The TotalDays property represents whole and fractional days, whereas the <xref:System.TimeSpan.Days%2A> property represents whole days."
  example:
  - "The following example instantiates a <xref:System.TimeSpan> object and displays the value of its TotalDays property. It also displays the value of each component (hours, minutes, seconds, milliseconds) that forms the fractional part of the value of its TotalDays property.  \n  \n [!CODE [System.TimeSpan.TotalDays#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.totaldays#1)]"
  syntax:
    content: public double TotalDays { get; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TotalHours
  id: TotalHours
  parent: System.TimeSpan
  langs:
  - csharp
  name: TotalHours
  nameWithType: TimeSpan.TotalHours
  fullName: System.TimeSpan.TotalHours
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the value of the current <see cref="T:System.TimeSpan"> structure expressed in whole and fractional hours.
  remarks: "This property converts the value of this instance from ticks to hours. This number might include whole and fractional hours.  \n  \n The TotalHours property represents whole and fractional hours, whereas the <xref:System.TimeSpan.Hours%2A> property represents whole hours."
  example:
  - "The following example instantiates a <xref:System.TimeSpan> object and displays the value its TotalHours property. It also displays the value of each component (hours, minutes, seconds, and milliseconds) that forms the fractional part of the value of its TotalHours property.  \n  \n [!CODE [System.TimeSpan.TotalHours#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.totalhours#1)]"
  syntax:
    content: public double TotalHours { get; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TotalMilliseconds
  id: TotalMilliseconds
  parent: System.TimeSpan
  langs:
  - csharp
  name: TotalMilliseconds
  nameWithType: TimeSpan.TotalMilliseconds
  fullName: System.TimeSpan.TotalMilliseconds
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the value of the current <see cref="T:System.TimeSpan"> structure expressed in whole and fractional milliseconds.
  remarks: "This property converts the value of this instance from ticks to milliseconds. This number might include whole and fractional milliseconds.  \n  \n The TotalMilliseconds property represents whole and fractional milliseconds, whereas the <xref:System.TimeSpan.Milliseconds%2A> property represents whole milliseconds."
  example:
  - "The following example instantiates a <xref:System.TimeSpan> object and displays the value of its TotalMilliseconds property.  \n  \n [!CODE [System.TimeSpan.TotalMilliseconds#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.totalmilliseconds#1)]"
  syntax:
    content: public double TotalMilliseconds { get; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TotalMinutes
  id: TotalMinutes
  parent: System.TimeSpan
  langs:
  - csharp
  name: TotalMinutes
  nameWithType: TimeSpan.TotalMinutes
  fullName: System.TimeSpan.TotalMinutes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the value of the current <see cref="T:System.TimeSpan"> structure expressed in whole and fractional minutes.
  remarks: "This property converts the value of this instance from ticks to minutes. This number might include whole and fractional minutes.  \n  \n The TotalMinutes property represents whole and fractional minutes, whereas the <xref:System.TimeSpan.Minutes%2A> property represents whole minutes."
  example:
  - "The following example instantiates a <xref:System.TimeSpan> object and displays the value of its TotalMinutes property. It also displays the value of each component (seconds, milliseconds) that forms the fractional part of the value of its TotalMinutes property.  \n  \n [!CODE [System.TimeSpan.TotalMinutes#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.totalminutes#1)]"
  syntax:
    content: public double TotalMinutes { get; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TotalSeconds
  id: TotalSeconds
  parent: System.TimeSpan
  langs:
  - csharp
  name: TotalSeconds
  nameWithType: TimeSpan.TotalSeconds
  fullName: System.TimeSpan.TotalSeconds
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the value of the current <see cref="T:System.TimeSpan"> structure expressed in whole and fractional seconds.
  remarks: "This property converts the value of this instance from ticks to seconds. This number might include whole and fractional seconds.  \n  \n The TotalSeconds property represents whole and fractional seconds, whereas the <xref:System.TimeSpan.Seconds%2A> property represents whole seconds."
  example:
  - "The following example instantiates a <xref:System.TimeSpan> object and displays the value of its TotalSeconds property. It also displays the value of its milliseconds component, which forms the fractional part of the value of its TotalSeconds property.  \n  \n [!CODE [System.TimeSpan.TotalSeconds#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.totalseconds#1)]"
  syntax:
    content: public double TotalSeconds { get; }
    return:
      type: System.Double
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TryParse(System.String,System.TimeSpan@)
  id: TryParse(System.String,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  name: TryParse(String,TimeSpan)
  nameWithType: TimeSpan.TryParse(String,TimeSpan)
  fullName: System.TimeSpan.TryParse(String,TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent and returns a value that indicates whether the conversion succeeded.
  remarks: "The TryParse method is like the <xref:System.TimeSpan.Parse%28System.String%29?displayProperty=fullName> method, except that it does not throw an exception if the conversion fails.  \n  \n The  parameter contains a time interval specification in the form:  \n  \n [*ws*][-]{ *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]] }[*ws*]  \n  \n Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space.|  \n|-|An optional minus sign, which indicates a negative <xref:System.TimeSpan>.|  \n|*d*|Days, ranging from 0 to 10675199.|  \n|.|A culture-sensitive symbol that separates days from hours. The invariant format uses a period (\".\") character.|  \n|*hh*|Hours, ranging from 0 to 23.|  \n|:|The culture-sensitive time separator symbol. The invariant format uses a colon (\":\") character.|  \n|*mm*|Minutes, ranging from 0 to 59.|  \n|*ss*|Optional seconds, ranging from 0 to 59.|  \n|.|A culture-sensitive symbol that separates seconds from fractions of a second. The invariant format uses a period (\".\") character.|  \n|*ff*|Optional fractional seconds, consisting of one to seven decimal digits.|  \n  \n The components of  must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=fullName> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=fullName>.  \n  \n The <xref:System.TimeSpan.Parse%28System.String%29> method tries to parse  by using each of the culture-specific formats for the current culture."
  example:
  - "The following example uses the TryParse method to create <xref:System.TimeSpan> objects from valid <xref:System.TimeSpan> strings and to indicate when the parse operation has failed because the time span string is invalid.  \n  \n [!CODE [System.TimeSpan.TryParse#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.TryParse#1)]"
  syntax:
    content: public static bool TryParse (string s, out TimeSpan result);
    parameters:
    - id: s
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: result
      type: System.TimeSpan
      description: When this method returns, contains an object that represents the time interval specified by , or <xref:System.TimeSpan?displayProperty=fullName> if the conversion failed. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if  was converted successfully; otherwise, `false`. This operation returns `false` if the  parameter is `null` or <xref:System.String.Empty?displayProperty=fullName>, has an invalid format, represents a time interval that is less than <xref:System.TimeSpan.MinValue?displayProperty=fullName> or greater than <xref:System.TimeSpan.MaxValue?displayProperty=fullName>, or has at least one days, hours, minutes, or seconds component outside its valid range.'
  overload: System.TimeSpan.TryParse*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)
  id: TryParse(System.String,System.IFormatProvider,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  name: TryParse(String,IFormatProvider,TimeSpan)
  nameWithType: TimeSpan.TryParse(String,IFormatProvider,TimeSpan)
  fullName: System.TimeSpan.TryParse(String,IFormatProvider,TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified culture-specific formatting information, and returns a value that indicates whether the conversion succeeded.
  remarks: "The TryParse method is like the <xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.  \n  \n The  parameter contains a time interval specification in the form:  \n  \n [*ws*][-]{ *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]] }[*ws*]  \n  \n Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space.|  \n|-|An optional minus sign, which indicates a negative <xref:System.TimeSpan>.|  \n|*d*|Days, ranging from 0 to 10675199.|  \n|.|A culture-sensitive symbol that separates days from hours. The invariant format uses a period (\".\") character.|  \n|*hh*|Hours, ranging from 0 to 23.|  \n|:|The culture-sensitive time separator symbol. The invariant format uses a colon (\":\") character.|  \n|*mm*|Minutes, ranging from 0 to 59.|  \n|*ss*|Optional seconds, ranging from 0 to 59.|  \n|.|A culture-sensitive symbol that separates seconds from fractions of a second. The invariant format uses a period (\".\") character.|  \n|*ff*|Optional fractional seconds, consisting of one to seven decimal digits.|  \n  \n The components of  must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=fullName> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=fullName>.  \n  \n The TryParse method tries to parse  by using each of the culture-specific formats for the culture specified by .  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used."
  example:
  - "The following example defines an array of <xref:System.Globalization.CultureInfo> objects, and uses each object in calls to the TryParse method to parse the elements in a string array. The example illustrates how the conventions of a specific culture influence the formatting operation.  \n  \n [!CODE [System.TimeSpan.TryParse#2](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.TryParse#2)]"
  syntax:
    content: public static bool TryParse (string input, IFormatProvider formatProvider, out TimeSpan result);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    - id: result
      type: System.TimeSpan
      description: When this method returns, contains an object that represents the time interval specified by , or <xref:System.TimeSpan?displayProperty=fullName> if the conversion failed. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if  was converted successfully; otherwise, `false`. This operation returns `false` if the  parameter is `null` or <xref:System.String.Empty?displayProperty=fullName>, has an invalid format, represents a time interval that is less than <xref:System.TimeSpan.MinValue?displayProperty=fullName> or greater than <xref:System.TimeSpan.MaxValue?displayProperty=fullName>, or has at least one days, hours, minutes, or seconds component outside its valid range.'
  overload: System.TimeSpan.TryParse*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  name: TryParseExact(String,String,IFormatProvider,TimeSpan)
  nameWithType: TimeSpan.TryParseExact(String,String,IFormatProvider,TimeSpan)
  fullName: System.TimeSpan.TryParseExact(String,String,IFormatProvider,TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified format and culture-specific format information, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match the specified format exactly.
  remarks: "The TryParseExact method parses the string representation of a time interval, which must be in the format defined by the  parameter, except that leading and trailing white-space characters are ignored. This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.  \n  \n The  parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of . For more information about valid format strings, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  \n  \n> [!IMPORTANT]\n>  The TryParseExact method uses the conventions of the culture specified by the  parameter only if  is a standard <xref:System.TimeSpan> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if  is a standard format string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used."
  example:
  - "The following example uses the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method to parse several string representations of time intervals using various format strings and cultures.  \n  \n [!CODE [System.TimeSpan.TryParseExact#1](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.tryparseexact#1)]"
  syntax:
    content: public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, out TimeSpan result);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: format
      type: System.String
      description: A standard or custom format string that defines the required format of .
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    - id: result
      type: System.TimeSpan
      description: When this method returns, contains an object that represents the time interval specified by , or <xref:System.TimeSpan?displayProperty=fullName> if the conversion failed. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if  was converted successfully; otherwise, `false`.'
  overload: System.TimeSpan.TryParseExact*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  name: TryParseExact(String,String[],IFormatProvider,TimeSpan)
  nameWithType: TimeSpan.TryParseExact(String,String[],IFormatProvider,TimeSpan)
  fullName: System.TimeSpan.TryParseExact(String,String[],IFormatProvider,TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified formats and culture-specific format information, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match one of the specified formats exactly.
  remarks: "The TryParseExact method parses the string representation of a time interval, which must be in the format defined by one of the format strings specified by the  parameter, except that leading and trailing white-space characters are ignored. This method is similar to the [ParseExact(String, String\\[\\], IFormatProvider)](assetId:///M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)?qualifyHint=False&autoUpgrade=False) method, except that it does not throw an exception if the conversion fails.  \n  \n The  parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of . For more information about valid format strings, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  must correspond exactly to a member of  for the parse operation to succeed. The parse operation attempts to match  to each element in  starting with the first element in the array.  \n  \n> [!IMPORTANT]\n>  The TryParseExact method uses the conventions of the culture specified by the  parameter only if the format string used to parse  is a standard <xref:System.TimeSpan> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse  is a standard format string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used."
  example:
  - "The following example calls the TryParseExact method to convert each element of a string array to a <xref:System.TimeSpan> value. The example interprets the strings by using the formatting conventions of the French - France (\"fr-FR\") culture. The strings can represent a time interval in either the general short format or the general long format.  \n  \n In addition, the example changes the way in which the time interval parsing methods interpret a single digit. Ordinarily, a single digit is interpreted as the number of days in a time interval. Instead, the `%h` custom format string is used to interpret a single digit as the number of hours. For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.  \n  \n [!CODE [System.TimeSpan.TryParseExact#3](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.tryparseexact#3)]"
  syntax:
    content: public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: formats
      type: System.String[]
      description: A array of standard or custom format strings that define the acceptable formats of .
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    - id: result
      type: System.TimeSpan
      description: When this method returns, contains an object that represents the time interval specified by , or <xref:System.TimeSpan?displayProperty=fullName> if the conversion failed. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if  was converted successfully; otherwise, `false`.'
  overload: System.TimeSpan.TryParseExact*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  name: TryParseExact(String,String,IFormatProvider,TimeSpanStyles,TimeSpan)
  nameWithType: TimeSpan.TryParseExact(String,String,IFormatProvider,TimeSpanStyles,TimeSpan)
  fullName: System.TimeSpan.TryParseExact(String,String,IFormatProvider,TimeSpanStyles,TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified format, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match the specified format exactly.
  remarks: "The TryParseExact method parses the string representation of a time interval, which must be in the format defined by the  parameter, except that leading and trailing white-space characters are ignored. This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> method, except that it does not throw an exception if the conversion fails.  \n  \n The  parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of . For more information about valid format strings, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if  is a standard format string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.  \n  \n The  parameter affects the interpretation of strings parsed using custom format strings. It determines whether  is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles?displayProperty=fullName>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles?displayProperty=fullName>). If <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> is not used,  must include a literal negative sign symbol (such as \"\\\\-\") to successfully parse a negative time interval."
  example:
  - "The following example uses the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method to parse several string representations of time intervals using various format strings and cultures. It also uses the <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> value to interpret each string as a negative time interval. The output from the example illustrates that the <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> style affects the return value only when it is used with custom format strings.  \n  \n [!CODE [System.TimeSpan.TryParseExact#2](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.tryparseexact#2)]"
  syntax:
    content: public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: format
      type: System.String
      description: A standard or custom format string that defines the required format of .
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that provides culture-specific formatting information.
    - id: styles
      type: System.Globalization.TimeSpanStyles
      description: One or more enumeration values that indicate the style of .
    - id: result
      type: System.TimeSpan
      description: When this method returns, contains an object that represents the time interval specified by , or <xref:System.TimeSpan?displayProperty=fullName> if the conversion failed. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if  was converted successfully; otherwise, `false`.'
  overload: System.TimeSpan.TryParseExact*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  parent: System.TimeSpan
  langs:
  - csharp
  name: TryParseExact(String,String[],IFormatProvider,TimeSpanStyles,TimeSpan)
  nameWithType: TimeSpan.TryParseExact(String,String[],IFormatProvider,TimeSpanStyles,TimeSpan)
  fullName: System.TimeSpan.TryParseExact(String,String[],IFormatProvider,TimeSpanStyles,TimeSpan)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the specified string representation of a time interval to its <see cref="T:System.TimeSpan"> equivalent by using the specified formats, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded. The format of the string representation must match one of the specified formats exactly.
  remarks: "The TryParseExact method parses the string representation of a time interval, which must be in the format defined by one of the format strings specified by the  parameter, except that leading and trailing white-space characters are ignored. This method is similar to the [ParseExact(String, String\\[\\], IFormatProvider, TimeSpanStyles)](assetId:///M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)?qualifyHint=False&autoUpgrade=False) method, except that it does not throw an exception if the conversion fails.  \n  \n The  parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of . For more information about valid format strings, see [Standard TimeSpan Format Strings](../Topic/Standard%20TimeSpan%20Format%20Strings.md) and [Custom TimeSpan Format Strings](../Topic/Custom%20TimeSpan%20Format%20Strings.md).  must correspond exactly to a member of  for the parse operation to succeed. The parse operation attempts to match  to each element in  starting with the first element in the array.  \n  \n> [!IMPORTANT]\n>  The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the  parameter only if the format string used to parse  is a standard <xref:System.TimeSpan> format string whose value is either \"g\" or \"G\". The \"c\", \"t\", and \"T\" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.  \n  \n The  parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse  is a standard format string. The  parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If  is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.  \n  \n The  parameter affects the interpretation of strings that are parsed using custom format strings. It determines whether  is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles?displayProperty=fullName>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles?displayProperty=fullName>). If <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> is not used,  must include a literal negative sign symbol (such as \"\\\\-\") to successfully parse a negative time interval."
  example:
  - "The following example calls the TryParseExact method to convert each element of a string array to a <xref:System.TimeSpan> value. The strings can represent a time interval in either the general short format or the general long format.  \n  \n In addition, the example changes the way in which the time interval parsing methods interpret a single digit. Ordinarily, a single digit is interpreted as the number of days in a time interval. Instead, the `%h` custom format string is used to interpret a single digit as the number of hours. For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array. Also note from the output that the <xref:System.Globalization.TimeSpanStyles?displayProperty=fullName> flag specified in the method call is used only when parsing a string with this format specifier.  \n  \n [!CODE [System.TimeSpan.TryParseExact#4](../CodeSnippet/VS_Snippets_CLR_System/system.timespan.tryparseexact#4)]"
  syntax:
    content: public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);
    parameters:
    - id: input
      type: System.String
      description: A string that specifies the time interval to convert.
    - id: formats
      type: System.String[]
      description: A array of standard or custom format strings that define the acceptable formats of .
    - id: formatProvider
      type: System.IFormatProvider
      description: An object that supplies culture-specific formatting information.
    - id: styles
      type: System.Globalization.TimeSpanStyles
      description: One or more enumeration values that indicate the style of .
    - id: result
      type: System.TimeSpan
      description: When this method returns, contains an object that represents the time interval specified by , or <xref:System.TimeSpan?displayProperty=fullName> if the conversion failed. This parameter is passed uninitialized.
    return:
      type: System.Boolean
      description: '`true` if  was converted successfully; otherwise, `false`.'
  overload: System.TimeSpan.TryParseExact*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.TimeSpan.Zero
  id: Zero
  parent: System.TimeSpan
  langs:
  - csharp
  name: Zero
  nameWithType: TimeSpan.Zero
  fullName: System.TimeSpan.Zero
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: Represents the zero <see cref="T:System.TimeSpan"> value. This field is read-only.
  remarks: Because the value of the Zero field is a <xref:System.TimeSpan> object that represents a zero time value, you can compare it with other <xref:System.TimeSpan> objects to determine whether the latter represent positive, non-zero, or negative time intervals. You can also use this field to initialize a <xref:System.TimeSpan> object to a zero time value.
  example:
  - "The following example references and displays the value of the Zero field.  \n  \n [!CODE [System.TimeSpan.Fields#1](../CodeSnippet/VS_Snippets_CLR_System/system.TimeSpan.Fields#1)]"
  syntax:
    content: public static readonly TimeSpan Zero;
    return:
      type: System.TimeSpan
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.TimeSpan.#ctor(System.Int64)
  parent: System.TimeSpan
  isExternal: false
  name: TimeSpan(Int64)
  nameWithType: TimeSpan.TimeSpan(Int64)
  fullName: System.TimeSpan.TimeSpan(Int64)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)
  parent: System.TimeSpan
  isExternal: false
  name: TimeSpan(Int32,Int32,Int32)
  nameWithType: TimeSpan.TimeSpan(Int32,Int32,Int32)
  fullName: System.TimeSpan.TimeSpan(Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.TimeSpan
  isExternal: false
  name: TimeSpan(Int32,Int32,Int32,Int32)
  nameWithType: TimeSpan.TimeSpan(Int32,Int32,Int32,Int32)
  fullName: System.TimeSpan.TimeSpan(Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.TimeSpan
  isExternal: false
  name: TimeSpan(Int32,Int32,Int32,Int32,Int32)
  nameWithType: TimeSpan.TimeSpan(Int32,Int32,Int32,Int32,Int32)
  fullName: System.TimeSpan.TimeSpan(Int32,Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan.Add(System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: Add(TimeSpan)
  nameWithType: TimeSpan.Add(TimeSpan)
  fullName: System.TimeSpan.Add(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: Compare(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.Compare(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.Compare(TimeSpan,TimeSpan)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.CompareTo(System.Object)
  parent: System.TimeSpan
  isExternal: false
  name: CompareTo(Object)
  nameWithType: TimeSpan.CompareTo(Object)
  fullName: System.TimeSpan.CompareTo(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TimeSpan.CompareTo(System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: CompareTo(TimeSpan)
  nameWithType: TimeSpan.CompareTo(TimeSpan)
  fullName: System.TimeSpan.CompareTo(TimeSpan)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.Days
  parent: System.TimeSpan
  isExternal: false
  name: Days
  nameWithType: TimeSpan.Days
  fullName: System.TimeSpan.Days
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan.Duration
  parent: System.TimeSpan
  isExternal: false
  name: Duration()
  nameWithType: TimeSpan.Duration()
  fullName: System.TimeSpan.Duration()
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.Equals(System.Object)
  parent: System.TimeSpan
  isExternal: false
  name: Equals(Object)
  nameWithType: TimeSpan.Equals(Object)
  fullName: System.TimeSpan.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.TimeSpan.Equals(System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: Equals(TimeSpan)
  nameWithType: TimeSpan.Equals(TimeSpan)
  fullName: System.TimeSpan.Equals(TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: Equals(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.Equals(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.Equals(TimeSpan,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.FromDays(System.Double)
  parent: System.TimeSpan
  isExternal: false
  name: FromDays(Double)
  nameWithType: TimeSpan.FromDays(Double)
  fullName: System.TimeSpan.FromDays(Double)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.FromHours(System.Double)
  parent: System.TimeSpan
  isExternal: false
  name: FromHours(Double)
  nameWithType: TimeSpan.FromHours(Double)
  fullName: System.TimeSpan.FromHours(Double)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.FromMilliseconds(System.Double)
  parent: System.TimeSpan
  isExternal: false
  name: FromMilliseconds(Double)
  nameWithType: TimeSpan.FromMilliseconds(Double)
  fullName: System.TimeSpan.FromMilliseconds(Double)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.FromMinutes(System.Double)
  parent: System.TimeSpan
  isExternal: false
  name: FromMinutes(Double)
  nameWithType: TimeSpan.FromMinutes(Double)
  fullName: System.TimeSpan.FromMinutes(Double)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.FromSeconds(System.Double)
  parent: System.TimeSpan
  isExternal: false
  name: FromSeconds(Double)
  nameWithType: TimeSpan.FromSeconds(Double)
  fullName: System.TimeSpan.FromSeconds(Double)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.FromTicks(System.Int64)
  parent: System.TimeSpan
  isExternal: false
  name: FromTicks(Int64)
  nameWithType: TimeSpan.FromTicks(Int64)
  fullName: System.TimeSpan.FromTicks(Int64)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan.GetHashCode
  parent: System.TimeSpan
  isExternal: false
  name: GetHashCode()
  nameWithType: TimeSpan.GetHashCode()
  fullName: System.TimeSpan.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan.Hours
  parent: System.TimeSpan
  isExternal: false
  name: Hours
  nameWithType: TimeSpan.Hours
  fullName: System.TimeSpan.Hours
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan.MaxValue
  parent: System.TimeSpan
  isExternal: false
  name: MaxValue
  nameWithType: TimeSpan.MaxValue
  fullName: System.TimeSpan.MaxValue
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.Milliseconds
  parent: System.TimeSpan
  isExternal: false
  name: Milliseconds
  nameWithType: TimeSpan.Milliseconds
  fullName: System.TimeSpan.Milliseconds
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan.Minutes
  parent: System.TimeSpan
  isExternal: false
  name: Minutes
  nameWithType: TimeSpan.Minutes
  fullName: System.TimeSpan.Minutes
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan.MinValue
  parent: System.TimeSpan
  isExternal: false
  name: MinValue
  nameWithType: TimeSpan.MinValue
  fullName: System.TimeSpan.MinValue
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.Negate
  parent: System.TimeSpan
  isExternal: false
  name: Negate()
  nameWithType: TimeSpan.Negate()
  fullName: System.TimeSpan.Negate()
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_Addition(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_Addition(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_Addition(TimeSpan,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_Equality(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_Equality(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_Equality(TimeSpan,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_GreaterThan(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_GreaterThan(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_GreaterThan(TimeSpan,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_GreaterThanOrEqual(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_GreaterThanOrEqual(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_GreaterThanOrEqual(TimeSpan,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_Inequality(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_Inequality(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_Inequality(TimeSpan,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_LessThan(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_LessThan(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_LessThan(TimeSpan,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_LessThanOrEqual(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_LessThanOrEqual(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_LessThanOrEqual(TimeSpan,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_Subtraction(TimeSpan,TimeSpan)
  nameWithType: TimeSpan.op_Subtraction(TimeSpan,TimeSpan)
  fullName: System.TimeSpan.op_Subtraction(TimeSpan,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_UnaryNegation(System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_UnaryNegation(TimeSpan)
  nameWithType: TimeSpan.op_UnaryNegation(TimeSpan)
  fullName: System.TimeSpan.op_UnaryNegation(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.op_UnaryPlus(System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: op_UnaryPlus(TimeSpan)
  nameWithType: TimeSpan.op_UnaryPlus(TimeSpan)
  fullName: System.TimeSpan.op_UnaryPlus(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.Parse(System.String)
  parent: System.TimeSpan
  isExternal: false
  name: Parse(String)
  nameWithType: TimeSpan.Parse(String)
  fullName: System.TimeSpan.Parse(String)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan.Parse(System.String,System.IFormatProvider)
  parent: System.TimeSpan
  isExternal: false
  name: Parse(String,IFormatProvider)
  nameWithType: TimeSpan.Parse(String,IFormatProvider)
  fullName: System.TimeSpan.Parse(String,IFormatProvider)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)
  parent: System.TimeSpan
  isExternal: false
  name: ParseExact(String,String,IFormatProvider)
  nameWithType: TimeSpan.ParseExact(String,String,IFormatProvider)
  fullName: System.TimeSpan.ParseExact(String,String,IFormatProvider)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)
  parent: System.TimeSpan
  isExternal: false
  name: ParseExact(String,String[],IFormatProvider)
  nameWithType: TimeSpan.ParseExact(String,String[],IFormatProvider)
  fullName: System.TimeSpan.ParseExact(String,String[],IFormatProvider)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)
  parent: System.TimeSpan
  isExternal: false
  name: ParseExact(String,String,IFormatProvider,TimeSpanStyles)
  nameWithType: TimeSpan.ParseExact(String,String,IFormatProvider,TimeSpanStyles)
  fullName: System.TimeSpan.ParseExact(String,String,IFormatProvider,TimeSpanStyles)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Globalization.TimeSpanStyles
  parent: System.Globalization
  isExternal: false
  name: TimeSpanStyles
  nameWithType: TimeSpanStyles
  fullName: System.Globalization.TimeSpanStyles
- uid: System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)
  parent: System.TimeSpan
  isExternal: false
  name: ParseExact(String,String[],IFormatProvider,TimeSpanStyles)
  nameWithType: TimeSpan.ParseExact(String,String[],IFormatProvider,TimeSpanStyles)
  fullName: System.TimeSpan.ParseExact(String,String[],IFormatProvider,TimeSpanStyles)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Globalization.TimeSpanStyles
  parent: System.Globalization
  isExternal: false
  name: TimeSpanStyles
  nameWithType: TimeSpanStyles
  fullName: System.Globalization.TimeSpanStyles
- uid: System.TimeSpan.Seconds
  parent: System.TimeSpan
  isExternal: false
  name: Seconds
  nameWithType: TimeSpan.Seconds
  fullName: System.TimeSpan.Seconds
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeSpan.Subtract(System.TimeSpan)
  parent: System.TimeSpan
  isExternal: false
  name: Subtract(TimeSpan)
  nameWithType: TimeSpan.Subtract(TimeSpan)
  fullName: System.TimeSpan.Subtract(TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.Ticks
  parent: System.TimeSpan
  isExternal: false
  name: Ticks
  nameWithType: TimeSpan.Ticks
  fullName: System.TimeSpan.Ticks
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan.TicksPerDay
  parent: System.TimeSpan
  isExternal: false
  name: TicksPerDay
  nameWithType: TimeSpan.TicksPerDay
  fullName: System.TimeSpan.TicksPerDay
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan.TicksPerHour
  parent: System.TimeSpan
  isExternal: false
  name: TicksPerHour
  nameWithType: TimeSpan.TicksPerHour
  fullName: System.TimeSpan.TicksPerHour
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan.TicksPerMillisecond
  parent: System.TimeSpan
  isExternal: false
  name: TicksPerMillisecond
  nameWithType: TimeSpan.TicksPerMillisecond
  fullName: System.TimeSpan.TicksPerMillisecond
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan.TicksPerMinute
  parent: System.TimeSpan
  isExternal: false
  name: TicksPerMinute
  nameWithType: TimeSpan.TicksPerMinute
  fullName: System.TimeSpan.TicksPerMinute
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan.TicksPerSecond
  parent: System.TimeSpan
  isExternal: false
  name: TicksPerSecond
  nameWithType: TimeSpan.TicksPerSecond
  fullName: System.TimeSpan.TicksPerSecond
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.TimeSpan.ToString
  parent: System.TimeSpan
  isExternal: false
  name: ToString()
  nameWithType: TimeSpan.ToString()
  fullName: System.TimeSpan.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan.ToString(System.String)
  parent: System.TimeSpan
  isExternal: false
  name: ToString(String)
  nameWithType: TimeSpan.ToString(String)
  fullName: System.TimeSpan.ToString(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan.ToString(System.String,System.IFormatProvider)
  parent: System.TimeSpan
  isExternal: false
  name: ToString(String,IFormatProvider)
  nameWithType: TimeSpan.ToString(String,IFormatProvider)
  fullName: System.TimeSpan.ToString(String,IFormatProvider)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.TimeSpan.TotalDays
  parent: System.TimeSpan
  isExternal: false
  name: TotalDays
  nameWithType: TimeSpan.TotalDays
  fullName: System.TimeSpan.TotalDays
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.TotalHours
  parent: System.TimeSpan
  isExternal: false
  name: TotalHours
  nameWithType: TimeSpan.TotalHours
  fullName: System.TimeSpan.TotalHours
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.TotalMilliseconds
  parent: System.TimeSpan
  isExternal: false
  name: TotalMilliseconds
  nameWithType: TimeSpan.TotalMilliseconds
  fullName: System.TimeSpan.TotalMilliseconds
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.TotalMinutes
  parent: System.TimeSpan
  isExternal: false
  name: TotalMinutes
  nameWithType: TimeSpan.TotalMinutes
  fullName: System.TimeSpan.TotalMinutes
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.TotalSeconds
  parent: System.TimeSpan
  isExternal: false
  name: TotalSeconds
  nameWithType: TimeSpan.TotalSeconds
  fullName: System.TimeSpan.TotalSeconds
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.TimeSpan.TryParse(System.String,System.TimeSpan@)
  parent: System.TimeSpan
  isExternal: false
  name: TryParse(String,TimeSpan)
  nameWithType: TimeSpan.TryParse(String,TimeSpan)
  fullName: System.TimeSpan.TryParse(String,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)
  parent: System.TimeSpan
  isExternal: false
  name: TryParse(String,IFormatProvider,TimeSpan)
  nameWithType: TimeSpan.TryParse(String,IFormatProvider,TimeSpan)
  fullName: System.TimeSpan.TryParse(String,IFormatProvider,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)
  parent: System.TimeSpan
  isExternal: false
  name: TryParseExact(String,String,IFormatProvider,TimeSpan)
  nameWithType: TimeSpan.TryParseExact(String,String,IFormatProvider,TimeSpan)
  fullName: System.TimeSpan.TryParseExact(String,String,IFormatProvider,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)
  parent: System.TimeSpan
  isExternal: false
  name: TryParseExact(String,String[],IFormatProvider,TimeSpan)
  nameWithType: TimeSpan.TryParseExact(String,String[],IFormatProvider,TimeSpan)
  fullName: System.TimeSpan.TryParseExact(String,String[],IFormatProvider,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  parent: System.TimeSpan
  isExternal: false
  name: TryParseExact(String,String,IFormatProvider,TimeSpanStyles,TimeSpan)
  nameWithType: TimeSpan.TryParseExact(String,String,IFormatProvider,TimeSpanStyles,TimeSpan)
  fullName: System.TimeSpan.TryParseExact(String,String,IFormatProvider,TimeSpanStyles,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Globalization.TimeSpanStyles
  parent: System.Globalization
  isExternal: false
  name: TimeSpanStyles
  nameWithType: TimeSpanStyles
  fullName: System.Globalization.TimeSpanStyles
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)
  parent: System.TimeSpan
  isExternal: false
  name: TryParseExact(String,String[],IFormatProvider,TimeSpanStyles,TimeSpan)
  nameWithType: TimeSpan.TryParseExact(String,String[],IFormatProvider,TimeSpanStyles,TimeSpan)
  fullName: System.TimeSpan.TryParseExact(String,String[],IFormatProvider,TimeSpanStyles,TimeSpan)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Globalization.TimeSpanStyles
  parent: System.Globalization
  isExternal: false
  name: TimeSpanStyles
  nameWithType: TimeSpanStyles
  fullName: System.Globalization.TimeSpanStyles
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.Zero
  parent: System.TimeSpan
  isExternal: false
  name: Zero
  nameWithType: TimeSpan.Zero
  fullName: System.TimeSpan.Zero
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.TimeSpan.CompareTo*
  parent: System.TimeSpan
  isExternal: false
  nameWithType: TimeSpan.
- uid: System.TimeSpan.Equals*
  parent: System.TimeSpan
  isExternal: false
  nameWithType: TimeSpan.
- uid: System.TimeSpan.Parse*
  parent: System.TimeSpan
  isExternal: false
  nameWithType: TimeSpan.
- uid: System.TimeSpan.ParseExact*
  parent: System.TimeSpan
  isExternal: false
  nameWithType: TimeSpan.
- uid: System.TimeSpan.ToString*
  parent: System.TimeSpan
  isExternal: false
  nameWithType: TimeSpan.
- uid: System.TimeSpan.TryParse*
  parent: System.TimeSpan
  isExternal: false
  nameWithType: TimeSpan.
- uid: System.TimeSpan.TryParseExact*
  parent: System.TimeSpan
  isExternal: false
  nameWithType: TimeSpan.
