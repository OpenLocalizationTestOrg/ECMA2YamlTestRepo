### YamlMime:ManagedReference
items:
- uid: System.Guid
  id: Guid
  children:
  - System.Guid.#ctor(System.Byte[])
  - System.Guid.#ctor(System.String)
  - System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])
  - System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  - System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  - System.Guid.CompareTo(System.Guid)
  - System.Guid.CompareTo(System.Object)
  - System.Guid.Empty
  - System.Guid.Equals(System.Guid)
  - System.Guid.Equals(System.Object)
  - System.Guid.GetHashCode
  - System.Guid.NewGuid
  - System.Guid.op_Equality(System.Guid,System.Guid)
  - System.Guid.op_Inequality(System.Guid,System.Guid)
  - System.Guid.Parse(System.String)
  - System.Guid.ParseExact(System.String,System.String)
  - System.Guid.ToByteArray
  - System.Guid.ToString
  - System.Guid.ToString(System.String)
  - System.Guid.ToString(System.String,System.IFormatProvider)
  - System.Guid.TryParse(System.String,System.Guid@)
  - System.Guid.TryParseExact(System.String,System.String,System.Guid@)
  langs:
  - csharp
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
  type: Struct
  summary: "Represents a globally unique identifier (GUID).  \n  \n To browse the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/guid.cs#b622ef5f6b76c10a)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/guid.cs#b622ef5f6b76c10a). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n A GUID is a 128-bit integer (16 bytes) that can be used across all computers and networks wherever a unique identifier is required. Such an identifier has a very low probability of being duplicated."
  example:
  - "The following example uses the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=fullName> class to assign a GUID to an interface and to a user-defined class. It retrieves the value of the GUID by calling the <xref:System.Attribute.GetCustomAttribute%2A> method, and compares it with two other GUIDs to determine whether they are equal.  \n  \n [!CODE [Guid#1](../CodeSnippet/VS_Snippets_CLR/Guid#1)]  \n  \n Note that the <xref:System.Runtime.InteropServices.GuidAttribute> attribute is typically used in an application to expose a type to COM. If you compile this example, you can run the [Assembly Registration tool (Regasm.exe)](../Topic/Regasm.exe%20\\(Assembly%20Registration%20Tool\\).md) on the generated assembly to create registry (.reg) and type library (.tlb) files. The .reg file can be used to register the coclass in the registry, and the .tlb file can provide metadata for COM interop."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct Guid : IComparable, IComparable<Guid>, IEquatable<Guid>, IFormattable
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.IComparable
  - System.IComparable<System.Guid>
  - System.IEquatable<System.Guid>
  - System.IFormattable
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Guid
  langs:
  - csharp
  name: Guid(Byte[])
  nameWithType: Guid.Guid(Byte[])
  fullName: System.Guid.Guid(Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.Guid"> structure by using the specified array of bytes.
  remarks: To be added.
  syntax:
    content: public Guid (byte[] b);
    parameters:
    - id: b
      type: System.Byte[]
      description: A 16-element byte array containing values with which to initialize the GUID.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Guid
  langs:
  - csharp
  name: Guid(String)
  nameWithType: Guid.Guid(String)
  fullName: System.Guid.Guid(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.Guid"> structure by using the value represented by the specified string.
  remarks: "The alphabetic hexadecimal digits in the  parameter can be uppercase or lowercase. For example, the following strings represent the same GUID:  \n  \n \"ca761232ed4211cebacd00aa0057b223\"  \n  \n \"CA761232-ED42-11CE-BACD-00AA0057B223\"  \n  \n \"{CA761232-ED42-11CE-BACD-00AA0057B223}\"  \n  \n \"(CA761232-ED42-11CE-BACD-00AA0057B223)\"  \n  \n \"{0xCA761232, 0xED42, 0x11CE, {0xBA, 0xCD, 0x00, 0xAA, 0x00, 0x57, 0xB2, 0x23}}\""
  example:
  - "The following example passes each string listed in the Remarks section to the Guid constructor.  \n  \n [!CODE [System.Guid.ctor#1](../CodeSnippet/VS_Snippets_CLR_System/system.guid.ctor#1)]"
  syntax:
    content: public Guid (string g);
    parameters:
    - id: g
      type: System.String
      description: "A string that contains a GUID in one of the following formats (\"d\" represents a hexadecimal digit whose case is ignored):  \n  \n 32 contiguous digits:  \n  \n dddddddddddddddddddddddddddddddd  \n  \n -or-  \n  \n Groups of 8, 4, 4, 4, and 12 digits with hyphens between the groups. The entire GUID can optionally be enclosed in matching braces or parentheses:  \n  \n dddddddd-dddd-dddd-dddd-dddddddddddd  \n  \n -or-  \n  \n {dddddddd-dddd-dddd-dddd-dddddddddddd}  \n  \n -or-  \n  \n (dddddddd-dddd-dddd-dddd-dddddddddddd)  \n  \n -or-  \n  \n Groups of 8, 4, and 4 digits, and a subset of eight groups of 2 digits, with each group prefixed by \"0x\" or \"0X\", and separated by commas. The entire GUID, as well as the subset, is enclosed in matching braces:  \n  \n {0xdddddddd, 0xdddd, 0xdddd,{0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd,0xdd}}  \n  \n All braces, commas, and \"0x\" prefixes are required. All embedded spaces are ignored. All leading zeros in a group are ignored.  \n  \n The digits shown in a group are the maximum number of meaningful digits that can appear in that group. You can specify from 1 to the number of digits shown for a group. The specified digits are assumed to be the low-order digits of the group."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])
  id: '#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])'
  parent: System.Guid
  langs:
  - csharp
  name: Guid(Int32,Int16,Int16,Byte[])
  nameWithType: Guid.Guid(Int32,Int16,Int16,Byte[])
  fullName: System.Guid.Guid(Int32,Int16,Int16,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.Guid"> structure by using the specified integers and byte array.
  remarks: ''
  example:
  - '`Guid(1,2,3,new byte[]{0,1,2,3,4,5,6,7})` creates a <xref:System.Guid> that corresponds to "00000001-0002-0003-0001-020304050607".'
  syntax:
    content: public Guid (int a, short b, short c, byte[] d);
    parameters:
    - id: a
      type: System.Int32
      description: The first 4 bytes of the GUID.
    - id: b
      type: System.Int16
      description: The next 2 bytes of the GUID.
    - id: c
      type: System.Int16
      description: The next 2 bytes of the GUID.
    - id: d
      type: System.Byte[]
      description: The remaining 8 bytes of the GUID.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  id: '#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)'
  parent: System.Guid
  langs:
  - csharp
  name: Guid(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  nameWithType: Guid.Guid(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  fullName: System.Guid.Guid(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.Guid"> structure by using the specified integers and bytes.
  remarks: Specifying individual bytes in this manner can be used to circumvent byte order restrictions (big-endian or little-endian byte order) on particular types of computers.
  example:
  - "The following example creates a GUID whose string representation is \"0000000a-000b-000c-0001-020304050607\".  \n  \n [!CODE [System.Guid.Ctor#2](../CodeSnippet/VS_Snippets_CLR_System/system.guid.ctor#2)]"
  syntax:
    content: public Guid (int a, short b, short c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k);
    parameters:
    - id: a
      type: System.Int32
      description: The first 4 bytes of the GUID.
    - id: b
      type: System.Int16
      description: The next 2 bytes of the GUID.
    - id: c
      type: System.Int16
      description: The next 2 bytes of the GUID.
    - id: d
      type: System.Byte
      description: The next byte of the GUID.
    - id: e
      type: System.Byte
      description: The next byte of the GUID.
    - id: f
      type: System.Byte
      description: The next byte of the GUID.
    - id: g
      type: System.Byte
      description: The next byte of the GUID.
    - id: h
      type: System.Byte
      description: The next byte of the GUID.
    - id: i
      type: System.Byte
      description: The next byte of the GUID.
    - id: j
      type: System.Byte
      description: The next byte of the GUID.
    - id: k
      type: System.Byte
      description: The next byte of the GUID.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  id: '#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)'
  parent: System.Guid
  langs:
  - csharp
  name: Guid(UInt32,UInt16,UInt16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  nameWithType: Guid.Guid(UInt32,UInt16,UInt16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  fullName: System.Guid.Guid(UInt32,UInt16,UInt16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.Guid"> structure by using the specified unsigned integers and bytes.
  remarks: Specifying the bytes in this manner avoids endianness issues.
  example:
  - Guid(0xa,0xb,0xc,0,1,2,3,4,5,6,7) creates a <xref:System.Guid> that corresponds to "0000000a-000b-000c-0001-020304050607".
  syntax:
    content: public Guid (uint a, ushort b, ushort c, byte d, byte e, byte f, byte g, byte h, byte i, byte j, byte k);
    parameters:
    - id: a
      type: System.UInt32
      description: The first 4 bytes of the GUID.
    - id: b
      type: System.UInt16
      description: The next 2 bytes of the GUID.
    - id: c
      type: System.UInt16
      description: The next 2 bytes of the GUID.
    - id: d
      type: System.Byte
      description: The next byte of the GUID.
    - id: e
      type: System.Byte
      description: The next byte of the GUID.
    - id: f
      type: System.Byte
      description: The next byte of the GUID.
    - id: g
      type: System.Byte
      description: The next byte of the GUID.
    - id: h
      type: System.Byte
      description: The next byte of the GUID.
    - id: i
      type: System.Byte
      description: The next byte of the GUID.
    - id: j
      type: System.Byte
      description: The next byte of the GUID.
    - id: k
      type: System.Byte
      description: The next byte of the GUID.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.CompareTo(System.Guid)
  id: CompareTo(System.Guid)
  parent: System.Guid
  langs:
  - csharp
  name: CompareTo(Guid)
  nameWithType: Guid.CompareTo(Guid)
  fullName: System.Guid.CompareTo(Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares this instance to a specified <see cref="T:System.Guid"> object and returns an indication of their relative values.
  remarks: "The CompareTo method compares the GUIDs as if they were values provided to the [Guid(Int32, Int16, Int16, Byte\\[\\])](assetId:///M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])?qualifyHint=False&autoUpgrade=False) constructor, as follows:  \n  \n-   It compares the <xref:System.UInt32> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  \n  \n-   It compares the first <xref:System.UInt16> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  \n  \n-   It compares the second <xref:System.UInt16> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  \n  \n-   If performs a byte-by-byte comparison of the next eight <xref:System.Byte> values. When it encounters the first unequal pair, it returns the result. Otherwise, it returns 0 to indicate that the two <xref:System.Guid> values are equal.  \n  \n Note that the final eight bytes appear in the string representation of a <xref:System.Guid> in reverse order, from low byte to high byte. For example, in the string representation of the <xref:System.Guid> value \"01e75c83-c6f5-4192-b57e-7427cec5560d\", the final eight bytes are \"b57e-7427cec5560d.\" In other words, the final eight bytes are compared on a byte-by-byte basis from left to right starting with 0xb5.  \n  \n If two GUIDs have equal values for a component, the method compares the next component. When it finds a component whose values are unequal, it returns the result.  \n  \n This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Guid.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the  parameter to a <xref:System.Guid> value."
  example:
  - "The following example calls the CompareTo method to compare a GUID value with two similar GUID values.  \n  \n [!CODE [System.Guid.CompareTo#1](../CodeSnippet/VS_Snippets_CLR_System/system.guid.compareto#1)]"
  syntax:
    content: public int CompareTo (Guid value);
    parameters:
    - id: value
      type: System.Guid
      description: An object to compare to this instance.
    return:
      type: System.Int32
      description: "A signed number indicating the relative values of this instance and .  \n  \n|Return value|Description|  \n|------------------|-----------------|  \n|A negative integer|This instance is less than .|  \n|Zero|This instance is equal to .|  \n|A positive integer|This instance is greater than .|"
  overload: System.Guid.CompareTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Guid
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: Guid.CompareTo(Object)
  fullName: System.Guid.CompareTo(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Compares this instance to a specified object and returns an indication of their relative values.
  remarks: "The  parameter must be `null` or an instance of <xref:System.Guid>; otherwise, an exception is thrown. Any instance of <xref:System.Guid>, regardless of its value, is considered greater than `null`.  \n  \n The <xref:System.Guid.CompareTo%2A> method compares the GUIDs as if they were values provided to the <xref:System.Guid.%23ctor%2A> constructor, as follows:  \n  \n-   It compares the <xref:System.Int32> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  \n  \n-   It compares the first <xref:System.Int16> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  \n  \n-   It compares the second <xref:System.Int16> values, and returns a result if they are unequal. If they are equal, it performs the next comparison.  \n  \n-   If performs a byte-by-byte comparison of the next eight <xref:System.Byte> values. When it encounters the first unequal pair, it returns the result. Otherwise, it returns 0 to indicate that the two <xref:System.Guid> values are equal.  \n  \n If two GUIDs have equal values for a component, the method compares the next component. When it finds a component whose values are unequal, it returns the result.  \n  \n Note that the final eight bytes appear in the string representation of a <xref:System.Guid> in reverse order, from low byte to high byte. For example, in the string representation of the <xref:System.Guid> value \"01e75c83-c6f5-4192-b57e-7427cec5560d\", the final eight bytes are \"b57e-7427cec5560d.\""
  example:
  - "The following example uses the <xref:System.Runtime.InteropServices.GuidAttribute> attribute to assign a GUID to a class. It retrieves the value of this GUID by calling the <xref:System.Attribute.GetCustomAttribute%2A?displayProperty=fullName> method and passing the <xref:System.Runtime.InteropServices.GuidAttribute.Value%2A> property of the returned <xref:System.Runtime.InteropServices.GuidAttribute> object to the <xref:System.Guid.Parse%2A> method. Then it compares that GUID with an array of values.  \n  \n [!CODE [System.Guid.CompareTo#2](../CodeSnippet/VS_Snippets_CLR_System/system.guid.compareto#2)]"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: An object to compare, or `null`.
    return:
      type: System.Int32
      description: "A signed number indicating the relative values of this instance and .  \n  \n|Return value|Description|  \n|------------------|-----------------|  \n|A negative integer|This instance is less than .|  \n|Zero|This instance is equal to .|  \n|A positive integer|This instance is greater than , or  is `null`.|"
  overload: System.Guid.CompareTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.Empty
  id: Empty
  parent: System.Guid
  langs:
  - csharp
  name: Empty
  nameWithType: Guid.Empty
  fullName: System.Guid.Empty
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: A read-only instance of the <see cref="T:System.Guid"> structure whose value is all zeros.
  remarks: "You can compare a GUID with the value of the Empty field to determine whether a GUID is non-zero. The following example uses the <xref:System.Guid.op_Equality%2A> operator to compare two GUID values with Empty to determine whether they consist exclusively of zeros.  \n  \n [!CODE [System.Guid.Empty#1](../CodeSnippet/VS_Snippets_CLR_System/system.guid.empty#1)]"
  syntax:
    content: public static readonly Guid Empty;
    return:
      type: System.Guid
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.Equals(System.Guid)
  id: Equals(System.Guid)
  parent: System.Guid
  langs:
  - csharp
  name: Equals(Guid)
  nameWithType: Guid.Equals(Guid)
  fullName: System.Guid.Equals(Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a value indicating whether this instance and a specified <see cref="T:System.Guid"> object represent the same value.
  remarks: "Two <xref:System.Guid> objects are equal if they have identical byte values.  \n  \n This method performs slightly better than the <xref:System.Guid.Equals%2A> method because it does not have to box the  parameter."
  syntax:
    content: public bool Equals (Guid g);
    parameters:
    - id: g
      type: System.Guid
      description: An object to compare to this instance.
    return:
      type: System.Boolean
      description: '`true` if  is equal to this instance; otherwise, `false`.'
  overload: System.Guid.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Guid
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Guid.Equals(Object)
  fullName: System.Guid.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a value that indicates whether this instance is equal to a specified object.
  remarks: Two <xref:System.Guid> objects are equal if they have identical byte values.
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: The object to compare with this instance.
    return:
      type: System.Boolean
      description: '`true` if  is a <see cref="T:System.Guid"> that has the same value as this instance; otherwise, `false`.'
  overload: System.Guid.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.GetHashCode
  id: GetHashCode
  parent: System.Guid
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Guid.GetHashCode()
  fullName: System.Guid.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the hash code for this instance.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash code for this instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.NewGuid
  id: NewGuid
  parent: System.Guid
  langs:
  - csharp
  name: NewGuid()
  nameWithType: Guid.NewGuid()
  fullName: System.Guid.NewGuid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.Guid"> structure.
  remarks: This is a convenient `static` method that you can call to get a new <xref:System.Guid>. The method wraps a call to the Windows [CoCreateGuid](http://msdn.microsoft.com/library/windows/desktop/ms688568.aspx) function. The returned <xref:System.Guid> is guaranteed to not equal <xref:System.Guid?displayProperty=fullName>.
  example:
  - "The following code example creates and displays the values of two <xref:System.Guid> objects.  \n  \n [!CODE [system.guid.newguid#1](../CodeSnippet/VS_Snippets_CLR_System/system.guid.newguid#1)]"
  syntax:
    content: public static Guid NewGuid ();
    parameters: []
    return:
      type: System.Guid
      description: A new GUID object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.op_Equality(System.Guid,System.Guid)
  id: op_Equality(System.Guid,System.Guid)
  parent: System.Guid
  langs:
  - csharp
  name: op_Equality(Guid,Guid)
  nameWithType: Guid.op_Equality(Guid,Guid)
  fullName: System.Guid.op_Equality(Guid,Guid)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether the values of two specified <see cref="T:System.Guid"> objects are equal.
  remarks: ''
  example:
  - "The following example uses the Equality operator to compare two GUID values with <xref:System.Guid?displayProperty=fullName> to determine whether they consist exclusively of zeros.  \n  \n [!CODE [System.Guid.Empty#1](../CodeSnippet/VS_Snippets_CLR_System/system.guid.empty#1)]"
  syntax:
    content: public static bool op_Equality (Guid a, Guid b);
    parameters:
    - id: a
      type: System.Guid
      description: The first object to compare.
    - id: b
      type: System.Guid
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if  and  are equal; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.op_Inequality(System.Guid,System.Guid)
  id: op_Inequality(System.Guid,System.Guid)
  parent: System.Guid
  langs:
  - csharp
  name: op_Inequality(Guid,Guid)
  nameWithType: Guid.op_Inequality(Guid,Guid)
  fullName: System.Guid.op_Inequality(Guid,Guid)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether the values of two specified <see cref="T:System.Guid"> objects are not equal.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (Guid a, Guid b);
    parameters:
    - id: a
      type: System.Guid
      description: The first object to compare.
    - id: b
      type: System.Guid
      description: The second object to compare.
    return:
      type: System.Boolean
      description: '`true` if  and  are not equal; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.Parse(System.String)
  id: Parse(System.String)
  parent: System.Guid
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Guid.Parse(String)
  fullName: System.Guid.Parse(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a GUID to the equivalent <see cref="T:System.Guid"> structure.
  remarks: "The Parse method trims any leading or trailing white space from  and converts the string representation of a GUID to a <xref:System.Guid> value. This method can convert strings in any of the five formats produced by the <xref:System.Guid.ToString%28System.String%29> and <xref:System.Guid.ToString%28System.String%2CSystem.IFormatProvider%29> methods, as shown in the following table.  \n  \n|Specifier|Description|Format|  \n|---------------|-----------------|------------|  \n|`N`|32 digits|00000000000000000000000000000000|  \n|`D`|32 digits separated by hyphens|00000000-0000-0000-0000-000000000000|  \n|`B`|32 digits separated by hyphens, enclosed in braces|{00000000-0000-0000-0000-000000000000}|  \n|`P`|32 digits separated by hyphens, enclosed in parentheses|(00000000-0000-0000-0000-000000000000)|  \n|`X`|Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces|{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}|  \n  \n The method throws a <xref:System.FormatException> if it is unable to successfully parse the string. Here are some of the reasons why this might occur include:  \n  \n-   contains characters that are not part of the hexadecimal character set.  \n  \n-   has too many or too few numeric characters.  \n  \n-   has too many or too few of the non-numeric characters appropriate for a particular format.  \n  \n-   is not in one of the formats recognized by the <xref:System.Guid.ToString%2A> method and listed in the previous table.  \n  \n Use the <xref:System.Guid.TryParse%2A> method to catch any unsuccessful parse operations without having to handle an exception."
  example:
  - "The following example creates a new GUID, converts it to three separate string representations by calling the <xref:System.Guid.ToString%28System.String%29> method with the \"B\", \"D\", and \"X\" format specifiers, and then calls the Parse method to convert the strings back to <xref:System.Guid> values.  \n  \n [!CODE [System.Guid.Parse#3](../CodeSnippet/VS_Snippets_CLR_System/system.guid.parse#3)]"
  syntax:
    content: public static Guid Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: The string to convert.
    return:
      type: System.Guid
      description: A structure that contains the value that was parsed.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.ParseExact(System.String,System.String)
  id: ParseExact(System.String,System.String)
  parent: System.Guid
  langs:
  - csharp
  name: ParseExact(String,String)
  nameWithType: Guid.ParseExact(String,String)
  fullName: System.Guid.ParseExact(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a GUID to the equivalent <see cref="T:System.Guid"> structure, provided that the string is in the specified format.
  remarks: "The ParseExact method requires the string to convert to be exactly in the format specified by the  parameter, after leading and trailing white-space characters are removed. The following table shows the accepted format specifiers for the  parameter. \"0\" represents a digit; hyphens (\"-\"), braces (\"{\", \"}\"), and parentheses (\"(\", \")\") appear as shown.  \n  \n|Specifier|Format of the  parameter|  \n|---------------|------------------------------|  \n|N|32 digits:<br /><br /> 00000000000000000000000000000000|  \n|D|32 digits separated by hyphens:<br /><br /> 00000000-0000-0000-0000-000000000000|  \n|B|32 digits separated by hyphens, enclosed in braces:<br /><br /> {00000000-0000-0000-0000-000000000000}|  \n|P|32 digits separated by hyphens, enclosed in parentheses:<br /><br /> (00000000-0000-0000-0000-000000000000)|  \n|X|Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:<br /><br /> {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}|"
  example:
  - "The following example calls the <xref:System.Guid.ToString%28System.String%29> method with each of the supported format specifiers to generate an array of strings that represent a single GUID. These are then passed to the ParseExact method, which successfully parses only the string that conforms to the \"B\" format specifier.  \n  \n [!CODE [System.Guid.Parse#4](../CodeSnippet/VS_Snippets_CLR_System/system.guid.parse#4)]"
  syntax:
    content: public static Guid ParseExact (string input, string format);
    parameters:
    - id: input
      type: System.String
      description: The GUID to convert.
    - id: format
      type: System.String
      description: 'One of the following specifiers that indicates the exact format to use when interpreting : "N", "D", "B", "P", or "X".'
    return:
      type: System.Guid
      description: A structure that contains the value that was parsed.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.ToByteArray
  id: ToByteArray
  parent: System.Guid
  langs:
  - csharp
  name: ToByteArray()
  nameWithType: Guid.ToByteArray()
  fullName: System.Guid.ToByteArray()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a 16-element byte array that contains the value of this instance.
  remarks: "You can use the byte array returned by this method to round-trip a <xref:System.Guid> value by calling the [Guid(Byte\\[\\])](assetId:///M:System.Guid.#ctor(System.Byte[])?qualifyHint=False&autoUpgrade=False) constructor.  \n  \n Note that the order of bytes in the returned byte array is different from the string representation of a <xref:System.Guid> value. The order of the beginning four-byte group and the next two two-byte groups is reversed, whereas the order of the last two-byte group and the closing six-byte group is the same. The example provides an illustration."
  example:
  - "The following example calls the <xref:System.Guid.NewGuid%2A> method to create a <xref:System.Guid> value, and then calls the ToByteArray method to represent the <xref:System.Guid> value as a byte array. It then displays both values to the console. Finally, it instantiates a new <xref:System.Guid> value from the byte array and calls its <xref:System.Guid.Equals%28System.Guid%29> method to show that the two <xref:System.Guid> values are identical.  \n  \n [!CODE [System.Guid.ToByteArray#1](../CodeSnippet/VS_Snippets_CLR_System/system.guid.tobytearray#1)]"
  syntax:
    content: public byte[] ToByteArray ();
    parameters: []
    return:
      type: System.Byte[]
      description: A 16-element byte array.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.ToString
  id: ToString
  parent: System.Guid
  langs:
  - csharp
  name: ToString()
  nameWithType: Guid.ToString()
  fullName: System.Guid.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a string representation of the value of this instance in registry format.
  remarks: This method provides a default GUID format that is sufficient for typical use; however, other versions of this method that take a  parameter provide a few common format variations.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "The value of this <see cref=\"T:System.Guid\">, formatted by using the \"D\" format specifier as follows:  \n  \n `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx`  \n  \n where the value of the GUID is represented as a series of lowercase hexadecimal digits in groups of 8, 4, 4, 4, and 12 digits and separated by hyphens. An example of a return value is \"382c74c3-721d-4f34-80e5-57657b6cbc27\". To convert the hexadecimal digits from a through f to uppercase, call the <xref:System.String.ToUpper%2A?displayProperty=fullName> method on the returned string."
  overload: System.Guid.ToString*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.ToString(System.String)
  id: ToString(System.String)
  parent: System.Guid
  langs:
  - csharp
  name: ToString(String)
  nameWithType: Guid.ToString(String)
  fullName: System.Guid.ToString(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a string representation of the value of this <see cref="T:System.Guid"> instance, according to the provided format specifier.
  remarks: "The following table shows the accepted format specifiers for the  parameter. \"0\" represents a digit; hyphens (\"-\"), braces (\"{\", \"}\"), and parentheses (\"(\", \")\") appear as shown.  \n  \n|Specifier|Format of return value|  \n|---------------|----------------------------|  \n|`N`|32 digits:<br /><br /> 00000000000000000000000000000000|  \n|`D`|32 digits separated by hyphens:<br /><br /> 00000000-0000-0000-0000-000000000000|  \n|`B`|32 digits separated by hyphens, enclosed in braces:<br /><br /> {00000000-0000-0000-0000-000000000000}|  \n|`P`|32 digits separated by hyphens, enclosed in parentheses:<br /><br /> (00000000-0000-0000-0000-000000000000)|  \n|`X`|Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:<br /><br /> {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}|  \n  \n The hexadecimal digits a through f are lowercase in the returned string. To convert them to uppercase, call the <xref:System.String.ToUpper%2A?displayProperty=fullName> method on the returned string."
  syntax:
    content: public string ToString (string format);
    parameters:
    - id: format
      type: System.String
      description: A single format specifier that indicates how to format the value of this <see cref="T:System.Guid">. The  parameter can be "N", "D", "B", "P", or "X". If  is `null` or an empty string (""), "D" is used.
    return:
      type: System.String
      description: The value of this <see cref="T:System.Guid">, represented as a series of lowercase hexadecimal digits in the specified format.
  overload: System.Guid.ToString*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Guid
  langs:
  - csharp
  name: ToString(String,IFormatProvider)
  nameWithType: Guid.ToString(String,IFormatProvider)
  fullName: System.Guid.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a string representation of the value of this instance of the <see cref="T:System.Guid"> class, according to the provided format specifier and culture-specific format information.
  remarks: "The  parameter is reserved for future use and does not contribute to the execution of this method. You can pass `null` in the method call.  \n  \n The following table shows the accepted format specifiers for the  parameter. \"0\" represents a digit; hyphens (\"-\"), braces (\"{\", \"}\"), and parentheses (\"(\", \")\") appear as shown.  \n  \n|Specifier|Format of return value|  \n|---------------|----------------------------|  \n|`N`|32 digits:<br /><br /> 00000000000000000000000000000000|  \n|`D`|32 digits separated by hyphens:<br /><br /> 00000000-0000-0000-0000-000000000000|  \n|`B`|32 digits separated by hyphens, enclosed in braces:<br /><br /> {00000000-0000-0000-0000-000000000000}|  \n|`P`|32 digits separated by hyphens, enclosed in parentheses:<br /><br /> (00000000-0000-0000-0000-000000000000)|  \n|`X`|Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:<br /><br /> {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}|  \n  \n The hexadecimal digits a through f are lowercase in the returned string. To convert them to uppercase, call the <xref:System.String.ToUpper%2A?displayProperty=fullName> method on the returned string.  \n  \n Because the  parameter is ignored, you cannot use it to provide a custom formatting solution. To represent a <xref:System.Guid> value as a string in a format that isn't supported by the standard GUID format strings, call the [String.Format(IFormatProvider, String, Object\\[\\])](assetId:///M:System.String.Format(System.IFormatProvider,System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method with a  object that implements both the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces. For more information, see the \"Custom Formatting with ICustomFormatter\" section in the [Formatting Types](../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md) article."
  syntax:
    content: public string ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: A single format specifier that indicates how to format the value of this <see cref="T:System.Guid">. The  parameter can be "N", "D", "B", "P", or "X". If  is `null` or an empty string (""), "D" is used.
    - id: provider
      type: System.IFormatProvider
      description: (Reserved) An object that supplies culture-specific formatting information.
    return:
      type: System.String
      description: The value of this <see cref="T:System.Guid">, represented as a series of lowercase hexadecimal digits in the specified format.
  overload: System.Guid.ToString*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.TryParse(System.String,System.Guid@)
  id: TryParse(System.String,System.Guid@)
  parent: System.Guid
  langs:
  - csharp
  name: TryParse(String,Guid)
  nameWithType: Guid.TryParse(String,Guid)
  fullName: System.Guid.TryParse(String,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a GUID to the equivalent <see cref="T:System.Guid"> structure.
  remarks: "This method is like the <xref:System.Guid.Parse%2A> method, except that instead of returning the parsed GUID, it returns `false` if  is `null` or not in a recognized format, and doesn't throw an exception. It trims any leading or trailing white space from  and converts strings in any of the five formats recognized by the <xref:System.Guid.ToString%28System.String%29> and <xref:System.Guid.ToString%28System.String%2CSystem.IFormatProvider%29>methods, as shown in the following table.  \n  \n|Specifier|Description|Format|  \n|---------------|-----------------|------------|  \n|`N`|32 digits|00000000000000000000000000000000|  \n|`D`|32 digits separated by hyphens|00000000-0000-0000-0000-000000000000|  \n|`B`|32 digits separated by hyphens, enclosed in braces|{00000000-0000-0000-0000-000000000000}|  \n|`P`|32 digits separated by hyphens, enclosed in parentheses|(00000000-0000-0000-0000-000000000000)|  \n|`X`|Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces|{0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}|"
  example:
  - "The following example creates a new GUID, converts it to three separate string representations by calling the <xref:System.Guid.ToString%28System.String%29> method with the \"B\", \"D\", and \"X\" format specifiers, and then calls the TryParse method to convert the strings back to <xref:System.Guid> values.  \n  \n [!CODE [System.Guid.Parse#2](../CodeSnippet/VS_Snippets_CLR_System/system.guid.parse#2)]"
  syntax:
    content: public static bool TryParse (string input, out Guid result);
    parameters:
    - id: input
      type: System.String
      description: The GUID to convert.
    - id: result
      type: System.Guid
      description: The structure that will contain the parsed value. If the method returns `true`,  contains a valid <see cref="T:System.Guid">. If the method returns `false`,  equals <xref:System.Guid?displayProperty=fullName>.
    return:
      type: System.Boolean
      description: '`true` if the parse operation was successful; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Guid.TryParseExact(System.String,System.String,System.Guid@)
  id: TryParseExact(System.String,System.String,System.Guid@)
  parent: System.Guid
  langs:
  - csharp
  name: TryParseExact(String,String,Guid)
  nameWithType: Guid.TryParseExact(String,String,Guid)
  fullName: System.Guid.TryParseExact(String,String,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the string representation of a GUID to the equivalent <see cref="T:System.Guid"> structure, provided that the string is in the specified format.
  remarks: "This method requires the string to convert to be exactly in the format specified by the  parameter, after leading and trailing white-space characters are removed. It returns `false` if  is `null` or is not in the format specified by , and doesn't throw an exception.  \n  \n The following table shows the accepted format specifiers for the  parameter. \"0\" represents a digit; hyphens (\"-\"), braces (\"{\", \"}\"), and parentheses (\"(\", \")\") appear as shown.  \n  \n|Specifier|Format of the  parameter|  \n|---------------|------------------------------|  \n|N|32 digits:<br /><br /> 00000000000000000000000000000000|  \n|D|32 digits separated by hyphens:<br /><br /> 00000000-0000-0000-0000-000000000000|  \n|B|32 digits separated by hyphens, enclosed in braces:<br /><br /> {00000000-0000-0000-0000-000000000000}|  \n|P|32 digits separated by hyphens, enclosed in parentheses:<br /><br /> (00000000-0000-0000-0000-000000000000)|  \n|X|Four hexadecimal values enclosed in braces, where the fourth value is a subset of eight hexadecimal values that is also enclosed in braces:<br /><br /> {0x00000000,0x0000,0x0000,{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}}|"
  example:
  - "The following example calls the <xref:System.Guid.ToString%28System.String%29> method with each of the supported format specifiers to generate an array of strings that represent a single GUID. These are then passed to the TryParseExact method, which successfully parses the string that conforms to the \"B\" format specifier.  \n  \n [!CODE [System.Guid.Parse#5](../CodeSnippet/VS_Snippets_CLR_System/system.guid.parse#5)]"
  syntax:
    content: public static bool TryParseExact (string input, string format, out Guid result);
    parameters:
    - id: input
      type: System.String
      description: The GUID to convert.
    - id: format
      type: System.String
      description: 'One of the following specifiers that indicates the exact format to use when interpreting : "N", "D", "B", "P", or "X".'
    - id: result
      type: System.Guid
      description: The structure that will contain the parsed value. If the method returns `true`,  contains a valid <see cref="T:System.Guid">. If the method returns `false`,  equals <xref:System.Guid?displayProperty=fullName>.
    return:
      type: System.Boolean
      description: '`true` if the parse operation was successful; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Guid.#ctor(System.Byte[])
  parent: System.Guid
  isExternal: false
  name: Guid(Byte[])
  nameWithType: Guid.Guid(Byte[])
  fullName: System.Guid.Guid(Byte[])
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Guid.#ctor(System.String)
  parent: System.Guid
  isExternal: false
  name: Guid(String)
  nameWithType: Guid.Guid(String)
  fullName: System.Guid.Guid(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])
  parent: System.Guid
  isExternal: false
  name: Guid(Int32,Int16,Int16,Byte[])
  nameWithType: Guid.Guid(Int32,Int16,Int16,Byte[])
  fullName: System.Guid.Guid(Int32,Int16,Int16,Byte[])
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  parent: System.Guid
  isExternal: false
  name: Guid(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  nameWithType: Guid.Guid(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  fullName: System.Guid.Guid(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Int16
  parent: System
  isExternal: false
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Guid.#ctor(System.UInt32,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)
  parent: System.Guid
  isExternal: false
  name: Guid(UInt32,UInt16,UInt16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  nameWithType: Guid.Guid(UInt32,UInt16,UInt16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
  fullName: System.Guid.Guid(UInt32,UInt16,UInt16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.UInt16
  parent: System
  isExternal: false
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Guid.CompareTo(System.Guid)
  parent: System.Guid
  isExternal: false
  name: CompareTo(Guid)
  nameWithType: Guid.CompareTo(Guid)
  fullName: System.Guid.CompareTo(Guid)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.CompareTo(System.Object)
  parent: System.Guid
  isExternal: false
  name: CompareTo(Object)
  nameWithType: Guid.CompareTo(Object)
  fullName: System.Guid.CompareTo(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Guid.Empty
  parent: System.Guid
  isExternal: false
  name: Empty
  nameWithType: Guid.Empty
  fullName: System.Guid.Empty
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.Equals(System.Guid)
  parent: System.Guid
  isExternal: false
  name: Equals(Guid)
  nameWithType: Guid.Equals(Guid)
  fullName: System.Guid.Equals(Guid)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.Equals(System.Object)
  parent: System.Guid
  isExternal: false
  name: Equals(Object)
  nameWithType: Guid.Equals(Object)
  fullName: System.Guid.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Guid.GetHashCode
  parent: System.Guid
  isExternal: false
  name: GetHashCode()
  nameWithType: Guid.GetHashCode()
  fullName: System.Guid.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid.NewGuid
  parent: System.Guid
  isExternal: false
  name: NewGuid()
  nameWithType: Guid.NewGuid()
  fullName: System.Guid.NewGuid()
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.op_Equality(System.Guid,System.Guid)
  parent: System.Guid
  isExternal: false
  name: op_Equality(Guid,Guid)
  nameWithType: Guid.op_Equality(Guid,Guid)
  fullName: System.Guid.op_Equality(Guid,Guid)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.op_Inequality(System.Guid,System.Guid)
  parent: System.Guid
  isExternal: false
  name: op_Inequality(Guid,Guid)
  nameWithType: Guid.op_Inequality(Guid,Guid)
  fullName: System.Guid.op_Inequality(Guid,Guid)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.Parse(System.String)
  parent: System.Guid
  isExternal: false
  name: Parse(String)
  nameWithType: Guid.Parse(String)
  fullName: System.Guid.Parse(String)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid.ParseExact(System.String,System.String)
  parent: System.Guid
  isExternal: false
  name: ParseExact(String,String)
  nameWithType: Guid.ParseExact(String,String)
  fullName: System.Guid.ParseExact(String,String)
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid.ToByteArray
  parent: System.Guid
  isExternal: false
  name: ToByteArray()
  nameWithType: Guid.ToByteArray()
  fullName: System.Guid.ToByteArray()
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.Guid.ToString
  parent: System.Guid
  isExternal: false
  name: ToString()
  nameWithType: Guid.ToString()
  fullName: System.Guid.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid.ToString(System.String)
  parent: System.Guid
  isExternal: false
  name: ToString(String)
  nameWithType: Guid.ToString(String)
  fullName: System.Guid.ToString(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid.ToString(System.String,System.IFormatProvider)
  parent: System.Guid
  isExternal: false
  name: ToString(String,IFormatProvider)
  nameWithType: Guid.ToString(String,IFormatProvider)
  fullName: System.Guid.ToString(String,IFormatProvider)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: false
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Guid.TryParse(System.String,System.Guid@)
  parent: System.Guid
  isExternal: false
  name: TryParse(String,Guid)
  nameWithType: Guid.TryParse(String,Guid)
  fullName: System.Guid.TryParse(String,Guid)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.TryParseExact(System.String,System.String,System.Guid@)
  parent: System.Guid
  isExternal: false
  name: TryParseExact(String,String,Guid)
  nameWithType: Guid.TryParseExact(String,String,Guid)
  fullName: System.Guid.TryParseExact(String,String,Guid)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid.CompareTo*
  parent: System.Guid
  isExternal: false
  nameWithType: Guid.
- uid: System.Guid.Equals*
  parent: System.Guid
  isExternal: false
  nameWithType: Guid.
- uid: System.Guid.ToString*
  parent: System.Guid
  isExternal: false
  nameWithType: Guid.
