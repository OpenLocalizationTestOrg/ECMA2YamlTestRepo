### YamlMime:ManagedReference
items:
- uid: System.UIntPtr
  id: UIntPtr
  children:
  - System.UIntPtr.#ctor(System.UInt32)
  - System.UIntPtr.#ctor(System.UInt64)
  - System.UIntPtr.#ctor(System.Void*)
  - System.UIntPtr.Add(System.UIntPtr,System.Int32)
  - System.UIntPtr.Equals(System.Object)
  - System.UIntPtr.GetHashCode
  - System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)
  - System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)
  - System.UIntPtr.op_Explicit(System.UInt32 to System.UIntPtr)
  - System.UIntPtr.op_Explicit(System.UInt64 to System.UIntPtr)
  - System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt32)
  - System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt64)
  - System.UIntPtr.op_Explicit(System.UIntPtr to System.Void*)
  - System.UIntPtr.op_Explicit(System.Void* to System.UIntPtr)
  - System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)
  - System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)
  - System.UIntPtr.Size
  - System.UIntPtr.Subtract(System.UIntPtr,System.Int32)
  - System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.UIntPtr.ToPointer
  - System.UIntPtr.ToString
  - System.UIntPtr.ToUInt32
  - System.UIntPtr.ToUInt64
  - System.UIntPtr.Zero
  langs:
  - csharp
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
  type: Struct
  summary: A platform-specific type that is used to represent a pointer or a handle.
  remarks: "The UIntPtr type is designed to be an integer whose size is platform-specific. That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.  \n  \n> [!IMPORTANT]\n>  The <xref:System.IntPtr> type is CLS-compliant, while the UIntPtr type is not. Only the <xref:System.IntPtr> type is used in the common language runtime. The UIntPtr type is provided mostly to maintain architectural symmetry with the <xref:System.IntPtr> type.  \n  \n The UIntPtr type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers. UIntPtr objects can also be used to hold handles.  \n  \n This type implements the <xref:System.Runtime.Serialization.ISerializable> interface."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct UIntPtr : System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.Runtime.Serialization.ISerializable
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: System.UIntPtr
  langs:
  - csharp
  name: UIntPtr(UInt32)
  nameWithType: UIntPtr.UIntPtr(UInt32)
  fullName: System.UIntPtr.UIntPtr(UInt32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.UIntPtr"> structure using the specified 32-bit pointer or handle.
  remarks: To be added.
  syntax:
    content: public UIntPtr (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: A pointer or handle contained in a 32-bit unsigned integer.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.#ctor(System.UInt64)
  id: '#ctor(System.UInt64)'
  parent: System.UIntPtr
  langs:
  - csharp
  name: UIntPtr(UInt64)
  nameWithType: UIntPtr.UIntPtr(UInt64)
  fullName: System.UIntPtr.UIntPtr(UInt64)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of <see cref="T:System.UIntPtr"> using the specified 64-bit pointer or handle.
  remarks: An exception is only thrown if the value of  requires more bits than the current platform supports.
  syntax:
    content: public UIntPtr (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: A pointer or handle contained in a 64-bit unsigned integer.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.#ctor(System.Void*)
  id: '#ctor(System.Void*)'
  parent: System.UIntPtr
  langs:
  - csharp
  name: UIntPtr(Void*)
  nameWithType: UIntPtr.UIntPtr(Void*)
  fullName: System.UIntPtr.UIntPtr(Void*)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of <see cref="T:System.UIntPtr"> using the specified pointer to an unspecified type.
  remarks: To be added.
  syntax:
    content: public UIntPtr (void* value);
    parameters:
    - id: value
      type: System.Void*
      description: A pointer to an unspecified type.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.Add(System.UIntPtr,System.Int32)
  id: Add(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  langs:
  - csharp
  name: Add(UIntPtr,Int32)
  nameWithType: UIntPtr.Add(UIntPtr,Int32)
  fullName: System.UIntPtr.Add(UIntPtr,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Adds an offset to the value of an unsigned pointer.
  remarks: "The <xref:System.IntPtr.Add%2A> method does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, the addition operation is performed in an unchecked context.  \n  \n Languages that do not support operator overloading or custom operators can use this method to add an offset to the value of an unsigned pointer."
  example:
  - "The following example instantiates a <xref:System.UIntPtr> object that points to the beginning of a ten-element array, and then calls the Add method to iterate the elements in the array.  \n  \n [!CODE [System.UIntPtr.Add#1](../CodeSnippet/VS_Snippets_CLR_System/system.uintptr.add#1)]"
  syntax:
    content: public static UIntPtr Add (UIntPtr pointer, int offset);
    parameters:
    - id: pointer
      type: System.UIntPtr
      description: The unsigned pointer to add the offset to.
    - id: offset
      type: System.Int32
      description: The offset to add.
    return:
      type: System.UIntPtr
      description: A new unsigned pointer that reflects the addition of  to .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.UIntPtr
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: UIntPtr.Equals(Object)
  fullName: System.UIntPtr.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns a value indicating whether this instance is equal to a specified object.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare with this instance or `null`.
    return:
      type: System.Boolean
      description: '`true` if  is an instance of <see cref="T:System.UIntPtr"> and equals the value of this instance; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.GetHashCode
  id: GetHashCode
  parent: System.UIntPtr
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: UIntPtr.GetHashCode()
  fullName: System.UIntPtr.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the hash code for this instance.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)
  id: op_Addition(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Addition(UIntPtr,Int32)
  nameWithType: UIntPtr.op_Addition(UIntPtr,Int32)
  fullName: System.UIntPtr.op_Addition(UIntPtr,Int32)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Adds an offset to the value of an unsigned pointer.
  remarks: "The Addition method defines the addition operation for <xref:System.UIntPtr> objects. It enables code such as the following.  \n  \n [!CODE [System.UIntPtr.op_Addition#1](../CodeSnippet/VS_Snippets_CLR_System/system.uintptr.op_addition#1)]  \n  \n Languages that do not support custom operators can call the <xref:System.UIntPtr.Add%2A> method instead.  \n  \n The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context."
  syntax:
    content: public static UIntPtr op_Addition (UIntPtr pointer, int offset);
    parameters:
    - id: pointer
      type: System.UIntPtr
      description: The unsigned pointer to add the offset to.
    - id: offset
      type: System.Int32
      description: The offset to add.
    return:
      type: System.UIntPtr
      description: A new unsigned pointer that reflects the addition of  to .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)
  id: op_Equality(System.UIntPtr,System.UIntPtr)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Equality(UIntPtr,UIntPtr)
  nameWithType: UIntPtr.op_Equality(UIntPtr,UIntPtr)
  fullName: System.UIntPtr.op_Equality(UIntPtr,UIntPtr)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether two specified instances of <see cref="T:System.UIntPtr"> are equal.
  remarks: To be added.
  syntax:
    content: public static bool op_Equality (UIntPtr value1, UIntPtr value2);
    parameters:
    - id: value1
      type: System.UIntPtr
      description: The first pointer or handle to compare.
    - id: value2
      type: System.UIntPtr
      description: The second pointer or handle to compare.
    return:
      type: System.Boolean
      description: '`true` if  equals ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Explicit(System.UInt32 to System.UIntPtr)
  id: op_Explicit(System.UInt32 to System.UIntPtr)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Explicit(UInt32)
  nameWithType: UIntPtr.op_Explicit(UInt32)
  fullName: System.UIntPtr.op_Explicit(UInt32)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static UIntPtr op_Explicit (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: To be added.
    return:
      type: System.UIntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Explicit(System.UInt64 to System.UIntPtr)
  id: op_Explicit(System.UInt64 to System.UIntPtr)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Explicit(UInt64)
  nameWithType: UIntPtr.op_Explicit(UInt64)
  fullName: System.UIntPtr.op_Explicit(UInt64)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static UIntPtr op_Explicit (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: To be added.
    return:
      type: System.UIntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt32)
  id: op_Explicit(System.UIntPtr to System.UInt32)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Explicit(UIntPtr)
  nameWithType: UIntPtr.op_Explicit(UIntPtr)
  fullName: System.UIntPtr.op_Explicit(UIntPtr)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static uint op_Explicit (UIntPtr value);
    parameters:
    - id: value
      type: System.UIntPtr
      description: To be added.
    return:
      type: System.UInt32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt64)
  id: op_Explicit(System.UIntPtr to System.UInt64)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Explicit(UIntPtr)
  nameWithType: UIntPtr.op_Explicit(UIntPtr)
  fullName: System.UIntPtr.op_Explicit(UIntPtr)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static ulong op_Explicit (UIntPtr value);
    parameters:
    - id: value
      type: System.UIntPtr
      description: To be added.
    return:
      type: System.UInt64
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.Void*)
  id: op_Explicit(System.UIntPtr to System.Void*)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Explicit(UIntPtr)
  nameWithType: UIntPtr.op_Explicit(UIntPtr)
  fullName: System.UIntPtr.op_Explicit(UIntPtr)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static void* op_Explicit (UIntPtr value);
    parameters:
    - id: value
      type: System.UIntPtr
      description: To be added.
    return:
      type: System.Void*
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Explicit(System.Void* to System.UIntPtr)
  id: op_Explicit(System.Void* to System.UIntPtr)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Explicit(Void*)
  nameWithType: UIntPtr.op_Explicit(Void*)
  fullName: System.UIntPtr.op_Explicit(Void*)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: To be added.
  remarks: To be added.
  syntax:
    content: public static UIntPtr op_Explicit (void* value);
    parameters:
    - id: value
      type: System.Void*
      description: To be added.
    return:
      type: System.UIntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)
  id: op_Inequality(System.UIntPtr,System.UIntPtr)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Inequality(UIntPtr,UIntPtr)
  nameWithType: UIntPtr.op_Inequality(UIntPtr,UIntPtr)
  fullName: System.UIntPtr.op_Inequality(UIntPtr,UIntPtr)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Determines whether two specified instances of <see cref="T:System.UIntPtr"> are not equal.
  remarks: To be added.
  syntax:
    content: public static bool op_Inequality (UIntPtr value1, UIntPtr value2);
    parameters:
    - id: value1
      type: System.UIntPtr
      description: The first pointer or handle to compare.
    - id: value2
      type: System.UIntPtr
      description: The second pointer or handle to compare.
    return:
      type: System.Boolean
      description: '`true` if  does not equal ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)
  id: op_Subtraction(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  langs:
  - csharp
  name: op_Subtraction(UIntPtr,Int32)
  nameWithType: UIntPtr.op_Subtraction(UIntPtr,Int32)
  fullName: System.UIntPtr.op_Subtraction(UIntPtr,Int32)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Subtracts an offset from the value of an unsigned pointer.
  remarks: "The Subtraction method defines the subtraction operation for <xref:System.UIntPtr> objects. It enables code such as the following.  \n  \n [!CODE [System.UIntPtr.op_Addition#2](../CodeSnippet/VS_Snippets_CLR_System/system.uintptr.op_addition#2)]  \n  \n Languages that do not support custom operators can call the <xref:System.UIntPtr.Subtract%2A> method instead.  \n  \n The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context."
  syntax:
    content: public static UIntPtr op_Subtraction (UIntPtr pointer, int offset);
    parameters:
    - id: pointer
      type: System.UIntPtr
      description: The unsigned pointer to subtract the offset from.
    - id: offset
      type: System.Int32
      description: The offset to subtract.
    return:
      type: System.UIntPtr
      description: A new unsigned pointer that reflects the subtraction of  from .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.Size
  id: Size
  parent: System.UIntPtr
  langs:
  - csharp
  name: Size
  nameWithType: UIntPtr.Size
  fullName: System.UIntPtr.Size
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the size of this instance.
  remarks: To be added.
  syntax:
    content: public static int Size { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.Subtract(System.UIntPtr,System.Int32)
  id: Subtract(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  langs:
  - csharp
  name: Subtract(UIntPtr,Int32)
  nameWithType: UIntPtr.Subtract(UIntPtr,Int32)
  fullName: System.UIntPtr.Subtract(UIntPtr,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Subtracts an offset from the value of an unsigned pointer.
  remarks: "The <xref:System.IntPtr.Subtract%2A> method does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, the subtraction operation is performed in an unchecked context.  \n  \n Languages that do not support operator overloading or custom operators can use this method to subtract an offset from the value of an unsigned pointer."
  example:
  - "The following example instantiates an <xref:System.IntPtr> object that points to the end of a ten-element array, and then calls the <xref:System.IntPtr.Subtract%2A> method to iterate the elements in the array in reverse order.  \n  \n [!CODE [System.UIntPtr.Subtract#1](../CodeSnippet/VS_Snippets_CLR_System/system.uintptr.subtract#1)]"
  syntax:
    content: public static UIntPtr Subtract (UIntPtr pointer, int offset);
    parameters:
    - id: pointer
      type: System.UIntPtr
      description: The unsigned pointer to subtract the offset from.
    - id: offset
      type: System.Int32
      description: The offset to subtract.
    return:
      type: System.UIntPtr
      description: A new unsigned pointer that reflects the subtraction of  from .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.UIntPtr
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: UIntPtr.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.UIntPtr.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"> object with the data needed to serialize the current <xref:System.UIntPtr> object.
  remarks: This method populates the  parameter with the value of the current <xref:System.UIntPtr> object.
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <see cref="T:System.Runtime.Serialization.SerializationInfo"> object to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination for this serialization. (This parameter is not used; specify `null`.)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.ToPointer
  id: ToPointer
  parent: System.UIntPtr
  langs:
  - csharp
  name: ToPointer()
  nameWithType: UIntPtr.ToPointer()
  fullName: System.UIntPtr.ToPointer()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of this instance to a pointer to an unspecified type.
  remarks: To be added.
  syntax:
    content: public void* ToPointer ();
    parameters: []
    return:
      type: System.Void*
      description: A pointer to <see cref="T:System.Void">; that is, a pointer to memory containing data of an unspecified type.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.ToString
  id: ToString
  parent: System.UIntPtr
  langs:
  - csharp
  name: ToString()
  nameWithType: UIntPtr.ToString()
  fullName: System.UIntPtr.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the numeric value of this instance to its equivalent string representation.
  remarks: If the value of the <xref:System.IntPtr.Size%2A> property for this instance is 4, then this method is equivalent to <xref:System.UInt32.ToString%2A>; otherwise, this method is equivalent to <xref:System.UInt64.ToString%2A>.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The string representation of the value of this instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.ToUInt32
  id: ToUInt32
  parent: System.UIntPtr
  langs:
  - csharp
  name: ToUInt32()
  nameWithType: UIntPtr.ToUInt32()
  fullName: System.UIntPtr.ToUInt32()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of this instance to a 32-bit unsigned integer.
  remarks: An exception is only thrown if the value of  requires more bits than the current platform supports.
  syntax:
    content: public uint ToUInt32 ();
    parameters: []
    return:
      type: System.UInt32
      description: A 32-bit unsigned integer equal to the value of this instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.ToUInt64
  id: ToUInt64
  parent: System.UIntPtr
  langs:
  - csharp
  name: ToUInt64()
  nameWithType: UIntPtr.ToUInt64()
  fullName: System.UIntPtr.ToUInt64()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Converts the value of this instance to a 64-bit unsigned integer.
  remarks: To be added.
  syntax:
    content: public ulong ToUInt64 ();
    parameters: []
    return:
      type: System.UInt64
      description: A 64-bit unsigned integer equal to the value of this instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.UIntPtr.Zero
  id: Zero
  parent: System.UIntPtr
  langs:
  - csharp
  name: Zero
  nameWithType: UIntPtr.Zero
  fullName: System.UIntPtr.Zero
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: A read-only field that represents a pointer or handle that has been initialized to zero.
  remarks: "The value of this field is not equivalent to `null`. Use this field to efficiently determine whether an instance of <xref:System.UIntPtr> has been set to a value other than zero.  \n  \n For example, assume the variable, uip, is an instance of <xref:System.UIntPtr>. You can determine if it has been set by comparing it to the value returned by a constructor, for example: \" `if uip != new UIntPtr(0)...` \". However, invoking a constructor to get an unintialized pointer is inefficient. It is better to code either \" `if uip != UIntPtr.Zero...` \", or \" `if !UIntPtr.Zero.Equals(uip)...` \"."
  syntax:
    content: public static readonly UIntPtr Zero;
    return:
      type: System.UIntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.UIntPtr.#ctor(System.UInt32)
  parent: System.UIntPtr
  isExternal: false
  name: UIntPtr(UInt32)
  nameWithType: UIntPtr.UIntPtr(UInt32)
  fullName: System.UIntPtr.UIntPtr(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UIntPtr.#ctor(System.UInt64)
  parent: System.UIntPtr
  isExternal: false
  name: UIntPtr(UInt64)
  nameWithType: UIntPtr.UIntPtr(UInt64)
  fullName: System.UIntPtr.UIntPtr(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.UIntPtr.#ctor(System.Void*)
  parent: System.UIntPtr
  isExternal: false
  name: UIntPtr(Void*)
  nameWithType: UIntPtr.UIntPtr(Void*)
  fullName: System.UIntPtr.UIntPtr(Void*)
- uid: System.UIntPtr.Add(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  isExternal: false
  name: Add(UIntPtr,Int32)
  nameWithType: UIntPtr.Add(UIntPtr,Int32)
  fullName: System.UIntPtr.Add(UIntPtr,Int32)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UIntPtr.Equals(System.Object)
  parent: System.UIntPtr
  isExternal: false
  name: Equals(Object)
  nameWithType: UIntPtr.Equals(Object)
  fullName: System.UIntPtr.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.UIntPtr.GetHashCode
  parent: System.UIntPtr
  isExternal: false
  name: GetHashCode()
  nameWithType: UIntPtr.GetHashCode()
  fullName: System.UIntPtr.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  isExternal: false
  name: op_Addition(UIntPtr,Int32)
  nameWithType: UIntPtr.op_Addition(UIntPtr,Int32)
  fullName: System.UIntPtr.op_Addition(UIntPtr,Int32)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)
  parent: System.UIntPtr
  isExternal: false
  name: op_Equality(UIntPtr,UIntPtr)
  nameWithType: UIntPtr.op_Equality(UIntPtr,UIntPtr)
  fullName: System.UIntPtr.op_Equality(UIntPtr,UIntPtr)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr.op_Explicit(System.UInt32 to System.UIntPtr)
  parent: System.UIntPtr
  isExternal: false
  name: op_Explicit(UInt32)
  nameWithType: UIntPtr.op_Explicit(UInt32)
  fullName: System.UIntPtr.op_Explicit(UInt32)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UIntPtr.op_Explicit(System.UInt64 to System.UIntPtr)
  parent: System.UIntPtr
  isExternal: false
  name: op_Explicit(UInt64)
  nameWithType: UIntPtr.op_Explicit(UInt64)
  fullName: System.UIntPtr.op_Explicit(UInt64)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt32)
  parent: System.UIntPtr
  isExternal: false
  name: op_Explicit(UIntPtr)
  nameWithType: UIntPtr.op_Explicit(UIntPtr)
  fullName: System.UIntPtr.op_Explicit(UIntPtr)
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt64)
  parent: System.UIntPtr
  isExternal: false
  name: op_Explicit(UIntPtr)
  nameWithType: UIntPtr.op_Explicit(UIntPtr)
  fullName: System.UIntPtr.op_Explicit(UIntPtr)
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.Void*)
  parent: System.UIntPtr
  isExternal: false
  name: op_Explicit(UIntPtr)
  nameWithType: UIntPtr.op_Explicit(UIntPtr)
  fullName: System.UIntPtr.op_Explicit(UIntPtr)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr.op_Explicit(System.Void* to System.UIntPtr)
  parent: System.UIntPtr
  isExternal: false
  name: op_Explicit(Void*)
  nameWithType: UIntPtr.op_Explicit(Void*)
  fullName: System.UIntPtr.op_Explicit(Void*)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)
  parent: System.UIntPtr
  isExternal: false
  name: op_Inequality(UIntPtr,UIntPtr)
  nameWithType: UIntPtr.op_Inequality(UIntPtr,UIntPtr)
  fullName: System.UIntPtr.op_Inequality(UIntPtr,UIntPtr)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  isExternal: false
  name: op_Subtraction(UIntPtr,Int32)
  nameWithType: UIntPtr.op_Subtraction(UIntPtr,Int32)
  fullName: System.UIntPtr.op_Subtraction(UIntPtr,Int32)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UIntPtr.Size
  parent: System.UIntPtr
  isExternal: false
  name: Size
  nameWithType: UIntPtr.Size
  fullName: System.UIntPtr.Size
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UIntPtr.Subtract(System.UIntPtr,System.Int32)
  parent: System.UIntPtr
  isExternal: false
  name: Subtract(UIntPtr,Int32)
  nameWithType: UIntPtr.Subtract(UIntPtr,Int32)
  fullName: System.UIntPtr.Subtract(UIntPtr,Int32)
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.UIntPtr
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: UIntPtr.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.UIntPtr.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.UIntPtr.ToPointer
  parent: System.UIntPtr
  isExternal: false
  name: ToPointer()
  nameWithType: UIntPtr.ToPointer()
  fullName: System.UIntPtr.ToPointer()
- uid: System.UIntPtr.ToString
  parent: System.UIntPtr
  isExternal: false
  name: ToString()
  nameWithType: UIntPtr.ToString()
  fullName: System.UIntPtr.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UIntPtr.ToUInt32
  parent: System.UIntPtr
  isExternal: false
  name: ToUInt32()
  nameWithType: UIntPtr.ToUInt32()
  fullName: System.UIntPtr.ToUInt32()
- uid: System.UInt32
  parent: System
  isExternal: false
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.UIntPtr.ToUInt64
  parent: System.UIntPtr
  isExternal: false
  name: ToUInt64()
  nameWithType: UIntPtr.ToUInt64()
  fullName: System.UIntPtr.ToUInt64()
- uid: System.UInt64
  parent: System
  isExternal: false
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.UIntPtr.Zero
  parent: System.UIntPtr
  isExternal: false
  name: Zero
  nameWithType: UIntPtr.Zero
  fullName: System.UIntPtr.Zero
- uid: System.UIntPtr
  parent: System
  isExternal: false
  name: UIntPtr
  nameWithType: UIntPtr
  fullName: System.UIntPtr
