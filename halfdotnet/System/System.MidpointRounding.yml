### YamlMime:ManagedReference
items:
- uid: System.MidpointRounding
  id: MidpointRounding
  children:
  - System.MidpointRounding.AwayFromZero
  - System.MidpointRounding.ToEven
  langs:
  - csharp
  name: MidpointRounding
  nameWithType: MidpointRounding
  fullName: System.MidpointRounding
  type: Enum
  summary: Specifies how mathematical rounding methods should process a number that is midway between two numbers.
  remarks: "Use MidpointRounding with appropriate overloads of <xref:System.Math.Round%2A?displayProperty=fullName> to provide more control of the rounding process.  \n  \n A rounding operation takes an original number with an implicit or specified precision; examines the next digit, which is at that precision plus one; and returns the nearest number with the same precision as the original number. For positive numbers, if the next digit is from 0 through 4, the nearest number is toward negative infinity. If the next digit is from 6 through 9, the nearest number is toward positive infinity. For negative numbers, if the next digit is from 0 through 4, the nearest number is toward positive infinity. If the next digit is from 6 through 9, the nearest number is toward negative infinity.  \n  \n In the previous cases, the MidpointRounding enumeration does not affect the result of the rounding operation. However, if the next digit is 5, which is the midpoint between two possible results, and all remaining digits are zero or there are no remaining digits, the nearest number is ambiguous. In this case, the MidpointRounding enumeration enables you to specify whether the rounding operation returns the nearest number away from zero or the nearest even number.  \n  \n The following table demonstrates the results of rounding some negative and positive numbers in conjunction with the values of MidpointRounding. The precision used to round the numbers is zero, which means the number after the decimal point affects the rounding operation. For example, for the number -2.5, the digit after the decimal point is 5. Because that digit is the midpoint, you can use a MidpointRounding value to determine the result of rounding. If F:System.MidpointRounding.AwayFromZero?qualifyHint=False&autoUpgrade=True is specified, -3 is returned because it is the nearest number away from zero with a precision of zero. If F:System.MidpointRounding.ToEven?qualifyHint=False&autoUpgrade=True is specified, -2 is returned because it is the nearest even number with a precision of zero.  \n  \n|Original number|AwayFromZero|ToEven|  \n|---------------------|------------------|------------|  \n|3.5|4|4|  \n|2.8|3|3|  \n|2.5|3|2|  \n|2.1|2|2|  \n|-2.1|-2|-2|  \n|-2.5|-3|-2|  \n|-2.8|-3|-3|  \n|-3.5|-4|-4|"
  example:
  - "The following code example demonstrates the M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)?qualifyHint=False&autoUpgrade=True method in conjunction with the MidpointRounding enumeration.  \n  \n [!CODE [math.midpointrounding#1](../CodeSnippet/VS_Snippets_CLR/math.midpointrounding#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum MidpointRounding
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.MidpointRounding.AwayFromZero
  id: AwayFromZero
  parent: System.MidpointRounding
  langs:
  - csharp
  name: AwayFromZero
  nameWithType: MidpointRounding.AwayFromZero
  fullName: System.MidpointRounding.AwayFromZero
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: When a number is halfway between two others, it is rounded toward the nearest number that is away from zero.
  syntax:
    content: AwayFromZero
    return:
      type: System.MidpointRounding
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.MidpointRounding.ToEven
  id: ToEven
  parent: System.MidpointRounding
  langs:
  - csharp
  name: ToEven
  nameWithType: MidpointRounding.ToEven
  fullName: System.MidpointRounding.ToEven
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: When a number is halfway between two others, it is rounded toward the nearest even number.
  syntax:
    content: ToEven
    return:
      type: System.MidpointRounding
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.MidpointRounding.AwayFromZero
  parent: System.MidpointRounding
  isExternal: false
  name: AwayFromZero
  nameWithType: MidpointRounding.AwayFromZero
  fullName: System.MidpointRounding.AwayFromZero
- uid: System.MidpointRounding
  parent: System
  isExternal: false
  name: MidpointRounding
  nameWithType: MidpointRounding
  fullName: System.MidpointRounding
- uid: System.MidpointRounding.ToEven
  parent: System.MidpointRounding
  isExternal: false
  name: ToEven
  nameWithType: MidpointRounding.ToEven
  fullName: System.MidpointRounding.ToEven
- uid: System.MidpointRounding
  parent: System
  isExternal: false
  name: MidpointRounding
  nameWithType: MidpointRounding
  fullName: System.MidpointRounding
