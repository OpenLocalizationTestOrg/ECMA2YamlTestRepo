### YamlMime:ManagedReference
items:
- uid: System.WeakReference
  id: WeakReference
  children:
  - System.WeakReference.#ctor(System.Object)
  - System.WeakReference.#ctor(System.Object,System.Boolean)
  - System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.WeakReference.Finalize
  - System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.WeakReference.IsAlive
  - System.WeakReference.Target
  - System.WeakReference.TrackResurrection
  langs:
  - csharp
  name: WeakReference
  nameWithType: WeakReference
  fullName: System.WeakReference
  type: Class
  summary: Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.
  remarks: A weak reference allows the garbage collector to collect an object while still allowing an application to access the object. If you need the object, you can still obtain a strong reference to it and prevent it from being collected. For more information about how to use short and long weak references, see [Weak References](../Topic/Weak%20References.md).
  example:
  - "The following example demonstrates how you can use weak references to maintain a cache of objects as a resource for an application. The cache is constructed using an <xref:System.Collections.Generic.IDictionary%602> of WeakReference objects keyed by an index value. The <xref:System.WeakReference.Target%2A> property for the WeakReference objects is an object in a byte array that represents data.  \n  \n The example randomly accesses objects in the cache. If an object is reclaimed for garbage collection, a new data object is regenerated; otherwise, the object is available to access because of the weak reference.  \n  \n [!CODE [WeakReference#1](../CodeSnippet/VS_Snippets_CLR/WeakReference#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class WeakReference : System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.WeakReference.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.WeakReference
  langs:
  - csharp
  name: WeakReference(Object)
  nameWithType: WeakReference.WeakReference(Object)
  fullName: System.WeakReference.WeakReference(Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.WeakReference"> class, referencing the specified object.
  remarks: This constructor creates a short weak reference to .
  syntax:
    content: public WeakReference (object target);
    parameters:
    - id: target
      type: System.Object
      description: The object to track or `null`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.WeakReference.#ctor(System.Object,System.Boolean)
  id: '#ctor(System.Object,System.Boolean)'
  parent: System.WeakReference
  langs:
  - csharp
  name: WeakReference(Object,Boolean)
  nameWithType: WeakReference.WeakReference(Object,Boolean)
  fullName: System.WeakReference.WeakReference(Object,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.WeakReference"> class, referencing the specified object and using the specified resurrection tracking.
  remarks: If  is `false`, a short weak reference is created. If  is `true`, a long weak reference is created.
  example:
  - "The following example creates a cache of data objects with short weak references. This example is part of a larger example provided for the <xref:System.WeakReference> class.  \n  \n [!CODE [WeakReference#2](../CodeSnippet/VS_Snippets_CLR/WeakReference#2)]"
  syntax:
    content: public WeakReference (object target, bool trackResurrection);
    parameters:
    - id: target
      type: System.Object
      description: An object to track.
    - id: trackResurrection
      type: System.Boolean
      description: Indicates when to stop tracking the object. If `true`, the object is tracked after finalization; if `false`, the object is only tracked until finalization.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.WeakReference
  langs:
  - csharp
  name: WeakReference(SerializationInfo,StreamingContext)
  nameWithType: WeakReference.WeakReference(SerializationInfo,StreamingContext)
  fullName: System.WeakReference.WeakReference(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.WeakReference"> class, using deserialized data from the specified serialization and stream objects.
  remarks: The  parameter is reserved, and does not currently participate in this operation.
  syntax:
    content: protected WeakReference (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference"> object.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: (Reserved) Describes the source and destination of the serialized stream specified by .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.WeakReference.Finalize
  id: Finalize
  parent: System.WeakReference
  langs:
  - csharp
  name: Finalize()
  nameWithType: WeakReference.Finalize()
  fullName: System.WeakReference.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Discards the reference to the target represented by the current <see cref="T:System.WeakReference"> object.
  remarks: To be added.
  syntax:
    content: ~WeakReference ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.WeakReference
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WeakReference.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.WeakReference.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"> object with all the data needed to serialize the current <xref:System.WeakReference> object.
  remarks: "This method stores all the information in  necessary to serialize the current <xref:System.WeakReference> object.  \n  \n The  parameter is reserved and is not currently used in the execution of this method."
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: An object that holds all the data needed to serialize or deserialize the current <see cref="T:System.WeakReference"> object.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: (Reserved) The location where serialized data is stored and retrieved.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.WeakReference.IsAlive
  id: IsAlive
  parent: System.WeakReference
  langs:
  - csharp
  name: IsAlive
  nameWithType: WeakReference.IsAlive
  fullName: System.WeakReference.IsAlive
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference"> object has been garbage collected.
  remarks: Because an object could potentially be reclaimed for garbage collection immediately after the IsAlive property returns `true`, using this property is not recommended unless you are testing only for a `false` return value.
  syntax:
    content: public virtual bool IsAlive { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.WeakReference.Target
  id: Target
  parent: System.WeakReference
  langs:
  - csharp
  name: Target
  nameWithType: WeakReference.Target
  fullName: System.WeakReference.Target
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets or sets the object (the target) referenced by the current <see cref="T:System.WeakReference"> object.
  remarks: After setting this property to the target object, make sure that there are no other strong references to the object; otherwise, it will not be collected.
  example:
  - "The following example tries to obtain an object from a cache of objects with weak references. If the object was reclaimed for garbage collection, a new object is generated. This example is part of a larger example provided for the <xref:System.WeakReference> class.  \n  \n [!CODE [WeakReference#3](../CodeSnippet/VS_Snippets_CLR/WeakReference#3)]"
  syntax:
    content: public virtual object Target { get; set; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.WeakReference.TrackResurrection
  id: TrackResurrection
  parent: System.WeakReference
  langs:
  - csharp
  name: TrackResurrection
  nameWithType: WeakReference.TrackResurrection
  fullName: System.WeakReference.TrackResurrection
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets an indication whether the object referenced by the current <see cref="T:System.WeakReference"> object is tracked after it is finalized.
  remarks: If `true`, the weak reference is a long weak reference and `true` was specified for the  parameter in the <xref:System.WeakReference> constructor.
  syntax:
    content: public virtual bool TrackResurrection { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.WeakReference.#ctor(System.Object)
  parent: System.WeakReference
  isExternal: false
  name: WeakReference(Object)
  nameWithType: WeakReference.WeakReference(Object)
  fullName: System.WeakReference.WeakReference(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.WeakReference.#ctor(System.Object,System.Boolean)
  parent: System.WeakReference
  isExternal: false
  name: WeakReference(Object,Boolean)
  nameWithType: WeakReference.WeakReference(Object,Boolean)
  fullName: System.WeakReference.WeakReference(Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.WeakReference
  isExternal: false
  name: WeakReference(SerializationInfo,StreamingContext)
  nameWithType: WeakReference.WeakReference(SerializationInfo,StreamingContext)
  fullName: System.WeakReference.WeakReference(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.WeakReference.Finalize
  parent: System.WeakReference
  isExternal: false
  name: Finalize()
  nameWithType: WeakReference.Finalize()
  fullName: System.WeakReference.Finalize()
- uid: System.WeakReference.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.WeakReference
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: WeakReference.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.WeakReference.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.WeakReference.IsAlive
  parent: System.WeakReference
  isExternal: false
  name: IsAlive
  nameWithType: WeakReference.IsAlive
  fullName: System.WeakReference.IsAlive
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.WeakReference.Target
  parent: System.WeakReference
  isExternal: false
  name: Target
  nameWithType: WeakReference.Target
  fullName: System.WeakReference.Target
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.WeakReference.TrackResurrection
  parent: System.WeakReference
  isExternal: false
  name: TrackResurrection
  nameWithType: WeakReference.TrackResurrection
  fullName: System.WeakReference.TrackResurrection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
