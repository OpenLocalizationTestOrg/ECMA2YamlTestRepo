### YamlMime:ManagedReference
items:
- uid: System.OverflowException
  id: OverflowException
  children:
  - System.OverflowException.#ctor
  - System.OverflowException.#ctor(System.String)
  - System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.OverflowException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: OverflowException
  nameWithType: OverflowException
  fullName: System.OverflowException
  type: Class
  summary: The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow.
  remarks: "An OverflowException is thrown at run time under the following conditions:  \n  \n-   An arithmetic operation produces a result that is outside the range of the data type returned by the operation. The following example illustrates the OverflowException that is thrown by a multiplication operation that overflows the bounds of the <xref:System.Int32> type.  \n  \n     [!CODE [System.OverflowException#1](../CodeSnippet/VS_Snippets_CLR_System/system.overflowexception#1)]  \n  \n-   A casting or conversion operation attempts to perform a narrowing conversion, and the value of the source data type is outside the range of the target data type. The following example illustrates the OverflowException that is thrown by the attempt to convert a large unsigned byte value to a signed byte value.  \n  \n     [!CODE [System.OverflowException#2](../CodeSnippet/VS_Snippets_CLR_System/system.overflowexception#2)]  \n  \n In each case, the result of the operation is a value that is less than the `MinValue` property or greater than the `MaxValue` property of the data type that results from the operation.  \n  \n For the arithmetic, casting, or conversion operation to throw an OverflowException, the operation must occur in a checked context. By default, arithmetic operations and overflows in Visual Basic are checked; in C#, they are not. If the operation occurs in an unchecked context, the result is truncated by discarding any high-order bits that do not fit into the destination type. The following example illustrates such an unchecked conversion in C#. It repeats the previous example in an unchecked context.  \n  \n [!CODE [System.OverflowException#3](../CodeSnippet/VS_Snippets_CLR_System/system.overflowexception#3)]  \n  \n The following Microsoft intermediate language (MSIL) instructions throw an OverflowException:  \n  \n-   `add.ovf.` *\\<signed>*  \n  \n-   `conv.ovf.` *\\<to type>*  \n  \n-   `conv.ovf.` *\\<to type>* `.un`  \n  \n-   `mul.ovf.` *\\<type>*  \n  \n-   `sub.ovf.` *\\<type>*  \n  \n-   `newarr`  \n  \n OverflowException uses the HRESULT COR_E_OVERFLOW, which has the value 0x80131516.  \n  \n For a list of initial property values for an instance of OverflowException, see the <xref:System.OverflowException.%23ctor%2A> constructors."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class OverflowException : ArithmeticException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  - System.ArithmeticException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.OverflowException.#ctor
  id: '#ctor'
  parent: System.OverflowException
  langs:
  - csharp
  name: OverflowException()
  nameWithType: OverflowException.OverflowException()
  fullName: System.OverflowException.OverflowException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.OverflowException"> class.
  remarks: "The following table shows the initial property values for an instance of <xref:System.OverflowException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  syntax:
    content: public OverflowException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.OverflowException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.OverflowException
  langs:
  - csharp
  name: OverflowException(String)
  nameWithType: OverflowException.OverflowException(String)
  fullName: System.OverflowException.OverflowException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.OverflowException"> class with a specified error message.
  remarks: "The content of the  should be understandable to the user. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.OverflowException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public OverflowException (string message);
    parameters:
    - id: message
      type: System.String
      description: The message that describes the error.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.OverflowException
  langs:
  - csharp
  name: OverflowException(SerializationInfo,StreamingContext)
  nameWithType: OverflowException.OverflowException(SerializationInfo,StreamingContext)
  fullName: System.OverflowException.OverflowException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.OverflowException"> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
  syntax:
    content: protected OverflowException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.OverflowException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.OverflowException
  langs:
  - csharp
  name: OverflowException(String,Exception)
  nameWithType: OverflowException.OverflowException(String,Exception)
  fullName: System.OverflowException.OverflowException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.OverflowException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.OverflowException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public OverflowException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not a null reference (`Nothing` in Visual Basic), the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ArithmeticException
  isExternal: false
  name: System.ArithmeticException
- uid: System.OverflowException.#ctor
  parent: System.OverflowException
  isExternal: false
  name: OverflowException()
  nameWithType: OverflowException.OverflowException()
  fullName: System.OverflowException.OverflowException()
- uid: System.OverflowException.#ctor(System.String)
  parent: System.OverflowException
  isExternal: false
  name: OverflowException(String)
  nameWithType: OverflowException.OverflowException(String)
  fullName: System.OverflowException.OverflowException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.OverflowException
  isExternal: false
  name: OverflowException(SerializationInfo,StreamingContext)
  nameWithType: OverflowException.OverflowException(SerializationInfo,StreamingContext)
  fullName: System.OverflowException.OverflowException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.OverflowException.#ctor(System.String,System.Exception)
  parent: System.OverflowException
  isExternal: false
  name: OverflowException(String,Exception)
  nameWithType: OverflowException.OverflowException(String,Exception)
  fullName: System.OverflowException.OverflowException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
