### YamlMime:ManagedReference
items:
- uid: System.RuntimeTypeHandle
  id: RuntimeTypeHandle
  children:
  - System.RuntimeTypeHandle.Equals(System.Object)
  - System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)
  - System.RuntimeTypeHandle.GetHashCode
  - System.RuntimeTypeHandle.GetModuleHandle
  - System.RuntimeTypeHandle.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)
  - System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)
  - System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)
  - System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)
  - System.RuntimeTypeHandle.Value
  langs:
  - csharp
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
  type: Struct
  summary: Represents a type using an internal metadata token.
  remarks: ''
  example:
  - "The following example demonstrates how to obtain a RuntimeTypeHandlefrom a type or from an object, and how to turn the handle back into a type.  \n  \n [!CODE [Type_GetTypeHandle#1](../CodeSnippet/VS_Snippets_CLR/Type_GetTypeHandle#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct RuntimeTypeHandle : System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.ValueType
  implements:
  - System.Runtime.Serialization.ISerializable
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RuntimeTypeHandle.Equals(Object)
  fullName: System.RuntimeTypeHandle.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether the specified object is equal to the current <see cref="T:System.RuntimeTypeHandle"> structure.
  remarks: To be added.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: An object to compare to the current instance.
    return:
      type: System.Boolean
      description: '`true` if  is a <see cref="T:System.RuntimeTypeHandle"> structure and is equal to the value of this instance; otherwise, `false`.'
  overload: System.RuntimeTypeHandle.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)
  id: Equals(System.RuntimeTypeHandle)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: Equals(RuntimeTypeHandle)
  nameWithType: RuntimeTypeHandle.Equals(RuntimeTypeHandle)
  fullName: System.RuntimeTypeHandle.Equals(RuntimeTypeHandle)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether the specified <see cref="T:System.RuntimeTypeHandle"> structure is equal to the current <see cref="T:System.RuntimeTypeHandle"> structure.
  remarks: To be added.
  syntax:
    content: public bool Equals (RuntimeTypeHandle handle);
    parameters:
    - id: handle
      type: System.RuntimeTypeHandle
      description: The <see cref="T:System.RuntimeTypeHandle"> structure to compare to the current instance.
    return:
      type: System.Boolean
      description: '`true` if the value of  is equal to the value of this instance; otherwise, `false`.'
  overload: System.RuntimeTypeHandle.Equals*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.GetHashCode
  id: GetHashCode
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RuntimeTypeHandle.GetHashCode()
  fullName: System.RuntimeTypeHandle.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Returns the hash code for the current instance.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.GetModuleHandle
  id: GetModuleHandle
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: GetModuleHandle()
  nameWithType: RuntimeTypeHandle.GetModuleHandle()
  fullName: System.RuntimeTypeHandle.GetModuleHandle()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a handle to the module that contains the type represented by the current instance.
  remarks: To be added.
  syntax:
    content: public ModuleHandle GetModuleHandle ();
    parameters: []
    return:
      type: System.ModuleHandle
      description: A <see cref="T:System.ModuleHandle"> structure representing a handle to the module that contains the type represented by the current instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeTypeHandle.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.RuntimeTypeHandle.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"> with the data necessary to deserialize the type represented by the current instance.
  remarks: "The  parameter is reserved; it does not currently participate in this operation.  \n  \n For more information about the serialization operation performed by this method, see the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=fullName> method."
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object to be populated with serialization information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: (Reserved) The location where serialized data will be stored and retrieved.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)
  id: op_Equality(System.Object,System.RuntimeTypeHandle)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: op_Equality(Object,RuntimeTypeHandle)
  nameWithType: RuntimeTypeHandle.op_Equality(Object,RuntimeTypeHandle)
  fullName: System.RuntimeTypeHandle.op_Equality(Object,RuntimeTypeHandle)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether an object and a <see cref="T:System.RuntimeTypeHandle"> structure are equal.
  remarks: Using this operator to compare two variables of type <xref:System.RuntimeTypeHandle> causes an ambiguous overload resolution error when compiled. Use the <xref:System.RuntimeTypeHandle.Equals%2A> method instead.
  syntax:
    content: public static bool op_Equality (object left, RuntimeTypeHandle right);
    parameters:
    - id: left
      type: System.Object
      description: An object to compare to .
    - id: right
      type: System.RuntimeTypeHandle
      description: A <see cref="T:System.RuntimeTypeHandle"> structure to compare to .
    return:
      type: System.Boolean
      description: '`true` if  is a <see cref="T:System.RuntimeTypeHandle"> structure and is equal to ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)
  id: op_Equality(System.RuntimeTypeHandle,System.Object)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: op_Equality(RuntimeTypeHandle,Object)
  nameWithType: RuntimeTypeHandle.op_Equality(RuntimeTypeHandle,Object)
  fullName: System.RuntimeTypeHandle.op_Equality(RuntimeTypeHandle,Object)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether a <see cref="T:System.RuntimeTypeHandle"> structure is equal to an object.
  remarks: Using this operator to compare two variables of type <xref:System.RuntimeTypeHandle> causes an ambiguous overload resolution error when compiled. Use the <xref:System.RuntimeTypeHandle.Equals%2A> method instead.
  syntax:
    content: public static bool op_Equality (RuntimeTypeHandle left, object right);
    parameters:
    - id: left
      type: System.RuntimeTypeHandle
      description: A <see cref="T:System.RuntimeTypeHandle"> structure to compare to .
    - id: right
      type: System.Object
      description: An object to compare to .
    return:
      type: System.Boolean
      description: '`true` if  is a <see cref="T:System.RuntimeTypeHandle"> and is equal to ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)
  id: op_Inequality(System.Object,System.RuntimeTypeHandle)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: op_Inequality(Object,RuntimeTypeHandle)
  nameWithType: RuntimeTypeHandle.op_Inequality(Object,RuntimeTypeHandle)
  fullName: System.RuntimeTypeHandle.op_Inequality(Object,RuntimeTypeHandle)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether an object and a <see cref="T:System.RuntimeTypeHandle"> structure are not equal.
  remarks: Using this operator to compare two variables of type <xref:System.RuntimeTypeHandle> causes an ambiguous overload resolution error when compiled. Use the <xref:System.RuntimeTypeHandle.Equals%2A> method instead.
  syntax:
    content: public static bool op_Inequality (object left, RuntimeTypeHandle right);
    parameters:
    - id: left
      type: System.Object
      description: An object to compare to .
    - id: right
      type: System.RuntimeTypeHandle
      description: A <see cref="T:System.RuntimeTypeHandle"> structure to compare to .
    return:
      type: System.Boolean
      description: '`true` if  is a <see cref="T:System.RuntimeTypeHandle"> and is not equal to ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)
  id: op_Inequality(System.RuntimeTypeHandle,System.Object)
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: op_Inequality(RuntimeTypeHandle,Object)
  nameWithType: RuntimeTypeHandle.op_Inequality(RuntimeTypeHandle,Object)
  fullName: System.RuntimeTypeHandle.op_Inequality(RuntimeTypeHandle,Object)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System
  summary: Indicates whether a <see cref="T:System.RuntimeTypeHandle"> structure is not equal to an object.
  remarks: Using this operator to compare two variables of type <xref:System.RuntimeTypeHandle> causes an ambiguous overload resolution error when compiled. Use the <xref:System.RuntimeTypeHandle.Equals%2A> method instead.
  syntax:
    content: public static bool op_Inequality (RuntimeTypeHandle left, object right);
    parameters:
    - id: left
      type: System.RuntimeTypeHandle
      description: A <see cref="T:System.RuntimeTypeHandle"> structure to compare to .
    - id: right
      type: System.Object
      description: An object to compare to .
    return:
      type: System.Boolean
      description: '`true` if  is a <see cref="T:System.RuntimeTypeHandle"> structure and is not equal to ; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.RuntimeTypeHandle.Value
  id: Value
  parent: System.RuntimeTypeHandle
  langs:
  - csharp
  name: Value
  nameWithType: RuntimeTypeHandle.Value
  fullName: System.RuntimeTypeHandle.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets a handle to the type represented by this instance.
  remarks: To be added.
  syntax:
    content: public IntPtr Value { get; }
    return:
      type: System.IntPtr
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.RuntimeTypeHandle.Equals(System.Object)
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: Equals(Object)
  nameWithType: RuntimeTypeHandle.Equals(Object)
  fullName: System.RuntimeTypeHandle.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.RuntimeTypeHandle.Equals(System.RuntimeTypeHandle)
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: Equals(RuntimeTypeHandle)
  nameWithType: RuntimeTypeHandle.Equals(RuntimeTypeHandle)
  fullName: System.RuntimeTypeHandle.Equals(RuntimeTypeHandle)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.RuntimeTypeHandle.GetHashCode
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: GetHashCode()
  nameWithType: RuntimeTypeHandle.GetHashCode()
  fullName: System.RuntimeTypeHandle.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.RuntimeTypeHandle.GetModuleHandle
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: GetModuleHandle()
  nameWithType: RuntimeTypeHandle.GetModuleHandle()
  fullName: System.RuntimeTypeHandle.GetModuleHandle()
- uid: System.ModuleHandle
  parent: System
  isExternal: false
  name: ModuleHandle
  nameWithType: ModuleHandle
  fullName: System.ModuleHandle
- uid: System.RuntimeTypeHandle.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeTypeHandle.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.RuntimeTypeHandle.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.RuntimeTypeHandle.op_Equality(System.Object,System.RuntimeTypeHandle)
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: op_Equality(Object,RuntimeTypeHandle)
  nameWithType: RuntimeTypeHandle.op_Equality(Object,RuntimeTypeHandle)
  fullName: System.RuntimeTypeHandle.op_Equality(Object,RuntimeTypeHandle)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.RuntimeTypeHandle.op_Equality(System.RuntimeTypeHandle,System.Object)
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: op_Equality(RuntimeTypeHandle,Object)
  nameWithType: RuntimeTypeHandle.op_Equality(RuntimeTypeHandle,Object)
  fullName: System.RuntimeTypeHandle.op_Equality(RuntimeTypeHandle,Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.RuntimeTypeHandle.op_Inequality(System.Object,System.RuntimeTypeHandle)
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: op_Inequality(Object,RuntimeTypeHandle)
  nameWithType: RuntimeTypeHandle.op_Inequality(Object,RuntimeTypeHandle)
  fullName: System.RuntimeTypeHandle.op_Inequality(Object,RuntimeTypeHandle)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.RuntimeTypeHandle.op_Inequality(System.RuntimeTypeHandle,System.Object)
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: op_Inequality(RuntimeTypeHandle,Object)
  nameWithType: RuntimeTypeHandle.op_Inequality(RuntimeTypeHandle,Object)
  fullName: System.RuntimeTypeHandle.op_Inequality(RuntimeTypeHandle,Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: false
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.RuntimeTypeHandle.Value
  parent: System.RuntimeTypeHandle
  isExternal: false
  name: Value
  nameWithType: RuntimeTypeHandle.Value
  fullName: System.RuntimeTypeHandle.Value
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.RuntimeTypeHandle.Equals*
  parent: System.RuntimeTypeHandle
  isExternal: false
  nameWithType: RuntimeTypeHandle.
