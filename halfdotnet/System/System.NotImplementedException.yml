### YamlMime:ManagedReference
items:
- uid: System.NotImplementedException
  id: NotImplementedException
  children:
  - System.NotImplementedException.#ctor
  - System.NotImplementedException.#ctor(System.String)
  - System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.NotImplementedException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
  type: Class
  summary: The exception that is thrown when a requested method or operation is not implemented.
  remarks: "The NotImplementedException exception is thrown when a particular method, get accessor, or set accessor is present as a member of a type but is not implemented.  \n  \n NotImplementedException uses the default <xref:System.Object.Equals%2A?displayProperty=fullName> implementation, which supports reference equality. For a list of initial values for an instance of NotImplementedException, see the <xref:System.NotImplementedException.%23ctor%2A> constructors.  \n  \n## Throwing the exception  \n You might choose to throw a  NotImplementedException exception in properties or methods in your own types when the that member is still in development and will only later be implemented in production code. In other words,  a NotImplementedException exception should be synonymous with \"still in development.\"  \n  \n## Handling the exception  \n The NotImplementedException exception indicates that the method or property that you are attempting to invoke has no implementation and therefore provides no functionality. As a result, you should not handle this error in a `try/catch` block.   Instead, you should remove the member invocation from your code.  You can include a call to the member when it is implemented in the production version of a library.  \n  \n In some cases, a NotImplementedException exception may not be used to indicate functionality that is still in development in a pre-production library. However, this still indicates that the functionality is unavailable, and you should remove the member invocation from your code.  \n  \n## NotImplementedException and other exception types  \n The .NET Framework also includes two other exception types, <xref:System.NotSupportedException> and <xref:System.PlatformNotSupportedException>, that indicate that no implementation exists for a particular member of a type. You should use throw one of these instead of a NotImplementedException exception under the following conditions.  \n  \n <xref:System.PlatformNotSupportedException> exception  \n If you've designed a type with one or more members that are available on some platforms or in some versions but not on others, you can throw  this exception on platforms on which the functionality is not supported.  \n  \n <xref:System.NotSupportedException> exception  \n Throw a <xref:System.NotSupportedException> exception if the implementation of an interface  member or an override to an abstract base class method is not possible. For example, the   <xref:System.Convert.ToInt32%28System.DateTime%29?displayProperty=fullName> method throws a <xref:System.NotSupportedException> exception because no meaningful conversion between a date and time and a 32-bit signed integer exists. The method must be present in this case because the <xref:System.Convert> class implements the <xref:System.IConvertible> interface.  \n  \n You should also throw a <xref:System.NotSupportedException> exception if you've implemented an abstract base class and add a new member to it that must be overridden by derived classes. In that case, making the member abstract causes existing subclasses to fail to load."
  example:
  - "The following example throws this exception for a method that has not been developed.  \n  \n [!CODE [System.NotImplementedException#1](../CodeSnippet/VS_Snippets_CLR_System/system.notimplementedexception#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class NotImplementedException : SystemException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.NotImplementedException.#ctor
  id: '#ctor'
  parent: System.NotImplementedException
  langs:
  - csharp
  name: NotImplementedException()
  nameWithType: NotImplementedException.NotImplementedException()
  fullName: System.NotImplementedException.NotImplementedException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.NotImplementedException"> class with default properties.
  remarks: "The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The empty string (\"\").|"
  syntax:
    content: public NotImplementedException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.NotImplementedException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.NotImplementedException
  langs:
  - csharp
  name: NotImplementedException(String)
  nameWithType: NotImplementedException.NotImplementedException(String)
  fullName: System.NotImplementedException.NotImplementedException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.NotImplementedException"> class with a specified error message.
  remarks: "The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public NotImplementedException (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.NotImplementedException
  langs:
  - csharp
  name: NotImplementedException(SerializationInfo,StreamingContext)
  nameWithType: NotImplementedException.NotImplementedException(SerializationInfo,StreamingContext)
  fullName: System.NotImplementedException.NotImplementedException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.NotImplementedException"> class with serialized data.
  remarks: To be added.
  syntax:
    content: protected NotImplementedException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <see cref="T:System.Runtime.Serialization.SerializationInfo"> that holds the serialized object data about the exception being thrown.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The <see cref="T:System.Runtime.Serialization.StreamingContext"> that contains contextual information about the source or destination.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.NotImplementedException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.NotImplementedException
  langs:
  - csharp
  name: NotImplementedException(String,Exception)
  nameWithType: NotImplementedException.NotImplementedException(String,Exception)
  fullName: System.NotImplementedException.NotImplementedException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes a new instance of the <see cref="T:System.NotImplementedException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.NotImplementedException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public NotImplementedException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.NotImplementedException.#ctor
  parent: System.NotImplementedException
  isExternal: false
  name: NotImplementedException()
  nameWithType: NotImplementedException.NotImplementedException()
  fullName: System.NotImplementedException.NotImplementedException()
- uid: System.NotImplementedException.#ctor(System.String)
  parent: System.NotImplementedException
  isExternal: false
  name: NotImplementedException(String)
  nameWithType: NotImplementedException.NotImplementedException(String)
  fullName: System.NotImplementedException.NotImplementedException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.NotImplementedException
  isExternal: false
  name: NotImplementedException(SerializationInfo,StreamingContext)
  nameWithType: NotImplementedException.NotImplementedException(SerializationInfo,StreamingContext)
  fullName: System.NotImplementedException.NotImplementedException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.NotImplementedException.#ctor(System.String,System.Exception)
  parent: System.NotImplementedException
  isExternal: false
  name: NotImplementedException(String,Exception)
  nameWithType: NotImplementedException.NotImplementedException(String,Exception)
  fullName: System.NotImplementedException.NotImplementedException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
