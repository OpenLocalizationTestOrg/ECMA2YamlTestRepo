### YamlMime:ManagedReference
items:
- uid: System.CLSCompliantAttribute
  id: CLSCompliantAttribute
  children:
  - System.CLSCompliantAttribute.#ctor(System.Boolean)
  - System.CLSCompliantAttribute.IsCompliant
  langs:
  - csharp
  name: CLSCompliantAttribute
  nameWithType: CLSCompliantAttribute
  fullName: System.CLSCompliantAttribute
  type: Class
  summary: Indicates whether a program element is compliant with the Common Language Specification (CLS). This class cannot be inherited.
  remarks: "The CLSCompliantAttribute attribute is used to indicate whether a particular program element complies with the Common Language Specification (CLS), which defines the features that any language that targets the .NET Framework must support. CLS compliance is primarily of concern to library developers who want to ensure that their libraries are accessible in any language that targets the .NET Framework. For more information, See [Language Independence and Language-Independent Components](../Topic/Language%20Independence%20and%20Language-Independent%20Components.md).  \n  \n You can apply the CLSCompliantAttribute attribute to the following program elements: assembly, module, class, struct, enum, constructor, method, property, field, event, interface, delegate, parameter, and return value. However, the notion of CLS compliance is only meaningful for assemblies, modules, types, and members of types, not parts of a member signature. Consequently, CLSCompliantAttribute is ignored when applied to parameter or return value program elements.  \n  \n If no CLSCompliantAttribute is applied to a program element, then by default:  \n  \n-   The assembly is not CLS-compliant.  \n  \n-   The type is CLS-compliant only if its enclosing type or assembly is CLS-compliant.  \n  \n-   The member of a type is CLS-compliant only if the type is CLS-compliant.  \n  \n If an assembly is marked as CLS-compliant, any publicly exposed type in the assembly that is not CLS-compliant must be marked with CLSCompliantAttribute using a `false` argument. Similarly, if a class is marked as CLS-compliant, you must individually mark all members that are not CLS-compliant. All non-compliant members must provide corresponding CLS-compliant alternatives.  \n  \n Attributes that are applied to assemblies or modules must occur after the C# `using` (`Imports` in Visual Basic) clauses and before the code.  \n  \n For more information about using attributes, see [Attributes](../Topic/Extending%20Metadata%20Using%20Attributes.md).  \n  \n> [!NOTE]\n>  The current Microsoft Visual Basic compiler intentionally does not generate a CLS-compliance warning, however, a future release of the compiler will issue that warning."
  example:
  - "The following example applies a CLSCompliantAttribute to the entire assembly.  \n  \n```  \nusing System;  \n    [assembly: CLSCompliant(true)]  \n```  \n  \n The following declaration generates a CLS-compliance warning because the type `UInt32` is not specified in the CLS.  \n  \n```  \npublic int SetValue(UInt32 value);  \n```  \n  \n If the declaration is marked with a CLSCompliantAttribute, no compiler warning or error is generated.  \n  \n```  \n[CLSCompliant(false)]  \n public int SetValue(UInt32 value);  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class CLSCompliantAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.CLSCompliantAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.CLSCompliantAttribute
  langs:
  - csharp
  name: CLSCompliantAttribute(Boolean)
  nameWithType: CLSCompliantAttribute.CLSCompliantAttribute(Boolean)
  fullName: System.CLSCompliantAttribute.CLSCompliantAttribute(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: Initializes an instance of the <see cref="T:System.CLSCompliantAttribute"> class with a Boolean value indicating whether the indicated program element is CLS-compliant.
  remarks: To be added.
  syntax:
    content: public CLSCompliantAttribute (bool isCompliant);
    parameters:
    - id: isCompliant
      type: System.Boolean
      description: '`true` if CLS-compliant; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.CLSCompliantAttribute.IsCompliant
  id: IsCompliant
  parent: System.CLSCompliantAttribute
  langs:
  - csharp
  name: IsCompliant
  nameWithType: CLSCompliantAttribute.IsCompliant
  fullName: System.CLSCompliantAttribute.IsCompliant
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: Gets the Boolean value indicating whether the indicated program element is CLS-compliant.
  remarks: To be added.
  syntax:
    content: public bool IsCompliant { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.CLSCompliantAttribute.#ctor(System.Boolean)
  parent: System.CLSCompliantAttribute
  isExternal: false
  name: CLSCompliantAttribute(Boolean)
  nameWithType: CLSCompliantAttribute.CLSCompliantAttribute(Boolean)
  fullName: System.CLSCompliantAttribute.CLSCompliantAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CLSCompliantAttribute.IsCompliant
  parent: System.CLSCompliantAttribute
  isExternal: false
  name: IsCompliant
  nameWithType: CLSCompliantAttribute.IsCompliant
  fullName: System.CLSCompliantAttribute.IsCompliant
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
