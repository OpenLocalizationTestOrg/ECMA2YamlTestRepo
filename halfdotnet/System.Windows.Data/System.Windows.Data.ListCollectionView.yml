### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.ListCollectionView
  id: ListCollectionView
  children:
  - System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)
  - System.Windows.Data.ListCollectionView.ActiveComparer
  - System.Windows.Data.ListCollectionView.ActiveFilter
  - System.Windows.Data.ListCollectionView.AddNew
  - System.Windows.Data.ListCollectionView.AddNewItem(System.Object)
  - System.Windows.Data.ListCollectionView.CanAddNew
  - System.Windows.Data.ListCollectionView.CanAddNewItem
  - System.Windows.Data.ListCollectionView.CanCancelEdit
  - System.Windows.Data.ListCollectionView.CancelEdit
  - System.Windows.Data.ListCollectionView.CancelNew
  - System.Windows.Data.ListCollectionView.CanChangeLiveFiltering
  - System.Windows.Data.ListCollectionView.CanChangeLiveGrouping
  - System.Windows.Data.ListCollectionView.CanChangeLiveSorting
  - System.Windows.Data.ListCollectionView.CanFilter
  - System.Windows.Data.ListCollectionView.CanGroup
  - System.Windows.Data.ListCollectionView.CanRemove
  - System.Windows.Data.ListCollectionView.CanSort
  - System.Windows.Data.ListCollectionView.CommitEdit
  - System.Windows.Data.ListCollectionView.CommitNew
  - System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)
  - System.Windows.Data.ListCollectionView.Contains(System.Object)
  - System.Windows.Data.ListCollectionView.Count
  - System.Windows.Data.ListCollectionView.CurrentAddItem
  - System.Windows.Data.ListCollectionView.CurrentEditItem
  - System.Windows.Data.ListCollectionView.CustomSort
  - System.Windows.Data.ListCollectionView.EditItem(System.Object)
  - System.Windows.Data.ListCollectionView.Filter
  - System.Windows.Data.ListCollectionView.GetEnumerator
  - System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)
  - System.Windows.Data.ListCollectionView.GroupBySelector
  - System.Windows.Data.ListCollectionView.GroupDescriptions
  - System.Windows.Data.ListCollectionView.Groups
  - System.Windows.Data.ListCollectionView.IndexOf(System.Object)
  - System.Windows.Data.ListCollectionView.InternalContains(System.Object)
  - System.Windows.Data.ListCollectionView.InternalCount
  - System.Windows.Data.ListCollectionView.InternalGetEnumerator
  - System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)
  - System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)
  - System.Windows.Data.ListCollectionView.InternalList
  - System.Windows.Data.ListCollectionView.IsAddingNew
  - System.Windows.Data.ListCollectionView.IsDataInGroupOrder
  - System.Windows.Data.ListCollectionView.IsEditingItem
  - System.Windows.Data.ListCollectionView.IsEmpty
  - System.Windows.Data.ListCollectionView.IsGrouping
  - System.Windows.Data.ListCollectionView.IsLiveFiltering
  - System.Windows.Data.ListCollectionView.IsLiveGrouping
  - System.Windows.Data.ListCollectionView.IsLiveSorting
  - System.Windows.Data.ListCollectionView.ItemProperties
  - System.Windows.Data.ListCollectionView.LiveFilteringProperties
  - System.Windows.Data.ListCollectionView.LiveGroupingProperties
  - System.Windows.Data.ListCollectionView.LiveSortingProperties
  - System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)
  - System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition
  - System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged
  - System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.ListCollectionView.PassesFilter(System.Object)
  - System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.ListCollectionView.RefreshOverride
  - System.Windows.Data.ListCollectionView.Remove(System.Object)
  - System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)
  - System.Windows.Data.ListCollectionView.SortDescriptions
  - System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)
  - System.Windows.Data.ListCollectionView.UsesLocalArray
  langs:
  - csharp
  name: ListCollectionView
  nameWithType: ListCollectionView
  fullName: System.Windows.Data.ListCollectionView
  type: Class
  summary: Represents the collection view for collections that implement <see cref="T:System.Collections.IList">.
  remarks: "When you bind to a data collection, you may want to sort, filter, or group the data. To do that, you use collection views. You can think of a <xref:System.Windows.Data.CollectionView> as the layer on top of the binding source collection that allows you to navigate and display the source collection based on sort, filter, and group queries, all without having to manipulate the underlying source collection itself. If the source collection implements the <xref:System.Collections.Specialized.INotifyCollectionChanged> interface, the changes raised by the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event are propagated to the views.  \n  \n All collections have a default <xref:System.Windows.Data.CollectionView>. For all collections implementing <xref:System.Collections.IList>, the ListCollectionView object is the default view object. The <xref:System.Windows.Data.BindingListCollectionView> is the collection view class used for collections that implement <xref:System.ComponentModel.IBindingList>. To get the default view, you use the <xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A> method. For an example, see [How to: Get the Default View of a Data Collection](../Topic/How%20to:%20Get%20the%20Default%20View%20of%20a%20Data%20Collection.md).  \n  \n For more information about collection views, see [Data Binding Overview](../Topic/Data%20Binding%20Overview.md)."
  syntax:
    content: 'public class ListCollectionView : System.Windows.Data.CollectionView, System.Collections.IComparer, System.ComponentModel.ICollectionViewLiveShaping, System.ComponentModel.IEditableCollectionViewAddNewItem, System.ComponentModel.IItemProperties'
  inheritance:
  - System.Windows.Threading.DispatcherObject
  - System.Windows.Data.CollectionView
  implements:
  - System.Collections.IComparer
  - System.ComponentModel.ICollectionViewLiveShaping
  - System.ComponentModel.IEditableCollectionViewAddNewItem
  - System.ComponentModel.IItemProperties
  inheritedMembers:
  - System.Windows.Data.CollectionView.AllowsCrossThreadChanges
  - System.Windows.Data.CollectionView.ClearChangeLog
  - System.Windows.Data.CollectionView.ClearPendingChanges
  - System.Windows.Data.CollectionView.CollectionChanged
  - System.Windows.Data.CollectionView.Comparer
  - System.Windows.Data.CollectionView.Culture
  - System.Windows.Data.CollectionView.CurrentChanged
  - System.Windows.Data.CollectionView.CurrentChanging
  - System.Windows.Data.CollectionView.CurrentItem
  - System.Windows.Data.CollectionView.CurrentPosition
  - System.Windows.Data.CollectionView.DeferRefresh
  - System.Windows.Data.CollectionView.DetachFromSourceCollection
  - System.Windows.Data.CollectionView.IsCurrentAfterLast
  - System.Windows.Data.CollectionView.IsCurrentBeforeFirst
  - System.Windows.Data.CollectionView.IsCurrentInSync
  - System.Windows.Data.CollectionView.IsDynamic
  - System.Windows.Data.CollectionView.IsInUse
  - System.Windows.Data.CollectionView.IsRefreshDeferred
  - System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)
  - System.Windows.Data.CollectionView.MoveCurrentToFirst
  - System.Windows.Data.CollectionView.MoveCurrentToLast
  - System.Windows.Data.CollectionView.MoveCurrentToNext
  - System.Windows.Data.CollectionView.MoveCurrentToPrevious
  - System.Windows.Data.CollectionView.NeedsRefresh
  - System.Windows.Data.CollectionView.NewItemPlaceholder
  - System.Windows.Data.CollectionView.OKToChangeCurrent
  - System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Windows.Data.CollectionView.OnCurrentChanged
  - System.Windows.Data.CollectionView.OnCurrentChanging
  - System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)
  - System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Data.CollectionView.ProcessPendingChanges
  - System.Windows.Data.CollectionView.PropertyChanged
  - System.Windows.Data.CollectionView.Refresh
  - System.Windows.Data.CollectionView.RefreshOrDefer
  - System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)
  - System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)
  - System.Windows.Data.CollectionView.SourceCollection
  - System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Data.CollectionView.UpdatedOutsideDispatcher
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)
  id: '#ctor(System.Collections.IList)'
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: ListCollectionView(IList)
  nameWithType: ListCollectionView.ListCollectionView(IList)
  fullName: System.Windows.Data.ListCollectionView.ListCollectionView(IList)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Initializes a new instance of the <see cref="T:System.Windows.Data.ListCollectionView"> class, using a supplied collection that implements <xref:System.Collections.IList>.
  remarks: To be added.
  syntax:
    content: public ListCollectionView (System.Collections.IList list);
    parameters:
    - id: list
      type: System.Collections.IList
      description: The underlying collection, which must implement <see cref="T:System.Collections.IList">.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.ActiveComparer
  id: ActiveComparer
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: ActiveComparer
  nameWithType: ListCollectionView.ActiveComparer
  fullName: System.Windows.Data.ListCollectionView.ActiveComparer
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets the current active comparer that is used in sorting.
  remarks: To be added.
  syntax:
    content: protected System.Collections.IComparer ActiveComparer { get; set; }
    return:
      type: System.Collections.IComparer
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.ActiveFilter
  id: ActiveFilter
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: ActiveFilter
  nameWithType: ListCollectionView.ActiveFilter
  fullName: System.Windows.Data.ListCollectionView.ActiveFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets the current active <xref:System.Windows.Data.CollectionView.Filter%2A> callback.
  remarks: To be added.
  syntax:
    content: protected Predicate<object> ActiveFilter { get; set; }
    return:
      type: System.Predicate{System.Object}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.AddNew
  id: AddNew
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: AddNew()
  nameWithType: ListCollectionView.AddNew()
  fullName: System.Windows.Data.ListCollectionView.AddNew()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Starts an add transaction and returns the pending new item.
  remarks: Calling AddNew starts an add transaction. You should call <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> to end the add transaction. A new item always appears in the collection view. Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.
  syntax:
    content: public object AddNew ();
    parameters: []
    return:
      type: System.Object
      description: The pending new item.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.AddNewItem(System.Object)
  id: AddNewItem(System.Object)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: AddNewItem(Object)
  nameWithType: ListCollectionView.AddNewItem(Object)
  fullName: System.Windows.Data.ListCollectionView.AddNewItem(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Adds the specified object to the collection.
  remarks: Calling the AddNewItem method starts an add transaction. You should call the <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A> methods to end the add transaction. A new item always appears in the collection view. Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> is called.
  syntax:
    content: public object AddNewItem (object newItem);
    parameters:
    - id: newItem
      type: System.Object
      description: The object to add to the collection.
    return:
      type: System.Object
      description: The object that was added to the collection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanAddNew
  id: CanAddNew
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanAddNew
  nameWithType: ListCollectionView.CanAddNew
  fullName: System.Windows.Data.ListCollectionView.CanAddNew
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether a new item can be added to the collection.
  remarks: The <xref:System.Windows.Data.ListCollectionView> can create a new item for the collection if there is no edit transaction occurring, if the collection is not a fixed size, and if the <xref:System.Windows.Data.ListCollectionView> can create an object of the correct type.
  syntax:
    content: public bool CanAddNew { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanAddNewItem
  id: CanAddNewItem
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanAddNewItem
  nameWithType: ListCollectionView.CanAddNewItem
  fullName: System.Windows.Data.ListCollectionView.CanAddNewItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether a specified object can be added to the collection.
  remarks: If the CanAddNewItem property is `true`, you can specify an object to add to the collection by calling the <xref:System.Windows.Data.ListCollectionView.AddNewItem%2A> method. CanAddNewItem is `false` if items cannot be added to the collection.
  syntax:
    content: public bool CanAddNewItem { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanCancelEdit
  id: CanCancelEdit
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanCancelEdit
  nameWithType: ListCollectionView.CanCancelEdit
  fullName: System.Windows.Data.ListCollectionView.CanCancelEdit
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.
  remarks: CanCancelEdit is `true` if the edited item implements the <xref:System.ComponentModel.IEditableObject?displayProperty=fullName> interface. If CanCancelEdit is `false`, call <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.
  syntax:
    content: public bool CanCancelEdit { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CancelEdit
  id: CancelEdit
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: ListCollectionView.CancelEdit()
  fullName: System.Windows.Data.ListCollectionView.CancelEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Ends the edit transaction, and if possible, restores the original value to the item.
  remarks: CancelEdit sets <xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A> to `null` and causes the collection view to exit the edit state. If <xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A> is `true`, CancelEdit also restores the original values of the edited object.
  syntax:
    content: public void CancelEdit ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CancelNew
  id: CancelNew
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CancelNew()
  nameWithType: ListCollectionView.CancelNew()
  fullName: System.Windows.Data.ListCollectionView.CancelNew()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Ends the add transaction and discards the pending new item.
  remarks: To be added.
  syntax:
    content: public void CancelNew ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanChangeLiveFiltering
  id: CanChangeLiveFiltering
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanChangeLiveFiltering
  nameWithType: ListCollectionView.CanChangeLiveFiltering
  fullName: System.Windows.Data.ListCollectionView.CanChangeLiveFiltering
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.
  remarks: To be added.
  syntax:
    content: public bool CanChangeLiveFiltering { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanChangeLiveGrouping
  id: CanChangeLiveGrouping
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanChangeLiveGrouping
  nameWithType: ListCollectionView.CanChangeLiveGrouping
  fullName: System.Windows.Data.ListCollectionView.CanChangeLiveGrouping
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.
  remarks: To be added.
  syntax:
    content: public bool CanChangeLiveGrouping { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanChangeLiveSorting
  id: CanChangeLiveSorting
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanChangeLiveSorting
  nameWithType: ListCollectionView.CanChangeLiveSorting
  fullName: System.Windows.Data.ListCollectionView.CanChangeLiveSorting
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.
  remarks: To be added.
  syntax:
    content: public bool CanChangeLiveSorting { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanFilter
  id: CanFilter
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanFilter
  nameWithType: ListCollectionView.CanFilter
  fullName: System.Windows.Data.ListCollectionView.CanFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether the view supports callback-based filtering.
  remarks: Use this property to test whether the current implementation supports filtering before assigning a callback to the inherited <xref:System.Windows.Data.CollectionView.Filter%2A> property.
  syntax:
    content: public override bool CanFilter { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanGroup
  id: CanGroup
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanGroup
  nameWithType: ListCollectionView.CanGroup
  fullName: System.Windows.Data.ListCollectionView.CanGroup
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether the collection view supports grouping.
  remarks: To be added.
  syntax:
    content: public override bool CanGroup { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanRemove
  id: CanRemove
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanRemove
  nameWithType: ListCollectionView.CanRemove
  fullName: System.Windows.Data.ListCollectionView.CanRemove
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether an item can be removed from the collection.
  remarks: CanRemove is `true` if the collection is not a fixed size and if an add or edit transaction is not occurring.
  syntax:
    content: public bool CanRemove { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CanSort
  id: CanSort
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CanSort
  nameWithType: ListCollectionView.CanSort
  fullName: System.Windows.Data.ListCollectionView.CanSort
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether the collection view supports sorting.
  remarks: To be added.
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CommitEdit
  id: CommitEdit
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: ListCollectionView.CommitEdit()
  fullName: System.Windows.Data.ListCollectionView.CommitEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Ends the edit transaction and saves the pending changes.
  remarks: To be added.
  syntax:
    content: public void CommitEdit ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CommitNew
  id: CommitNew
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CommitNew()
  nameWithType: ListCollectionView.CommitNew()
  fullName: System.Windows.Data.ListCollectionView.CommitNew()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Ends the add transaction and saves the pending new item.
  remarks: Any filtering, sorting, or grouping that is applied to the <xref:System.Windows.Data.ListCollectionView> is applied to the new item when CommitNew is called.
  syntax:
    content: public void CommitNew ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)
  id: Compare(System.Object,System.Object)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: Compare(Object,Object)
  nameWithType: ListCollectionView.Compare(Object,Object)
  fullName: System.Windows.Data.ListCollectionView.Compare(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.
  remarks: To be added.
  syntax:
    content: protected virtual int Compare (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: The first object to compare.
    - id: o2
      type: System.Object
      description: The second object to compare.
    return:
      type: System.Int32
      description: Less than zero if  is less than , zero if  and  are equal, or greater than zero if  is greater than .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ListCollectionView.Contains(Object)
  fullName: System.Windows.Data.ListCollectionView.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Returns a value that indicates whether a given item belongs to the collection view.
  remarks: This method does not make any assumptions about whether the item belongs to the underlying collection. If you know that the item belongs to the underlying collection, it is more efficient to call <xref:System.Windows.Data.ListCollectionView.PassesFilter%2A>.
  syntax:
    content: public override bool Contains (object item);
    parameters:
    - id: item
      type: System.Object
      description: The object to check.
    return:
      type: System.Boolean
      description: '`true` if the item belongs to the collection view; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.Count
  id: Count
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: Count
  nameWithType: ListCollectionView.Count
  fullName: System.Windows.Data.ListCollectionView.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets the estimated number of records.
  remarks: Note that this count represents the filtered count.
  syntax:
    content: public override int Count { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CurrentAddItem
  id: CurrentAddItem
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CurrentAddItem
  nameWithType: ListCollectionView.CurrentAddItem
  fullName: System.Windows.Data.ListCollectionView.CurrentAddItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets the item that is being added during the current add transaction.
  remarks: To be added.
  syntax:
    content: public object CurrentAddItem { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CurrentEditItem
  id: CurrentEditItem
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CurrentEditItem
  nameWithType: ListCollectionView.CurrentEditItem
  fullName: System.Windows.Data.ListCollectionView.CurrentEditItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets the item in the collection that is being edited.
  remarks: To be added.
  syntax:
    content: public object CurrentEditItem { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.CustomSort
  id: CustomSort
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: CustomSort
  nameWithType: ListCollectionView.CustomSort
  fullName: System.Windows.Data.ListCollectionView.CustomSort
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets a custom object that implements <see cref="T:System.Collections.IComparer"> to sort items in the view.
  remarks: "Setting this property causes an immediate refresh unless a <xref:System.Windows.Data.CollectionView.DeferRefresh%2A> is in effect.  \n  \n Setting this property clears a previously set <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A> value."
  syntax:
    content: public System.Collections.IComparer CustomSort { get; set; }
    return:
      type: System.Collections.IComparer
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.EditItem(System.Object)
  id: EditItem(System.Object)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: EditItem(Object)
  nameWithType: ListCollectionView.EditItem(Object)
  fullName: System.Windows.Data.ListCollectionView.EditItem(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Begins an edit transaction of the specified item.
  remarks: To be added.
  syntax:
    content: public void EditItem (object item);
    parameters:
    - id: item
      type: System.Object
      description: The item to edit.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.Filter
  id: Filter
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: Filter
  nameWithType: ListCollectionView.Filter
  fullName: System.Windows.Data.ListCollectionView.Filter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets a method that is used to determine whether an item is suitable for inclusion in the view.
  remarks: To be added.
  syntax:
    content: public override Predicate<object> Filter { get; set; }
    return:
      type: System.Predicate{System.Object}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ListCollectionView.GetEnumerator()
  fullName: System.Windows.Data.ListCollectionView.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Returns an object that you can use to enumerate the items in the view.
  remarks: Enumerator instances are typically used for making asynchronous checks of the contents of a collection, or in this case, the contents of the view. For example, if you are about to start a `foreach` iteration over the contents of the view, it may be better to obtain an asynchronous copy to ensure that the length of the view items does not change unexpectedly midway through the loop.
  syntax:
    content: protected override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <see cref="T:System.Collections.IEnumerator"> object that you can use to enumerate the items in the view.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)
  id: GetItemAt(System.Int32)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: GetItemAt(Int32)
  nameWithType: ListCollectionView.GetItemAt(Int32)
  fullName: System.Windows.Data.ListCollectionView.GetItemAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Retrieves the item at the specified position in the view.
  remarks: This method evaluates the index with any <xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A>, <xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A>, <xref:System.Windows.Data.CollectionView.Filter%2A>, and <xref:System.Windows.Data.ListCollectionView.CustomSort%2A> properties that are set on the view.
  syntax:
    content: public override object GetItemAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which the item is located.
    return:
      type: System.Object
      description: The item at the specified position in the view.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.GroupBySelector
  id: GroupBySelector
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: GroupBySelector
  nameWithType: ListCollectionView.GroupBySelector
  fullName: System.Windows.Data.ListCollectionView.GroupBySelector
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets a delegate to select the <xref:System.ComponentModel.GroupDescription> as a function of the parent group and its level.
  remarks: To be added.
  syntax:
    content: public virtual System.Windows.Data.GroupDescriptionSelectorCallback GroupBySelector { get; set; }
    return:
      type: System.Windows.Data.GroupDescriptionSelectorCallback
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.GroupDescriptions
  id: GroupDescriptions
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: GroupDescriptions
  nameWithType: ListCollectionView.GroupDescriptions
  fullName: System.Windows.Data.ListCollectionView.GroupDescriptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a collection of <xref:System.ComponentModel.GroupDescription> objects that describe how the items in the collection are grouped in the view.
  remarks: >-
    > [!NOTE]

    >  This property can only be set by accessing the collection object and using its various methods such as `Add`. The property to access the collection object itself is read-only; the collection itself is read/write.
  example:
  - "The following example shows how to use this property:  \n  \n [!code-cs[DataBindingLab#6](../../add/codesnippet/CSharp/DataBindingLab/MainWindow.xaml.cs#6)]\n [!code-vb[DataBindingLab#6](../../add/codesnippet/VisualBasic/DataBindingLab/MainWindow.xaml.vb#6)]  \n  \n For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public override System.Collections.ObjectModel.ObservableCollection<System.ComponentModel.GroupDescription> GroupDescriptions { get; }
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.ComponentModel.GroupDescription}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.Groups
  id: Groups
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: Groups
  nameWithType: ListCollectionView.Groups
  fullName: System.Windows.Data.ListCollectionView.Groups
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets the top-level groups.
  remarks: The items in the collection are of type <xref:System.Windows.Data.CollectionViewGroup>.
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyObservableCollection<object> Groups { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: ListCollectionView.IndexOf(Object)
  fullName: System.Windows.Data.ListCollectionView.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown.
  remarks: To be added.
  syntax:
    content: public override int IndexOf (object item);
    parameters:
    - id: item
      type: System.Object
      description: The object to check for in the collection.
    return:
      type: System.Int32
      description: The index of the item in the collection, or `-1` if the item does not exist in the collection.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.InternalContains(System.Object)
  id: InternalContains(System.Object)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: InternalContains(Object)
  nameWithType: ListCollectionView.InternalContains(Object)
  fullName: System.Windows.Data.ListCollectionView.InternalContains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Return a value that indicates whether the <xref:System.Windows.Data.ListCollectionView.InternalList%2A> contains the item.
  remarks: To be added.
  syntax:
    content: protected bool InternalContains (object item);
    parameters:
    - id: item
      type: System.Object
      description: The item to locate.
    return:
      type: System.Boolean
      description: '`true` if the <xref:System.Windows.Data.ListCollectionView.InternalList%2A> contains the item; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.InternalCount
  id: InternalCount
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: InternalCount
  nameWithType: ListCollectionView.InternalCount
  fullName: System.Windows.Data.ListCollectionView.InternalCount
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets the number of records in the <xref:System.Windows.Data.ListCollectionView.InternalList%2A>.
  remarks: To be added.
  syntax:
    content: protected int InternalCount { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.InternalGetEnumerator
  id: InternalGetEnumerator
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: InternalGetEnumerator()
  nameWithType: ListCollectionView.InternalGetEnumerator()
  fullName: System.Windows.Data.ListCollectionView.InternalGetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Returns an enumerator for the <xref:System.Windows.Data.ListCollectionView.InternalList%2A>.
  remarks: To be added.
  syntax:
    content: protected System.Collections.IEnumerator InternalGetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An enumerator for the <xref:System.Windows.Data.ListCollectionView.InternalList%2A>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)
  id: InternalIndexOf(System.Object)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: InternalIndexOf(Object)
  nameWithType: ListCollectionView.InternalIndexOf(Object)
  fullName: System.Windows.Data.ListCollectionView.InternalIndexOf(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Returns the index of the specified item in the <xref:System.Windows.Data.ListCollectionView.InternalList%2A>.
  remarks: To be added.
  syntax:
    content: protected int InternalIndexOf (object item);
    parameters:
    - id: item
      type: System.Object
      description: The item to return an index for.
    return:
      type: System.Int32
      description: The index of the specified item in the <xref:System.Windows.Data.ListCollectionView.InternalList%2A>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)
  id: InternalItemAt(System.Int32)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: InternalItemAt(Int32)
  nameWithType: ListCollectionView.InternalItemAt(Int32)
  fullName: System.Windows.Data.ListCollectionView.InternalItemAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Returns the item at the given index in the <xref:System.Windows.Data.ListCollectionView.InternalList%2A>.
  remarks: To be added.
  syntax:
    content: protected object InternalItemAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The index at which the item is located.
    return:
      type: System.Object
      description: The item at the specified zero-based index in the view.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.InternalList
  id: InternalList
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: InternalList
  nameWithType: ListCollectionView.InternalList
  fullName: System.Windows.Data.ListCollectionView.InternalList
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets the complete and unfiltered underlying collection.
  remarks: To be added.
  syntax:
    content: protected System.Collections.IList InternalList { get; }
    return:
      type: System.Collections.IList
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.IsAddingNew
  id: IsAddingNew
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: IsAddingNew
  nameWithType: ListCollectionView.IsAddingNew
  fullName: System.Windows.Data.ListCollectionView.IsAddingNew
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether an add transaction is in progress.
  remarks: You begin an add transaction by calling the <xref:System.Windows.Data.ListCollectionView.AddNew%2A> method, and you end the add transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitNew%2A> or <xref:System.Windows.Data.ListCollectionView.CancelNew%2A>.
  syntax:
    content: public bool IsAddingNew { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.IsDataInGroupOrder
  id: IsDataInGroupOrder
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: IsDataInGroupOrder
  nameWithType: ListCollectionView.IsDataInGroupOrder
  fullName: System.Windows.Data.ListCollectionView.IsDataInGroupOrder
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.
  remarks: "Setting this property to `true` informs the view that the list of items is already in the correct order for grouping and allows the view to use a more efficient algorithm to build the groups. The data is in the correct order if:  \n  \n1.  All items belonging to a given group appear consecutively, and  \n  \n2.  If the <xref:System.ComponentModel.GroupDescription.GroupNames%2A> collection is non-empty, the groups in <xref:System.ComponentModel.GroupDescription.GroupNames%2A> appear before any other groups, and in the same order as in <xref:System.ComponentModel.GroupDescription.GroupNames%2A>."
  syntax:
    content: public bool IsDataInGroupOrder { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.IsEditingItem
  id: IsEditingItem
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: IsEditingItem
  nameWithType: ListCollectionView.IsEditingItem
  fullName: System.Windows.Data.ListCollectionView.IsEditingItem
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether an edit transaction is in progress.
  remarks: You begin an edit transaction by calling the <xref:System.Windows.Data.ListCollectionView.EditItem%2A> method, and you end the transaction by calling <xref:System.Windows.Data.ListCollectionView.CommitEdit%2A> or <xref:System.Windows.Data.ListCollectionView.CancelEdit%2A>.
  syntax:
    content: public bool IsEditingItem { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.IsEmpty
  id: IsEmpty
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: IsEmpty
  nameWithType: ListCollectionView.IsEmpty
  fullName: System.Windows.Data.ListCollectionView.IsEmpty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Returns a value that indicates whether the resulting (filtered) view is empty.
  remarks: To be added.
  syntax:
    content: public override bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.IsGrouping
  id: IsGrouping
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: IsGrouping
  nameWithType: ListCollectionView.IsGrouping
  fullName: System.Windows.Data.ListCollectionView.IsGrouping
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether there are groups in the view.
  remarks: To be added.
  syntax:
    content: protected bool IsGrouping { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.IsLiveFiltering
  id: IsLiveFiltering
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: IsLiveFiltering
  nameWithType: ListCollectionView.IsLiveFiltering
  fullName: System.Windows.Data.ListCollectionView.IsLiveFiltering
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets a value that indicates whether filtering data in real time is enabled.
  remarks: To be added.
  syntax:
    content: public Nullable<bool> IsLiveFiltering { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.IsLiveGrouping
  id: IsLiveGrouping
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: IsLiveGrouping
  nameWithType: ListCollectionView.IsLiveGrouping
  fullName: System.Windows.Data.ListCollectionView.IsLiveGrouping
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets a value that indicates whether grouping data in real time is enabled.
  remarks: To be added.
  syntax:
    content: public Nullable<bool> IsLiveGrouping { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.IsLiveSorting
  id: IsLiveSorting
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: IsLiveSorting
  nameWithType: ListCollectionView.IsLiveSorting
  fullName: System.Windows.Data.ListCollectionView.IsLiveSorting
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets a value that indicates whether sorting in real time is enabled.
  remarks: To be added.
  syntax:
    content: public Nullable<bool> IsLiveSorting { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.ItemProperties
  id: ItemProperties
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: ItemProperties
  nameWithType: ListCollectionView.ItemProperties
  fullName: System.Windows.Data.ListCollectionView.ItemProperties
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a collection of objects that describes the properties of the items in the collection.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.ItemPropertyInfo> ItemProperties { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.ItemPropertyInfo}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.LiveFilteringProperties
  id: LiveFilteringProperties
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: LiveFilteringProperties
  nameWithType: ListCollectionView.LiveFilteringProperties
  fullName: System.Windows.Data.ListCollectionView.LiveFilteringProperties
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a collection of strings that specify the properties that participate in filtering data in real time.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ObservableCollection<string> LiveFilteringProperties { get; }
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.String}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.LiveGroupingProperties
  id: LiveGroupingProperties
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: LiveGroupingProperties
  nameWithType: ListCollectionView.LiveGroupingProperties
  fullName: System.Windows.Data.ListCollectionView.LiveGroupingProperties
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a collection of strings that specify the properties that participate in grouping data in real time.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ObservableCollection<string> LiveGroupingProperties { get; }
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.String}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.LiveSortingProperties
  id: LiveSortingProperties
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: LiveSortingProperties
  nameWithType: ListCollectionView.LiveSortingProperties
  fullName: System.Windows.Data.ListCollectionView.LiveSortingProperties
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a collection of strings that specify the properties that participate in sorting data in real time.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ObservableCollection<string> LiveSortingProperties { get; }
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.String}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)
  id: MoveCurrentToPosition(System.Int32)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: MoveCurrentToPosition(Int32)
  nameWithType: ListCollectionView.MoveCurrentToPosition(Int32)
  fullName: System.Windows.Data.ListCollectionView.MoveCurrentToPosition(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Sets the item at the specified index to be the <xref:System.Windows.Data.CollectionView.CurrentItem%2A> in the view.
  remarks: To be added.
  syntax:
    content: public override bool MoveCurrentToPosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: The index to set the <xref:System.Windows.Data.CollectionView.CurrentItem%2A> to.
    return:
      type: System.Boolean
      description: '`true` if the resulting <xref:System.Windows.Data.CollectionView.CurrentItem%2A> is an item within the view; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition
  id: NewItemPlaceholderPosition
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: NewItemPlaceholderPosition
  nameWithType: ListCollectionView.NewItemPlaceholderPosition
  fullName: System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets the position of the new item placeholder in the <see cref="T:System.Windows.Data.ListCollectionView">.
  remarks: To be added.
  syntax:
    content: public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }
    return:
      type: System.ComponentModel.NewItemPlaceholderPosition
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged
  id: OnAllowsCrossThreadChangesChanged
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: OnAllowsCrossThreadChangesChanged()
  nameWithType: ListCollectionView.OnAllowsCrossThreadChangesChanged()
  fullName: System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Occurs when the <xref:System.Windows.Data.CollectionView.AllowsCrossThreadChanges%2A> property changes.
  remarks: To be added.
  syntax:
    content: protected override void OnAllowsCrossThreadChangesChanged ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  nameWithType: ListCollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.ListCollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Called by the base class to notify the derived class that a <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event has been posted to the message queue.
  remarks: The purpose of this notification is to allow collection views to take a snapshot of the information, which is often the state of the data collection, that is needed at the time of the post.
  syntax:
    content: protected override void OnBeginChangeLogging (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: The <xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs> object that is added to the change log.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.PassesFilter(System.Object)
  id: PassesFilter(System.Object)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: PassesFilter(Object)
  nameWithType: ListCollectionView.PassesFilter(Object)
  fullName: System.Windows.Data.ListCollectionView.PassesFilter(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Returns a value that indicates whether the specified item in the underlying collection belongs to the view.
  remarks: Unlike the <xref:System.Windows.Data.ListCollectionView.Contains%2A> method, this method assumes that the specified item belongs to the underlying collection. This method takes filters into account. Typically, you use this method during collection-changed notifications to determine whether the added or removed item requires processing.
  syntax:
    content: public override bool PassesFilter (object item);
    parameters:
    - id: item
      type: System.Object
      description: The item to check.
    return:
      type: System.Boolean
      description: '`true` if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ListCollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.ListCollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Handles <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> events.
  remarks: To be added.
  syntax:
    content: protected override void ProcessCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs args);
    parameters:
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
      description: The <xref:System.Collections.Specialized.NotifyCollectionChangedEventArgs> object to process.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.RefreshOverride
  id: RefreshOverride
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: RefreshOverride()
  nameWithType: ListCollectionView.RefreshOverride()
  fullName: System.Windows.Data.ListCollectionView.RefreshOverride()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Recreates the view.
  remarks: To be added.
  syntax:
    content: protected override void RefreshOverride ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ListCollectionView.Remove(Object)
  fullName: System.Windows.Data.ListCollectionView.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Removes the specified item from the collection.
  remarks: If  is not in the collection, Remove does nothing.
  syntax:
    content: public void Remove (object item);
    parameters:
    - id: item
      type: System.Object
      description: The item to remove.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ListCollectionView.RemoveAt(Int32)
  fullName: System.Windows.Data.ListCollectionView.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Removes the item at the specified position from the collection.
  remarks: is relative to the collection view, not the collection.  For example, if the collection has 10 items and the view has a <xref:System.ComponentModel.ICollectionView.Filter%2A> so that 7 items appear, the valid values of  are 0 through 6.
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to remove.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.SortDescriptions
  id: SortDescriptions
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: SortDescriptions
  nameWithType: ListCollectionView.SortDescriptions
  fullName: System.Windows.Data.ListCollectionView.SortDescriptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a collection of <xref:System.ComponentModel.SortDescription> objects that describes how the items in the collection are sorted in the view.
  remarks: >-
    > [!NOTE]

    >  This property can only be set by accessing the collection object and using its various methods such as `Add`. The property to access the collection object itself is read-only; the collection itself is read/write.
  syntax:
    content: public override System.ComponentModel.SortDescriptionCollection SortDescriptions { get; }
    return:
      type: System.ComponentModel.SortDescriptionCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)
  id: System#Collections#IComparer#Compare(System.Object,System.Object)
  isEii: true
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: System.Collections.IComparer.Compare(Object,Object)
  nameWithType: ListCollectionView.System.Collections.IComparer.Compare(Object,Object)
  fullName: System.Windows.Data.ListCollectionView.System.Collections.IComparer.Compare(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: This member supports the [!INCLUDE[TLA#tla_winclient](../../add/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.
  remarks: To be added.
  syntax:
    content: int IComparer.Compare (object o1, object o2);
    parameters:
    - id: o1
      type: System.Object
      description: The first object to compare.
    - id: o2
      type: System.Object
      description: The second object to compare.
    return:
      type: System.Int32
      description: A value that is less than zero means  is less than  a value of zero means the objects are equal; and a value that is over zero means  is greater than .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.ListCollectionView.UsesLocalArray
  id: UsesLocalArray
  parent: System.Windows.Data.ListCollectionView
  langs:
  - csharp
  name: UsesLocalArray
  nameWithType: ListCollectionView.UsesLocalArray
  fullName: System.Windows.Data.ListCollectionView.UsesLocalArray
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.
  remarks: To be added.
  syntax:
    content: protected bool UsesLocalArray { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.Data.CollectionView
  isExternal: false
  name: System.Windows.Data.CollectionView
- uid: System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: ListCollectionView(IList)
  nameWithType: ListCollectionView.ListCollectionView(IList)
  fullName: System.Windows.Data.ListCollectionView.ListCollectionView(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.ListCollectionView.ActiveComparer
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: ActiveComparer
  nameWithType: ListCollectionView.ActiveComparer
  fullName: System.Windows.Data.ListCollectionView.ActiveComparer
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Windows.Data.ListCollectionView.ActiveFilter
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: ActiveFilter
  nameWithType: ListCollectionView.ActiveFilter
  fullName: System.Windows.Data.ListCollectionView.ActiveFilter
- uid: System.Predicate{System.Object}
  parent: System
  isExternal: false
  name: Predicate<Object>
  nameWithType: Predicate<Object>
  fullName: System.Predicate<System.Object>
- uid: System.Windows.Data.ListCollectionView.AddNew
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: AddNew()
  nameWithType: ListCollectionView.AddNew()
  fullName: System.Windows.Data.ListCollectionView.AddNew()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.AddNewItem(System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: AddNewItem(Object)
  nameWithType: ListCollectionView.AddNewItem(Object)
  fullName: System.Windows.Data.ListCollectionView.AddNewItem(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.CanAddNew
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanAddNew
  nameWithType: ListCollectionView.CanAddNew
  fullName: System.Windows.Data.ListCollectionView.CanAddNew
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CanAddNewItem
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanAddNewItem
  nameWithType: ListCollectionView.CanAddNewItem
  fullName: System.Windows.Data.ListCollectionView.CanAddNewItem
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CanCancelEdit
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanCancelEdit
  nameWithType: ListCollectionView.CanCancelEdit
  fullName: System.Windows.Data.ListCollectionView.CanCancelEdit
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CancelEdit
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CancelEdit()
  nameWithType: ListCollectionView.CancelEdit()
  fullName: System.Windows.Data.ListCollectionView.CancelEdit()
- uid: System.Windows.Data.ListCollectionView.CancelNew
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CancelNew()
  nameWithType: ListCollectionView.CancelNew()
  fullName: System.Windows.Data.ListCollectionView.CancelNew()
- uid: System.Windows.Data.ListCollectionView.CanChangeLiveFiltering
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanChangeLiveFiltering
  nameWithType: ListCollectionView.CanChangeLiveFiltering
  fullName: System.Windows.Data.ListCollectionView.CanChangeLiveFiltering
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CanChangeLiveGrouping
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanChangeLiveGrouping
  nameWithType: ListCollectionView.CanChangeLiveGrouping
  fullName: System.Windows.Data.ListCollectionView.CanChangeLiveGrouping
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CanChangeLiveSorting
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanChangeLiveSorting
  nameWithType: ListCollectionView.CanChangeLiveSorting
  fullName: System.Windows.Data.ListCollectionView.CanChangeLiveSorting
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CanFilter
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanFilter
  nameWithType: ListCollectionView.CanFilter
  fullName: System.Windows.Data.ListCollectionView.CanFilter
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CanGroup
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanGroup
  nameWithType: ListCollectionView.CanGroup
  fullName: System.Windows.Data.ListCollectionView.CanGroup
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CanRemove
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanRemove
  nameWithType: ListCollectionView.CanRemove
  fullName: System.Windows.Data.ListCollectionView.CanRemove
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CanSort
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CanSort
  nameWithType: ListCollectionView.CanSort
  fullName: System.Windows.Data.ListCollectionView.CanSort
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.CommitEdit
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CommitEdit()
  nameWithType: ListCollectionView.CommitEdit()
  fullName: System.Windows.Data.ListCollectionView.CommitEdit()
- uid: System.Windows.Data.ListCollectionView.CommitNew
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CommitNew()
  nameWithType: ListCollectionView.CommitNew()
  fullName: System.Windows.Data.ListCollectionView.CommitNew()
- uid: System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: Compare(Object,Object)
  nameWithType: ListCollectionView.Compare(Object,Object)
  fullName: System.Windows.Data.ListCollectionView.Compare(Object,Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.Contains(System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: Contains(Object)
  nameWithType: ListCollectionView.Contains(Object)
  fullName: System.Windows.Data.ListCollectionView.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.Count
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: Count
  nameWithType: ListCollectionView.Count
  fullName: System.Windows.Data.ListCollectionView.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.ListCollectionView.CurrentAddItem
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CurrentAddItem
  nameWithType: ListCollectionView.CurrentAddItem
  fullName: System.Windows.Data.ListCollectionView.CurrentAddItem
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.CurrentEditItem
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CurrentEditItem
  nameWithType: ListCollectionView.CurrentEditItem
  fullName: System.Windows.Data.ListCollectionView.CurrentEditItem
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.CustomSort
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: CustomSort
  nameWithType: ListCollectionView.CustomSort
  fullName: System.Windows.Data.ListCollectionView.CustomSort
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: false
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.Windows.Data.ListCollectionView.EditItem(System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: EditItem(Object)
  nameWithType: ListCollectionView.EditItem(Object)
  fullName: System.Windows.Data.ListCollectionView.EditItem(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.Filter
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: Filter
  nameWithType: ListCollectionView.Filter
  fullName: System.Windows.Data.ListCollectionView.Filter
- uid: System.Predicate{System.Object}
  parent: System
  isExternal: false
  name: Predicate<Object>
  nameWithType: Predicate<Object>
  fullName: System.Predicate<System.Object>
- uid: System.Windows.Data.ListCollectionView.GetEnumerator
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: GetEnumerator()
  nameWithType: ListCollectionView.GetEnumerator()
  fullName: System.Windows.Data.ListCollectionView.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: GetItemAt(Int32)
  nameWithType: ListCollectionView.GetItemAt(Int32)
  fullName: System.Windows.Data.ListCollectionView.GetItemAt(Int32)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.ListCollectionView.GroupBySelector
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: GroupBySelector
  nameWithType: ListCollectionView.GroupBySelector
  fullName: System.Windows.Data.ListCollectionView.GroupBySelector
- uid: System.Windows.Data.GroupDescriptionSelectorCallback
  parent: System.Windows.Data
  isExternal: false
  name: GroupDescriptionSelectorCallback
  nameWithType: GroupDescriptionSelectorCallback
  fullName: System.Windows.Data.GroupDescriptionSelectorCallback
- uid: System.Windows.Data.ListCollectionView.GroupDescriptions
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: GroupDescriptions
  nameWithType: ListCollectionView.GroupDescriptions
  fullName: System.Windows.Data.ListCollectionView.GroupDescriptions
- uid: System.Collections.ObjectModel.ObservableCollection{System.ComponentModel.GroupDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ObservableCollection<GroupDescription>
  nameWithType: ObservableCollection<GroupDescription>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.ComponentModel.GroupDescription>
- uid: System.Windows.Data.ListCollectionView.Groups
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: Groups
  nameWithType: ListCollectionView.Groups
  fullName: System.Windows.Data.ListCollectionView.Groups
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection{System.Object}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyObservableCollection<Object>
  nameWithType: ReadOnlyObservableCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<System.Object>
- uid: System.Windows.Data.ListCollectionView.IndexOf(System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: IndexOf(Object)
  nameWithType: ListCollectionView.IndexOf(Object)
  fullName: System.Windows.Data.ListCollectionView.IndexOf(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.InternalContains(System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: InternalContains(Object)
  nameWithType: ListCollectionView.InternalContains(Object)
  fullName: System.Windows.Data.ListCollectionView.InternalContains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.InternalCount
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: InternalCount
  nameWithType: ListCollectionView.InternalCount
  fullName: System.Windows.Data.ListCollectionView.InternalCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.ListCollectionView.InternalGetEnumerator
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: InternalGetEnumerator()
  nameWithType: ListCollectionView.InternalGetEnumerator()
  fullName: System.Windows.Data.ListCollectionView.InternalGetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: InternalIndexOf(Object)
  nameWithType: ListCollectionView.InternalIndexOf(Object)
  fullName: System.Windows.Data.ListCollectionView.InternalIndexOf(Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: InternalItemAt(Int32)
  nameWithType: ListCollectionView.InternalItemAt(Int32)
  fullName: System.Windows.Data.ListCollectionView.InternalItemAt(Int32)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.ListCollectionView.InternalList
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: InternalList
  nameWithType: ListCollectionView.InternalList
  fullName: System.Windows.Data.ListCollectionView.InternalList
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.ListCollectionView.IsAddingNew
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: IsAddingNew
  nameWithType: ListCollectionView.IsAddingNew
  fullName: System.Windows.Data.ListCollectionView.IsAddingNew
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.IsDataInGroupOrder
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: IsDataInGroupOrder
  nameWithType: ListCollectionView.IsDataInGroupOrder
  fullName: System.Windows.Data.ListCollectionView.IsDataInGroupOrder
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.IsEditingItem
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: IsEditingItem
  nameWithType: ListCollectionView.IsEditingItem
  fullName: System.Windows.Data.ListCollectionView.IsEditingItem
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.IsEmpty
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: IsEmpty
  nameWithType: ListCollectionView.IsEmpty
  fullName: System.Windows.Data.ListCollectionView.IsEmpty
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.IsGrouping
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: IsGrouping
  nameWithType: ListCollectionView.IsGrouping
  fullName: System.Windows.Data.ListCollectionView.IsGrouping
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.ListCollectionView.IsLiveFiltering
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: IsLiveFiltering
  nameWithType: ListCollectionView.IsLiveFiltering
  fullName: System.Windows.Data.ListCollectionView.IsLiveFiltering
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: false
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
- uid: System.Windows.Data.ListCollectionView.IsLiveGrouping
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: IsLiveGrouping
  nameWithType: ListCollectionView.IsLiveGrouping
  fullName: System.Windows.Data.ListCollectionView.IsLiveGrouping
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: false
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
- uid: System.Windows.Data.ListCollectionView.IsLiveSorting
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: IsLiveSorting
  nameWithType: ListCollectionView.IsLiveSorting
  fullName: System.Windows.Data.ListCollectionView.IsLiveSorting
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: false
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
- uid: System.Windows.Data.ListCollectionView.ItemProperties
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: ItemProperties
  nameWithType: ListCollectionView.ItemProperties
  fullName: System.Windows.Data.ListCollectionView.ItemProperties
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.ItemPropertyInfo}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<ItemPropertyInfo>
  nameWithType: ReadOnlyCollection<ItemPropertyInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.ItemPropertyInfo>
- uid: System.Windows.Data.ListCollectionView.LiveFilteringProperties
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: LiveFilteringProperties
  nameWithType: ListCollectionView.LiveFilteringProperties
  fullName: System.Windows.Data.ListCollectionView.LiveFilteringProperties
- uid: System.Collections.ObjectModel.ObservableCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ObservableCollection<String>
  nameWithType: ObservableCollection<String>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.String>
- uid: System.Windows.Data.ListCollectionView.LiveGroupingProperties
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: LiveGroupingProperties
  nameWithType: ListCollectionView.LiveGroupingProperties
  fullName: System.Windows.Data.ListCollectionView.LiveGroupingProperties
- uid: System.Collections.ObjectModel.ObservableCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ObservableCollection<String>
  nameWithType: ObservableCollection<String>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.String>
- uid: System.Windows.Data.ListCollectionView.LiveSortingProperties
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: LiveSortingProperties
  nameWithType: ListCollectionView.LiveSortingProperties
  fullName: System.Windows.Data.ListCollectionView.LiveSortingProperties
- uid: System.Collections.ObjectModel.ObservableCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ObservableCollection<String>
  nameWithType: ObservableCollection<String>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.String>
- uid: System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: MoveCurrentToPosition(Int32)
  nameWithType: ListCollectionView.MoveCurrentToPosition(Int32)
  fullName: System.Windows.Data.ListCollectionView.MoveCurrentToPosition(Int32)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: ListCollectionView.NewItemPlaceholderPosition
  fullName: System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.NewItemPlaceholderPosition
  parent: System.ComponentModel
  isExternal: true
  name: NewItemPlaceholderPosition
  nameWithType: NewItemPlaceholderPosition
  fullName: System.ComponentModel.NewItemPlaceholderPosition
- uid: System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: OnAllowsCrossThreadChangesChanged()
  nameWithType: ListCollectionView.OnAllowsCrossThreadChangesChanged()
  fullName: System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged()
- uid: System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  nameWithType: ListCollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.ListCollectionView.OnBeginChangeLogging(NotifyCollectionChangedEventArgs)
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
- uid: System.Windows.Data.ListCollectionView.PassesFilter(System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: PassesFilter(Object)
  nameWithType: ListCollectionView.PassesFilter(Object)
  fullName: System.Windows.Data.ListCollectionView.PassesFilter(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  nameWithType: ListCollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Windows.Data.ListCollectionView.ProcessCollectionChanged(NotifyCollectionChangedEventArgs)
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
- uid: System.Windows.Data.ListCollectionView.RefreshOverride
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: RefreshOverride()
  nameWithType: ListCollectionView.RefreshOverride()
  fullName: System.Windows.Data.ListCollectionView.RefreshOverride()
- uid: System.Windows.Data.ListCollectionView.Remove(System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: Remove(Object)
  nameWithType: ListCollectionView.Remove(Object)
  fullName: System.Windows.Data.ListCollectionView.Remove(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ListCollectionView.RemoveAt(Int32)
  fullName: System.Windows.Data.ListCollectionView.RemoveAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Data.ListCollectionView.SortDescriptions
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: SortDescriptions
  nameWithType: ListCollectionView.SortDescriptions
  fullName: System.Windows.Data.ListCollectionView.SortDescriptions
- uid: System.ComponentModel.SortDescriptionCollection
  parent: System.ComponentModel
  isExternal: true
  name: SortDescriptionCollection
  nameWithType: SortDescriptionCollection
  fullName: System.ComponentModel.SortDescriptionCollection
- uid: System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: System.Collections.IComparer.Compare(Object,Object)
  nameWithType: ListCollectionView.System.Collections.IComparer.Compare(Object,Object)
  fullName: System.Windows.Data.ListCollectionView.System.Collections.IComparer.Compare(Object,Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.ListCollectionView.UsesLocalArray
  parent: System.Windows.Data.ListCollectionView
  isExternal: false
  name: UsesLocalArray
  nameWithType: ListCollectionView.UsesLocalArray
  fullName: System.Windows.Data.ListCollectionView.UsesLocalArray
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
