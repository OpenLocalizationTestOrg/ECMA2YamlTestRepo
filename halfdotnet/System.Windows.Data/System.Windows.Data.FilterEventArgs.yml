### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.FilterEventArgs
  id: FilterEventArgs
  children:
  - System.Windows.Data.FilterEventArgs.Accepted
  - System.Windows.Data.FilterEventArgs.Item
  langs:
  - csharp
  name: FilterEventArgs
  nameWithType: FilterEventArgs
  fullName: System.Windows.Data.FilterEventArgs
  type: Class
  summary: Provides information and event data that is associated with the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=fullName> event.
  remarks: ''
  example:
  - "The following example shows how to set an event handler for the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=fullName> event. In this example, `listingDataView` is an instance of <xref:System.Windows.Data.CollectionViewSource>.  \n  \n [!code-cs[DataBindingLab#10](../../add/codesnippet/CSharp/DataBindingLab/MainWindow.xaml.cs#10)]\n [!code-vb[DataBindingLab#10](../../add/codesnippet/VisualBasic/DataBindingLab/MainWindow.xaml.vb#10)]  \n  \n The following example shows the implementation of the example `ShowOnlyBargainsFilter` filter event handler. This event handler uses the <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=fullName> property to filter out `AuctionItem` objects that have a `CurrentPrice` of $25.00 or greater.  \n  \n [!code-cs[DataBindingLab#5](../../add/codesnippet/CSharp/DataBindingLab/MainWindow.xaml.cs#5)]\n [!code-vb[DataBindingLab#5](../../add/codesnippet/VisualBasic/DataBindingLab/MainWindow.xaml.vb#5)]  \n  \n For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: 'public class FilterEventArgs : EventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.FilterEventArgs.Accepted
  id: Accepted
  parent: System.Windows.Data.FilterEventArgs
  langs:
  - csharp
  name: Accepted
  nameWithType: FilterEventArgs.Accepted
  fullName: System.Windows.Data.FilterEventArgs.Accepted
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets or sets a value that indicates whether the item passes the filter.
  remarks: ''
  example:
  - "The following example shows how to set an event handler for the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=fullName> event. In this example, `listingDataView` is an instance of <xref:System.Windows.Data.CollectionViewSource>.  \n  \n [!code-cs[DataBindingLab#10](../../add/codesnippet/CSharp/DataBindingLab/MainWindow.xaml.cs#10)]\n [!code-vb[DataBindingLab#10](../../add/codesnippet/VisualBasic/DataBindingLab/MainWindow.xaml.vb#10)]  \n  \n The following example shows the implementation of the example `ShowOnlyBargainsFilter` filter event handler. This event handler uses the Accepted property to filter out `AuctionItem` objects that have a `CurrentPrice` of $25.00 or greater.  \n  \n [!code-cs[DataBindingLab#5](../../add/codesnippet/CSharp/DataBindingLab/MainWindow.xaml.cs#5)]\n [!code-vb[DataBindingLab#5](../../add/codesnippet/VisualBasic/DataBindingLab/MainWindow.xaml.vb#5)]  \n  \n For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public bool Accepted { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Data.FilterEventArgs.Item
  id: Item
  parent: System.Windows.Data.FilterEventArgs
  langs:
  - csharp
  name: Item
  nameWithType: FilterEventArgs.Item
  fullName: System.Windows.Data.FilterEventArgs.Item
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: Gets the object that the filter should test.
  remarks: ''
  example:
  - "The following example shows how to set an event handler for the <xref:System.Windows.Data.CollectionViewSource.Filter?displayProperty=fullName> event. In this example, `listingDataView` is an instance of <xref:System.Windows.Data.CollectionViewSource>.  \n  \n [!code-cs[DataBindingLab#10](../../add/codesnippet/CSharp/DataBindingLab/MainWindow.xaml.cs#10)]\n [!code-vb[DataBindingLab#10](../../add/codesnippet/VisualBasic/DataBindingLab/MainWindow.xaml.vb#10)]  \n  \n The following example shows the implementation of the example `ShowOnlyBargainsFilter` filter event handler. This event handler uses the <xref:System.Windows.Data.FilterEventArgs.Accepted%2A?displayProperty=fullName> property to filter out `AuctionItem` objects that have a `CurrentPrice` of $25.00 or greater.  \n  \n [!code-cs[DataBindingLab#5](../../add/codesnippet/CSharp/DataBindingLab/MainWindow.xaml.cs#5)]\n [!code-vb[DataBindingLab#5](../../add/codesnippet/VisualBasic/DataBindingLab/MainWindow.xaml.vb#5)]  \n  \n For the complete example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public object Item { get; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Data.FilterEventArgs.Accepted
  parent: System.Windows.Data.FilterEventArgs
  isExternal: false
  name: Accepted
  nameWithType: FilterEventArgs.Accepted
  fullName: System.Windows.Data.FilterEventArgs.Accepted
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.FilterEventArgs.Item
  parent: System.Windows.Data.FilterEventArgs
  isExternal: false
  name: Item
  nameWithType: FilterEventArgs.Item
  fullName: System.Windows.Data.FilterEventArgs.Item
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
