### YamlMime:ManagedReference
items:
- uid: System.Collections.Concurrent.Partitioner`1
  id: Partitioner`1
  children:
  - System.Collections.Concurrent.Partitioner`1.#ctor
  - System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions
  - System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)
  - System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions
  langs:
  - csharp
  - vb
  name: Partitioner<TSource>
  nameWithType: Partitioner<TSource>
  fullName: System.Collections.Concurrent.Partitioner<TSource>
  type: Class
  syntax:
    content: public abstract class Partitioner<TSource>
    typeParameters:
    - id: TSource
      description: Parameter description to be filled
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Collections.Concurrent.Partitioner`1.#ctor
  id: '#ctor'
  parent: System.Collections.Concurrent.Partitioner`1
  langs:
  - csharp
  - vb
  name: Partitioner()
  nameWithType: Partitioner<TSource>.Partitioner()
  fullName: System.Collections.Concurrent.Partitioner<TSource>.Partitioner()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections.Concurrent
  syntax:
    content: protected Partitioner ();
    parameters: []
- uid: System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions
  id: GetDynamicPartitions
  parent: System.Collections.Concurrent.Partitioner`1
  langs:
  - csharp
  - vb
  name: GetDynamicPartitions()
  nameWithType: Partitioner<TSource>.GetDynamicPartitions()
  fullName: System.Collections.Concurrent.Partitioner<TSource>.GetDynamicPartitions()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Concurrent
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<TSource> GetDynamicPartitions ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
- uid: System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)
  id: GetPartitions(System.Int32)
  parent: System.Collections.Concurrent.Partitioner`1
  langs:
  - csharp
  - vb
  name: GetPartitions(Int32)
  nameWithType: Partitioner<TSource>.GetPartitions(Int32)
  fullName: System.Collections.Concurrent.Partitioner<TSource>.GetPartitions(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections.Concurrent
  syntax:
    content: public abstract System.Collections.Generic.IList<System.Collections.Generic.IEnumerator<TSource>> GetPartitions (int partitionCount);
    parameters:
    - id: partitionCount
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IList{System.Collections.Generic.IEnumerator{TSource}}
      description: Return description to be filled
- uid: System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions
  id: SupportsDynamicPartitions
  parent: System.Collections.Concurrent.Partitioner`1
  langs:
  - csharp
  - vb
  name: SupportsDynamicPartitions
  nameWithType: Partitioner<TSource>.SupportsDynamicPartitions
  fullName: System.Collections.Concurrent.Partitioner<TSource>.SupportsDynamicPartitions
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections.Concurrent
  syntax:
    content: public virtual bool SupportsDynamicPartitions { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Collections.Concurrent.Partitioner`1.#ctor
  parent: System.Collections.Concurrent.Partitioner`1
  isExternal: false
  name: Partitioner()
  nameWithType: Partitioner<TSource>.Partitioner()
  fullName: System.Collections.Concurrent.Partitioner<TSource>.Partitioner()
- uid: System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions
  parent: System.Collections.Concurrent.Partitioner`1
  isExternal: false
  name: GetDynamicPartitions()
  nameWithType: Partitioner<TSource>.GetDynamicPartitions()
  fullName: System.Collections.Concurrent.Partitioner<TSource>.GetDynamicPartitions()
- uid: System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)
  parent: System.Collections.Concurrent.Partitioner`1
  isExternal: false
  name: GetPartitions(Int32)
  nameWithType: Partitioner<TSource>.GetPartitions(Int32)
  fullName: System.Collections.Concurrent.Partitioner<TSource>.GetPartitions(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions
  parent: System.Collections.Concurrent.Partitioner`1
  isExternal: false
  name: SupportsDynamicPartitions
  nameWithType: Partitioner<TSource>.SupportsDynamicPartitions
  fullName: System.Collections.Concurrent.Partitioner<TSource>.SupportsDynamicPartitions
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
