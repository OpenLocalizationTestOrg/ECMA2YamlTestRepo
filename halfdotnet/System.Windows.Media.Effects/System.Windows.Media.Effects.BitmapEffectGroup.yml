### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.BitmapEffectGroup
  id: BitmapEffectGroup
  children:
  - System.Windows.Media.Effects.BitmapEffectGroup.#ctor
  - System.Windows.Media.Effects.BitmapEffectGroup.Children
  - System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
  - System.Windows.Media.Effects.BitmapEffectGroup.Clone
  - System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue
  - System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore
  - System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect
  - System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  langs:
  - csharp
  name: BitmapEffectGroup
  nameWithType: BitmapEffectGroup
  fullName: System.Windows.Media.Effects.BitmapEffectGroup
  type: Class
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.Effect">. Represents a group of <xref:System.Windows.Media.Effects.BitmapEffect> objects that is used to apply multiple effects to a visible object.'
  remarks: "The order in which effects are added to a group affects the final visual representation of the content that the effects are applied to. The effects are chained so that the visual of the first effect is used as the source of the second. This logic is followed through all subsequent effects within the effect group. The following image shows the effect that a <xref:System.Windows.Media.Effects.DropShadowBitmapEffect> and a <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect> have when added to a <xref:System.Windows.Controls.Button>. The first button has the drop shadow applied first and the outer glow applied last. In the second button, the order is reversed.  \n  \n ![Affect of an effect's order in a BitmapEffectGroup](../../add/media/effectgrouporder.PNG \"Affect of an effect's order in a BitmapEffectGroup\")  \nEffects in a BitmapEffectGroup"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Children")]

      public sealed class BitmapEffectGroup : System.Windows.Media.Effects.BitmapEffect
  inheritance:
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Effects.BitmapEffect
  implements: []
  inheritedMembers:
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter
  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)
  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)
  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.BitmapEffectGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: BitmapEffectGroup()
  nameWithType: BitmapEffectGroup.BitmapEffectGroup()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.BitmapEffectGroup()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.Effect">. Initializes a new instance of the <xref:System.Windows.Media.Effects.BitmapEffectGroup> class.'
  remarks: To be added.
  syntax:
    content: public BitmapEffectGroup ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Children
  id: Children
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: Children
  nameWithType: BitmapEffectGroup.Children
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.Children
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.Effect">. Gets or sets the children of the <xref:System.Windows.Media.Effects.BitmapEffectGroup>.'
  remarks: "<a name=\"dependencyPropertyInfo_Children\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty>|  \n|Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffectCollection Children { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffectCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
  id: ChildrenProperty
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: ChildrenProperty
  nameWithType: BitmapEffectGroup.ChildrenProperty
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.Effect">. Identifies the <xref:System.Windows.Media.Effects.BitmapEffectGroup.Children%2A> dependency property.'
  remarks: The identifier for the <xref:System.Windows.Media.Effects.BitmapEffectGroup.Children%2A> dependency property.
  syntax:
    content: public static readonly System.Windows.DependencyProperty ChildrenProperty;
    return:
      type: System.Windows.DependencyProperty
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Clone
  id: Clone
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: Clone()
  nameWithType: BitmapEffectGroup.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.Effect">. Creates a modifiable clone of this <xref:System.Windows.Media.Effects.BitmapEffectGroup> object, making deep copies of this object''s current values. Resource references, data bindings, and animations are not copied, but their current values are.'
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffectGroup Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffectGroup
      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen%2A> property will be `false` even if the source's <xref:System.Windows.Freezable.IsFrozen%2A> property was `true`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BitmapEffectGroup.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: '**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.Effect">. Creates a modifiable clone of this <xref:System.Windows.Media.Effects.BitmapEffectGroup> object, making deep copies of this object''s current values. Resource references, data bindings, and animations are not copied, but their current values are.'
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffectGroup CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.BitmapEffectGroup
      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen%2A> property will be `false` even if the source's <xref:System.Windows.Freezable.IsFrozen%2A> property was `true`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: BitmapEffectGroup.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect
  id: CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffectGroup.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();
    parameters: []
    return:
      type: System.Runtime.InteropServices.SafeHandle
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  langs:
  - csharp
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffectGroup.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(SafeHandle)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: To be added.
  remarks: To be added.
  syntax:
    content: protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);
    parameters:
    - id: unmanagedEffect
      type: System.Runtime.InteropServices.SafeHandle
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.Media.Effects.BitmapEffect
  isExternal: false
  name: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffectGroup.#ctor
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: BitmapEffectGroup()
  nameWithType: BitmapEffectGroup.BitmapEffectGroup()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.BitmapEffectGroup()
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Children
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: Children
  nameWithType: BitmapEffectGroup.Children
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.Children
- uid: System.Windows.Media.Effects.BitmapEffectCollection
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectCollection
  nameWithType: BitmapEffectCollection
  fullName: System.Windows.Media.Effects.BitmapEffectCollection
- uid: System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: ChildrenProperty
  nameWithType: BitmapEffectGroup.ChildrenProperty
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: true
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Effects.BitmapEffectGroup.Clone
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: Clone()
  nameWithType: BitmapEffectGroup.Clone()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.Clone()
- uid: System.Windows.Media.Effects.BitmapEffectGroup
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectGroup
  nameWithType: BitmapEffectGroup
  fullName: System.Windows.Media.Effects.BitmapEffectGroup
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BitmapEffectGroup.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue()
- uid: System.Windows.Media.Effects.BitmapEffectGroup
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectGroup
  nameWithType: BitmapEffectGroup
  fullName: System.Windows.Media.Effects.BitmapEffectGroup
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: BitmapEffectGroup.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: true
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: CreateUnmanagedEffect()
  nameWithType: BitmapEffectGroup.CreateUnmanagedEffect()
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.CreateUnmanagedEffect()
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: false
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)
  parent: System.Windows.Media.Effects.BitmapEffectGroup
  isExternal: false
  name: UpdateUnmanagedPropertyState(SafeHandle)
  nameWithType: BitmapEffectGroup.UpdateUnmanagedPropertyState(SafeHandle)
  fullName: System.Windows.Media.Effects.BitmapEffectGroup.UpdateUnmanagedPropertyState(SafeHandle)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: false
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
