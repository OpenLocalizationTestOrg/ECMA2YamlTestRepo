### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.Effect
  id: Effect
  children:
  - System.Windows.Media.Effects.Effect.#ctor
  - System.Windows.Media.Effects.Effect.Clone
  - System.Windows.Media.Effects.Effect.CloneCurrentValue
  - System.Windows.Media.Effects.Effect.EffectMapping
  - System.Windows.Media.Effects.Effect.ImplicitInput
  langs:
  - csharp
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
  type: Class
  summary: Provides a custom bitmap effect.
  remarks: Derive from the Effect class to implement a custom bitmap effect. In most cases, you will derive from <xref:System.Windows.Media.Effects.ShaderEffect>.
  syntax:
    content: 'public abstract class Effect : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.Effect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: Effect()
  nameWithType: Effect.Effect()
  fullName: System.Windows.Media.Effects.Effect.Effect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.Effect"> class.
  remarks: To be added.
  syntax:
    content: protected Effect ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.Effect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: Clone()
  nameWithType: Effect.Clone()
  fullName: System.Windows.Media.Effects.Effect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.Effect"> object, making deep copies of this object's values. When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.
  remarks: The Clone method can be used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited <xref:System.Windows.Freezable.Clone%2A> method to provide a strongly typed implementation.
  syntax:
    content: public System.Windows.Media.Effects.Effect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.Effect
      description: A modifiable clone of this instance. The returned clone is effectively a deep copy of the current object. The clone's <xref:System.Windows.Freezable.IsFrozen%2A> property is `false`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: Effect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.Effect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.Effect"> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are copied.
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Effects.Effect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.Effect
      description: A modifiable clone of the current object. The cloned object's <xref:System.Windows.Freezable.IsFrozen%2A> property will be `false` even if the source's <xref:System.Windows.Freezable.IsFrozen%2A> property was `true`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.Effect.EffectMapping
  id: EffectMapping
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: EffectMapping
  nameWithType: Effect.EffectMapping
  fullName: System.Windows.Media.Effects.Effect.EffectMapping
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: When overridden in a derived class, transforms mouse input and coordinate systems through the effect.
  remarks: "Override the EffectMapping property to assign a transform that differs from the default identity transform.  \n  \n Input is transformed through the inverse of this transform. The <xref:System.Windows.Media.Visual.TransformToAncestor%2A> and <xref:System.Windows.Media.Visual.TransformToDescendant%2A> methods also have the EffectMapping transform applied.  \n  \n Incoming points must be in the [0-1] range, and outgoing points must map to the [0-1] range. The <xref:System.Windows.Media.GeneralTransform.Inverse%2A> property must return a <xref:System.Windows.Media.GeneralTransform> that computes the inverse mapping.  \n  \n The inverse transform maps a point from after the effect is applied to the point that it came from before the effect. The non-inverse transform maps a point from before the effect is applied to after the effect is applied.  \n  \n Note that the transform does not include information about the physical pixel size being used, and it just operates in the unit range."
  syntax:
    content: protected virtual System.Windows.Media.GeneralTransform EffectMapping { get; }
    return:
      type: System.Windows.Media.GeneralTransform
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Media.Effects.Effect.ImplicitInput
  id: ImplicitInput
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: ImplicitInput
  nameWithType: Effect.ImplicitInput
  fullName: System.Windows.Media.Effects.Effect.ImplicitInput
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: Gets a <see cref="T:System.Windows.Media.Brush"> that, when it is used as an input for an <xref:System.Windows.Media.Effects.Effect>, causes the bitmap of the <xref:System.Windows.UIElement> that the <xref:System.Windows.Media.Effects.Effect> is applied to be that input.
  remarks: "Use the ImplicitInput property as the value to a Brush-valued input to a <xref:System.Windows.Media.Effects.ShaderEffect>.  \n  \n The ImplicitInput property represents the shader input that comes from the rendering of the <xref:System.Windows.UIElement> that the <xref:System.Windows.Media.Effects.Effect> is applied to.  \n  \n> [!NOTE]\n>  The behavior is undefined when ImplicitInput is used as a Brush in other WPF classes."
  syntax:
    content: public static System.Windows.Media.Brush ImplicitInput { get; }
    return:
      type: System.Windows.Media.Brush
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.Effects.Effect.#ctor
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Effect()
  nameWithType: Effect.Effect()
  fullName: System.Windows.Media.Effects.Effect.Effect()
- uid: System.Windows.Media.Effects.Effect.Clone
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Clone()
  nameWithType: Effect.Clone()
  fullName: System.Windows.Media.Effects.Effect.Clone()
- uid: System.Windows.Media.Effects.Effect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: Effect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.Effect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.Effect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
- uid: System.Windows.Media.Effects.Effect.EffectMapping
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: EffectMapping
  nameWithType: Effect.EffectMapping
  fullName: System.Windows.Media.Effects.Effect.EffectMapping
- uid: System.Windows.Media.GeneralTransform
  parent: System.Windows.Media
  isExternal: false
  name: GeneralTransform
  nameWithType: GeneralTransform
  fullName: System.Windows.Media.GeneralTransform
- uid: System.Windows.Media.Effects.Effect.ImplicitInput
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: ImplicitInput
  nameWithType: Effect.ImplicitInput
  fullName: System.Windows.Media.Effects.Effect.ImplicitInput
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
