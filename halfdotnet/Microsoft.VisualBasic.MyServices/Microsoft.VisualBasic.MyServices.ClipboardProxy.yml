### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy
  id: ClipboardProxy
  children:
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)
  - Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)
  langs:
  - csharp
  name: ClipboardProxy
  nameWithType: ClipboardProxy
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy
  type: Class
  summary: Provides methods for manipulating the Clipboard.
  remarks: "Items moved or copied to the Clipboard persist even after the application is shut down.  \n  \n Data on the Clipboard can be in any data format, also called a Clipboard format. For a list of predefined formats to use with the Clipboard, see <xref:System.Windows.Forms.DataFormats>. When an item is moved or copied to the Clipboard, items in other formats are cleared. To make other formats persist, use <xref:Microsoft.VisualBasic.VariantType>, which copies everything existing on the current Clipboard, including items pasted from other applications. Place data on the Clipboard in multiple formats to maximize the possibility that a target application, whose format requirements you might not know, can successfully retrieve the data.  \n  \n Because all Windows applications share the system Clipboard, the contents may change when you switch to another application.  \n  \n A class must be serializable for it to be put on the Clipboard. See [Serialization](../Topic/Serialization%20\\(C%23%20and%20Visual%20Basic\\).md) for more information.  \n  \n When accessing the Clipboard remotely, a <xref:System.Threading.ThreadStateException> is thrown unless the accessing thread operates in STA (single-threaded apartment) mode. To resolve this issue, set the  to `STA`. For more information, see <xref:System.STAThreadAttribute>.  \n  \n For more information, see [Storing Data to and Reading from the Clipboard](../Topic/Storing%20Data%20to%20and%20Reading%20from%20the%20Clipboard%20\\(Visual%20Basic\\).md).  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example reads text from the Clipboard into the string `textOnClipboard`.  \n  \n [!CODE [VbVbcnMyClipboard#6](../CodeSnippet/VS_Snippets_VBCSharp/VbVbcnMyClipboard#6)]  \n  \n This example will fail if there is no text on the Clipboard."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class ClipboardProxy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear
  id: Clear
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: Clear()
  nameWithType: ClipboardProxy.Clear()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Clears the Clipboard.
  remarks: "The <xref:System.Security.Permissions.UIPermission> class controls access to the Clipboard, and the associated <xref:System.Security.Permissions.UIPermissionClipboard> enumeration value indicates the level of access. For more information, see [Additional Security Considerations in Windows Forms](../Topic/Additional%20Security%20Considerations%20in%20Windows%20Forms.md).  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example clears the Clipboard.  \n  \n```  \nMy.Computer.Clipboard.Clear()  \n```  \n  \n This removes all data from the Clipboard."
  syntax:
    content: public void Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio
  id: ContainsAudio
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsAudio()
  nameWithType: ClipboardProxy.ContainsAudio()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Indicates whether the Clipboard contains audio data.
  remarks: "## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example determines whether the Clipboard contains audio data and displays the result.  \n  \n [!CODE [VbRefClipbd#10](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#10)]"
  syntax:
    content: public bool ContainsAudio ();
    parameters: []
    return:
      type: System.Boolean
      description: '`True` if audio data is stored on the Clipboard; otherwise `False`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)
  id: ContainsData(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsData(String)
  nameWithType: ClipboardProxy.ContainsData(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Indicates whether the Clipboard contains data in the specified custom format.
  remarks: "If you have placed custom formatted data on the Clipboard, this method allows you to check the Clipboard for data in that format.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example checks for data in the custom format `specialFormat`.  \n  \n [!CODE [VbRefClipbd#6](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#6)]  \n  \n Replace `specialFormat` with the name of the custom format you wish to check."
  syntax:
    content: public bool ContainsData (string format);
    parameters:
    - id: format
      type: System.String
      description: '`String`. Name of the custom format to be checked. Required.'
    return:
      type: System.Boolean
      description: '`True` if data in the specified custom format is stored on the Clipboard; otherwise `False`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList
  id: ContainsFileDropList
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsFileDropList()
  nameWithType: ClipboardProxy.ContainsFileDropList()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Returns a `Boolean` indicating whether the Clipboard contains a file drop list.
  remarks: "A file drop list is a collection of strings containing path information for files.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example determines if there is a file drop list on the Clipboard and adds the list to the `ListBox``lstFiles` if they exist.  \n  \n [!CODE [VbRefClipbd#12](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#12)]  \n  \n This code will create an exception if there is no `ListBox` named `lstFiles`."
  syntax:
    content: public bool ContainsFileDropList ();
    parameters: []
    return:
      type: System.Boolean
      description: '`True` if a file drop list is stored on the Clipboard; otherwise `False`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage
  id: ContainsImage
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsImage()
  nameWithType: ClipboardProxy.ContainsImage()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Returns a `Boolean` indicating whether an image is stored on the Clipboard.
  remarks: "## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example checks to see if there is an image on the Clipboard and, if so, gets the image and adds it to `PictureBox1`.  \n  \n [!CODE [VbRefClipbd#8](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#8)]  \n  \n This example depends on the existence of a `PictureBox` named `PictureBox1`."
  syntax:
    content: public bool ContainsImage ();
    parameters: []
    return:
      type: System.Boolean
      description: '`True` if an image is stored on the Clipboard; otherwise `False`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText
  id: ContainsText
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsText()
  nameWithType: ClipboardProxy.ContainsText()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Determines if there is text on the Clipboard.
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example determines if HTML text is stored on the Clipboard and reads from the Clipboard if it does.  \n  \n [!CODE [VbRefClipbd#5](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#5)]"
  syntax:
    content: public bool ContainsText ();
    parameters: []
    return:
      type: System.Boolean
      description: '`True` if the Clipboard contains text; otherwise `False`.'
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)
  id: ContainsText(System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: ContainsText(TextDataFormat)
  nameWithType: ClipboardProxy.ContainsText(TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(TextDataFormat)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Determines if there is text on the Clipboard.
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example determines if HTML text is stored on the Clipboard and reads from the Clipboard if it does.  \n  \n [!CODE [VbRefClipbd#5](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#5)]"
  syntax:
    content: public bool ContainsText (System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: <xref:System.Windows.Forms.TextDataFormat>. If specified, identifies what text format to be checked for. Required.
    return:
      type: System.Boolean
      description: '`True` if the Clipboard contains text; otherwise `False`.'
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream
  id: GetAudioStream
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetAudioStream()
  nameWithType: ClipboardProxy.GetAudioStream()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Retrieves an audio stream from the Clipboard.
  remarks: "## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example retrieves an audio stream from the Clipboard and plays it.  \n  \n [!CODE [VbRefClipbd#11](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#11)]"
  syntax:
    content: public System.IO.Stream GetAudioStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: A <see cref="T:System.IO.Stream"> object containing audio data or `Nothing` if the Clipboard does not contain any audio data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)
  id: GetData(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetData(String)
  nameWithType: ClipboardProxy.GetData(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Retrieves data in a custom format from the Clipboard.
  remarks: "## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example reads data in the format `specialformat` from the Clipboard and writes it to file.  \n  \n [!CODE [VbRefClipbd#7](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#7)]  \n  \n Replace `specialformat` with the custom data format you wish to retrieve."
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: '`String`. Name of the data format. Required.'
    return:
      type: System.Object
      description: An `Object` representing the Clipboard data or `Nothing` if the Clipboard does not contain any data that is in the specified format or can be converted to that format.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject
  id: GetDataObject
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetDataObject()
  nameWithType: ClipboardProxy.GetDataObject()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Retrieves data from the Clipboard as an <xref:System.Windows.Forms.IDataObject>.
  remarks: "This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example reads data from the Clipboard in the form of an <xref:System.Windows.Forms.IDataObject> and then writes it to a file.  \n  \n [!CODE [VbRefClipbd#1](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#1)]  \n  \n Replace `C:\\mylogfile` with the name of the file to which you want to write."
  syntax:
    content: public System.Windows.Forms.IDataObject GetDataObject ();
    parameters: []
    return:
      type: System.Windows.Forms.IDataObject
      description: An <xref:System.Windows.Forms.IDataObject> object that represents the data currently on the Clipboard, or `Nothing` if there is no data on the Clipboard.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList
  id: GetFileDropList
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetFileDropList()
  nameWithType: ClipboardProxy.GetFileDropList()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Retrieves a collection of strings representing file names from the Clipboard.
  remarks: "This method is available only for non-server applications.  \n  \n A file drop list is a collection of strings containing path information for files.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example determines if there is a file drop list on the Clipboard and adds the list to the `ListBox``lstFiles` if they exist.  \n  \n [!CODE [VbRefClipbd#9](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#9)]  \n  \n This code creates an exception if there is no `ListBox` named `lstFiles`."
  syntax:
    content: public System.Collections.Specialized.StringCollection GetFileDropList ();
    parameters: []
    return:
      type: System.Collections.Specialized.StringCollection
      description: A <xref:System.Collections.Specialized.StringCollection> containing file names or `Nothing` if the Clipboard does not contain any data that is in the <xref:System.Windows.Forms.DataFormats.FileDrop> format or can be converted to that format.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage
  id: GetImage
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetImage()
  nameWithType: ClipboardProxy.GetImage()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Retrieves an image from the Clipboard.
  remarks: "## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example checks to see if there is an image on the Clipboard before retrieving it and assigning it to `PictureBox1`.  \n  \n [!CODE [VbRefClipbd#4](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#4)]  \n  \n For this example to function correctly, there must be a `PictureBox` named `PictureBox1` on your form."
  syntax:
    content: public System.Drawing.Image GetImage ();
    parameters: []
    return:
      type: System.Drawing.Image
      description: An <xref:System.Drawing.Image> representing the Clipboard image data or `Nothing` if the Clipboard does not contain any data that is in the <xref:System.Windows.Forms.DataFormats.Bitmap> format or can be converted to that format.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText
  id: GetText
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetText()
  nameWithType: ClipboardProxy.GetText()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Retrieves text from the Clipboard.
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example reads text from the Clipboard into the string `textOnClipboard`.  \n  \n [!CODE [VbVbcnMyClipboard#6](../CodeSnippet/VS_Snippets_VBCSharp/VbVbcnMyClipboard#6)]  \n  \n This example fails if there is no text on the Clipboard."
  syntax:
    content: public string GetText ();
    parameters: []
    return:
      type: System.String
      description: The Clipboard text data or an empty string if the Clipboard does not contain data in the <xref:System.Windows.Forms.DataFormats.Text> or <xref:System.Windows.Forms.TextDataFormat> format, depending on the operating system.
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)
  id: GetText(System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: GetText(TextDataFormat)
  nameWithType: ClipboardProxy.GetText(TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(TextDataFormat)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Retrieves text from the Clipboard.
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example reads text from the Clipboard into the string `textOnClipboard`.  \n  \n [!CODE [VbVbcnMyClipboard#6](../CodeSnippet/VS_Snippets_VBCSharp/VbVbcnMyClipboard#6)]  \n  \n This example fails if there is no text on the Clipboard."
  syntax:
    content: public string GetText (System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: <xref:System.Windows.Forms.TextDataFormat>. If specified, identifies what text format should be retrieved. Default is <xref:System.Windows.Forms.TextDataFormat>. Required.
    return:
      type: System.String
      description: The Clipboard text data or an empty string if the Clipboard does not contain data in the specified format.
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])
  id: SetAudio(System.Byte[])
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetAudio(Byte[])
  nameWithType: ClipboardProxy.SetAudio(Byte[])
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(Byte[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Writes audio data to the Clipboard.
  remarks: "> [!IMPORTANT]\n>  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example creates the byte array `musicReader`, reads the file `cool.wav` into it, and then writes it to the Clipboard.  \n  \n [!CODE [VbRefClipbd#2](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#2)]  \n  \n Replace `cool.wav` with the name and path of the file you wish to read."
  syntax:
    content: public void SetAudio (byte[] audioBytes);
    parameters:
    - id: audioBytes
      type: System.Byte[]
      description: '`Byte` array. Audio data to be written to the Clipboard. Required.'
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)
  id: SetAudio(System.IO.Stream)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetAudio(Stream)
  nameWithType: ClipboardProxy.SetAudio(Stream)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(Stream)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Writes audio data to the Clipboard.
  remarks: "> [!IMPORTANT]\n>  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example creates the byte array `musicReader`, reads the file `cool.wav` into it, and then writes it to the Clipboard.  \n  \n [!CODE [VbRefClipbd#2](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#2)]  \n  \n Replace `cool.wav` with the name and path of the file you wish to read."
  syntax:
    content: public void SetAudio (System.IO.Stream audioStream);
    parameters:
    - id: audioStream
      type: System.IO.Stream
      description: <see cref="T:System.IO.Stream"> Audio data to be written to the clipboard. Required.
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: ClipboardProxy.SetData(String,Object)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(String,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Writes data in a custom format to the Clipboard.
  remarks: "> [!IMPORTANT]\n>  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example writes the `DataObject``dataChunk` to the Clipboard in the custom format `specialFormat`.  \n  \n [!CODE [VbVbcnMyClipboard#7](../CodeSnippet/VS_Snippets_VBCSharp/VbVbcnMyClipboard#7)]  \n  \n This example depends on the existence of the custom data format `specialFormat`."
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: '`String`. Format of data. Required.'
    - id: data
      type: System.Object
      description: '`Object`. Data object to be written to the Clipboard. Required.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)
  id: SetDataObject(System.Windows.Forms.DataObject)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetDataObject(DataObject)
  nameWithType: ClipboardProxy.SetDataObject(DataObject)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(DataObject)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Writes a <xref:System.Windows.Forms.DataObject> to the Clipboard.
  remarks: "This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.  \n  \n> [!IMPORTANT]\n>  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example writes the data object `dataChunk` to the Clipboard.  \n  \n [!CODE [VbVbcnMyClipboard#9](../CodeSnippet/VS_Snippets_VBCSharp/VbVbcnMyClipboard#9)]  \n  \n This example depends on the existence of the data object `dataChunk`."
  syntax:
    content: public void SetDataObject (System.Windows.Forms.DataObject data);
    parameters:
    - id: data
      type: System.Windows.Forms.DataObject
      description: <xref:System.Windows.Forms.DataObject>. Data object to be written to the Clipboard. Required.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)
  id: SetFileDropList(System.Collections.Specialized.StringCollection)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetFileDropList(StringCollection)
  nameWithType: ClipboardProxy.SetFileDropList(StringCollection)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(StringCollection)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Writes a collection of strings representing file paths to the Clipboard.
  remarks: "A file drop list is a collection of strings representing file names.  \n  \n> [!IMPORTANT]\n>  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example gets the collection of file names from **MyDocuments**, converts it to a file drop list, and writes it to the Clipboard.  \n  \n [!CODE [VbRefClipbd#3](../CodeSnippet/VS_Snippets_VBCSharp/VbRefClipbd#3)]"
  syntax:
    content: public void SetFileDropList (System.Collections.Specialized.StringCollection filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Specialized.StringCollection
      description: <xref:System.Collections.Specialized.StringCollection>. List of file names. Required.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)
  id: SetImage(System.Drawing.Image)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetImage(Image)
  nameWithType: ClipboardProxy.SetImage(Image)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(Image)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Writes an image to the Clipboard.
  remarks: "> [!IMPORTANT]\n>  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example writes the image `coolPicture` to the Clipboard.  \n  \n [!CODE [VbVbcnMyClipboard#8](../CodeSnippet/VS_Snippets_VBCSharp/VbVbcnMyClipboard#8)]  \n  \n This example depends on the existence of the image `coolPicture`."
  syntax:
    content: public void SetImage (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: <xref:System.Drawing.Image>. Image to be written. Required.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)
  id: SetText(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetText(String)
  nameWithType: ClipboardProxy.SetText(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Writes text to the Clipboard.
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.  \n  \n Previous Clipboard formats are not preserved.  \n  \n> [!IMPORTANT]\n>  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example writes the string `This is a test string.` to the Clipboard.  \n  \n [!CODE [VbVbcnMyClipboard#1](../CodeSnippet/VS_Snippets_VBCSharp/VbVbcnMyClipboard#1)]"
  syntax:
    content: public void SetText (string text);
    parameters:
    - id: text
      type: System.String
      description: '`String`. Text to be written. Required.'
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)
  id: SetText(System.String,System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  langs:
  - csharp
  name: SetText(String,TextDataFormat)
  nameWithType: ClipboardProxy.SetText(String,TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(String,TextDataFormat)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: Writes text to the Clipboard.
  remarks: "Possible formats are <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat>, <xref:System.Windows.Forms.TextDataFormat> and <xref:System.Windows.Forms.TextDataFormat>.  \n  \n Previous Clipboard formats are not preserved.  \n  \n> [!IMPORTANT]\n>  Because the Clipboard can be accessed by other users, do not use it to store sensitive information, such as passwords or confidential data.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|------------------|---------------|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|"
  example:
  - "This example writes the string `This is a test string.` to the Clipboard.  \n  \n [!CODE [VbVbcnMyClipboard#1](../CodeSnippet/VS_Snippets_VBCSharp/VbVbcnMyClipboard#1)]"
  syntax:
    content: public void SetText (string text, System.Windows.Forms.TextDataFormat format);
    parameters:
    - id: text
      type: System.String
      description: '`String`. Text to be written. Required.'
    - id: format
      type: System.Windows.Forms.TextDataFormat
      description: <xref:System.Windows.Forms.TextDataFormat>. Format to be used when writing text. Default is <xref:System.Windows.Forms.TextDataFormat>. Required.
  overload: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText*
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: Clear()
  nameWithType: ClipboardProxy.Clear()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.Clear()
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsAudio()
  nameWithType: ClipboardProxy.ContainsAudio()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsAudio()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsData(String)
  nameWithType: ClipboardProxy.ContainsData(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsData(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsFileDropList()
  nameWithType: ClipboardProxy.ContainsFileDropList()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsFileDropList()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsImage()
  nameWithType: ClipboardProxy.ContainsImage()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsImage()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsText()
  nameWithType: ClipboardProxy.ContainsText()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: ContainsText(TextDataFormat)
  nameWithType: ClipboardProxy.ContainsText(TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText(TextDataFormat)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.TextDataFormat
  parent: System.Windows.Forms
  isExternal: true
  name: TextDataFormat
  nameWithType: TextDataFormat
  fullName: System.Windows.Forms.TextDataFormat
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetAudioStream()
  nameWithType: ClipboardProxy.GetAudioStream()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetAudioStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetData(String)
  nameWithType: ClipboardProxy.GetData(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetData(String)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetDataObject()
  nameWithType: ClipboardProxy.GetDataObject()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetDataObject()
- uid: System.Windows.Forms.IDataObject
  parent: System.Windows.Forms
  isExternal: true
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetFileDropList()
  nameWithType: ClipboardProxy.GetFileDropList()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetFileDropList()
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: true
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetImage()
  nameWithType: ClipboardProxy.GetImage()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetImage()
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetText()
  nameWithType: ClipboardProxy.GetText()
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: GetText(TextDataFormat)
  nameWithType: ClipboardProxy.GetText(TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText(TextDataFormat)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TextDataFormat
  parent: System.Windows.Forms
  isExternal: true
  name: TextDataFormat
  nameWithType: TextDataFormat
  fullName: System.Windows.Forms.TextDataFormat
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.Byte[])
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetAudio(Byte[])
  nameWithType: ClipboardProxy.SetAudio(Byte[])
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(Byte[])
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(System.IO.Stream)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetAudio(Stream)
  nameWithType: ClipboardProxy.SetAudio(Stream)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(System.String,System.Object)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetData(String,Object)
  nameWithType: ClipboardProxy.SetData(String,Object)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetData(String,Object)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(System.Windows.Forms.DataObject)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetDataObject(DataObject)
  nameWithType: ClipboardProxy.SetDataObject(DataObject)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetDataObject(DataObject)
- uid: System.Windows.Forms.DataObject
  parent: System.Windows.Forms
  isExternal: true
  name: DataObject
  nameWithType: DataObject
  fullName: System.Windows.Forms.DataObject
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(System.Collections.Specialized.StringCollection)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetFileDropList(StringCollection)
  nameWithType: ClipboardProxy.SetFileDropList(StringCollection)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetFileDropList(StringCollection)
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: true
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(System.Drawing.Image)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetImage(Image)
  nameWithType: ClipboardProxy.SetImage(Image)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetImage(Image)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetText(String)
  nameWithType: ClipboardProxy.SetText(String)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(System.String,System.Windows.Forms.TextDataFormat)
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  name: SetText(String,TextDataFormat)
  nameWithType: ClipboardProxy.SetText(String,TextDataFormat)
  fullName: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText(String,TextDataFormat)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TextDataFormat
  parent: System.Windows.Forms
  isExternal: true
  name: TextDataFormat
  nameWithType: TextDataFormat
  fullName: System.Windows.Forms.TextDataFormat
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.ContainsText*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  nameWithType: ClipboardProxy.
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.GetText*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  nameWithType: ClipboardProxy.
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetAudio*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  nameWithType: ClipboardProxy.
- uid: Microsoft.VisualBasic.MyServices.ClipboardProxy.SetText*
  parent: Microsoft.VisualBasic.MyServices.ClipboardProxy
  isExternal: false
  nameWithType: ClipboardProxy.
