### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute
  id: InheritanceMappingAttribute
  children:
  - System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor
  - System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
  - System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
  - System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
  langs:
  - csharp
  name: InheritanceMappingAttribute
  nameWithType: InheritanceMappingAttribute
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute
  type: Class
  summary: Maps an inheritance hierarchy in a [!INCLUDE[vbtecdlinq](../../add/includes/vbtecdlinq-md.md)] application.
  remarks: "One InheritanceMappingAttribute is specified per mapped class.  \n  \n Note the following when you map inheritance hierarchies:  \n  \n-   All classes in a hierarchy must be mapped to a single table.  \n  \n-   The table for an inheritance hierarchy must be declared on the mapped type that is at the top of the hierarchy. You cannot specify the table or mapping attributes in a class that is derived from the top class.  \n  \n-   You can use an interface in a hierarchy, but [!INCLUDE[vbteclinq](../../add/includes/vbteclinq-md.md)] does not map it.  \n  \n-   You can skip a class in the hierarchy when you map classes, but you can query against mapped classes only.  \n  \n For correct materialization, discriminator code values must be unique and match the values in the database. A row with a discriminator code value that does not exactly match (even by casing) instantiates the class by using <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault%2A> set to `true`."
  example:
  - "This example shows inheritance mapping for a hierarchy where the top, mapped class (`Shape`) is abstract.  \n  \n [!code-cs[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](../../add/codesnippet/CSharp/inherit/Program.cs#1)]\n [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#1](../../add/codesnippet/VisualBasic/inherit/Module1.vb#1)]  \n  \n The following example shows the inclusion of unmapped classes. You can put unmapped classes anywhere in the hierarchy.  \n  \n [!code-cs[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](../../add/codesnippet/CSharp/inherit/Program.cs#2)]\n [!code-vb[System.Data.Linq.Mapping.InheritanceMappingAttribute#2](../../add/codesnippet/VisualBasic/inherit/Module1.vb#2)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true, Inherited=false)]

      public sealed class InheritanceMappingAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  langs:
  - csharp
  name: InheritanceMappingAttribute()
  nameWithType: InheritanceMappingAttribute.InheritanceMappingAttribute()
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.InheritanceMappingAttribute()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.InheritanceMappingAttribute"> class.
  remarks: To be added.
  syntax:
    content: public InheritanceMappingAttribute ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
  id: Code
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  langs:
  - csharp
  name: Code
  nameWithType: InheritanceMappingAttribute.Code
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: Gets or sets the discriminator code value in a mapped inheritance hierarchy.
  remarks: To be added.
  syntax:
    content: public object Code { get; set; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
  id: IsDefault
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  langs:
  - csharp
  name: IsDefault
  nameWithType: InheritanceMappingAttribute.IsDefault
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: Gets or sets whether an object of this type in instantiated when the discriminator value does not match a specified value.
  remarks: Exactly one of the <xref:System.Data.Linq.Mapping.InheritanceMappingAttribute> attributes must be declared with IsDefault as `true`.
  syntax:
    content: public bool IsDefault { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
  id: Type
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  langs:
  - csharp
  name: Type
  nameWithType: InheritanceMappingAttribute.Type
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: Gets or sets the type of the class in the hierarchy.
  remarks: Use any non-abstract type in the inheritance hierarchy, including the root type.
  syntax:
    content: public Type Type { get; set; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.#ctor
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: InheritanceMappingAttribute()
  nameWithType: InheritanceMappingAttribute.InheritanceMappingAttribute()
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.InheritanceMappingAttribute()
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: Code
  nameWithType: InheritanceMappingAttribute.Code
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Code
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: IsDefault
  nameWithType: InheritanceMappingAttribute.IsDefault
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.IsDefault
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
  parent: System.Data.Linq.Mapping.InheritanceMappingAttribute
  isExternal: false
  name: Type
  nameWithType: InheritanceMappingAttribute.Type
  fullName: System.Data.Linq.Mapping.InheritanceMappingAttribute.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
