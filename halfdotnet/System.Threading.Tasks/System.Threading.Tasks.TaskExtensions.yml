### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.TaskExtensions
  id: TaskExtensions
  children:
  - System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task}@)
  - System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}}@)
  langs:
  - csharp
  - vb
  name: TaskExtensions
  nameWithType: TaskExtensions
  fullName: System.Threading.Tasks.TaskExtensions
  type: Class
  syntax:
    content: public static class TaskExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task}@)
  id: Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task}@)
  parent: System.Threading.Tasks.TaskExtensions
  langs:
  - csharp
  - vb
  name: Unwrap
  nameWithType: TaskExtensions.Unwrap
  fullName: System.Threading.Tasks.TaskExtensions.Unwrap
  type: Method
  assemblies:
  - System.Core
  namespace: System.Threading.Tasks
  syntax:
    content: public static System.Threading.Tasks.Task Unwrap (this System.Threading.Tasks.Task<System.Threading.Tasks.Task> task);
    parameters:
    - id: task
      type: System.Threading.Tasks.Task{System.Threading.Tasks.Task}
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
- uid: System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}}@)
  id: Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}}@)
  parent: System.Threading.Tasks.TaskExtensions
  langs:
  - csharp
  - vb
  name: Unwrap<TResult>
  nameWithType: TaskExtensions.Unwrap<TResult>
  fullName: System.Threading.Tasks.TaskExtensions.Unwrap<TResult>
  type: Method
  assemblies:
  - System.Core
  namespace: System.Threading.Tasks
  syntax:
    content: public static System.Threading.Tasks.Task<TResult> Unwrap<TResult> (this System.Threading.Tasks.Task<System.Threading.Tasks.Task<TResult>> task);
    parameters:
    - id: task
      type: System.Threading.Tasks.Task{System.Threading.Tasks.Task{TResult}}
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TResult}
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task}@)
  parent: System.Threading.Tasks.TaskExtensions
  isExternal: false
  name: Unwrap
  nameWithType: TaskExtensions.Unwrap
  fullName: System.Threading.Tasks.TaskExtensions.Unwrap
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}}@)
  parent: System.Threading.Tasks.TaskExtensions
  isExternal: false
  name: Unwrap<TResult>
  nameWithType: TaskExtensions.Unwrap<TResult>
  fullName: System.Threading.Tasks.TaskExtensions.Unwrap<TResult>
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
