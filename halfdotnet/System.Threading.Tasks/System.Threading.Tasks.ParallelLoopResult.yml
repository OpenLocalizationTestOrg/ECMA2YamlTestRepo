### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.ParallelLoopResult
  id: ParallelLoopResult
  children:
  - System.Threading.Tasks.ParallelLoopResult.IsCompleted
  - System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration
  langs:
  - csharp
  name: ParallelLoopResult
  nameWithType: ParallelLoopResult
  fullName: System.Threading.Tasks.ParallelLoopResult
  type: Struct
  summary: Provides completion status on the execution of a <see cref="T:System.Threading.Tasks.Parallel"> loop.
  remarks: If <xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A> returns true, then the loop ran to completion, such that all iterations of the loop were executed. If <xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A> returns false and <xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A> returns null, a call to <xref:System.Threading.Tasks.ParallelLoopState.Stop%2A> was used to end the loop prematurely. If <xref:System.Threading.Tasks.ParallelLoopResult.IsCompleted%2A> returns false and <xref:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration%2A> returns a non-null integral value, <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> was used to end the loop prematurely.
  syntax:
    content: public struct ParallelLoopResult
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ParallelLoopResult.IsCompleted
  id: IsCompleted
  parent: System.Threading.Tasks.ParallelLoopResult
  langs:
  - csharp
  name: IsCompleted
  nameWithType: ParallelLoopResult.IsCompleted
  fullName: System.Threading.Tasks.ParallelLoopResult.IsCompleted
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Gets whether the loop ran to completion, such that all iterations of the loop were executed and the loop didn't receive a request to end prematurely.
  remarks: To be added.
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration
  id: LowestBreakIteration
  parent: System.Threading.Tasks.ParallelLoopResult
  langs:
  - csharp
  name: LowestBreakIteration
  nameWithType: ParallelLoopResult.LowestBreakIteration
  fullName: System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Gets the index of the lowest iteration from which <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> was called.
  remarks: If <xref:System.Threading.Tasks.ParallelLoopState.Break%2A> was not employed, this property will return null.
  syntax:
    content: public Nullable<long> LowestBreakIteration { get; }
    return:
      type: System.Nullable{System.Int64}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Threading.Tasks.ParallelLoopResult.IsCompleted
  parent: System.Threading.Tasks.ParallelLoopResult
  isExternal: false
  name: IsCompleted
  nameWithType: ParallelLoopResult.IsCompleted
  fullName: System.Threading.Tasks.ParallelLoopResult.IsCompleted
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration
  parent: System.Threading.Tasks.ParallelLoopResult
  isExternal: false
  name: LowestBreakIteration
  nameWithType: ParallelLoopResult.LowestBreakIteration
  fullName: System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration
- uid: System.Nullable{System.Int64}
  parent: System
  isExternal: false
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
