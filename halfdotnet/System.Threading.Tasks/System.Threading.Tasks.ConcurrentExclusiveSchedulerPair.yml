### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  id: ConcurrentExclusiveSchedulerPair
  children:
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  - System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair
  nameWithType: ConcurrentExclusiveSchedulerPair
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  type: Class
  summary: Provides task schedulers that coordinate to execute tasks while ensuring that concurrent tasks may run concurrently and exclusive tasks never do.
  remarks: ''
  example:
  - "The following example shows the use of the ConcurrentExclusiveSchedulerPair class. Readers run on the concurrent part of the scheduler. The writer runs on the exclusive part of the scheduler. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](../Topic/How%20to:%20Specify%20a%20Task%20Scheduler%20in%20a%20Dataflow%20Block.md) topic.  \n  \n [!code-cs[TPLDataflow_WriterReadersWinForms#4](../../add/codesnippet/CSharp/writerreaderswinforms/form1.cs#4)]\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](../../add/codesnippet/VisualBasic/writerreaderswinforms/form1.vb#4)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Concurrent={ConcurrentTaskCountForDebugger}, Exclusive={ExclusiveTaskCountForDebugger}, Mode={ModeForDebugger}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.ConcurrentExclusiveSchedulerPair/DebugView))]

      public class ConcurrentExclusiveSchedulerPair
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  id: '#ctor'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair()
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair"> class.
  remarks: ''
  example:
  - "The following example shows the use of the ConcurrentExclusiveSchedulerPair constructor to create a new <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair> object. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](../Topic/How%20to:%20Specify%20a%20Task%20Scheduler%20in%20a%20Dataflow%20Block.md) topic.  \n  \n [!code-cs[TPLDataflow_WriterReadersWinForms#4](../../add/codesnippet/CSharp/writerreaderswinforms/form1.cs#4)]\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](../../add/codesnippet/VisualBasic/writerreaderswinforms/form1.vb#4)]"
  syntax:
    content: public ConcurrentExclusiveSchedulerPair ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  id: '#ctor(System.Threading.Tasks.TaskScheduler)'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair"> class that targets the specified scheduler.
  remarks: To be added.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler);
    parameters:
    - id: taskScheduler
      type: System.Threading.Tasks.TaskScheduler
      description: The target scheduler on which this pair should execute.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  id: '#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair"> class that targets the specified scheduler with a maximum concurrency level.
  remarks: To be added.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel);
    parameters:
    - id: taskScheduler
      type: System.Threading.Tasks.TaskScheduler
      description: The target scheduler on which this pair should execute.
    - id: maxConcurrencyLevel
      type: System.Int32
      description: The maximum number of tasks to run concurrently.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  id: '#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)'
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Initializes a new instance of the <see cref="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair"> class that targets the specified scheduler with a maximum concurrency level and a maximum number of scheduled tasks that may be processed as a unit.
  remarks: To be added.
  syntax:
    content: public ConcurrentExclusiveSchedulerPair (System.Threading.Tasks.TaskScheduler taskScheduler, int maxConcurrencyLevel, int maxItemsPerTask);
    parameters:
    - id: taskScheduler
      type: System.Threading.Tasks.TaskScheduler
      description: The target scheduler on which this pair should execute.
    - id: maxConcurrencyLevel
      type: System.Int32
      description: The maximum number of tasks to run concurrently.
    - id: maxItemsPerTask
      type: System.Int32
      description: The maximum number of tasks to process for each underlying scheduled task used by the pair.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  id: Complete
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: Complete()
  nameWithType: ConcurrentExclusiveSchedulerPair.Complete()
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Informs the scheduler pair that it should not accept any more tasks.
  remarks: Calling Complete is optional. It is necessary only if you're relying on the <xref:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion%2A> property for notification that all processing has been completed.
  syntax:
    content: public void Complete ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  id: Completion
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: Completion
  nameWithType: ConcurrentExclusiveSchedulerPair.Completion
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Gets a <see cref="T:System.Threading.Tasks.Task"> that will complete when the scheduler has completed processing.
  remarks: To be added.
  syntax:
    content: public System.Threading.Tasks.Task Completion { get; }
    return:
      type: System.Threading.Tasks.Task
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  id: ConcurrentScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ConcurrentScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Gets a <see cref="T:System.Threading.Tasks.TaskScheduler"> that can be used to schedule tasks to this pair that may run concurrently with other tasks on this pair.
  remarks: ''
  example:
  - "The following example shows the use of the ConcurrentScheduler property to run a reader. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](../Topic/How%20to:%20Specify%20a%20Task%20Scheduler%20in%20a%20Dataflow%20Block.md) topic.  \n  \n [!code-cs[TPLDataflow_WriterReadersWinForms#4](../../add/codesnippet/CSharp/writerreaderswinforms/form1.cs#4)]\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](../../add/codesnippet/VisualBasic/writerreaderswinforms/form1.vb#4)]"
  syntax:
    content: public System.Threading.Tasks.TaskScheduler ConcurrentScheduler { get; }
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  id: ExclusiveScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  langs:
  - csharp
  name: ExclusiveScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  summary: Gets a <see cref="T:System.Threading.Tasks.TaskScheduler"> that can be used to schedule tasks to this pair that must run exclusively with regards to other tasks on this pair.
  remarks: ''
  example:
  - "The following example shows the use of the ExclusiveScheduler property to run a writer. This code example is part of a larger example provided for the [How to: Specify a Task Scheduler in a Dataflow Block](../Topic/How%20to:%20Specify%20a%20Task%20Scheduler%20in%20a%20Dataflow%20Block.md) topic.  \n  \n [!code-cs[TPLDataflow_WriterReadersWinForms#4](../../add/codesnippet/CSharp/writerreaderswinforms/form1.cs#4)]\n [!code-vb[TPLDataflow_WriterReadersWinForms#4](../../add/codesnippet/VisualBasic/writerreaderswinforms/form1.vb#4)]"
  syntax:
    content: public System.Threading.Tasks.TaskScheduler ExclusiveScheduler { get; }
    return:
      type: System.Threading.Tasks.TaskScheduler
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair()
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair()
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler)
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32)
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentExclusiveSchedulerPair(TaskScheduler,Int32,Int32)
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Complete()
  nameWithType: ConcurrentExclusiveSchedulerPair.Complete()
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete()
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: Completion
  nameWithType: ConcurrentExclusiveSchedulerPair.Completion
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ConcurrentScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  parent: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
  isExternal: false
  name: ExclusiveScheduler
  nameWithType: ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
  fullName: System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
