### YamlMime:ManagedReference
items:
- uid: System.Threading.Tasks.Task`1
  id: Task`1
  children:
  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0})
  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  - System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task`1.Factory
  - System.Threading.Tasks.Task`1.GetAwaiter
  - System.Threading.Tasks.Task`1.Result
  langs:
  - csharp
  - vb
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  type: Class
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Id = {Id}, Status = {Status}, Method = {DebuggerDisplayMethodDescription}, Result = {DebuggerDisplayResultDescription}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1))]

      public class Task<TResult> : System.Threading.Tasks.Task
    typeParameters:
    - id: TResult
      description: Parameter description to be filled
  inheritance:
  - System.Object
  - System.Threading.Tasks.Task
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Threading.Tasks.Task.AsyncState
  - System.Threading.Tasks.Task.CompletedTask
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.CreationOptions
  - System.Threading.Tasks.Task.CurrentId
  - System.Threading.Tasks.Task.Delay(System.Int32)
  - System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Delay(System.TimeSpan)
  - System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Dispose
  - System.Threading.Tasks.Task.Dispose(System.Boolean)
  - System.Threading.Tasks.Task.Exception
  - System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.FromException(System.Exception)
  - System.Threading.Tasks.Task.FromException``1(System.Exception)
  - System.Threading.Tasks.Task.FromResult``1(``0)
  - System.Threading.Tasks.Task.Id
  - System.Threading.Tasks.Task.IsCanceled
  - System.Threading.Tasks.Task.IsCompleted
  - System.Threading.Tasks.Task.IsFaulted
  - System.Threading.Tasks.Task.Run(System.Action)
  - System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})
  - System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Run``1(System.Func{``0})
  - System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})
  - System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.RunSynchronously
  - System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.Start
  - System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)
  - System.Threading.Tasks.Task.Status
  - System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle
  - System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously
  - System.Threading.Tasks.Task.Wait
  - System.Threading.Tasks.Task.Wait(System.Int32)
  - System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.Wait(System.TimeSpan)
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)
  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)
  - System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
  - System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])
  - System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})
  - System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])
  - System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})
  - System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])
  - System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})
  - System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])
  - System.Threading.Tasks.Task.Yield
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0})
  id: '#ctor(System.Func{`0})'
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Task(Func)
  nameWithType: Task<TResult>.Task(Func)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public Task (Func<TResult> function);
    parameters:
    - id: function
      type: System.Func{TResult}
      description: Parameter description to be filled
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)
  id: '#ctor(System.Func{System.Object,`0},System.Object)'
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Task(Func,Object)
  nameWithType: Task<TResult>.Task(Func,Object)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public Task (Func<object,TResult> function, object state);
    parameters:
    - id: function
      type: System.Func{System.Object,TResult}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)
  id: '#ctor(System.Func{`0},System.Threading.CancellationToken)'
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Task(Func,CancellationToken)
  nameWithType: Task<TResult>.Task(Func,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,CancellationToken)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public Task (Func<TResult> function, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: function
      type: System.Func{TResult}
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Task(Func,TaskCreationOptions)
  nameWithType: Task<TResult>.Task(Func,TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,TaskCreationOptions)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public Task (Func<TResult> function, System.Threading.Tasks.TaskCreationOptions creationOptions);
    parameters:
    - id: function
      type: System.Func{TResult}
      description: Parameter description to be filled
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
      description: Parameter description to be filled
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)
  id: '#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)'
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Task(Func,Object,CancellationToken)
  nameWithType: Task<TResult>.Task(Func,Object,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,Object,CancellationToken)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public Task (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: function
      type: System.Func{System.Object,TResult}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Task(Func,Object,TaskCreationOptions)
  nameWithType: Task<TResult>.Task(Func,Object,TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,Object,TaskCreationOptions)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public Task (Func<object,TResult> function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);
    parameters:
    - id: function
      type: System.Func{System.Object,TResult}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
      description: Parameter description to be filled
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Task(Func,CancellationToken,TaskCreationOptions)
  nameWithType: Task<TResult>.Task(Func,CancellationToken,TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,CancellationToken,TaskCreationOptions)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public Task (Func<TResult> function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);
    parameters:
    - id: function
      type: System.Func{TResult}
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
      description: Parameter description to be filled
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  id: '#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)'
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Task(Func,Object,CancellationToken,TaskCreationOptions)
  nameWithType: Task<TResult>.Task(Func,Object,CancellationToken,TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,Object,CancellationToken,TaskCreationOptions)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public Task (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);
    parameters:
    - id: function
      type: System.Func{System.Object,TResult}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    - id: creationOptions
      type: System.Threading.Tasks.TaskCreationOptions
      description: Parameter description to be filled
- uid: System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)
  id: ConfigureAwait(System.Boolean)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ConfigureAwait(Boolean)
  nameWithType: Task<TResult>.ConfigureAwait(Boolean)
  fullName: System.Threading.Tasks.Task<TResult>.ConfigureAwait(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult> ConfigureAwait (bool continueOnCapturedContext);
    parameters:
    - id: continueOnCapturedContext
      type: System.Boolean
      description: Parameter description to be filled
    return:
      type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable{TResult}
      description: Return description to be filled
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action)
  nameWithType: Task<TResult>.ContinueWith(Action)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult}}
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action,Object)
  nameWithType: Task<TResult>.ContinueWith(Action,Object)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action,CancellationToken)
  nameWithType: Task<TResult>.ContinueWith(Action,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult}}
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action,TaskContinuationOptions)
  nameWithType: Task<TResult>.ContinueWith(Action,TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,TaskContinuationOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult}}
      description: Parameter description to be filled
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Action,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,TaskScheduler)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.Tasks.TaskScheduler scheduler);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult}}
      description: Parameter description to be filled
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action,Object,CancellationToken)
  nameWithType: Task<TResult>.ContinueWith(Action,Object,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action,Object,TaskContinuationOptions)
  nameWithType: Task<TResult>.ContinueWith(Action,Object,TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object,TaskContinuationOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action,Object,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Action,Object,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object,TaskScheduler)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.Tasks.TaskScheduler scheduler);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action,CancellationToken,TaskContinuationOptions,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Action,CancellationToken,TaskContinuationOptions,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,CancellationToken,TaskContinuationOptions,TaskScheduler)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>> continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult}}
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
      description: Parameter description to be filled
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Action,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Action,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task<TResult>,object> continuationAction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);
    parameters:
    - id: continuationAction
      type: System.Action{System.Threading.Tasks.Task{TResult},System.Object}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
      description: Parameter description to be filled
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func)
  nameWithType: Task<TResult>.ContinueWith(Func)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func,Object)
  nameWithType: Task<TResult>.ContinueWith(Func,Object)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func,CancellationToken)
  nameWithType: Task<TResult>.ContinueWith(Func,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func,TaskContinuationOptions)
  nameWithType: Task<TResult>.ContinueWith(Func,TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,TaskContinuationOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}
      description: Parameter description to be filled
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Func,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,TaskScheduler)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.Tasks.TaskScheduler scheduler);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}
      description: Parameter description to be filled
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func,Object,CancellationToken)
  nameWithType: Task<TResult>.ContinueWith(Func,Object,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object,CancellationToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func,Object,TaskContinuationOptions)
  nameWithType: Task<TResult>.ContinueWith(Func,Object,TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object,TaskContinuationOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func,Object,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Func,Object,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object,TaskScheduler)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.Tasks.TaskScheduler scheduler);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func,CancellationToken,TaskContinuationOptions,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Func,CancellationToken,TaskContinuationOptions,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,CancellationToken,TaskContinuationOptions,TaskScheduler)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,TNewResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},TNewResult}
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
      description: Parameter description to be filled
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: ContinueWith(Func,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Func,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Threading.Tasks.Task<TNewResult> ContinueWith<TNewResult> (Func<System.Threading.Tasks.Task<TResult>,object,TNewResult> continuationFunction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);
    parameters:
    - id: continuationFunction
      type: System.Func{System.Threading.Tasks.Task{TResult},System.Object,TNewResult}
      description: Parameter description to be filled
    - id: state
      type: System.Object
      description: Parameter description to be filled
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Parameter description to be filled
    - id: continuationOptions
      type: System.Threading.Tasks.TaskContinuationOptions
      description: Parameter description to be filled
    - id: scheduler
      type: System.Threading.Tasks.TaskScheduler
      description: Parameter description to be filled
    return:
      type: System.Threading.Tasks.Task{TNewResult}
      description: Return description to be filled
  overload: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
- uid: System.Threading.Tasks.Task`1.Factory
  id: Factory
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Factory
  nameWithType: Task<TResult>.Factory
  fullName: System.Threading.Tasks.Task<TResult>.Factory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public static System.Threading.Tasks.TaskFactory<TResult> Factory { get; }
    return:
      type: System.Threading.Tasks.TaskFactory{TResult}
      description: Return description to be filled
- uid: System.Threading.Tasks.Task`1.GetAwaiter
  id: GetAwaiter
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: GetAwaiter()
  nameWithType: Task<TResult>.GetAwaiter()
  fullName: System.Threading.Tasks.Task<TResult>.GetAwaiter()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public System.Runtime.CompilerServices.TaskAwaiter<TResult> GetAwaiter ();
    parameters: []
    return:
      type: System.Runtime.CompilerServices.TaskAwaiter{TResult}
      description: Return description to be filled
- uid: System.Threading.Tasks.Task`1.Result
  id: Result
  parent: System.Threading.Tasks.Task`1
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: Task<TResult>.Result
  fullName: System.Threading.Tasks.Task<TResult>.Result
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading.Tasks
  syntax:
    content: public TResult Result { get; }
    return:
      type: TResult
      description: Return description to be filled
references:
- uid: System.Threading.Tasks.Task
  isExternal: false
  name: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0})
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task(Func)
  nameWithType: Task<TResult>.Task(Func)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func)
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task(Func,Object)
  nameWithType: Task<TResult>.Task(Func,Object)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task(Func,CancellationToken)
  nameWithType: Task<TResult>.Task(Func,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task(Func,TaskCreationOptions)
  nameWithType: Task<TResult>.Task(Func,TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,TaskCreationOptions)
- uid: System.Threading.Tasks.TaskCreationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskCreationOptions
  nameWithType: TaskCreationOptions
  fullName: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task(Func,Object,CancellationToken)
  nameWithType: Task<TResult>.Task(Func,Object,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,Object,CancellationToken)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task(Func,Object,TaskCreationOptions)
  nameWithType: Task<TResult>.Task(Func,Object,TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,Object,TaskCreationOptions)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.TaskCreationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskCreationOptions
  nameWithType: TaskCreationOptions
  fullName: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task(Func,CancellationToken,TaskCreationOptions)
  nameWithType: Task<TResult>.Task(Func,CancellationToken,TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,CancellationToken,TaskCreationOptions)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.TaskCreationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskCreationOptions
  nameWithType: TaskCreationOptions
  fullName: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Task(Func,Object,CancellationToken,TaskCreationOptions)
  nameWithType: Task<TResult>.Task(Func,Object,CancellationToken,TaskCreationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.Task(Func,Object,CancellationToken,TaskCreationOptions)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.TaskCreationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskCreationOptions
  nameWithType: TaskCreationOptions
  fullName: System.Threading.Tasks.TaskCreationOptions
- uid: System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ConfigureAwait(Boolean)
  nameWithType: Task<TResult>.ConfigureAwait(Boolean)
  fullName: System.Threading.Tasks.Task<TResult>.ConfigureAwait(Boolean)
- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: ConfiguredTaskAwaitable<TResult>
  nameWithType: ConfiguredTaskAwaitable<TResult>
  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable<TResult>
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action)
  nameWithType: Task<TResult>.ContinueWith(Action)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action,Object)
  nameWithType: Task<TResult>.ContinueWith(Action,Object)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action,CancellationToken)
  nameWithType: Task<TResult>.ContinueWith(Action,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action,TaskContinuationOptions)
  nameWithType: Task<TResult>.ContinueWith(Action,TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,TaskContinuationOptions)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.TaskContinuationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskContinuationOptions
  nameWithType: TaskContinuationOptions
  fullName: System.Threading.Tasks.TaskContinuationOptions
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Action,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,TaskScheduler)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action,Object,CancellationToken)
  nameWithType: Task<TResult>.ContinueWith(Action,Object,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object,CancellationToken)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action,Object,TaskContinuationOptions)
  nameWithType: Task<TResult>.ContinueWith(Action,Object,TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object,TaskContinuationOptions)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.TaskContinuationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskContinuationOptions
  nameWithType: TaskContinuationOptions
  fullName: System.Threading.Tasks.TaskContinuationOptions
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action,Object,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Action,Object,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object,TaskScheduler)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action,CancellationToken,TaskContinuationOptions,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Action,CancellationToken,TaskContinuationOptions,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,CancellationToken,TaskContinuationOptions,TaskScheduler)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.TaskContinuationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskContinuationOptions
  nameWithType: TaskContinuationOptions
  fullName: System.Threading.Tasks.TaskContinuationOptions
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Action,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Action,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Action,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.TaskContinuationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskContinuationOptions
  nameWithType: TaskContinuationOptions
  fullName: System.Threading.Tasks.TaskContinuationOptions
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func)
  nameWithType: Task<TResult>.ContinueWith(Func)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func)
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func,Object)
  nameWithType: Task<TResult>.ContinueWith(Func,Object)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func,CancellationToken)
  nameWithType: Task<TResult>.ContinueWith(Func,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func,TaskContinuationOptions)
  nameWithType: Task<TResult>.ContinueWith(Func,TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,TaskContinuationOptions)
- uid: System.Threading.Tasks.TaskContinuationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskContinuationOptions
  nameWithType: TaskContinuationOptions
  fullName: System.Threading.Tasks.TaskContinuationOptions
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Func,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,TaskScheduler)
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func,Object,CancellationToken)
  nameWithType: Task<TResult>.ContinueWith(Func,Object,CancellationToken)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object,CancellationToken)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func,Object,TaskContinuationOptions)
  nameWithType: Task<TResult>.ContinueWith(Func,Object,TaskContinuationOptions)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object,TaskContinuationOptions)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.TaskContinuationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskContinuationOptions
  nameWithType: TaskContinuationOptions
  fullName: System.Threading.Tasks.TaskContinuationOptions
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func,Object,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Func,Object,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object,TaskScheduler)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func,CancellationToken,TaskContinuationOptions,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Func,CancellationToken,TaskContinuationOptions,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,CancellationToken,TaskContinuationOptions,TaskScheduler)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.TaskContinuationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskContinuationOptions
  nameWithType: TaskContinuationOptions
  fullName: System.Threading.Tasks.TaskContinuationOptions
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: ContinueWith(Func,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  nameWithType: Task<TResult>.ContinueWith(Func,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
  fullName: System.Threading.Tasks.Task<TResult>.ContinueWith(Func,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.TaskContinuationOptions
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskContinuationOptions
  nameWithType: TaskContinuationOptions
  fullName: System.Threading.Tasks.TaskContinuationOptions
- uid: System.Threading.Tasks.TaskScheduler
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskScheduler
  nameWithType: TaskScheduler
  fullName: System.Threading.Tasks.TaskScheduler
- uid: System.Threading.Tasks.Task`1.Factory
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Factory
  nameWithType: Task<TResult>.Factory
  fullName: System.Threading.Tasks.Task<TResult>.Factory
- uid: System.Threading.Tasks.TaskFactory`1
  parent: System.Threading.Tasks
  isExternal: false
  name: TaskFactory<TResult>
  nameWithType: TaskFactory<TResult>
  fullName: System.Threading.Tasks.TaskFactory<TResult>
- uid: System.Threading.Tasks.Task`1.GetAwaiter
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: GetAwaiter()
  nameWithType: Task<TResult>.GetAwaiter()
  fullName: System.Threading.Tasks.Task<TResult>.GetAwaiter()
- uid: System.Runtime.CompilerServices.TaskAwaiter`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: TaskAwaiter<TResult>
  nameWithType: TaskAwaiter<TResult>
  fullName: System.Runtime.CompilerServices.TaskAwaiter<TResult>
- uid: System.Threading.Tasks.Task`1.Result
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  name: Result
  nameWithType: Task<TResult>.Result
  fullName: System.Threading.Tasks.Task<TResult>.Result
- uid: System.Threading.Tasks.Task`1.ContinueWith*
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  nameWithType: Task<TResult>.
- uid: System.Threading.Tasks.Task`1.ContinueWith<TNewResult>*
  parent: System.Threading.Tasks.Task`1
  isExternal: false
  nameWithType: Task<TResult>.
