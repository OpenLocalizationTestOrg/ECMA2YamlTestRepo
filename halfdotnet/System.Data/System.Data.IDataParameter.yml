### YamlMime:ManagedReference
items:
- uid: System.Data.IDataParameter
  id: IDataParameter
  children:
  - System.Data.IDataParameter.DbType
  - System.Data.IDataParameter.Direction
  - System.Data.IDataParameter.IsNullable
  - System.Data.IDataParameter.ParameterName
  - System.Data.IDataParameter.SourceColumn
  - System.Data.IDataParameter.SourceVersion
  - System.Data.IDataParameter.Value
  langs:
  - csharp
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
  type: Interface
  summary: Represents a parameter to a Command object, and optionally, its mapping to <see cref="T:System.Data.DataSet"> columns; and is implemented by .NET Framework data providers that access data sources.
  remarks: "The IDataParameter interface allows an inheriting class to implement a Parameter class, which represents a parameter to a Command object. For more information about Parameter classes, see [Configuring Parameters and Parameter Data Types](../Topic/Configuring%20Parameters%20and%20Parameter%20Data%20Types.md).  \n  \n An application does not create an instance of the IDataParameter interface directly, but creates an instance of a class that inherits IDataParameter.  \n  \n Classes that inherit IDataParameter must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDataParameter interface defines the <xref:System.Data.IDataParameter.DbType%2A> property. In turn, the <xref:System.Data.OleDb.OleDbParameter> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> property."
  example:
  - "The following example creates multiple instances of the derived class, <xref:System.Data.SqlClient.SqlParameter>, through the <xref:System.Data.SqlClient.SqlParameterCollection> collection within the <xref:System.Data.SqlClient.SqlDataAdapter>. These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and a <xref:System.Data.SqlClient.SqlDataAdapter> have already been created with the appropriate schema, commands, and connection.  \n  \n [!CODE [Classic WebData SqlParameter Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData SqlParameter Example#1)]"
  syntax:
    content: public interface IDataParameter
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.IDataParameter.DbType
  id: DbType
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: DbType
  nameWithType: IDataParameter.DbType
  fullName: System.Data.IDataParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets the <see cref="T:System.Data.DbType"> of the parameter.
  remarks: "The PrvDbType (where Prv represents the provider-specific prefix) and <xref:System.Data.SqlClient.SqlParameter.DbType%2A> are linked. Therefore, setting the <xref:System.Data.SqlClient.SqlParameter.DbType%2A> changes the PrvDbType to a supporting PrvDbType.  \n  \n For a list of the supported data types, see the appropriate .NET Framework data provider PrvDbType member. For more information, see [DataAdapter Parameters](../Topic/DataAdapter%20Parameters.md)."
  syntax:
    content: public System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.IDataParameter.Direction
  id: Direction
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: Direction
  nameWithType: IDataParameter.Direction
  fullName: System.Data.IDataParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.
  remarks: "If the <xref:System.Data.ParameterDirection> is output, and execution of the associated <xref:System.Data.SqlClient.SqlCommand> does not return a value, the <xref:System.Data.IDataParameter> contains a null value.  \n  \n After the last row from the last resultset is read, `Output`, `InputOut`, and `ReturnValue` parameters are updated."
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!CODE [Classic WebData SqlParameter.Direction Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Direction Example#1)]"
  syntax:
    content: public System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.IDataParameter.IsNullable
  id: IsNullable
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: IDataParameter.IsNullable
  fullName: System.Data.IDataParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets a value indicating whether the parameter accepts null values.
  remarks: Null values are handled using the <xref:System.DBNull> class.
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!CODE [Classic WebData SqlParameter.IsNullable Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData SqlParameter.IsNullable Example#1)]"
  syntax:
    content: public bool IsNullable { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.IDataParameter.ParameterName
  id: ParameterName
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: IDataParameter.ParameterName
  fullName: System.Data.IDataParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets the name of the <see cref="T:System.Data.IDataParameter">.
  remarks: The ParameterName is specified in the form @paramname. You must set ParameterName before executing a command that relies on parameters.
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!CODE [Classic WebData SqlParameter.ParameterName Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData SqlParameter.ParameterName Example#1)]"
  syntax:
    content: public string ParameterName { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.IDataParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: IDataParameter.SourceColumn
  fullName: System.Data.IDataParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets the name of the source column that is mapped to the <see cref="T:System.Data.DataSet"> and used for loading or returning the <xref:System.Data.IDataParameter.Value%2A>.
  remarks: The link betwen the value of the <xref:System.Data.IDataParameter> and the <xref:System.Data.DataTable> may be bidirectional depending on the value of the <xref:System.Data.IDataParameter.Direction%2A> property.
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!CODE [Classic WebData SqlParameter.SourceColumn Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceColumn Example#1)]"
  syntax:
    content: public string SourceColumn { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.IDataParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: IDataParameter.SourceVersion
  fullName: System.Data.IDataParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets the <see cref="T:System.Data.DataRowVersion"> to use when loading <xref:System.Data.IDataParameter.Value%2A>.
  remarks: This property is used by the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> during the <xref:System.Data.Common.DbDataAdapter.Update%2A> to determine whether the original or current value is used for a parameter value. This allows primary keys to be updated. This property is ignored by the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> and <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>. This property is set to the version of the <xref:System.Data.DataRow> used by the <xref:System.Data.DataRow.Item%2A> property, or the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> object.
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!CODE [Classic WebData SqlParameter.SourceVersion Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData SqlParameter.SourceVersion Example#1)]"
  syntax:
    content: public System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.IDataParameter.Value
  id: Value
  parent: System.Data.IDataParameter
  langs:
  - csharp
  name: Value
  nameWithType: IDataParameter.Value
  fullName: System.Data.IDataParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets the value of the parameter.
  remarks: "For input parameters, the value is bound to the <xref:System.Data.IDbCommand> that is sent to the server. For output and return value parameters, the value is set on completion of the <xref:System.Data.IDbCommand> and after the <xref:System.Data.IDataReader> is closed.  \n  \n When sending a null parameter value to the server, the user must specify `DBNull`, not null. The null value in the system is an empty object that has no value. `DBNull` is used to represent null values.  \n  \n If the application specifies the database type, the bound value is converted to that type when the provider sends the data to the server. The provider attempts to convert any type of value if it supports the <xref:System.IConvertible> interface. Conversion errors may result if the specified type is not compatible with the value.  \n  \n The <xref:System.Data.SqlClient.SqlParameter.Value%2A> property is overwritten by <xref:System.Data.Common.DbDataAdapter.Update%2A>."
  example:
  - "The following example creates an instance of the implementing class, <xref:System.Data.SqlClient.SqlParameter>, and sets some of its properties.  \n  \n [!CODE [Classic WebData SqlParameter.Value Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData SqlParameter.Value Example#1)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Data.IDataParameter.DbType
  parent: System.Data.IDataParameter
  isExternal: false
  name: DbType
  nameWithType: IDataParameter.DbType
  fullName: System.Data.IDataParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.IDataParameter.Direction
  parent: System.Data.IDataParameter
  isExternal: false
  name: Direction
  nameWithType: IDataParameter.Direction
  fullName: System.Data.IDataParameter.Direction
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Data.IDataParameter.IsNullable
  parent: System.Data.IDataParameter
  isExternal: false
  name: IsNullable
  nameWithType: IDataParameter.IsNullable
  fullName: System.Data.IDataParameter.IsNullable
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataParameter.ParameterName
  parent: System.Data.IDataParameter
  isExternal: false
  name: ParameterName
  nameWithType: IDataParameter.ParameterName
  fullName: System.Data.IDataParameter.ParameterName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDataParameter.SourceColumn
  parent: System.Data.IDataParameter
  isExternal: false
  name: SourceColumn
  nameWithType: IDataParameter.SourceColumn
  fullName: System.Data.IDataParameter.SourceColumn
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDataParameter.SourceVersion
  parent: System.Data.IDataParameter
  isExternal: false
  name: SourceVersion
  nameWithType: IDataParameter.SourceVersion
  fullName: System.Data.IDataParameter.SourceVersion
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.IDataParameter.Value
  parent: System.Data.IDataParameter
  isExternal: false
  name: Value
  nameWithType: IDataParameter.Value
  fullName: System.Data.IDataParameter.Value
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
