### YamlMime:ManagedReference
items:
- uid: System.Data.DataRelation
  id: DataRelation
  children:
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  - System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  - System.Data.DataRelation.CheckStateForProperty
  - System.Data.DataRelation.ChildColumns
  - System.Data.DataRelation.ChildKeyConstraint
  - System.Data.DataRelation.ChildTable
  - System.Data.DataRelation.DataSet
  - System.Data.DataRelation.ExtendedProperties
  - System.Data.DataRelation.Nested
  - System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  - System.Data.DataRelation.ParentColumns
  - System.Data.DataRelation.ParentKeyConstraint
  - System.Data.DataRelation.ParentTable
  - System.Data.DataRelation.RaisePropertyChanging(System.String)
  - System.Data.DataRelation.RelationName
  - System.Data.DataRelation.ToString
  langs:
  - csharp
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
  type: Class
  summary: Represents a parent/child relationship between two <see cref="T:System.Data.DataTable"> objects.
  remarks: "A DataRelation is used to relate two <xref:System.Data.DataTable> objects to each other through <xref:System.Data.DataColumn> objects. For example, in a Customer/Orders relationship, the Customers table is the parent and the Orders table is the child of the relationship. This is similar to a primary key/foreign key relationship. For more information, see [Navigating DataRelations](../Topic/Navigating%20DataRelations.md).  \n  \n Relationships are created between matching columns in the parent and child tables. That is, the <xref:System.Data.DataColumn.DataType%2A> value for both columns must be identical.  \n  \n Relationships can also cascade various changes from the parent <xref:System.Data.DataRow> to its child rows. To control how values are changed in child rows, add a <xref:System.Data.ForeignKeyConstraint> to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> object. The <xref:System.Data.ConstraintCollection> determines what action to take when a value in a parent table is deleted or updated.  \n  \n When a DataRelation is created, it first verifies that the relationship can be established. After it is added to the <xref:System.Data.DataRelationCollection>, the relationship is maintained by disallowing any changes that would invalidate it. Between the period when a DataRelation is created and added to the <xref:System.Data.DataRelationCollection>, it is possible for additional changes to be made to the parent or child rows. An exception is generated if this causes a relationship that is no longer valid.  \n  \n> [!NOTE]\n>  Data corruption can occur if a bi-directional relation is defined between two tables. A bi-directional relation consists of two `DataRelation` objects that use the same columns, with the parent-child roles switched. No exception is raised when the `DataRelation` objects are saved; however, data corruption can occur.  \n  \n DataRelation objects are contained in a <xref:System.Data.DataRelationCollection>, which you can access through the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet>, and the <xref:System.Data.DataTable.ChildRelations%2A> and <xref:System.Data.DataTable.ParentRelations%2A> properties of the <xref:System.Data.DataTable>."
  example:
  - "The following example creates a new DataRelation and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!CODE [Classic WebData DataRelation Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation Example#1)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("RelationName")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.RelationshipConverter))]

      public class DataRelation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn,DataColumn)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Initializes a new instance of the <see cref="T:System.Data.DataRelation"> class using the specified <see cref="T:System.Data.DataRelation"> name, and parent and child <xref:System.Data.DataColumn> objects.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!CODE [Classic WebData DataRelation.DataRelation#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation#1)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: relationName
      type: System.String
      description: The name of the <see cref="T:System.Data.DataRelation">. If `null` or an empty string (""), a default name will be given when the created object is added to the <xref:System.Data.DataRelationCollection>.
    - id: parentColumn
      type: System.Data.DataColumn
      description: The parent <see cref="T:System.Data.DataColumn"> in the relationship.
    - id: childColumn
      type: System.Data.DataColumn
      description: The child <see cref="T:System.Data.DataColumn"> in the relationship.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn[],DataColumn[])
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Initializes a new instance of the <see cref="T:System.Data.DataRelation"> class using the specified <see cref="T:System.Data.DataRelation"> name and matched arrays of parent and child <xref:System.Data.DataColumn> objects.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!CODE [Classic WebData DataRelation.DataRelation2 Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation2 Example#1)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: relationName
      type: System.String
      description: The name of the relation. If `null` or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection">.
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: An array of parent <see cref="T:System.Data.DataColumn"> objects.
    - id: childColumns
      type: System.Data.DataColumn[]
      description: An array of child <see cref="T:System.Data.DataColumn"> objects.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Initializes a new instance of the <see cref="T:System.Data.DataRelation"> class using the specified name, parent and child <xref:System.Data.DataColumn> objects, and a value that indicates whether to create constraints.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!CODE [Classic WebData DataRelation.DataRelation1 Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation1 Example#1)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);
    parameters:
    - id: relationName
      type: System.String
      description: The name of the relation. If `null` or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection">.
    - id: parentColumn
      type: System.Data.DataColumn
      description: The parent <see cref="T:System.Data.DataColumn"> in the relation.
    - id: childColumn
      type: System.Data.DataColumn
      description: The child <see cref="T:System.Data.DataColumn"> in the relation.
    - id: createConstraints
      type: System.Boolean
      description: A value that indicates whether constraints are created. `true`, if constraints are created. Otherwise, `false`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Initializes a new instance of the <see cref="T:System.Data.DataRelation"> class using the specified name, matched arrays of parent and child <xref:System.Data.DataColumn> objects, and value that indicates whether to create constraints.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.DataRelation> and adds it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.  \n  \n [!CODE [Classic WebData DataRelation.DataRelation3 Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataRelation3 Example#1)]"
  syntax:
    content: public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);
    parameters:
    - id: relationName
      type: System.String
      description: The name of the relation. If `null` or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection">.
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: An array of parent <see cref="T:System.Data.DataColumn"> objects.
    - id: childColumns
      type: System.Data.DataColumn[]
      description: An array of child <see cref="T:System.Data.DataColumn"> objects.
    - id: createConstraints
      type: System.Boolean
      description: A value that indicates whether to create constraints. `true`, if constraints are created. Otherwise, `false`.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: This constructor is provided for design time support in the Visual Studio environment.
  remarks: Any <xref:System.Data.DataRelation> object created by using this constructor must be added to the collection with the <xref:System.Data.DataRelationCollection.AddRange%2A> method inside of a <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> block. If this constructor is not called between <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> a <xref:System.NullReferenceException> will occur. In addition, the tables and columns with the specified names must exist at the time the constructor is called.
  syntax:
    content: public DataRelation (string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested);
    parameters:
    - id: relationName
      type: System.String
      description: The name of the relation. If `null` or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection">.
    - id: parentTableName
      type: System.String
      description: The name of the <see cref="T:System.Data.DataTable"> that is the parent table of the relation.
    - id: childTableName
      type: System.String
      description: The name of the <see cref="T:System.Data.DataTable"> that is the child table of the relation.
    - id: parentColumnNames
      type: System.String[]
      description: An array of <see cref="T:System.Data.DataColumn"> object names in the parent <xref:System.Data.DataTable> of the relation.
    - id: childColumnNames
      type: System.String[]
      description: An array of <see cref="T:System.Data.DataColumn"> object names in the child <xref:System.Data.DataTable> of the relation.
    - id: nested
      type: System.Boolean
      description: A value that indicates whether relationships are nested.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)'
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataRelation(String,String,String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: This constructor is provided for design time support in the Visual Studio environment.
  remarks: Any <xref:System.Data.DataRelation> object created by using this constructor must then be added to the collection with <xref:System.Data.DataRelationCollection.AddRange%2A>. Tables and columns with the specified names must exist at the time the method is called, or if <xref:System.Data.DataTable.BeginInit%2A> has been called before calling this constructor, the tables and columns with the specified names must exist at the time that <xref:System.Data.DataTable.EndInit%2A> is called.
  syntax:
    content: public DataRelation (string relationName, string parentTableName, string parentTableNamespace, string childTableName, string childTableNamespace, string[] parentColumnNames, string[] childColumnNames, bool nested);
    parameters:
    - id: relationName
      type: System.String
      description: The name of the <see cref="T:System.Data.DataRelation">. If `null` or an empty string (""), a default name will be given when the created object is added to the <xref:System.Data.DataRelationCollection>.
    - id: parentTableName
      type: System.String
      description: The name of the <see cref="T:System.Data.DataTable"> that is the parent table of the relation.
    - id: parentTableNamespace
      type: System.String
      description: The name of the parent table namespace.
    - id: childTableName
      type: System.String
      description: The name of the <see cref="T:System.Data.DataTable"> that is the child table of the relation.
    - id: childTableNamespace
      type: System.String
      description: The name of the child table namespace.
    - id: parentColumnNames
      type: System.String[]
      description: An array of <see cref="T:System.Data.DataColumn"> object names in the parent <xref:System.Data.DataTable> of the relation.
    - id: childColumnNames
      type: System.String[]
      description: An array of <see cref="T:System.Data.DataColumn"> object names in the child <xref:System.Data.DataTable> of the relation.
    - id: nested
      type: System.Boolean
      description: A value that indicates whether relationships are nested.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.CheckStateForProperty
  id: CheckStateForProperty
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: CheckStateForProperty()
  nameWithType: DataRelation.CheckStateForProperty()
  fullName: System.Data.DataRelation.CheckStateForProperty()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: To be added.
  syntax:
    content: protected void CheckStateForProperty ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.ChildColumns
  id: ChildColumns
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
  fullName: System.Data.DataRelation.ChildColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the child <see cref="T:System.Data.DataColumn"> objects of this relation.
  remarks: ''
  example:
  - "The following example gets the child <xref:System.Data.DataColumn> objects of a <xref:System.Data.DataRelation>.  \n  \n [!CODE [Classic WebData DataRelation.ChildColumns Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildColumns Example#1)]"
  syntax:
    content: public virtual System.Data.DataColumn[] ChildColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.ChildKeyConstraint
  id: ChildKeyConstraint
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
  fullName: System.Data.DataRelation.ChildKeyConstraint
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the <see cref="T:System.Data.ForeignKeyConstraint"> for the relation.
  remarks: If no associated <xref:System.Data.ForeignKeyConstraint> exists for this relationship, it will be created automatically, and pointed to by the `ChildKeyConstraint`, when the relation is added to the collection of relations.
  example:
  - "The following example sets the `UpdateRule`, `DeleteRule`, and `AcceptReject` rule for the `ForeignKeyConstraint` associated with the `DataRelation`.  \n  \n [!CODE [Classic WebData DataRelation.ChildKeyConstraint Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildKeyConstraint Example#1)]"
  syntax:
    content: public virtual System.Data.ForeignKeyConstraint ChildKeyConstraint { get; }
    return:
      type: System.Data.ForeignKeyConstraint
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.ChildTable
  id: ChildTable
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ChildTable
  nameWithType: DataRelation.ChildTable
  fullName: System.Data.DataRelation.ChildTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the child table of this relation.
  remarks: ''
  example:
  - "The following example gets the child <xref:System.Data.DataTable> of a <xref:System.Data.DataRelation>.  \n  \n [!CODE [Classic WebData DataRelation.ChildTable Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.ChildTable Example#1)]"
  syntax:
    content: public virtual System.Data.DataTable ChildTable { get; }
    return:
      type: System.Data.DataTable
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.DataSet
  id: DataSet
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: DataSet
  nameWithType: DataRelation.DataSet
  fullName: System.Data.DataRelation.DataSet
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the <see cref="T:System.Data.DataSet"> to which the <xref:System.Data.DataRelation> belongs.
  remarks: The <xref:System.Data.DataRelationCollection> associated with a <xref:System.Data.DataSet> is accessed through the <xref:System.Data.DataSet.Relations%2A> property of the <xref:System.Data.DataSet> object.
  example:
  - "The following example gets the <xref:System.Data.DataSet> of a <xref:System.Data.DataRelation>.  \n  \n [!CODE [Classic WebData DataRelation.DataSet Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.DataSet Example#1)]"
  syntax:
    content: public virtual System.Data.DataSet DataSet { get; }
    return:
      type: System.Data.DataSet
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.ExtendedProperties
  id: ExtendedProperties
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
  fullName: System.Data.DataRelation.ExtendedProperties
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the collection that stores customized properties.
  remarks: "Use ExtendedProperties to add custom information to a <xref:System.Data.DataRelation> object. Add information with the Add method. Retrieve information with the Item method.  \n  \n Extended properties must be of type <xref:System.String>. Properties that are not of type String are not persisted when the <xref:System.Data.DataRelation> is written as XML."
  syntax:
    content: public System.Data.PropertyCollection ExtendedProperties { get; }
    return:
      type: System.Data.PropertyCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.Nested
  id: Nested
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: Nested
  nameWithType: DataRelation.Nested
  fullName: System.Data.DataRelation.Nested
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets a value that indicates whether <see cref="T:System.Data.DataRelation"> objects are nested.
  remarks: "You can use <xref:System.Data.DataRelation> objects to define hierarchical relationships, such as those specified in XML. For more information, see [Nesting DataRelations](../Topic/Nesting%20DataRelations.md).  \n  \n> [!NOTE]\n>  If the <xref:System.Data.DataTable.TableName%2A> of the child table in the relation matches the <xref:System.Data.DataColumn.ColumnName%2A> of a column in the parent table in the relation, the Nested property must be false. This was not required with the .NET Framework version 1.0."
  syntax:
    content: public virtual bool Nested { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: System.Data.DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: To be added.
  syntax:
    content: protected void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);
    parameters:
    - id: pcevent
      type: System.ComponentModel.PropertyChangedEventArgs
      description: Parameter reference.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.ParentColumns
  id: ParentColumns
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
  fullName: System.Data.DataRelation.ParentColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets an array of <see cref="T:System.Data.DataColumn"> objects that are the parent columns of this <xref:System.Data.DataRelation>.
  remarks: ''
  example:
  - "The following example gets the array of <xref:System.Data.DataColumn> objects that function as parent columns for the relation.  \n  \n [!CODE [Classic WebData DataRelation.ParentColumns Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentColumns Example#1)]"
  syntax:
    content: public virtual System.Data.DataColumn[] ParentColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.ParentKeyConstraint
  id: ParentKeyConstraint
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
  fullName: System.Data.DataRelation.ParentKeyConstraint
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the <see cref="T:System.Data.UniqueConstraint"> that guarantees that values in the parent column of a <xref:System.Data.DataRelation> are unique.
  remarks: ''
  example:
  - "The following example gets the ParentKeyConstraint of a <xref:System.Data.DataRelation> object.  \n  \n [!CODE [Classic WebData DataRelation.ParentKeyConstraint Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentKeyConstraint Example#1)]"
  syntax:
    content: public virtual System.Data.UniqueConstraint ParentKeyConstraint { get; }
    return:
      type: System.Data.UniqueConstraint
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.ParentTable
  id: ParentTable
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ParentTable
  nameWithType: DataRelation.ParentTable
  fullName: System.Data.DataRelation.ParentTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the parent <see cref="T:System.Data.DataTable"> of this <xref:System.Data.DataRelation>.
  remarks: ''
  example:
  - "The following example gets the parent <xref:System.Data.DataTable> of a <xref:System.Data.DataRelation>.  \n  \n [!CODE [Classic WebData DataRelation.ParentTable Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.ParentTable Example#1)]"
  syntax:
    content: public virtual System.Data.DataTable ParentTable { get; }
    return:
      type: System.Data.DataTable
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.RaisePropertyChanging(System.String)
  id: RaisePropertyChanging(System.String)
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: RaisePropertyChanging(String)
  nameWithType: DataRelation.RaisePropertyChanging(String)
  fullName: System.Data.DataRelation.RaisePropertyChanging(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  remarks: To be added.
  syntax:
    content: protected void RaisePropertyChanging (string name);
    parameters:
    - id: name
      type: System.String
      description: Parameter reference.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.RelationName
  id: RelationName
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: RelationName
  nameWithType: DataRelation.RelationName
  fullName: System.Data.DataRelation.RelationName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets the name used to retrieve a <see cref="T:System.Data.DataRelation"> from the <xref:System.Data.DataRelationCollection>.
  remarks: Use the RelationName property to retrieve a <xref:System.Data.DataRelation> from the <xref:System.Data.DataRelationCollection>.
  example:
  - "The following example uses the RelationName property to retrieve a <xref:System.Data.DataRelation> from a <xref:System.Data.DataRelationCollection>.  \n  \n [!CODE [Classic WebData DataRelation.RelationName Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.RelationName Example#1)]"
  syntax:
    content: public virtual string RelationName { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.DataRelation.ToString
  id: ToString
  parent: System.Data.DataRelation
  langs:
  - csharp
  name: ToString()
  nameWithType: DataRelation.ToString()
  fullName: System.Data.DataRelation.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the <xref:System.Data.DataRelation.RelationName%2A>, if one exists.
  remarks: ''
  example:
  - "The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the name of the <xref:System.Data.DataRelation> object.  \n  \n [!CODE [Classic WebData DataRelation.ToString Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataRelation.ToString Example#1)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: The value of the <xref:System.Data.DataRelation.RelationName%2A> property.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn,DataColumn)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn[],DataColumn[])
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[])
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn,DataColumn,Boolean)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelation.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,DataColumn[],DataColumn[],Boolean)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String[],String[],Boolean)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelation.#ctor(System.String,System.String,System.String,System.String,System.String,System.String[],System.String[],System.Boolean)
  parent: System.Data.DataRelation
  isExternal: false
  name: DataRelation(String,String,String,String,String,String[],String[],Boolean)
  nameWithType: DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
  fullName: System.Data.DataRelation.DataRelation(String,String,String,String,String,String[],String[],Boolean)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelation.CheckStateForProperty
  parent: System.Data.DataRelation
  isExternal: false
  name: CheckStateForProperty()
  nameWithType: DataRelation.CheckStateForProperty()
  fullName: System.Data.DataRelation.CheckStateForProperty()
- uid: System.Data.DataRelation.ChildColumns
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildColumns
  nameWithType: DataRelation.ChildColumns
  fullName: System.Data.DataRelation.ChildColumns
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.DataRelation.ChildKeyConstraint
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildKeyConstraint
  nameWithType: DataRelation.ChildKeyConstraint
  fullName: System.Data.DataRelation.ChildKeyConstraint
- uid: System.Data.ForeignKeyConstraint
  parent: System.Data
  isExternal: false
  name: ForeignKeyConstraint
  nameWithType: ForeignKeyConstraint
  fullName: System.Data.ForeignKeyConstraint
- uid: System.Data.DataRelation.ChildTable
  parent: System.Data.DataRelation
  isExternal: false
  name: ChildTable
  nameWithType: DataRelation.ChildTable
  fullName: System.Data.DataRelation.ChildTable
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRelation.DataSet
  parent: System.Data.DataRelation
  isExternal: false
  name: DataSet
  nameWithType: DataRelation.DataSet
  fullName: System.Data.DataRelation.DataSet
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataRelation.ExtendedProperties
  parent: System.Data.DataRelation
  isExternal: false
  name: ExtendedProperties
  nameWithType: DataRelation.ExtendedProperties
  fullName: System.Data.DataRelation.ExtendedProperties
- uid: System.Data.PropertyCollection
  parent: System.Data
  isExternal: false
  name: PropertyCollection
  nameWithType: PropertyCollection
  fullName: System.Data.PropertyCollection
- uid: System.Data.DataRelation.Nested
  parent: System.Data.DataRelation
  isExternal: false
  name: Nested
  nameWithType: DataRelation.Nested
  fullName: System.Data.DataRelation.Nested
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelation.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Data.DataRelation
  isExternal: false
  name: OnPropertyChanging(PropertyChangedEventArgs)
  nameWithType: DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
  fullName: System.Data.DataRelation.OnPropertyChanging(PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Data.DataRelation.ParentColumns
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentColumns
  nameWithType: DataRelation.ParentColumns
  fullName: System.Data.DataRelation.ParentColumns
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.DataRelation.ParentKeyConstraint
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentKeyConstraint
  nameWithType: DataRelation.ParentKeyConstraint
  fullName: System.Data.DataRelation.ParentKeyConstraint
- uid: System.Data.UniqueConstraint
  parent: System.Data
  isExternal: false
  name: UniqueConstraint
  nameWithType: UniqueConstraint
  fullName: System.Data.UniqueConstraint
- uid: System.Data.DataRelation.ParentTable
  parent: System.Data.DataRelation
  isExternal: false
  name: ParentTable
  nameWithType: DataRelation.ParentTable
  fullName: System.Data.DataRelation.ParentTable
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRelation.RaisePropertyChanging(System.String)
  parent: System.Data.DataRelation
  isExternal: false
  name: RaisePropertyChanging(String)
  nameWithType: DataRelation.RaisePropertyChanging(String)
  fullName: System.Data.DataRelation.RaisePropertyChanging(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRelation.RelationName
  parent: System.Data.DataRelation
  isExternal: false
  name: RelationName
  nameWithType: DataRelation.RelationName
  fullName: System.Data.DataRelation.RelationName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRelation.ToString
  parent: System.Data.DataRelation
  isExternal: false
  name: ToString()
  nameWithType: DataRelation.ToString()
  fullName: System.Data.DataRelation.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
