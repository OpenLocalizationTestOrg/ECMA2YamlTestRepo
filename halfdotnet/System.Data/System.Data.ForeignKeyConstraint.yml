### YamlMime:ManagedReference
items:
- uid: System.Data.ForeignKeyConstraint
  id: ForeignKeyConstraint
  children:
  - System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  - System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  - System.Data.ForeignKeyConstraint.AcceptRejectRule
  - System.Data.ForeignKeyConstraint.Columns
  - System.Data.ForeignKeyConstraint.DeleteRule
  - System.Data.ForeignKeyConstraint.Equals(System.Object)
  - System.Data.ForeignKeyConstraint.GetHashCode
  - System.Data.ForeignKeyConstraint.RelatedColumns
  - System.Data.ForeignKeyConstraint.RelatedTable
  - System.Data.ForeignKeyConstraint.Table
  - System.Data.ForeignKeyConstraint.UpdateRule
  langs:
  - csharp
  name: ForeignKeyConstraint
  nameWithType: ForeignKeyConstraint
  fullName: System.Data.ForeignKeyConstraint
  type: Class
  summary: Represents an action restriction enforced on a set of columns in a primary key/foreign key relationship when a value or row is either deleted or updated.
  remarks: "A ForeignKeyConstraint restricts the action performed when a value in a column (or columns) is either deleted or updated. Such a constraint is intended to be used with primary key columns. In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.  \n  \n-   The child rows can also be deleted (a cascading action).  \n  \n-   The values in the child column (or columns) can be set to null values.  \n  \n-   The values in the child column (or columns) can be set to default values.  \n  \n-   An exception can be generated.  \n  \n ForeignKeyConstraint objects are contained in the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable>, which is accessed through the <xref:System.Data.DataTable.Constraints%2A> property.  \n  \n Constraints are not enforced unless the <xref:System.Data.DataSet.EnforceConstraints%2A> property is set to `true`.  \n  \n The <xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A> is enforced whenever a <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.AcceptChanges%2A> method is invoked."
  example:
  - "The following example creates a ForeignKeyConstraint, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint Example#1)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("ConstraintName")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ForeignKeyConstraintEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class ForeignKeyConstraint : System.Data.Constraint
  inheritance:
  - System.Object
  - System.Data.Constraint
  implements: []
  inheritedMembers:
  - System.Data.Constraint._DataSet
  - System.Data.Constraint.CheckStateForProperty
  - System.Data.Constraint.ConstraintName
  - System.Data.Constraint.ExtendedProperties
  - System.Data.Constraint.SetDataSet(System.Data.DataSet)
  - System.Data.Constraint.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)
  id: '#ctor(System.Data.DataColumn,System.Data.DataColumn)'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(DataColumn,DataColumn)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(DataColumn,DataColumn)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(DataColumn,DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint"> class with the specified parent and child <xref:System.Data.DataColumn> objects.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint>, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint.ForeignKeyConstraint Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.ForeignKeyConstraint Example#1)]"
  syntax:
    content: public ForeignKeyConstraint (System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: parentColumn
      type: System.Data.DataColumn
      description: The parent <see cref="T:System.Data.DataColumn"> in the constraint.
    - id: childColumn
      type: System.Data.DataColumn
      description: The child <see cref="T:System.Data.DataColumn"> in the constraint.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])
  id: '#ctor(System.Data.DataColumn[],System.Data.DataColumn[])'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(DataColumn[],DataColumn[])
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(DataColumn[],DataColumn[])
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(DataColumn[],DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint"> class with the specified arrays of parent and child <xref:System.Data.DataColumn> objects.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint>, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint.ForeignKeyConstraint2 Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.ForeignKeyConstraint2 Example#1)]"
  syntax:
    content: public ForeignKeyConstraint (System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: An array of parent <see cref="T:System.Data.DataColumn"> in the constraint.
    - id: childColumns
      type: System.Data.DataColumn[]
      description: An array of child <see cref="T:System.Data.DataColumn"> in the constraint.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: '#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(String,DataColumn,DataColumn)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn,DataColumn)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn,DataColumn)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint"> class with the specified name, parent and child <xref:System.Data.DataColumn> objects.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint>, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint.ForeignKeyConstraint1 Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.ForeignKeyConstraint1 Example#1)]"
  syntax:
    content: public ForeignKeyConstraint (string constraintName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: constraintName
      type: System.String
      description: The name of the constraint.
    - id: parentColumn
      type: System.Data.DataColumn
      description: The parent <see cref="T:System.Data.DataColumn"> in the constraint.
    - id: childColumn
      type: System.Data.DataColumn
      description: The child <see cref="T:System.Data.DataColumn"> in the constraint.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: '#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Initializes a new instance of the <see cref="T:System.Data.ForeignKeyConstraint"> class with the specified name, and arrays of parent and child <xref:System.Data.DataColumn> objects.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint>, sets some of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint.ForeignKeyConstraint3 Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.ForeignKeyConstraint3 Example#1)]"
  syntax:
    content: public ForeignKeyConstraint (string constraintName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: constraintName
      type: System.String
      description: The name of the <see cref="T:System.Data.ForeignKeyConstraint">. If `null` or empty string, a default name will be given when added to the constraints collection.
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: An array of parent <see cref="T:System.Data.DataColumn"> in the constraint.
    - id: childColumns
      type: System.Data.DataColumn[]
      description: An array of child <see cref="T:System.Data.DataColumn"> in the constraint.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  id: '#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: This constructor is provided for design time support in the Visual Studio  environment. <see cref="T:System.Data.ForeignKeyConstraint"> objects created by using this constructor must then be added to the collection via <xref:System.Data.ConstraintCollection.AddRange%2A>. Tables and columns with the specified names must exist at the time the method is called, or if <xref:System.Data.DataTable.BeginInit%2A> has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that <xref:System.Data.DataTable.EndInit%2A> is called.
  remarks: To be added.
  syntax:
    content: public ForeignKeyConstraint (string constraintName, string parentTableName, string[] parentColumnNames, string[] childColumnNames, System.Data.AcceptRejectRule acceptRejectRule, System.Data.Rule deleteRule, System.Data.Rule updateRule);
    parameters:
    - id: constraintName
      type: System.String
      description: The name of the constraint.
    - id: parentTableName
      type: System.String
      description: The name of the parent <see cref="T:System.Data.DataTable"> that contains parent <xref:System.Data.DataColumn> objects in the constraint.
    - id: parentColumnNames
      type: System.String[]
      description: An array of the names of parent <see cref="T:System.Data.DataColumn"> objects in the constraint.
    - id: childColumnNames
      type: System.String[]
      description: An array of the names of child <see cref="T:System.Data.DataColumn"> objects in the constraint.
    - id: acceptRejectRule
      type: System.Data.AcceptRejectRule
      description: One of the <see cref="T:System.Data.AcceptRejectRule"> values. Possible values include `None`, `Cascade`, and `Default`.
    - id: deleteRule
      type: System.Data.Rule
      description: 'One of the <see cref="T:System.Data.Rule"> values to use when a row is deleted. The default is `Cascade`. Possible values include: `None`, `Cascade`, `SetNull`, `SetDefault`, and `Default`.'
    - id: updateRule
      type: System.Data.Rule
      description: 'One of the <see cref="T:System.Data.Rule"> values to use when a row is updated. The default is `Cascade`. Possible values include: `None`, `Cascade`, `SetNull`, `SetDefault`, and `Default`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  id: '#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)'
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: This constructor is provided for design time support in the Visual Studio  environment. <see cref="T:System.Data.ForeignKeyConstraint"> objects created by using this constructor must then be added to the collection via <xref:System.Data.ConstraintCollection.AddRange%2A>. Tables and columns with the specified names must exist at the time the method is called, or if <xref:System.Data.DataTable.BeginInit%2A> has been called prior to calling this constructor, the tables and columns with the specified names must exist at the time that <xref:System.Data.DataTable.EndInit%2A> is called.
  remarks: To be added.
  syntax:
    content: public ForeignKeyConstraint (string constraintName, string parentTableName, string parentTableNamespace, string[] parentColumnNames, string[] childColumnNames, System.Data.AcceptRejectRule acceptRejectRule, System.Data.Rule deleteRule, System.Data.Rule updateRule);
    parameters:
    - id: constraintName
      type: System.String
      description: The name of the constraint.
    - id: parentTableName
      type: System.String
      description: The name of the parent <see cref="T:System.Data.DataTable"> that contains parent <xref:System.Data.DataColumn> objects in the constraint.
    - id: parentTableNamespace
      type: System.String
      description: The name of the <xref:System.Data.DataTable.Namespace%2A>.
    - id: parentColumnNames
      type: System.String[]
      description: An array of the names of parent <see cref="T:System.Data.DataColumn"> objects in the constraint.
    - id: childColumnNames
      type: System.String[]
      description: An array of the names of child <see cref="T:System.Data.DataColumn"> objects in the constraint.
    - id: acceptRejectRule
      type: System.Data.AcceptRejectRule
      description: One of the <see cref="T:System.Data.AcceptRejectRule"> values. Possible values include `None`, `Cascade`, and `Default`.
    - id: deleteRule
      type: System.Data.Rule
      description: 'One of the <see cref="T:System.Data.Rule"> values to use when a row is deleted. The default is `Cascade`. Possible values include: `None`, `Cascade`, `SetNull`, `SetDefault`, and `Default`.'
    - id: updateRule
      type: System.Data.Rule
      description: 'One of the <see cref="T:System.Data.Rule"> values to use when a row is updated. The default is `Cascade`. Possible values include: `None`, `Cascade`, `SetNull`, `SetDefault`, and `Default`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.AcceptRejectRule
  id: AcceptRejectRule
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: AcceptRejectRule
  nameWithType: ForeignKeyConstraint.AcceptRejectRule
  fullName: System.Data.ForeignKeyConstraint.AcceptRejectRule
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Indicates the action that should take place across this constraint when <xref:System.Data.DataTable.AcceptChanges%2A> is invoked.
  remarks: Changes to a <xref:System.Data.DataRow> or <xref:System.Data.DataTable> are not final until the `AcceptChanges` method is invoked. At that point, the AcceptRejectRule determines the course of action on any values that have been changed or deleted.
  example:
  - "The following example creates a <xref:System.Data.ForeignKeyConstraint>, sets its AcceptRejectRule, and adds the constraint to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint.DeleteRule Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.DeleteRule Example#1)]"
  syntax:
    content: public virtual System.Data.AcceptRejectRule AcceptRejectRule { get; set; }
    return:
      type: System.Data.AcceptRejectRule
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.Columns
  id: Columns
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: Columns
  nameWithType: ForeignKeyConstraint.Columns
  fullName: System.Data.ForeignKeyConstraint.Columns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the child columns of this constraint.
  remarks: ''
  example:
  - "The following example returns an array of <xref:System.Data.DataColumn> objects through the Columns property.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint.Columns Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.Columns Example#1)]"
  syntax:
    content: public virtual System.Data.DataColumn[] Columns { get; }
    return:
      type: System.Data.DataColumn[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.DeleteRule
  id: DeleteRule
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: DeleteRule
  nameWithType: ForeignKeyConstraint.DeleteRule
  fullName: System.Data.ForeignKeyConstraint.DeleteRule
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets the action that occurs across this constraint when a row is deleted.
  remarks: "When a row is deleted from a parent table, the DeleteRule determines what will happen in the columns of the child table (or tables). If the rule is set to `Cascade`, child rows will be deleted.  \n  \n If set to `SetNull`, a `DBnull` will be placed in the appropriate columns of the affected rows. Depending on your data source, a null value may or may not be permitted in a column. For example, SQLServer allows multiple null values to be found in a primary key column, even if they are not unique. In a <xref:System.Data.DataTable>, however, if a <xref:System.Data.DataColumn> object's <xref:System.Data.DataColumn.Unique%2A> property is set to `true`, multiple null values are not allowed in primary key columns.  \n  \n If set to `SetDefault`, the default value for the column is assigned."
  example:
  - "The following example creates a ForeignKeyConstraint, sets various of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint.DeleteRule Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.DeleteRule Example#1)]"
  syntax:
    content: public virtual System.Data.Rule DeleteRule { get; set; }
    return:
      type: System.Data.Rule
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ForeignKeyConstraint.Equals(Object)
  fullName: System.Data.ForeignKeyConstraint.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets a value indicating whether the current <see cref="T:System.Data.ForeignKeyConstraint"> is identical to the specified object.
  remarks: ''
  example:
  - "The following example creates a new <xref:System.Data.ForeignKeyConstraint> and checks it against other collection members with the Equals method before adding it to a <xref:System.Data.ConstraintCollection>.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint.Equals Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.Equals Example#1)]"
  syntax:
    content: public override bool Equals (object key);
    parameters:
    - id: key
      type: System.Object
      description: The object to which this <see cref="T:System.Data.ForeignKeyConstraint"> is compared. Two <see cref="T:System.Data.ForeignKeyConstraint"> are equal if they constrain the same columns.
    return:
      type: System.Boolean
      description: '`true`, if the objects are identical; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.GetHashCode
  id: GetHashCode
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ForeignKeyConstraint.GetHashCode()
  fullName: System.Data.ForeignKeyConstraint.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the hash code of this instance of the <see cref="T:System.Data.ForeignKeyConstraint"> object.
  remarks: To be added.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A 32-bit signed integer hash code.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.RelatedColumns
  id: RelatedColumns
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: RelatedColumns
  nameWithType: ForeignKeyConstraint.RelatedColumns
  fullName: System.Data.ForeignKeyConstraint.RelatedColumns
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: The parent columns of this constraint.
  remarks: To be added.
  syntax:
    content: public virtual System.Data.DataColumn[] RelatedColumns { get; }
    return:
      type: System.Data.DataColumn[]
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.RelatedTable
  id: RelatedTable
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: RelatedTable
  nameWithType: ForeignKeyConstraint.RelatedTable
  fullName: System.Data.ForeignKeyConstraint.RelatedTable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the parent table of this constraint.
  remarks: To be added.
  syntax:
    content: public virtual System.Data.DataTable RelatedTable { get; }
    return:
      type: System.Data.DataTable
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.Table
  id: Table
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: Table
  nameWithType: ForeignKeyConstraint.Table
  fullName: System.Data.ForeignKeyConstraint.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets the child table of this constraint.
  remarks: ''
  example:
  - '[!CODE [Classic WebData ForeignKeyConstraint.Table Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.Table Example#1)]'
  syntax:
    content: public override System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.ForeignKeyConstraint.UpdateRule
  id: UpdateRule
  parent: System.Data.ForeignKeyConstraint
  langs:
  - csharp
  name: UpdateRule
  nameWithType: ForeignKeyConstraint.UpdateRule
  fullName: System.Data.ForeignKeyConstraint.UpdateRule
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: Gets or sets the action that occurs across this constraint on when a row is updated.
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.ForeignKeyConstraint>, sets various of its properties, and adds it to a <xref:System.Data.DataTable> object's <xref:System.Data.ConstraintCollection>.  \n  \n [!CODE [Classic WebData ForeignKeyConstraint.DeleteRule Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData ForeignKeyConstraint.DeleteRule Example#1)]"
  syntax:
    content: public virtual System.Data.Rule UpdateRule { get; set; }
    return:
      type: System.Data.Rule
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Data.Constraint
  isExternal: false
  name: System.Data.Constraint
- uid: System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(DataColumn,DataColumn)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(DataColumn,DataColumn)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(DataColumn,DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.ForeignKeyConstraint.#ctor(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(DataColumn[],DataColumn[])
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(DataColumn[],DataColumn[])
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(DataColumn[],DataColumn[])
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(String,DataColumn,DataColumn)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn,DataColumn)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn[],DataColumn[])
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,DataColumn[],DataColumn[])
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,String,String[],String[],AcceptRejectRule,Rule,Rule)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Data.AcceptRejectRule
  parent: System.Data
  isExternal: false
  name: AcceptRejectRule
  nameWithType: AcceptRejectRule
  fullName: System.Data.AcceptRejectRule
- uid: System.Data.Rule
  parent: System.Data
  isExternal: false
  name: Rule
  nameWithType: Rule
  fullName: System.Data.Rule
- uid: System.Data.Rule
  parent: System.Data
  isExternal: false
  name: Rule
  nameWithType: Rule
  fullName: System.Data.Rule
- uid: System.Data.ForeignKeyConstraint.#ctor(System.String,System.String,System.String,System.String[],System.String[],System.Data.AcceptRejectRule,System.Data.Rule,System.Data.Rule)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  nameWithType: ForeignKeyConstraint.ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
  fullName: System.Data.ForeignKeyConstraint.ForeignKeyConstraint(String,String,String,String[],String[],AcceptRejectRule,Rule,Rule)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String[]
- uid: System.Data.AcceptRejectRule
  parent: System.Data
  isExternal: false
  name: AcceptRejectRule
  nameWithType: AcceptRejectRule
  fullName: System.Data.AcceptRejectRule
- uid: System.Data.Rule
  parent: System.Data
  isExternal: false
  name: Rule
  nameWithType: Rule
  fullName: System.Data.Rule
- uid: System.Data.Rule
  parent: System.Data
  isExternal: false
  name: Rule
  nameWithType: Rule
  fullName: System.Data.Rule
- uid: System.Data.ForeignKeyConstraint.AcceptRejectRule
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: AcceptRejectRule
  nameWithType: ForeignKeyConstraint.AcceptRejectRule
  fullName: System.Data.ForeignKeyConstraint.AcceptRejectRule
- uid: System.Data.AcceptRejectRule
  parent: System.Data
  isExternal: false
  name: AcceptRejectRule
  nameWithType: AcceptRejectRule
  fullName: System.Data.AcceptRejectRule
- uid: System.Data.ForeignKeyConstraint.Columns
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: Columns
  nameWithType: ForeignKeyConstraint.Columns
  fullName: System.Data.ForeignKeyConstraint.Columns
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.ForeignKeyConstraint.DeleteRule
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: DeleteRule
  nameWithType: ForeignKeyConstraint.DeleteRule
  fullName: System.Data.ForeignKeyConstraint.DeleteRule
- uid: System.Data.Rule
  parent: System.Data
  isExternal: false
  name: Rule
  nameWithType: Rule
  fullName: System.Data.Rule
- uid: System.Data.ForeignKeyConstraint.Equals(System.Object)
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: Equals(Object)
  nameWithType: ForeignKeyConstraint.Equals(Object)
  fullName: System.Data.ForeignKeyConstraint.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.ForeignKeyConstraint.GetHashCode
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: GetHashCode()
  nameWithType: ForeignKeyConstraint.GetHashCode()
  fullName: System.Data.ForeignKeyConstraint.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.ForeignKeyConstraint.RelatedColumns
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: RelatedColumns
  nameWithType: ForeignKeyConstraint.RelatedColumns
  fullName: System.Data.ForeignKeyConstraint.RelatedColumns
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
- uid: System.Data.ForeignKeyConstraint.RelatedTable
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: RelatedTable
  nameWithType: ForeignKeyConstraint.RelatedTable
  fullName: System.Data.ForeignKeyConstraint.RelatedTable
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.ForeignKeyConstraint.Table
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: Table
  nameWithType: ForeignKeyConstraint.Table
  fullName: System.Data.ForeignKeyConstraint.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.ForeignKeyConstraint.UpdateRule
  parent: System.Data.ForeignKeyConstraint
  isExternal: false
  name: UpdateRule
  nameWithType: ForeignKeyConstraint.UpdateRule
  fullName: System.Data.ForeignKeyConstraint.UpdateRule
- uid: System.Data.Rule
  parent: System.Data
  isExternal: false
  name: Rule
  nameWithType: Rule
  fullName: System.Data.Rule
