### YamlMime:ManagedReference
items:
- uid: System.Configuration.RegexStringValidator
  id: RegexStringValidator
  children:
  - System.Configuration.RegexStringValidator.#ctor(System.String)
  - System.Configuration.RegexStringValidator.CanValidate(System.Type)
  - System.Configuration.RegexStringValidator.Validate(System.Object)
  langs:
  - csharp
  name: RegexStringValidator
  nameWithType: RegexStringValidator
  fullName: System.Configuration.RegexStringValidator
  type: Class
  summary: Provides validation of a string based on the rules provided by a regular expression.
  remarks: "The RegexStringValidator object contains the rules necessary to validate a string object based on a regular expression. The rules are established when an instance of the RegexStringValidator class is created.  \n  \n The <xref:System.Configuration.RegexStringValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.RegexStringValidator.Validate%2A> method."
  example:
  - "The following code example demonstrates how to use the RegexStringValidator type.  \n  \n [!CODE [System.Configuration.RegexStringValidator#1](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.RegexStringValidator#1)]"
  syntax:
    content: 'public class RegexStringValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.RegexStringValidator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.RegexStringValidator
  langs:
  - csharp
  name: RegexStringValidator(String)
  nameWithType: RegexStringValidator.RegexStringValidator(String)
  fullName: System.Configuration.RegexStringValidator.RegexStringValidator(String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Initializes a new instance of the <see cref="T:System.Configuration.RegexStringValidator"> class.
  remarks: To be added.
  syntax:
    content: public RegexStringValidator (string regex);
    parameters:
    - id: regex
      type: System.String
      description: A string that specifies a regular expression.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.RegexStringValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.RegexStringValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: RegexStringValidator.CanValidate(Type)
  fullName: System.Configuration.RegexStringValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Determines whether the type of the object can be validated.
  remarks: An exception is thrown if the validation fails.
  example:
  - "The following example demonstrates how to use the CanValidate method. This code example is part of a larger example that is provided for the <xref:System.Configuration.RegexStringValidator> class.  \n  \n [!CODE [System.Configuration.RegexStringValidator#3](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.RegexStringValidator#3)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: The type of object.
    return:
      type: System.Boolean
      description: '`true` if the  parameter matches a string; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.RegexStringValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.RegexStringValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: RegexStringValidator.Validate(Object)
  fullName: System.Configuration.RegexStringValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Determines whether the value of an object is valid.
  remarks: A <xref:System.Configuration.RegexStringValidator> object contains the rules necessary to validate a string object based on a regular expression. The rules are established when an instance of the <xref:System.Configuration.RegexStringValidator> class is created. The string object to validate is passed as a parameter of the Validate method.
  example:
  - "The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.RegexStringValidator> class.  \n  \n [!CODE [System.Configuration.RegexStringValidator#4](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.RegexStringValidator#4)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: The value of an object.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.Configuration.RegexStringValidator.#ctor(System.String)
  parent: System.Configuration.RegexStringValidator
  isExternal: false
  name: RegexStringValidator(String)
  nameWithType: RegexStringValidator.RegexStringValidator(String)
  fullName: System.Configuration.RegexStringValidator.RegexStringValidator(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.RegexStringValidator.CanValidate(System.Type)
  parent: System.Configuration.RegexStringValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: RegexStringValidator.CanValidate(Type)
  fullName: System.Configuration.RegexStringValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.RegexStringValidator.Validate(System.Object)
  parent: System.Configuration.RegexStringValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: RegexStringValidator.Validate(Object)
  fullName: System.Configuration.RegexStringValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
