### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationSectionGroup
  id: ConfigurationSectionGroup
  children:
  - System.Configuration.ConfigurationSectionGroup.#ctor
  - System.Configuration.ConfigurationSectionGroup.ForceDeclaration
  - System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)
  - System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
  - System.Configuration.ConfigurationSectionGroup.IsDeclared
  - System.Configuration.ConfigurationSectionGroup.Name
  - System.Configuration.ConfigurationSectionGroup.SectionGroupName
  - System.Configuration.ConfigurationSectionGroup.SectionGroups
  - System.Configuration.ConfigurationSectionGroup.Sections
  - System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSectionGroup.Type
  langs:
  - csharp
  name: ConfigurationSectionGroup
  nameWithType: ConfigurationSectionGroup
  fullName: System.Configuration.ConfigurationSectionGroup
  type: Class
  summary: Represents a group of related sections within a configuration file.
  remarks: "Settings in configuration files (such as the Web.config file) are organized into sections. Because some sections are related, it is often convenient to group them in a section group. The ConfigurationSectionGroup class represents the `sectionGroup` XML element that is used to group sections when they are defined in the `configSections` element of a configuration file. Section groups can be nested (a section group can contain other section groups as well as sections). The following example shows a `configSections` element that defines three nested section groups:  \n  \n```  \n<configSections>  \n  <sectionGroup name=\"system.web.extensions\"...>  \n    <sectionGroup name=\"scripting\" ...>  \n      <section name=\"scriptResourceHandler\".../>  \n      <sectionGroup name=\"webServices\"...>  \n        <section name=\"jsonSerialization\" .../>  \n        <section name=\"profileService\" ... />        <section name=\"authenticationService\" .../>  \n        <section name=\"roleService\" .../>  \n      </sectionGroup>  \n    </sectionGroup>  \n  </sectionGroup>  \n</configSections>  \n```  \n  \n The configuration system loads settings from configuration files into ConfigurationSectionGroup objects. You can use the <xref:System.Configuration.ConfigurationSectionGroup.Sections%2A> and <xref:System.Configuration.ConfigurationSectionGroup.SectionGroups%2A> properties to access the sections and section groups that are contained in a ConfigurationSectionGroup object.  \n  \n For more information about how to access information from configuration files, see the <xref:System.Configuration.ConfigurationManager> class."
  example:
  - "The following example shows how to use the ConfigurationSectionGroup class to retrieve configuration settings. The example is a console application that reads configuration settings and writes information about each configuration section group and the sections in it to the console.  \n  \n The `Main` method loads the configuration settings into a <xref:System.Configuration.Configuration> object, retrieves the <xref:System.Configuration.Configuration.SectionGroups%2A> collection from the <xref:System.Configuration.Configuration> object, and then calls the `ShowSectionGroupCollectionInfo` method to display the section property values.  \n  \n The `ShowSectionGroupCollectionInfo` method iterates through the section groups and calls the `ShowSectionGroupInfo` method for each one.  \n  \n The `ShowSectionGroupInfo` method displays the name of the section group, some property values, and the names of the sections that it contains. If the section group contains section groups, this method calls `ShowSectionGroupCollectionInfo` recursively to display those section groups.  \n  \n The `indentLevel` field is used to add spaces to the left side of displayed lines to show logical groupings. All lines are limited to 79 characters of text to avoid line wrapping, which would make it harder to distinguish the logical groupings.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#1](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#1)]"
  syntax:
    content: public class ConfigurationSectionGroup
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: ConfigurationSectionGroup()
  nameWithType: ConfigurationSectionGroup.ConfigurationSectionGroup()
  fullName: System.Configuration.ConfigurationSectionGroup.ConfigurationSectionGroup()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSectionGroup"> class.
  remarks: To be added.
  syntax:
    content: public ConfigurationSectionGroup ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration
  id: ForceDeclaration
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: ForceDeclaration()
  nameWithType: ConfigurationSectionGroup.ForceDeclaration()
  fullName: System.Configuration.ConfigurationSectionGroup.ForceDeclaration()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup"> object.
  remarks: The ForceDeclaration method can force a <xref:System.Configuration.ConfigurationSectionGroup> object to be written to a configuration file, even if it is not required because it is already declared in a parent file.
  example:
  - "The following code example shows how to use the ForceDeclaration method.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#12](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#12)]"
  syntax:
    content: public void ForceDeclaration ();
    parameters: []
  overload: System.Configuration.ConfigurationSectionGroup.ForceDeclaration*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)
  id: ForceDeclaration(System.Boolean)
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: ForceDeclaration(Boolean)
  nameWithType: ConfigurationSectionGroup.ForceDeclaration(Boolean)
  fullName: System.Configuration.ConfigurationSectionGroup.ForceDeclaration(Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Forces the declaration for this <see cref="T:System.Configuration.ConfigurationSectionGroup"> object.
  remarks: "The <xref:System.Configuration.ConfigurationSectionGroup.ForceDeclaration%2A> method forces this <xref:System.Configuration.ConfigurationSectionGroup> declaration to be written to the file if  is `true`. If  is `false`, this action might be ignored if the <xref:System.Configuration.ConfigurationSectionGroup> object is required by the system.  \n  \n The ForceDeclaration method can force a <xref:System.Configuration.ConfigurationSectionGroup> object to be written to a configuration file, even if it is not required because it is already declared in a parent file. Also, it can remove a group from a configuration file if the group is not required.  \n  \n You might want to use the ForceDeclaration method to make a configuration file more portable from one computer to another, without worrying about whether the group declaration already exists."
  example:
  - "The following code example shows how to use the ForceDeclaration method.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#13](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#13)]"
  syntax:
    content: public void ForceDeclaration (bool force);
    parameters:
    - id: force
      type: System.Boolean
      description: '`true` if the <see cref="T:System.Configuration.ConfigurationSectionGroup"> object must be written to the file; otherwise, `false`.'
  overload: System.Configuration.ConfigurationSectionGroup.ForceDeclaration*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
  id: IsDeclarationRequired
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: IsDeclarationRequired
  nameWithType: ConfigurationSectionGroup.IsDeclarationRequired
  fullName: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Gets a value that indicates whether this <see cref="T:System.Configuration.ConfigurationSectionGroup"> object declaration is required.
  remarks: ''
  example:
  - "The following code example determines whether this instance of the <xref:System.Configuration.ConfigurationSectionGroup> declaration is required.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#5](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#5)]"
  syntax:
    content: public bool IsDeclarationRequired { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclared
  id: IsDeclared
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: IsDeclared
  nameWithType: ConfigurationSectionGroup.IsDeclared
  fullName: System.Configuration.ConfigurationSectionGroup.IsDeclared
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Gets a value that indicates whether this <see cref="T:System.Configuration.ConfigurationSectionGroup"> object is declared.
  remarks: "If the section group is declared in the configuration file, the IsDeclared property returns `true`.  \n  \n The IsDeclared property returns `false` if this section is inherited from Machine.config or a parent configuration file."
  example:
  - "The following code example determines whether this instance of <xref:System.Configuration.ConfigurationSectionGroup> is declared. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#6](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#6)]"
  syntax:
    content: public bool IsDeclared { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.Name
  id: Name
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationSectionGroup.Name
  fullName: System.Configuration.ConfigurationSectionGroup.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Gets the name property of this <see cref="T:System.Configuration.ConfigurationSectionGroup"> object.
  remarks: The Name property value is the name of the section group that does not contain the parent section groups.
  example:
  - "The following code example shows how to display the name of this instance of the <xref:System.Configuration.ConfigurationSectionGroup> class. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#3](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#3)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroupName
  id: SectionGroupName
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: SectionGroupName
  nameWithType: ConfigurationSectionGroup.SectionGroupName
  fullName: System.Configuration.ConfigurationSectionGroup.SectionGroupName
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Gets the section group name associated with this <see cref="T:System.Configuration.ConfigurationSectionGroup">.
  remarks: The SectionGroupName property value is the full path name of the section group, including the parent section groups..
  example:
  - "The following code example shows how to display the name of this instance of the <xref:System.Configuration.ConfigurationSectionGroup> class. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#11](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#11)]"
  syntax:
    content: public string SectionGroupName { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroups
  id: SectionGroups
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: SectionGroups
  nameWithType: ConfigurationSectionGroup.SectionGroups
  fullName: System.Configuration.ConfigurationSectionGroup.SectionGroups
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Gets a <see cref="T:System.Configuration.ConfigurationSectionGroupCollection"> object that contains all the <xref:System.Configuration.ConfigurationSectionGroup> objects that are children of this <xref:System.Configuration.ConfigurationSectionGroup> object.
  remarks: ''
  example:
  - "The following code example shows how to access the SectionGroups property. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#8](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#8)]"
  syntax:
    content: public System.Configuration.ConfigurationSectionGroupCollection SectionGroups { get; }
    return:
      type: System.Configuration.ConfigurationSectionGroupCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.Sections
  id: Sections
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: Sections
  nameWithType: ConfigurationSectionGroup.Sections
  fullName: System.Configuration.ConfigurationSectionGroup.Sections
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Gets a <see cref="T:System.Configuration.ConfigurationSectionCollection"> object that contains all of <xref:System.Configuration.ConfigurationSection> objects within this <xref:System.Configuration.ConfigurationSectionGroup> object.
  remarks: ''
  example:
  - "The following code example shows how to access the Sections property. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#7](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#7)]"
  syntax:
    content: public System.Configuration.ConfigurationSectionCollection Sections { get; }
    return:
      type: System.Configuration.ConfigurationSectionCollection
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)
  id: ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  nameWithType: ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  fullName: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Indicates whether the current <see cref="T:System.Configuration.ConfigurationSectionGroup"> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)].
  remarks: "Each configuration section group that is created for the [!INCLUDE[net_v40_long](../../add/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the section group is valid for the specified version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. Existing configuration section groups that were created for earlier versions of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] do not have to be changed.  \n  \n The base type contains a default implementation of this method that always returns `true`. In other words, if a configuration section group implementer does not override this method, by default the configuration section group will be serialized for all framework versions."
  syntax:
    content: protected virtual bool ShouldSerializeSectionGroupInTargetVersion (System.Runtime.Versioning.FrameworkName targetFramework);
    parameters:
    - id: targetFramework
      type: System.Runtime.Versioning.FrameworkName
      description: The target version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)].
    return:
      type: System.Boolean
      description: '`true` if the current section group should be serialized; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSectionGroup.Type
  id: Type
  parent: System.Configuration.ConfigurationSectionGroup
  langs:
  - csharp
  name: Type
  nameWithType: ConfigurationSectionGroup.Type
  fullName: System.Configuration.ConfigurationSectionGroup.Type
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Gets or sets the type for this <see cref="T:System.Configuration.ConfigurationSectionGroup"> object.
  remarks: If this instance of the <xref:System.Configuration.ConfigurationSectionGroup> class is a derived type, the Type property will return the name of the derived type that extends the <xref:System.Configuration.ConfigurationSectionGroup> class.
  example:
  - "The following code example shows how to use the Type property. This is part of a larger example provided in the overview for the <xref:System.Configuration.ConfigurationSectionGroup> class.  \n  \n [!CODE [System.Configuration.ConfigurationSectionGroup#4](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSectionGroup#4)]"
  syntax:
    content: public string Type { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationSectionGroup.#ctor
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ConfigurationSectionGroup()
  nameWithType: ConfigurationSectionGroup.ConfigurationSectionGroup()
  fullName: System.Configuration.ConfigurationSectionGroup.ConfigurationSectionGroup()
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ForceDeclaration()
  nameWithType: ConfigurationSectionGroup.ForceDeclaration()
  fullName: System.Configuration.ConfigurationSectionGroup.ForceDeclaration()
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ForceDeclaration(Boolean)
  nameWithType: ConfigurationSectionGroup.ForceDeclaration(Boolean)
  fullName: System.Configuration.ConfigurationSectionGroup.ForceDeclaration(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: IsDeclarationRequired
  nameWithType: ConfigurationSectionGroup.IsDeclarationRequired
  fullName: System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationSectionGroup.IsDeclared
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: IsDeclared
  nameWithType: ConfigurationSectionGroup.IsDeclared
  fullName: System.Configuration.ConfigurationSectionGroup.IsDeclared
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationSectionGroup.Name
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: Name
  nameWithType: ConfigurationSectionGroup.Name
  fullName: System.Configuration.ConfigurationSectionGroup.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroupName
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: SectionGroupName
  nameWithType: ConfigurationSectionGroup.SectionGroupName
  fullName: System.Configuration.ConfigurationSectionGroup.SectionGroupName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationSectionGroup.SectionGroups
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: SectionGroups
  nameWithType: ConfigurationSectionGroup.SectionGroups
  fullName: System.Configuration.ConfigurationSectionGroup.SectionGroups
- uid: System.Configuration.ConfigurationSectionGroupCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionGroupCollection
  nameWithType: ConfigurationSectionGroupCollection
  fullName: System.Configuration.ConfigurationSectionGroupCollection
- uid: System.Configuration.ConfigurationSectionGroup.Sections
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: Sections
  nameWithType: ConfigurationSectionGroup.Sections
  fullName: System.Configuration.ConfigurationSectionGroup.Sections
- uid: System.Configuration.ConfigurationSectionCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSectionCollection
  nameWithType: ConfigurationSectionCollection
  fullName: System.Configuration.ConfigurationSectionCollection
- uid: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  nameWithType: ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
  fullName: System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(FrameworkName)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Configuration.ConfigurationSectionGroup.Type
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  name: Type
  nameWithType: ConfigurationSectionGroup.Type
  fullName: System.Configuration.ConfigurationSectionGroup.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationSectionGroup.ForceDeclaration*
  parent: System.Configuration.ConfigurationSectionGroup
  isExternal: false
  nameWithType: ConfigurationSectionGroup.
