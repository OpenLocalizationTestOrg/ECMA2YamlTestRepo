### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationSection
  id: ConfigurationSection
  children:
  - System.Configuration.ConfigurationSection.#ctor
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  langs:
  - csharp
  name: ConfigurationSection
  nameWithType: ConfigurationSection
  fullName: System.Configuration.ConfigurationSection
  type: Class
  summary: Represents a section within a configuration file.
  remarks: "You use the ConfigurationSection class to implement a custom section type. Extend the ConfigurationSection class to provide custom handling and programmatic access to custom configuration sections. For information about how use custom configuration sections, see [How to: Create Custom Configuration Sections Using ConfigurationSection](../Topic/How%20to:%20Create%20Custom%20Configuration%20Sections%20Using%20ConfigurationSection.md).  \n  \n A section registers its handling type with an entry in the `configSections` element. For an example, see the configuration file excerpt shown in the Example section.  \n  \n> [!NOTE]\n>  In previous versions of the .NET Framework, configuration section handlers were used to make changes to configuration settings programmatically. Now, all the default configuration sections are represented by classes that extend the ConfigurationSection class."
  example:
  - "The following example shows how to implement a custom section programmatically.  \n  \n For a complete example that shows how to implement and use a custom section implemented using the attributed model, see <xref:System.Configuration.ConfigurationElement>.  \n  \n [!CODE [System.Configuration.ConfigurationSection#1](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSection#1)]  \n  \n The following example is an excerpt of the configuration file as it applies to the previous example.  \n  \n `<?xml version=\"1.0\" encoding=\"utf-8\"?>`  \n  \n `<configuration>`  \n  \n `<configSections>`  \n  \n `<section name=\"CustomSection\" type=\"Samples.AspNet. CustomSection, CustomConfigurationSection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\" allowDefinition=\"Everywhere\" allowExeDefinition=\"MachineToApplication\" restartOnExternalChanges=\"true\" />`  \n  \n `</configSections>`  \n  \n `<CustomSection fileName=\"default.txt\" maxUsers=\"1000\" maxIdleTime=\"00:15:00\" />`  \n  \n `</configuration>`"
  syntax:
    content: 'public abstract class ConfigurationSection : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.#ctor
  id: '#ctor'
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: ConfigurationSection()
  nameWithType: ConfigurationSection.ConfigurationSection()
  fullName: System.Configuration.ConfigurationSection.ConfigurationSection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Initializes a new instance of the <see cref="T:System.Configuration.ConfigurationSection"> class.
  remarks: To use the ConfigurationSection constructor, you need to define a custom section type first. For an example see the <xref:System.Configuration.ConfigurationSection> class overview.
  example:
  - "The following example shows how to use the ConfigurationSection constructor. This example assumes that you have created a custom section class named `CustomSection`. For an example of such a class, see the <xref:System.Configuration.ConfigurationSection> class overview.  \n  \n [!CODE [System.Configuration.ConfigurationSection#2](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSection#2)]"
  syntax:
    content: protected ConfigurationSection ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  id: DeserializeSection(System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: DeserializeSection(XmlReader)
  nameWithType: ConfigurationSection.DeserializeSection(XmlReader)
  fullName: System.Configuration.ConfigurationSection.DeserializeSection(XmlReader)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Reads XML from the configuration file.
  remarks: Deserialization refers to the reading of XML data from a configuration file, its transformation into real-time data, and its storage in an object.
  syntax:
    content: protected virtual void DeserializeSection (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The <xref:System.Xml.XmlReader> object, which reads from the configuration file.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.GetRuntimeObject
  id: GetRuntimeObject
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: GetRuntimeObject()
  nameWithType: ConfigurationSection.GetRuntimeObject()
  fullName: System.Configuration.ConfigurationSection.GetRuntimeObject()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Returns a custom object when overridden in a derived class.
  remarks: "When the <xref:System.Configuration.Configuration.GetSection%2A> method is called at run time, the configuration system first creates an appropriate instance of the <xref:System.Configuration.ConfigurationSection> class, and then returns the object it obtains from the GetRuntimeObject method.  \n  \n By default, GetRuntimeObject simply returns the object that represents the <xref:System.Configuration.ConfigurationSection> from which it is called."
  example:
  - "The following example shows how to use the GetRuntimeObject method.  \n  \n [!CODE [System.Configuration.ConfigurationSection#4](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSection#4)]"
  syntax:
    content: protected virtual object GetRuntimeObject ();
    parameters: []
    return:
      type: System.Object
      description: The object representing the section.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.IsModified
  id: IsModified
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: IsModified()
  nameWithType: ConfigurationSection.IsModified()
  fullName: System.Configuration.ConfigurationSection.IsModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Indicates whether this configuration element has been modified since it was last saved or loaded when implemented in a derived class.
  remarks: To be added.
  syntax:
    content: protected override bool IsModified ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the element has been modified; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.ResetModified
  id: ResetModified
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: ResetModified()
  nameWithType: ConfigurationSection.ResetModified()
  fullName: System.Configuration.ConfigurationSection.ResetModified()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Resets the value of the <xref:System.Configuration.ConfigurationElement.IsModified%2A> method to `false` when implemented in a derived class.
  remarks: To be added.
  syntax:
    content: protected override void ResetModified ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.SectionInformation
  id: SectionInformation
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: SectionInformation
  nameWithType: ConfigurationSection.SectionInformation
  fullName: System.Configuration.ConfigurationSection.SectionInformation
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Gets a <see cref="T:System.Configuration.SectionInformation"> object that contains the non-customizable information and functionality of the <xref:System.Configuration.ConfigurationSection> object.
  remarks: ''
  example:
  - "The following example shows how to use the SectionInformation property.  \n  \n [!CODE [System.Configuration.ConfigurationSection#3](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.ConfigurationSection#3)]"
  syntax:
    content: public System.Configuration.SectionInformation SectionInformation { get; }
    return:
      type: System.Configuration.SectionInformation
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  id: SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: SerializeSection(ConfigurationElement,String,ConfigurationSaveMode)
  nameWithType: ConfigurationSection.SerializeSection(ConfigurationElement,String,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationSection.SerializeSection(ConfigurationElement,String,ConfigurationSaveMode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Creates an XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection"> object as a single section to write to a file.
  remarks: Serialization refers to the transformation of real-time data, contained in an object, to XML format and its storage to a configuration file.
  syntax:
    content: protected virtual string SerializeSection (System.Configuration.ConfigurationElement parentElement, string name, System.Configuration.ConfigurationSaveMode saveMode);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: The <see cref="T:System.Configuration.ConfigurationElement"> instance to use as the parent when performing the un-merge.
    - id: name
      type: System.String
      description: The name of the section to create.
    - id: saveMode
      type: System.Configuration.ConfigurationSaveMode
      description: The <see cref="T:System.Configuration.ConfigurationSaveMode"> instance to use when writing to a string.
    return:
      type: System.String
      description: An XML string containing an unmerged view of the <see cref="T:System.Configuration.ConfigurationSection"> object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  id: ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: ShouldSerializeElementInTargetVersion(ConfigurationElement,String,FrameworkName)
  nameWithType: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement,String,FrameworkName)
  fullName: System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement,String,FrameworkName)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Indicates whether the specified element should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)].
  remarks: "Each configuration section that is created for the [!INCLUDE[net_v40_long](../../add/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the specified element is valid for the specified version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. Existing configuration sections that were created for earlier versions of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] do not have to be changed.  \n  \n The base type contains a default implementation of this method that always returns `true`. If you implement a configuration section and you do not override this method, by default all configuration elements that are contained in the configuration section will be serialized for all framework versions."
  syntax:
    content: protected virtual bool ShouldSerializeElementInTargetVersion (System.Configuration.ConfigurationElement element, string elementName, System.Runtime.Versioning.FrameworkName targetFramework);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: The <see cref="T:System.Configuration.ConfigurationElement"> object that is a candidate for serialization.
    - id: elementName
      type: System.String
      description: The name of the <see cref="T:System.Configuration.ConfigurationElement"> object as it occurs in XML.
    - id: targetFramework
      type: System.Runtime.Versioning.FrameworkName
      description: The target version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)].
    return:
      type: System.Boolean
      description: '`true` if the  should be serialized; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  id: ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: ShouldSerializePropertyInTargetVersion(ConfigurationProperty,String,FrameworkName,ConfigurationElement)
  nameWithType: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty,String,FrameworkName,ConfigurationElement)
  fullName: System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty,String,FrameworkName,ConfigurationElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Indicates whether the specified property should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)].
  remarks: "Each configuration section that is created for the [!INCLUDE[net_v40_long](../../add/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the specified property is valid for the specified version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. Existing configuration sections that were created for earlier versions of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] do not have to be changed.  \n  \n The base type contains a default implementation of this method that always returns `true`. If you implement a configuration section and you do not override this method, by default all configuration properties that are contained in the configuration section will be serialized for all framework versions."
  syntax:
    content: protected virtual bool ShouldSerializePropertyInTargetVersion (System.Configuration.ConfigurationProperty property, string propertyName, System.Runtime.Versioning.FrameworkName targetFramework, System.Configuration.ConfigurationElement parentConfigurationElement);
    parameters:
    - id: property
      type: System.Configuration.ConfigurationProperty
      description: The <see cref="T:System.Configuration.ConfigurationProperty"> object that is a candidate for serialization.
    - id: propertyName
      type: System.String
      description: The name of the <see cref="T:System.Configuration.ConfigurationProperty"> object as it occurs in XML.
    - id: targetFramework
      type: System.Runtime.Versioning.FrameworkName
      description: The target version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)].
    - id: parentConfigurationElement
      type: System.Configuration.ConfigurationElement
      description: The parent element of the property.
    return:
      type: System.Boolean
      description: '`true` if the  should be serialized; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  id: ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  parent: System.Configuration.ConfigurationSection
  langs:
  - csharp
  name: ShouldSerializeSectionInTargetVersion(FrameworkName)
  nameWithType: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)
  fullName: System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: Indicates whether the current <see cref="T:System.Configuration.ConfigurationSection"> instance should be serialized when the configuration object hierarchy is serialized for the specified target version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)].
  remarks: "Each configuration section that is created for the [!INCLUDE[net_v40_long](../../add/includes/net-v40-long-md.md)] and later versions must explicitly override this method and return `true`, but only if the configuration section is valid for the specified version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)]. Existing configuration sections that were created for earlier versions of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] do not have to be changed.  \n  \n The base type contains a default implementation of this method that always returns `true`. If you implement a configuration section and you do not override this method, by default the configuration section will be serialized for all framework versions."
  syntax:
    content: protected virtual bool ShouldSerializeSectionInTargetVersion (System.Runtime.Versioning.FrameworkName targetFramework);
    parameters:
    - id: targetFramework
      type: System.Runtime.Versioning.FrameworkName
      description: The target version of the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)].
    return:
      type: System.Boolean
      description: '`true` if the current section should be serialized; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Configuration.ConfigurationSection.#ctor
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: ConfigurationSection()
  nameWithType: ConfigurationSection.ConfigurationSection()
  fullName: System.Configuration.ConfigurationSection.ConfigurationSection()
- uid: System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: DeserializeSection(XmlReader)
  nameWithType: ConfigurationSection.DeserializeSection(XmlReader)
  fullName: System.Configuration.ConfigurationSection.DeserializeSection(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Configuration.ConfigurationSection.GetRuntimeObject
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: GetRuntimeObject()
  nameWithType: ConfigurationSection.GetRuntimeObject()
  fullName: System.Configuration.ConfigurationSection.GetRuntimeObject()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationSection.IsModified
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: IsModified()
  nameWithType: ConfigurationSection.IsModified()
  fullName: System.Configuration.ConfigurationSection.IsModified()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationSection.ResetModified
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: ResetModified()
  nameWithType: ConfigurationSection.ResetModified()
  fullName: System.Configuration.ConfigurationSection.ResetModified()
- uid: System.Configuration.ConfigurationSection.SectionInformation
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: SectionInformation
  nameWithType: ConfigurationSection.SectionInformation
  fullName: System.Configuration.ConfigurationSection.SectionInformation
- uid: System.Configuration.SectionInformation
  parent: System.Configuration
  isExternal: false
  name: SectionInformation
  nameWithType: SectionInformation
  fullName: System.Configuration.SectionInformation
- uid: System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: SerializeSection(ConfigurationElement,String,ConfigurationSaveMode)
  nameWithType: ConfigurationSection.SerializeSection(ConfigurationElement,String,ConfigurationSaveMode)
  fullName: System.Configuration.ConfigurationSection.SerializeSection(ConfigurationElement,String,ConfigurationSaveMode)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ConfigurationSaveMode
  parent: System.Configuration
  isExternal: false
  name: ConfigurationSaveMode
  nameWithType: ConfigurationSaveMode
  fullName: System.Configuration.ConfigurationSaveMode
- uid: System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: ShouldSerializeElementInTargetVersion(ConfigurationElement,String,FrameworkName)
  nameWithType: ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement,String,FrameworkName)
  fullName: System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement,String,FrameworkName)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: ShouldSerializePropertyInTargetVersion(ConfigurationProperty,String,FrameworkName,ConfigurationElement)
  nameWithType: ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty,String,FrameworkName,ConfigurationElement)
  fullName: System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty,String,FrameworkName,ConfigurationElement)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  parent: System.Configuration.ConfigurationSection
  isExternal: false
  name: ShouldSerializeSectionInTargetVersion(FrameworkName)
  nameWithType: ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)
  fullName: System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
