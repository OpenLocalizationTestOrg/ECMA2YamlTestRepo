### YamlMime:ManagedReference
items:
- uid: System.Resources.MissingManifestResourceException
  id: MissingManifestResourceException
  children:
  - System.Resources.MissingManifestResourceException.#ctor
  - System.Resources.MissingManifestResourceException.#ctor(System.String)
  - System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: MissingManifestResourceException
  nameWithType: MissingManifestResourceException
  fullName: System.Resources.MissingManifestResourceException
  type: Class
  summary: The exception that is thrown if the main assembly does not contain the resources for the neutral culture, and an appropriate satellite assembly is missing.
  remarks: "## Desktop Apps  \n In desktop apps, MissingManifestResourceException is thrown when the attempt to retrieve a resource fails because the resource set for the neutral culture could not be loaded from a particular assembly. Although the exception is thrown when you try to retrieve a particular resource, it is caused by the failure to load the resource set rather than the failure to find the resource.  \n  \n> [!NOTE]\n>  For additional information, see the \"Handling a MissingManifestResourceException Exception\" section in the <xref:System.Resources.ResourceManager> class topic.  \n  \n The main causes of the exception include the following:  \n  \n-   The resource set is not identified by its fully qualified name. For example, if the  parameter in the call to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> method specifies the root name of the resource set without a namespace, but the resource set is assigned a namespace when it is stored in its assembly, the call to the <xref:System.Resources.ResourceManager.GetString%2A?displayProperty=fullName> method throws this exception.  \n  \n     If you have embedded the .resources file that contains the default culture's resources in your executable and your app is throwing a MissingManifestResourceException, you can use a reflection tool such as  to determine the fully qualified name of the resource. In ILDasm, double click the executable's **MANIFEST** label to open the **MANIFEST** window. Resources appear as `.mresource` items and are listed after external assembly references and custom assembly-level attributes. You can also compile the following simple utility, which lists the fully qualified names of embedded resources in the assembly whose name is passed to it as a command-line parameter.  \n  \n     [!CODE [System.Resources.ResourceManager.Class#4](../CodeSnippet/VS_Snippets_CLR_System/system.resources.resourcemanager.class#4)]  \n  \n-   You identify the resource set by its resource file name (along with its optional namespace) and its file extension rather than by its namespace and root file name alone. For example, this exception is thrown if the neutral culture's resource set is named `GlobalResources` and you supply a value of `GlobalResources.resources` (instead of `GlobalResources`) to the  parameter of the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=fullName> constructor.  \n  \n-   The culture-specific resource set that is identified in a method call cannot be found, and the fallback resource set cannot be loaded. For example, if you create satellite assemblies for the English (United States) and Russia (Russian) cultures but you fail to provide a resource set for the neutral culture, this exception is thrown if your app's current culture is English (Great Britain).  \n  \n MissingManifestResourceException uses the HRESULT COR_E_MISSINGMANIFESTRESOURCE, which has the value 0x80131532.  \n  \n MissingManifestResourceException uses the default <xref:System.Object.Equals%2A> implementation, which supports reference equality.  \n  \n For a list of initial property values for an instance of MissingManifestResourceException, see the <xref:System.Resources.MissingManifestResourceException.%23ctor%2A> constructors.  \n  \n> [!NOTE]\n>  We recommend that you include a neutral set of resources in your main assembly, so your app won't fail if a satellite assembly is unavailable.  \n  \n## [!INCLUDE[win8_appname_long](../../add/includes/win8-appname-long-md.md)] Apps  \n Unlike desktop apps, which deploy localized resources in satellite assemblies and typically store the resources of the neutral culture in the main assembly, [!INCLUDE[win8_appname_long](../../add/includes/win8-appname-long-md.md)] apps deploy resources for multiple cultures, including the neutral culture, in a single package resource index (.pri) file. As a result, in a [!INCLUDE[win8_appname_long](../../add/includes/win8-appname-long-md.md)] app, if resources for the preferred culture cannot be found, the MissingManifestResourceException is thrown under either of the following conditions:  \n  \n-   The app does not include a .pri file or the .pri file could not be opened.  \n  \n-   The app's .pri file does not contain a resource set for the given root name."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class MissingManifestResourceException : SystemException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Resources.MissingManifestResourceException.#ctor
  id: '#ctor'
  parent: System.Resources.MissingManifestResourceException
  langs:
  - csharp
  name: MissingManifestResourceException()
  nameWithType: MissingManifestResourceException.MissingManifestResourceException()
  fullName: System.Resources.MissingManifestResourceException.MissingManifestResourceException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Initializes a new instance of the <see cref="T:System.Resources.MissingManifestResourceException"> class with default properties.
  remarks: "The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The localized error message for <xref:System.Resources.MissingManifestResourceException>.|"
  syntax:
    content: public MissingManifestResourceException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Resources.MissingManifestResourceException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.MissingManifestResourceException
  langs:
  - csharp
  name: MissingManifestResourceException(String)
  nameWithType: MissingManifestResourceException.MissingManifestResourceException(String)
  fullName: System.Resources.MissingManifestResourceException.MissingManifestResourceException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Initializes a new instance of the <see cref="T:System.Resources.MissingManifestResourceException"> class with the specified error message.
  remarks: "The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The  string.|"
  syntax:
    content: public MissingManifestResourceException (string message);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Resources.MissingManifestResourceException
  langs:
  - csharp
  name: MissingManifestResourceException(SerializationInfo,StreamingContext)
  nameWithType: MissingManifestResourceException.MissingManifestResourceException(SerializationInfo,StreamingContext)
  fullName: System.Resources.MissingManifestResourceException.MissingManifestResourceException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Initializes a new instance of the <see cref="T:System.Resources.MissingManifestResourceException"> class from serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
  syntax:
    content: protected MissingManifestResourceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination of the exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Resources.MissingManifestResourceException
  langs:
  - csharp
  name: MissingManifestResourceException(String,Exception)
  nameWithType: MissingManifestResourceException.MissingManifestResourceException(String,Exception)
  fullName: System.Resources.MissingManifestResourceException.MissingManifestResourceException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Resources
  summary: Initializes a new instance of the <see cref="T:System.Resources.MissingManifestResourceException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Resources.MissingManifestResourceException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public MissingManifestResourceException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Resources.MissingManifestResourceException.#ctor
  parent: System.Resources.MissingManifestResourceException
  isExternal: false
  name: MissingManifestResourceException()
  nameWithType: MissingManifestResourceException.MissingManifestResourceException()
  fullName: System.Resources.MissingManifestResourceException.MissingManifestResourceException()
- uid: System.Resources.MissingManifestResourceException.#ctor(System.String)
  parent: System.Resources.MissingManifestResourceException
  isExternal: false
  name: MissingManifestResourceException(String)
  nameWithType: MissingManifestResourceException.MissingManifestResourceException(String)
  fullName: System.Resources.MissingManifestResourceException.MissingManifestResourceException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Resources.MissingManifestResourceException
  isExternal: false
  name: MissingManifestResourceException(SerializationInfo,StreamingContext)
  nameWithType: MissingManifestResourceException.MissingManifestResourceException(SerializationInfo,StreamingContext)
  fullName: System.Resources.MissingManifestResourceException.MissingManifestResourceException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Resources.MissingManifestResourceException.#ctor(System.String,System.Exception)
  parent: System.Resources.MissingManifestResourceException
  isExternal: false
  name: MissingManifestResourceException(String,Exception)
  nameWithType: MissingManifestResourceException.MissingManifestResourceException(String,Exception)
  fullName: System.Resources.MissingManifestResourceException.MissingManifestResourceException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
