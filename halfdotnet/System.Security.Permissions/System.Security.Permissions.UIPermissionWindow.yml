### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UIPermissionWindow
  id: UIPermissionWindow
  children:
  - System.Security.Permissions.UIPermissionWindow.AllWindows
  - System.Security.Permissions.UIPermissionWindow.NoWindows
  - System.Security.Permissions.UIPermissionWindow.SafeSubWindows
  - System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows
  langs:
  - csharp
  name: UIPermissionWindow
  nameWithType: UIPermissionWindow
  fullName: System.Security.Permissions.UIPermissionWindow
  type: Enum
  summary: Specifies the type of windows that code is allowed to use.
  remarks: This enumeration is used by <xref:System.Security.Permissions.UIPermission>.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum UIPermissionWindow
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.UIPermissionWindow.AllWindows
  id: AllWindows
  parent: System.Security.Permissions.UIPermissionWindow
  langs:
  - csharp
  name: AllWindows
  nameWithType: UIPermissionWindow.AllWindows
  fullName: System.Security.Permissions.UIPermissionWindow.AllWindows
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Users can use all windows and user input events without restriction.
  syntax:
    content: AllWindows
    return:
      type: System.Security.Permissions.UIPermissionWindow
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.UIPermissionWindow.NoWindows
  id: NoWindows
  parent: System.Security.Permissions.UIPermissionWindow
  langs:
  - csharp
  name: NoWindows
  nameWithType: UIPermissionWindow.NoWindows
  fullName: System.Security.Permissions.UIPermissionWindow.NoWindows
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Users cannot use any windows or user interface events. No user interface can be used.
  syntax:
    content: NoWindows
    return:
      type: System.Security.Permissions.UIPermissionWindow
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.UIPermissionWindow.SafeSubWindows
  id: SafeSubWindows
  parent: System.Security.Permissions.UIPermissionWindow
  langs:
  - csharp
  name: SafeSubWindows
  nameWithType: UIPermissionWindow.SafeSubWindows
  fullName: System.Security.Permissions.UIPermissionWindow.SafeSubWindows
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Users can only use F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows?qualifyHint=False&autoUpgrade=True for drawing, and can only use user input events for user interface within that subwindow. Examples of F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows?qualifyHint=False&autoUpgrade=True are a T:System.Windows.Forms.MessageBox?qualifyHint=False&autoUpgrade=True, common dialog controls, and a control displayed within a browser.
  syntax:
    content: SafeSubWindows
    return:
      type: System.Security.Permissions.UIPermissionWindow
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows
  id: SafeTopLevelWindows
  parent: System.Security.Permissions.UIPermissionWindow
  langs:
  - csharp
  name: SafeTopLevelWindows
  nameWithType: UIPermissionWindow.SafeTopLevelWindows
  fullName: System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Users can only use F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?qualifyHint=False&autoUpgrade=True and F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows?qualifyHint=False&autoUpgrade=True for drawing, and can only use user input events for the user interface within those top-level windows and subwindows.
  remarks: "When it runs under F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?qualifyHint=False&autoUpgrade=True permission, your application:  \n  \n-   Will show the DNS name or IP address of the Web site from which the application was loaded in its title bar.  \n  \n-   Will display Balloon tool-tip when it first displays, informing the user that it is running under a restricted trust level.  \n  \n-   Must display its title bar at all times.  \n  \n-   Must display window controls on its forms.  \n  \n-   Cannot minimize its main window on startup.  \n  \n-   Cannot move its windows off-screen.  \n  \n-   Cannot use the P:System.Windows.Forms.Form.Opacity?qualifyHint=False&autoUpgrade=True property on T:System.Windows.Forms.Form?qualifyHint=False&autoUpgrade=True to make its windows less than 50% transparent.  \n  \n-   Must use only rectangular windows, and must include the window frame. Windows Forms will not honor setting P:System.Windows.Forms.Form.FormBorderStyle?qualifyHint=False&autoUpgrade=True to `None`.  \n  \n-   Cannot make windows invisible. Any attempt by the application to set the P:System.Windows.Forms.Control.Visible?qualifyHint=False&autoUpgrade=True property on its T:System.Windows.Forms.Form?qualifyHint=False&autoUpgrade=True objects to `False` will be ignored.  \n  \n-   Must have an entry in the Task Bar.  \n  \n-   Will have its controls prohibited from accessing the P:System.Windows.Forms.Control.Parent?qualifyHint=False&autoUpgrade=True property. By implication, controls will also be barred from accessing siblings - i.e., other controls at the same level of nesting.  \n  \n-   Cannot control focus using the M:System.Windows.Forms.Control.Focus?qualifyHint=False&autoUpgrade=True method.  \n  \n-   Will have restricted keyboard input access, so that a form or control can only access keyboard events for itself and its children.  \n  \n-   Will have restricted mouse coordinate access, so that a form or control can only read mouse coordinates if the mouse is over its visible area.  \n  \n-   Cannot set the P:System.Windows.Forms.Form.TopMost?qualifyHint=False&autoUpgrade=True property.  \n  \n-   Cannot control the z-order of controls on the form using the M:System.Windows.Forms.Control.BringToFront?qualifyHint=False&autoUpgrade=True and M:System.Windows.Forms.Control.SendToBack?qualifyHint=False&autoUpgrade=True methods.  \n  \n These restrictions help prevent potentially harmful code from spoofing attacks, such as imitating trusted system dialogs."
  syntax:
    content: SafeTopLevelWindows
    return:
      type: System.Security.Permissions.UIPermissionWindow
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.UIPermissionWindow.AllWindows
  parent: System.Security.Permissions.UIPermissionWindow
  isExternal: false
  name: AllWindows
  nameWithType: UIPermissionWindow.AllWindows
  fullName: System.Security.Permissions.UIPermissionWindow.AllWindows
- uid: System.Security.Permissions.UIPermissionWindow
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionWindow
  nameWithType: UIPermissionWindow
  fullName: System.Security.Permissions.UIPermissionWindow
- uid: System.Security.Permissions.UIPermissionWindow.NoWindows
  parent: System.Security.Permissions.UIPermissionWindow
  isExternal: false
  name: NoWindows
  nameWithType: UIPermissionWindow.NoWindows
  fullName: System.Security.Permissions.UIPermissionWindow.NoWindows
- uid: System.Security.Permissions.UIPermissionWindow
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionWindow
  nameWithType: UIPermissionWindow
  fullName: System.Security.Permissions.UIPermissionWindow
- uid: System.Security.Permissions.UIPermissionWindow.SafeSubWindows
  parent: System.Security.Permissions.UIPermissionWindow
  isExternal: false
  name: SafeSubWindows
  nameWithType: UIPermissionWindow.SafeSubWindows
  fullName: System.Security.Permissions.UIPermissionWindow.SafeSubWindows
- uid: System.Security.Permissions.UIPermissionWindow
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionWindow
  nameWithType: UIPermissionWindow
  fullName: System.Security.Permissions.UIPermissionWindow
- uid: System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows
  parent: System.Security.Permissions.UIPermissionWindow
  isExternal: false
  name: SafeTopLevelWindows
  nameWithType: UIPermissionWindow.SafeTopLevelWindows
  fullName: System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows
- uid: System.Security.Permissions.UIPermissionWindow
  parent: System.Security.Permissions
  isExternal: false
  name: UIPermissionWindow
  nameWithType: UIPermissionWindow
  fullName: System.Security.Permissions.UIPermissionWindow
