### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileIOPermissionAccess
  id: FileIOPermissionAccess
  children:
  - System.Security.Permissions.FileIOPermissionAccess.AllAccess
  - System.Security.Permissions.FileIOPermissionAccess.Append
  - System.Security.Permissions.FileIOPermissionAccess.NoAccess
  - System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  - System.Security.Permissions.FileIOPermissionAccess.Read
  - System.Security.Permissions.FileIOPermissionAccess.Write
  langs:
  - csharp
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
  type: Enum
  summary: Specifies the type of file access requested.
  remarks: "This enumeration is used with the <xref:System.Security.Permissions.FileIOPermission> class.  \n  \n> [!NOTE]\n>  Although F:System.Security.Permissions.FileIOPermissionAccess.NoAccess?qualifyHint=False&autoUpgrade=True and F:System.Security.Permissions.FileIOPermissionAccess.AllAccess?qualifyHint=False&autoUpgrade=True are members of FileIOPermissionAccess, they are not valid for use as the parameter for M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)?qualifyHint=False&autoUpgrade=True because they describe no file access types or all file access types, respectively, and M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)?qualifyHint=False&autoUpgrade=True expects a single file access type.  \n  \n> [!NOTE]\n>  Giving F:System.Security.Permissions.FileIOPermissionAccess.Write?qualifyHint=False&autoUpgrade=True access to an assembly is similar to granting it Full Trust. If an application should not write to the file system it should not have F:System.Security.Permissions.FileIOPermissionAccess.Write?qualifyHint=False&autoUpgrade=True access."
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileIOPermissionAccess
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  id: AllAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: AllAccess
  nameWithType: FileIOPermissionAccess.AllAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: F:System.Security.Permissions.FileIOPermissionAccess.Append?qualifyHint=False&autoUpgrade=True, F:System.Security.Permissions.FileIOPermissionAccess.Read?qualifyHint=False&autoUpgrade=True, F:System.Security.Permissions.FileIOPermissionAccess.Write?qualifyHint=False&autoUpgrade=True, and F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?qualifyHint=False&autoUpgrade=True access to a file or directory. F:System.Security.Permissions.FileIOPermissionAccess.AllAccess?qualifyHint=False&autoUpgrade=True represents multiple FileIOPermissionAccess values and causes an T:System.ArgumentException?qualifyHint=False&autoUpgrade=True when used as the  parameter for the M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)?qualifyHint=False&autoUpgrade=True method, which expects a single value.
  syntax:
    content: AllAccess
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.FileIOPermissionAccess.Append
  id: Append
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Append
  nameWithType: FileIOPermissionAccess.Append
  fullName: System.Security.Permissions.FileIOPermissionAccess.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Access to append material to a file or directory. F:System.Security.Permissions.FileIOPermissionAccess.Append?qualifyHint=False&autoUpgrade=True access includes the ability to create a new file or directory.
  remarks: >-
    > [!NOTE]

    >  To create files, code must also be granted both F:System.Security.Permissions.FileIOPermissionAccess.Append?qualifyHint=False&autoUpgrade=True and either F:System.Security.Permissions.FileIOPermissionAccess.Write?qualifyHint=False&autoUpgrade=True or F:System.Security.Permissions.FileIOPermissionAccess.Read?qualifyHint=False&autoUpgrade=True access. For more detail see T:System.IO.FileMode?qualifyHint=False&autoUpgrade=True.
  syntax:
    content: Append
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  id: NoAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: NoAccess
  nameWithType: FileIOPermissionAccess.NoAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: No access to a file or directory. F:System.Security.Permissions.FileIOPermissionAccess.NoAccess?qualifyHint=False&autoUpgrade=True represents no valid FileIOPermissionAccess values and causes an T:System.ArgumentException?qualifyHint=False&autoUpgrade=True when used as the parameter for M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)?qualifyHint=False&autoUpgrade=True, which expects a single value.
  syntax:
    content: NoAccess
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  id: PathDiscovery
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: PathDiscovery
  nameWithType: FileIOPermissionAccess.PathDiscovery
  fullName: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path.
  remarks: >-
    > [!NOTE]

    >  For performance reasons, `PathDiscovery` should only be granted to directories, not to files. For example, `PathDiscovery` permission should be granted to paths such as C:\test and C:\test\\, not C:\test\example.txt.
  syntax:
    content: PathDiscovery
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.FileIOPermissionAccess.Read
  id: Read
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Read
  nameWithType: FileIOPermissionAccess.Read
  fullName: System.Security.Permissions.FileIOPermissionAccess.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Access to read from a file or directory.
  syntax:
    content: Read
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.FileIOPermissionAccess.Write
  id: Write
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Write
  nameWithType: FileIOPermissionAccess.Write
  fullName: System.Security.Permissions.FileIOPermissionAccess.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Access to write to or delete a file or directory. F:System.Security.Permissions.FileIOPermissionAccess.Write?qualifyHint=False&autoUpgrade=True access includes deleting and overwriting files or directories.
  syntax:
    content: Write
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: AllAccess
  nameWithType: FileIOPermissionAccess.AllAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.AllAccess
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.Append
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Append
  nameWithType: FileIOPermissionAccess.Append
  fullName: System.Security.Permissions.FileIOPermissionAccess.Append
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: NoAccess
  nameWithType: FileIOPermissionAccess.NoAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.NoAccess
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: PathDiscovery
  nameWithType: FileIOPermissionAccess.PathDiscovery
  fullName: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.Read
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Read
  nameWithType: FileIOPermissionAccess.Read
  fullName: System.Security.Permissions.FileIOPermissionAccess.Read
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.Write
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Write
  nameWithType: FileIOPermissionAccess.Write
  fullName: System.Security.Permissions.FileIOPermissionAccess.Write
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
