### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SecurityAttribute
  id: SecurityAttribute
  children:
  - System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.CreatePermission
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  langs:
  - csharp
  name: SecurityAttribute
  nameWithType: SecurityAttribute
  fullName: System.Security.Permissions.SecurityAttribute
  type: Class
  summary: Specifies the base attribute class for declarative security from which <see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute"> is derived.
  remarks: To be added.
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SecurityAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.SecurityAttribute
  langs:
  - csharp
  name: SecurityAttribute(SecurityAction)
  nameWithType: SecurityAttribute.SecurityAttribute(SecurityAction)
  fullName: System.Security.Permissions.SecurityAttribute.SecurityAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Initializes a new instance of <see cref="T:System.Security.Permissions.SecurityAttribute"> with the specified <xref:System.Security.Permissions.SecurityAction>.
  remarks: You cannot create an instance of this class. You must inherit from this class to make use of its functionality. The value of  is used to set the <xref:System.Security.Permissions.SecurityAttribute.Action%2A> property.
  syntax:
    content: protected SecurityAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: One of the <see cref="T:System.Security.Permissions.SecurityAction"> values.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.SecurityAttribute.Action
  id: Action
  parent: System.Security.Permissions.SecurityAttribute
  langs:
  - csharp
  name: Action
  nameWithType: SecurityAttribute.Action
  fullName: System.Security.Permissions.SecurityAttribute.Action
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Gets or sets a security action.
  remarks: This property is inherited by all classes implementing custom attributes for declarative security.
  example:
  - "The following code example demonstrates a typical permission that specifies a <xref:System.Security.Permissions.SecurityAction> value. This value will be used to set the Action property.  \n  \n [!CODE [Classic FileIOPermissionAttribute Example#1](../CodeSnippet/VS_Snippets_CLR_Classic/classic FileIOPermissionAttribute Example#1)]"
  syntax:
    content: public System.Security.Permissions.SecurityAction Action { get; set; }
    return:
      type: System.Security.Permissions.SecurityAction
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.SecurityAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.SecurityAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: SecurityAttribute.CreatePermission()
  fullName: System.Security.Permissions.SecurityAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: When overridden in a derived class, creates a permission object that can then be serialized into binary form and persistently stored along with the <see cref="T:System.Security.Permissions.SecurityAction"> in an assembly's metadata.
  remarks: At compile time, attributes convert security declarations to a serialized form in metadata. Declarative security data in metadata is created from the permission that this method returns that corresponds to this attribute.
  syntax:
    content: public abstract System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: A serializable permission object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Permissions.SecurityAttribute.Unrestricted
  id: Unrestricted
  parent: System.Security.Permissions.SecurityAttribute
  langs:
  - csharp
  name: Unrestricted
  nameWithType: SecurityAttribute.Unrestricted
  fullName: System.Security.Permissions.SecurityAttribute.Unrestricted
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: Gets or sets a value indicating whether full (unrestricted) permission to the resource protected by the attribute is declared.
  remarks: This property is inherited by all classes implementing custom attributes for declarative security.
  syntax:
    content: public bool Unrestricted { get; set; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Security.Permissions.SecurityAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: SecurityAttribute(SecurityAction)
  nameWithType: SecurityAttribute.SecurityAttribute(SecurityAction)
  fullName: System.Security.Permissions.SecurityAttribute.SecurityAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.SecurityAttribute.Action
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Action
  nameWithType: SecurityAttribute.Action
  fullName: System.Security.Permissions.SecurityAttribute.Action
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.SecurityAttribute.CreatePermission
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: SecurityAttribute.CreatePermission()
  fullName: System.Security.Permissions.SecurityAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SecurityAttribute.Unrestricted
  parent: System.Security.Permissions.SecurityAttribute
  isExternal: false
  name: Unrestricted
  nameWithType: SecurityAttribute.Unrestricted
  fullName: System.Security.Permissions.SecurityAttribute.Unrestricted
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
