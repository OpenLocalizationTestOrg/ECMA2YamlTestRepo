### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Tracing.EventAttribute
  id: EventAttribute
  children:
  - System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)
  - System.Diagnostics.Tracing.EventAttribute.ActivityOptions
  - System.Diagnostics.Tracing.EventAttribute.Channel
  - System.Diagnostics.Tracing.EventAttribute.EventId
  - System.Diagnostics.Tracing.EventAttribute.Keywords
  - System.Diagnostics.Tracing.EventAttribute.Level
  - System.Diagnostics.Tracing.EventAttribute.Message
  - System.Diagnostics.Tracing.EventAttribute.Opcode
  - System.Diagnostics.Tracing.EventAttribute.Tags
  - System.Diagnostics.Tracing.EventAttribute.Task
  - System.Diagnostics.Tracing.EventAttribute.Version
  langs:
  - csharp
  name: EventAttribute
  nameWithType: EventAttribute
  fullName: System.Diagnostics.Tracing.EventAttribute
  type: Class
  summary: Specifies additional event schema information for an event.
  remarks: When you apply this attribute to an ETW event method defined on an <xref:System.Diagnostics.Tracing.EventSource>-derived class, you must call the <xref:System.Diagnostics.Tracing.EventSource.WriteEvent%2A> method on the base class, passing the event ID, followed by the same arguments as the defined method is passed. You should follow the pattern shown in the following examples.
  example:
  - "The following example shows how to use the EventAttribute class to define a variety of events. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \n  \n [!CODE [ETWTrace#5](../CodeSnippet/VS_Snippets_CLR/etwtrace#5)]  \n  \n [!CODE [ETWTrace#6](../CodeSnippet/VS_Snippets_CLR/etwtrace#6)]  \n  \n [!CODE [ETWTrace#7](../CodeSnippet/VS_Snippets_CLR/etwtrace#7)]  \n  \n [!CODE [ETWTrace#8](../CodeSnippet/VS_Snippets_CLR/etwtrace#8)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class EventAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: EventAttribute(Int32)
  nameWithType: EventAttribute.EventAttribute(Int32)
  fullName: System.Diagnostics.Tracing.EventAttribute.EventAttribute(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Initializes a new instance of the <see cref="T:System.Diagnostics.Tracing.EventAttribute"> class with the specified event identifier.
  remarks: ''
  example:
  - "The following example shows how to use the EventAttribute constructor to specify events. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \n  \n [!CODE [ETWTrace#1](../CodeSnippet/VS_Snippets_CLR/etwtrace#1)]  \n  \n [!CODE [ETWTrace#2](../CodeSnippet/VS_Snippets_CLR/etwtrace#2)]"
  syntax:
    content: public EventAttribute (int eventId);
    parameters:
    - id: eventId
      type: System.Int32
      description: The event identifier for the event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.ActivityOptions
  id: ActivityOptions
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: ActivityOptions
  nameWithType: EventAttribute.ActivityOptions
  fullName: System.Diagnostics.Tracing.EventAttribute.ActivityOptions
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Specifies the behavior of the start and stop events of an activity. An activity is the region of time in an app between the start and the stop.
  remarks: To be added.
  syntax:
    content: public System.Diagnostics.Tracing.EventActivityOptions ActivityOptions { get; set; }
    return:
      type: System.Diagnostics.Tracing.EventActivityOptions
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.Channel
  id: Channel
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: Channel
  nameWithType: EventAttribute.Channel
  fullName: System.Diagnostics.Tracing.EventAttribute.Channel
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Gets or sets an additional event log where the event should be written.
  remarks: To be added.
  syntax:
    content: public System.Diagnostics.Tracing.EventChannel Channel { get; set; }
    return:
      type: System.Diagnostics.Tracing.EventChannel
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.EventId
  id: EventId
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: EventId
  nameWithType: EventAttribute.EventId
  fullName: System.Diagnostics.Tracing.EventAttribute.EventId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Gets or sets the identifier for the event.
  remarks: EventId should be greater than 0 or less than 65535 or errors can occur in a tracing operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.
  syntax:
    content: public int EventId { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.Keywords
  id: Keywords
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: Keywords
  nameWithType: EventAttribute.Keywords
  fullName: System.Diagnostics.Tracing.EventAttribute.Keywords
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Gets or sets the keywords for the event.
  remarks: ''
  example:
  - "The following example shows how to use the Keywords property to define event keywords. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \n  \n [!CODE [ETWTrace#3](../CodeSnippet/VS_Snippets_CLR/etwtrace#3)]  \n  \n [!CODE [ETWTrace#5](../CodeSnippet/VS_Snippets_CLR/etwtrace#5)]  \n  \n [!CODE [ETWTrace#6](../CodeSnippet/VS_Snippets_CLR/etwtrace#6)]  \n  \n [!CODE [ETWTrace#7](../CodeSnippet/VS_Snippets_CLR/etwtrace#7)]"
  syntax:
    content: public System.Diagnostics.Tracing.EventKeywords Keywords { get; set; }
    return:
      type: System.Diagnostics.Tracing.EventKeywords
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.Level
  id: Level
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: Level
  nameWithType: EventAttribute.Level
  fullName: System.Diagnostics.Tracing.EventAttribute.Level
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Gets or sets the level for the event.
  remarks: ''
  example:
  - "The following example shows how to use the Level property to specify event levels. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \n  \n [!CODE [ETWTrace#5](../CodeSnippet/VS_Snippets_CLR/etwtrace#5)]  \n  \n [!CODE [ETWTrace#6](../CodeSnippet/VS_Snippets_CLR/etwtrace#6)]  \n  \n [!CODE [ETWTrace#11](../CodeSnippet/VS_Snippets_CLR/etwtrace#11)]"
  syntax:
    content: public System.Diagnostics.Tracing.EventLevel Level { get; set; }
    return:
      type: System.Diagnostics.Tracing.EventLevel
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.Message
  id: Message
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: Message
  nameWithType: EventAttribute.Message
  fullName: System.Diagnostics.Tracing.EventAttribute.Message
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Gets or sets the message for the event.
  remarks: "You can use standard .NET Framework substitution operators (for example, {1}) in the string). They will be replaced with the string representation of the corresponding part of the event payload.  \n  \n```  \n[Event(1, Message = \"Application Falure: {0}\", Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]  \n        public void Failure(string message) { WriteEvent(1, message); }  \n  \n```"
  example:
  - "The following example shows how to use the Message property to specify event messages. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \n  \n [!CODE [ETWTrace#5](../CodeSnippet/VS_Snippets_CLR/etwtrace#5)]  \n  \n [!CODE [ETWTrace#6](../CodeSnippet/VS_Snippets_CLR/etwtrace#6)]  \n  \n [!CODE [ETWTrace#7](../CodeSnippet/VS_Snippets_CLR/etwtrace#7)]"
  syntax:
    content: public string Message { get; set; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.Opcode
  id: Opcode
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: Opcode
  nameWithType: EventAttribute.Opcode
  fullName: System.Diagnostics.Tracing.EventAttribute.Opcode
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Gets or sets the operation code for the event.
  remarks: ''
  example:
  - "The following example shows how to use the Opcode property to specify operation codes. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \n  \n [!CODE [ETWTrace#8](../CodeSnippet/VS_Snippets_CLR/etwtrace#8)]  \n  \n [!CODE [ETWTrace#9](../CodeSnippet/VS_Snippets_CLR/etwtrace#9)]  \n  \n [!CODE [ETWTrace#10](../CodeSnippet/VS_Snippets_CLR/etwtrace#10)]"
  syntax:
    content: public System.Diagnostics.Tracing.EventOpcode Opcode { get; set; }
    return:
      type: System.Diagnostics.Tracing.EventOpcode
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.Tags
  id: Tags
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: Tags
  nameWithType: EventAttribute.Tags
  fullName: System.Diagnostics.Tracing.EventAttribute.Tags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Gets and sets the <see cref="T:System.Diagnostics.Tracing.EventTags"> value for this <xref:System.Diagnostics.Tracing.EventAttribute> object. An event tag is a user-defined value that is passed through when the event is logged.
  remarks: To be added.
  syntax:
    content: public System.Diagnostics.Tracing.EventTags Tags { get; set; }
    return:
      type: System.Diagnostics.Tracing.EventTags
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.Task
  id: Task
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: Task
  nameWithType: EventAttribute.Task
  fullName: System.Diagnostics.Tracing.EventAttribute.Task
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Gets or sets the task for the event.
  remarks: ''
  example:
  - "The following example shows how to use the Task property to define event tasks. This code example is part of a larger example provided for the <xref:System.Diagnostics.Tracing.EventSource> class.  \n  \n [!CODE [ETWTrace#4](../CodeSnippet/VS_Snippets_CLR/etwtrace#4)]  \n  \n [!CODE [ETWTrace#8](../CodeSnippet/VS_Snippets_CLR/etwtrace#8)]  \n  \n [!CODE [ETWTrace#9](../CodeSnippet/VS_Snippets_CLR/etwtrace#9)]"
  syntax:
    content: public System.Diagnostics.Tracing.EventTask Task { get; set; }
    return:
      type: System.Diagnostics.Tracing.EventTask
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Diagnostics.Tracing.EventAttribute.Version
  id: Version
  parent: System.Diagnostics.Tracing.EventAttribute
  langs:
  - csharp
  name: Version
  nameWithType: EventAttribute.Version
  fullName: System.Diagnostics.Tracing.EventAttribute.Version
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.Tracing
  summary: Gets or sets the version of the event.
  remarks: To be added.
  syntax:
    content: public byte Version { get; set; }
    return:
      type: System.Byte
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Diagnostics.Tracing.EventAttribute.#ctor(System.Int32)
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: EventAttribute(Int32)
  nameWithType: EventAttribute.EventAttribute(Int32)
  fullName: System.Diagnostics.Tracing.EventAttribute.EventAttribute(Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Tracing.EventAttribute.ActivityOptions
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: ActivityOptions
  nameWithType: EventAttribute.ActivityOptions
  fullName: System.Diagnostics.Tracing.EventAttribute.ActivityOptions
- uid: System.Diagnostics.Tracing.EventActivityOptions
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventActivityOptions
  nameWithType: EventActivityOptions
  fullName: System.Diagnostics.Tracing.EventActivityOptions
- uid: System.Diagnostics.Tracing.EventAttribute.Channel
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: Channel
  nameWithType: EventAttribute.Channel
  fullName: System.Diagnostics.Tracing.EventAttribute.Channel
- uid: System.Diagnostics.Tracing.EventChannel
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventChannel
  nameWithType: EventChannel
  fullName: System.Diagnostics.Tracing.EventChannel
- uid: System.Diagnostics.Tracing.EventAttribute.EventId
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: EventId
  nameWithType: EventAttribute.EventId
  fullName: System.Diagnostics.Tracing.EventAttribute.EventId
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Tracing.EventAttribute.Keywords
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: Keywords
  nameWithType: EventAttribute.Keywords
  fullName: System.Diagnostics.Tracing.EventAttribute.Keywords
- uid: System.Diagnostics.Tracing.EventKeywords
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventKeywords
  nameWithType: EventKeywords
  fullName: System.Diagnostics.Tracing.EventKeywords
- uid: System.Diagnostics.Tracing.EventAttribute.Level
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: Level
  nameWithType: EventAttribute.Level
  fullName: System.Diagnostics.Tracing.EventAttribute.Level
- uid: System.Diagnostics.Tracing.EventLevel
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventLevel
  nameWithType: EventLevel
  fullName: System.Diagnostics.Tracing.EventLevel
- uid: System.Diagnostics.Tracing.EventAttribute.Message
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: Message
  nameWithType: EventAttribute.Message
  fullName: System.Diagnostics.Tracing.EventAttribute.Message
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Tracing.EventAttribute.Opcode
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: Opcode
  nameWithType: EventAttribute.Opcode
  fullName: System.Diagnostics.Tracing.EventAttribute.Opcode
- uid: System.Diagnostics.Tracing.EventOpcode
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventOpcode
  nameWithType: EventOpcode
  fullName: System.Diagnostics.Tracing.EventOpcode
- uid: System.Diagnostics.Tracing.EventAttribute.Tags
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: Tags
  nameWithType: EventAttribute.Tags
  fullName: System.Diagnostics.Tracing.EventAttribute.Tags
- uid: System.Diagnostics.Tracing.EventTags
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventTags
  nameWithType: EventTags
  fullName: System.Diagnostics.Tracing.EventTags
- uid: System.Diagnostics.Tracing.EventAttribute.Task
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: Task
  nameWithType: EventAttribute.Task
  fullName: System.Diagnostics.Tracing.EventAttribute.Task
- uid: System.Diagnostics.Tracing.EventTask
  parent: System.Diagnostics.Tracing
  isExternal: false
  name: EventTask
  nameWithType: EventTask
  fullName: System.Diagnostics.Tracing.EventTask
- uid: System.Diagnostics.Tracing.EventAttribute.Version
  parent: System.Diagnostics.Tracing.EventAttribute
  isExternal: false
  name: Version
  nameWithType: EventAttribute.Version
  fullName: System.Diagnostics.Tracing.EventAttribute.Version
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
