### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.CompensationExtension
  id: CompensationExtension
  children:
  - System.Activities.Statements.CompensationExtension.#ctor
  - System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)
  - System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  - System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions
  - System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)
  langs:
  - csharp
  - vb
  name: CompensationExtension
  nameWithType: CompensationExtension
  fullName: System.Activities.Statements.CompensationExtension
  type: Class
  syntax:
    content: 'public class CompensationExtension : System.Activities.Persistence.PersistenceParticipant, System.Activities.Hosting.IWorkflowInstanceExtension'
  inheritance:
  - System.Object
  - System.Activities.Persistence.PersistenceParticipant
  implements:
  - System.Activities.Hosting.IWorkflowInstanceExtension
  inheritedMembers:
  - System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Activities.Statements.CompensationExtension.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.CompensationExtension
  langs:
  - csharp
  - vb
  name: CompensationExtension()
  nameWithType: CompensationExtension.CompensationExtension()
  fullName: System.Activities.Statements.CompensationExtension.CompensationExtension()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public CompensationExtension ();
    parameters: []
- uid: System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)
  id: CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)
  parent: System.Activities.Statements.CompensationExtension
  langs:
  - csharp
  - vb
  name: CollectValues(IDictionary,IDictionary)
  nameWithType: CompensationExtension.CollectValues(IDictionary,IDictionary)
  fullName: System.Activities.Statements.CompensationExtension.CollectValues(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CollectValues (out System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> readWriteValues, out System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> writeOnlyValues);
    parameters:
    - id: readWriteValues
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}
      description: Parameter description to be filled
    - id: writeOnlyValues
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  id: PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  parent: System.Activities.Statements.CompensationExtension
  langs:
  - csharp
  - vb
  name: PublishValues(IDictionary)
  nameWithType: CompensationExtension.PublishValues(IDictionary)
  fullName: System.Activities.Statements.CompensationExtension.PublishValues(IDictionary)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void PublishValues (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> readWriteValues);
    parameters:
    - id: readWriteValues
      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions
  id: System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions
  isEii: true
  parent: System.Activities.Statements.CompensationExtension
  langs:
  - csharp
  - vb
  name: System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()
  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()
  fullName: System.Activities.Statements.CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: System.Collections.Generic.IEnumerable<object> IWorkflowInstanceExtension.GetAdditionalExtensions ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: Return description to be filled
- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)
  id: System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)
  isEii: true
  parent: System.Activities.Statements.CompensationExtension
  langs:
  - csharp
  - vb
  name: System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)
  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)
  fullName: System.Activities.Statements.CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: void IWorkflowInstanceExtension.SetInstance (System.Activities.Hosting.WorkflowInstanceProxy instance);
    parameters:
    - id: instance
      type: System.Activities.Hosting.WorkflowInstanceProxy
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
references:
- uid: System.Activities.Persistence.PersistenceParticipant
  isExternal: false
  name: System.Activities.Persistence.PersistenceParticipant
- uid: System.Activities.Statements.CompensationExtension.#ctor
  parent: System.Activities.Statements.CompensationExtension
  isExternal: false
  name: CompensationExtension()
  nameWithType: CompensationExtension.CompensationExtension()
  fullName: System.Activities.Statements.CompensationExtension.CompensationExtension()
- uid: System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)
  parent: System.Activities.Statements.CompensationExtension
  isExternal: false
  name: CollectValues(IDictionary,IDictionary)
  nameWithType: CompensationExtension.CollectValues(IDictionary,IDictionary)
  fullName: System.Activities.Statements.CompensationExtension.CollectValues(IDictionary,IDictionary)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})
  parent: System.Activities.Statements.CompensationExtension
  isExternal: false
  name: PublishValues(IDictionary)
  nameWithType: CompensationExtension.PublishValues(IDictionary)
  fullName: System.Activities.Statements.CompensationExtension.PublishValues(IDictionary)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions
  parent: System.Activities.Statements.CompensationExtension
  isExternal: false
  name: System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()
  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()
  fullName: System.Activities.Statements.CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()
- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)
  parent: System.Activities.Statements.CompensationExtension
  isExternal: false
  name: System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)
  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)
  fullName: System.Activities.Statements.CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Activities.Hosting.WorkflowInstanceProxy
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstanceProxy
  nameWithType: WorkflowInstanceProxy
  fullName: System.Activities.Hosting.WorkflowInstanceProxy
