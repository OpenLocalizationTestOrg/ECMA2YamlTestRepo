### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.Switch`1
  id: Switch`1
  children:
  - System.Activities.Statements.Switch`1.#ctor
  - System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})
  - System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})
  - System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  - System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.Switch`1.Cases
  - System.Activities.Statements.Switch`1.Default
  - System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Statements.Switch`1.Expression
  - System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  langs:
  - csharp
  - vb
  name: Switch<T>
  nameWithType: Switch<T>
  fullName: System.Activities.Statements.Switch<T>
  type: Class
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Cases")]

      public sealed class Switch<T> : System.Activities.NativeActivity
    typeParameters:
    - id: T
      description: Parameter description to be filled
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Activities.Statements.Switch`1.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: Switch<T>..ctor
  fullName: System.Activities.Statements.Switch<T>..ctor
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public Switch ();
    parameters: []
- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})
  id: '#ctor(System.Activities.Activity{`0})'
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: Switch<T>..ctor
  fullName: System.Activities.Statements.Switch<T>..ctor
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public Switch (System.Activities.Activity<T> expression);
    parameters:
    - id: expression
      type: System.Activities.Activity{T}
      description: Parameter description to be filled
- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})
  id: '#ctor(System.Activities.InArgument{`0})'
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: Switch<T>..ctor
  fullName: System.Activities.Statements.Switch<T>..ctor
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public Switch (System.Activities.InArgument<T> expression);
    parameters:
    - id: expression
      type: System.Activities.InArgument{T}
      description: Parameter description to be filled
- uid: System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})'
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: Switch<T>..ctor
  fullName: System.Activities.Statements.Switch<T>..ctor
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public Switch (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,T>> expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,T}}
      description: Parameter description to be filled
- uid: System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: CacheMetadata
  nameWithType: Switch<T>.CacheMetadata
  fullName: System.Activities.Statements.Switch<T>.CacheMetadata
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Activities.Statements.Switch`1.Cases
  id: Cases
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: Cases
  nameWithType: Switch<T>.Cases
  fullName: System.Activities.Statements.Switch<T>.Cases
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public System.Collections.Generic.IDictionary<T,System.Activities.Activity> Cases { get; }
    return:
      type: System.Collections.Generic.IDictionary{T,System.Activities.Activity}
      description: Return description to be filled
- uid: System.Activities.Statements.Switch`1.Default
  id: Default
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: Switch<T>.Default
  fullName: System.Activities.Statements.Switch<T>.Default
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public System.Activities.Activity Default { get; set; }
    return:
      type: System.Activities.Activity
      description: Return description to be filled
- uid: System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: Execute
  nameWithType: Switch<T>.Execute
  fullName: System.Activities.Statements.Switch<T>.Execute
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
- uid: System.Activities.Statements.Switch`1.Expression
  id: Expression
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: Switch<T>.Expression
  fullName: System.Activities.Statements.Switch<T>.Expression
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public System.Activities.InArgument<T> Expression { get; set; }
    return:
      type: System.Activities.InArgument{T}
      description: Return description to be filled
- uid: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.Switch`1
  langs:
  - csharp
  - vb
  name: OnCreateDynamicUpdateMap
  nameWithType: Switch<T>.OnCreateDynamicUpdateMap
  fullName: System.Activities.Statements.Switch<T>.OnCreateDynamicUpdateMap
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: Parameter description to be filled
    - id: originalActivity
      type: System.Activities.Activity
      description: Parameter description to be filled
    return:
      type: System.Void
      description: Return description to be filled
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.Activities.Statements.Switch`1.#ctor
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: .ctor
  nameWithType: Switch<T>..ctor
  fullName: System.Activities.Statements.Switch<T>..ctor
- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.Activity{`0})
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: .ctor
  nameWithType: Switch<T>..ctor
  fullName: System.Activities.Statements.Switch<T>..ctor
- uid: System.Activities.Statements.Switch`1.#ctor(System.Activities.InArgument{`0})
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: .ctor
  nameWithType: Switch<T>..ctor
  fullName: System.Activities.Statements.Switch<T>..ctor
- uid: System.Activities.InArgument`1
  parent: System.Activities
  isExternal: false
  name: InArgument<T>
  nameWithType: InArgument<T>
  fullName: System.Activities.InArgument<T>
- uid: System.Activities.Statements.Switch`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: .ctor
  nameWithType: Switch<T>..ctor
  fullName: System.Activities.Statements.Switch<T>..ctor
- uid: System.Activities.Statements.Switch`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: CacheMetadata
  nameWithType: Switch<T>.CacheMetadata
  fullName: System.Activities.Statements.Switch<T>.CacheMetadata
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.Switch`1.Cases
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Cases
  nameWithType: Switch<T>.Cases
  fullName: System.Activities.Statements.Switch<T>.Cases
- uid: System.Activities.Statements.Switch`1.Default
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Default
  nameWithType: Switch<T>.Default
  fullName: System.Activities.Statements.Switch<T>.Default
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Statements.Switch`1.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Execute
  nameWithType: Switch<T>.Execute
  fullName: System.Activities.Statements.Switch<T>.Execute
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.Switch`1.Expression
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: Expression
  nameWithType: Switch<T>.Expression
  fullName: System.Activities.Statements.Switch<T>.Expression
- uid: System.Activities.InArgument`1
  parent: System.Activities
  isExternal: false
  name: InArgument<T>
  nameWithType: InArgument<T>
  fullName: System.Activities.InArgument<T>
- uid: System.Activities.Statements.Switch`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.Switch`1
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: Switch<T>.OnCreateDynamicUpdateMap
  fullName: System.Activities.Statements.Switch<T>.OnCreateDynamicUpdateMap
- uid: System.Void
  parent: System
  isExternal: false
  name: Void
  nameWithType: Void
  fullName: System.Void
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
