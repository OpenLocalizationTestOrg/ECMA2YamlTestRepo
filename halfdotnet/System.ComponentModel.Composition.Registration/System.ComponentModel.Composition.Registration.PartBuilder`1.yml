### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  id: PartBuilder`1
  children:
  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  - System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})
  langs:
  - csharp
  - vb
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
  type: Class
  syntax:
    content: 'public class PartBuilder<T> : System.ComponentModel.Composition.Registration.PartBuilder'
    typeParameters:
    - id: T
      description: Parameter description to be filled
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Registration.PartBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})
  - System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)
  - System.ComponentModel.Composition.Registration.PartBuilder.Export
  - System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1
  - System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})
  - System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})
  - System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  langs:
  - csharp
  - vb
  name: ExportProperty(Expression)
  nameWithType: PartBuilder<T>.ExportProperty(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: Parameter description to be filled
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder{T}
      description: Return description to be filled
  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty*
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  id: ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  langs:
  - csharp
  - vb
  name: ExportProperty(Expression,Action)
  nameWithType: PartBuilder<T>.ExportProperty(Expression,Action)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression,Action)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: Parameter description to be filled
    - id: exportConfiguration
      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}
      description: Parameter description to be filled
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder{T}
      description: Return description to be filled
  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty*
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  langs:
  - csharp
  - vb
  name: ExportProperty(Expression)
  nameWithType: PartBuilder<T>.ExportProperty(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: Parameter description to be filled
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder{T}
      description: Return description to be filled
  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty<TContract>*
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  id: ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  langs:
  - csharp
  - vb
  name: ExportProperty(Expression,Action)
  nameWithType: PartBuilder<T>.ExportProperty(Expression,Action)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression,Action)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ExportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ExportBuilder> exportConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: Parameter description to be filled
    - id: exportConfiguration
      type: System.Action{System.ComponentModel.Composition.Registration.ExportBuilder}
      description: Parameter description to be filled
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder{T}
      description: Return description to be filled
  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty<TContract>*
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  langs:
  - csharp
  - vb
  name: ImportProperty(Expression)
  nameWithType: PartBuilder<T>.ImportProperty(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: Parameter description to be filled
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder{T}
      description: Return description to be filled
  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty*
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})
  id: ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  langs:
  - csharp
  - vb
  name: ImportProperty(Expression,Action)
  nameWithType: PartBuilder<T>.ImportProperty(Expression,Action)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression,Action)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: Parameter description to be filled
    - id: importConfiguration
      type: System.Action{System.ComponentModel.Composition.Registration.ImportBuilder}
      description: Parameter description to be filled
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder{T}
      description: Return description to be filled
  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty*
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  id: ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  langs:
  - csharp
  - vb
  name: ImportProperty(Expression)
  nameWithType: PartBuilder<T>.ImportProperty(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter);
    parameters:
    - id: propertyFilter
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: Parameter description to be filled
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder{T}
      description: Return description to be filled
  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty<TContract>*
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})
  id: ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  langs:
  - csharp
  - vb
  name: ImportProperty(Expression,Action)
  nameWithType: PartBuilder<T>.ImportProperty(Expression,Action)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression,Action)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> ImportProperty<TContract> (System.Linq.Expressions.Expression<Func<T,object>> propertyFilter, Action<System.ComponentModel.Composition.Registration.ImportBuilder> importConfiguration);
    parameters:
    - id: propertyFilter
      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}
      description: Parameter description to be filled
    - id: importConfiguration
      type: System.Action{System.ComponentModel.Composition.Registration.ImportBuilder}
      description: Parameter description to be filled
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder{T}
      description: Return description to be filled
  overload: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty<TContract>*
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})
  id: SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  langs:
  - csharp
  - vb
  name: SelectConstructor(Expression)
  nameWithType: PartBuilder<T>.SelectConstructor(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.SelectConstructor(Expression)
  type: Method
  assemblies:
  - System.ComponentModel.Composition.Registration
  namespace: System.ComponentModel.Composition.Registration
  syntax:
    content: public System.ComponentModel.Composition.Registration.PartBuilder<T> SelectConstructor (System.Linq.Expressions.Expression<Func<System.ComponentModel.Composition.Registration.ParameterImportBuilder,T>> constructorFilter);
    parameters:
    - id: constructorFilter
      type: System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,T}}
      description: Parameter description to be filled
    return:
      type: System.ComponentModel.Composition.Registration.PartBuilder{T}
      description: Return description to be filled
references:
- uid: System.ComponentModel.Composition.Registration.PartBuilder
  isExternal: false
  name: System.ComponentModel.Composition.Registration.PartBuilder
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  name: ExportProperty(Expression)
  nameWithType: PartBuilder<T>.ExportProperty(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression)
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  name: ExportProperty(Expression,Action)
  nameWithType: PartBuilder<T>.ExportProperty(Expression,Action)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression,Action)
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  name: ExportProperty(Expression)
  nameWithType: PartBuilder<T>.ExportProperty(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression)
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  name: ExportProperty(Expression,Action)
  nameWithType: PartBuilder<T>.ExportProperty(Expression,Action)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ExportProperty(Expression,Action)
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  name: ImportProperty(Expression)
  nameWithType: PartBuilder<T>.ImportProperty(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression)
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  name: ImportProperty(Expression,Action)
  nameWithType: PartBuilder<T>.ImportProperty(Expression,Action)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression,Action)
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  name: ImportProperty(Expression)
  nameWithType: PartBuilder<T>.ImportProperty(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression)
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  name: ImportProperty(Expression,Action)
  nameWithType: PartBuilder<T>.ImportProperty(Expression,Action)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.ImportProperty(Expression,Action)
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  name: SelectConstructor(Expression)
  nameWithType: PartBuilder<T>.SelectConstructor(Expression)
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>.SelectConstructor(Expression)
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1
  parent: System.ComponentModel.Composition.Registration
  isExternal: false
  name: PartBuilder<T>
  nameWithType: PartBuilder<T>
  fullName: System.ComponentModel.Composition.Registration.PartBuilder<T>
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty*
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  nameWithType: PartBuilder<T>.
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty<TContract>*
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  nameWithType: PartBuilder<T>.
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty*
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  nameWithType: PartBuilder<T>.
- uid: System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty<TContract>*
  parent: System.ComponentModel.Composition.Registration.PartBuilder`1
  isExternal: false
  nameWithType: PartBuilder<T>.
