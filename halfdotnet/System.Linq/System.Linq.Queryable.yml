### YamlMime:ManagedReference
items:
- uid: System.Linq.Queryable
  id: Queryable
  children:
  - System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})
  - System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})
  - System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  - System.Linq.Queryable.All``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable@)
  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}}@)
  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single}@)
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  - System.Linq.Queryable.Cast``1(System.Linq.IQueryable@)
  - System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0)
  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@,``0)
  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0}@,System.Int32)
  - System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0}@,System.Int32)
  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})
  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.OfType``1(System.Linq.IQueryable@)
  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  - System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})
  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})
  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@)
  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0}@,System.Int32)
  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal}@)
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double}@)
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32}@)
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64}@)
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}}@)
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}}@)
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}}@)
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}}@)
  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single}@)
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  - System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0}@,System.Int32)
  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  - System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  - System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  - System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  - System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  langs:
  - csharp
  - vb
  name: Queryable
  nameWithType: Queryable
  fullName: System.Linq.Queryable
  type: Class
  syntax:
    content: public static class Queryable
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})
  id: Aggregate``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Aggregate(IQueryable,Expression)
  nameWithType: Queryable.Aggregate(IQueryable,Expression)
  fullName: System.Linq.Queryable.Aggregate(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Aggregate<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TSource,TSource>> func);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: func
      type: System.Linq.Expressions.Expression{System.Func{TSource,TSource,TSource}}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
- uid: System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})
  id: Aggregate``2(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Aggregate(IQueryable,TAccumulate,Expression)
  nameWithType: Queryable.Aggregate(IQueryable,TAccumulate,Expression)
  fullName: System.Linq.Queryable.Aggregate(IQueryable,TAccumulate,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TAccumulate Aggregate<TSource,TAccumulate> (this System.Linq.IQueryable<TSource> source, TAccumulate seed, System.Linq.Expressions.Expression<Func<TAccumulate,TSource,TAccumulate>> func);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: seed
      type: TAccumulate
      description: Parameter description to be filled
    - id: func
      type: System.Linq.Expressions.Expression{System.Func{TAccumulate,TSource,TAccumulate}}
      description: Parameter description to be filled
    return:
      type: TAccumulate
      description: Return description to be filled
- uid: System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  id: Aggregate``3(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Aggregate(IQueryable,TAccumulate,Expression,Expression)
  nameWithType: Queryable.Aggregate(IQueryable,TAccumulate,Expression,Expression)
  fullName: System.Linq.Queryable.Aggregate(IQueryable,TAccumulate,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TResult Aggregate<TSource,TAccumulate,TResult> (this System.Linq.IQueryable<TSource> source, TAccumulate seed, System.Linq.Expressions.Expression<Func<TAccumulate,TSource,TAccumulate>> func, System.Linq.Expressions.Expression<Func<TAccumulate,TResult>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: seed
      type: TAccumulate
      description: Parameter description to be filled
    - id: func
      type: System.Linq.Expressions.Expression{System.Func{TAccumulate,TSource,TAccumulate}}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TAccumulate,TResult}}
      description: Parameter description to be filled
    return:
      type: TResult
      description: Return description to be filled
- uid: System.Linq.Queryable.All``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: All``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: All(IQueryable,Expression)
  nameWithType: Queryable.All(IQueryable,Expression)
  fullName: System.Linq.Queryable.All(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool All<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@)
  id: Any``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Any(IQueryable)
  nameWithType: Queryable.Any(IQueryable)
  fullName: System.Linq.Queryable.Any(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool Any<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Queryable.Any<TSource>*
- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: Any``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Any(IQueryable,Expression)
  nameWithType: Queryable.Any(IQueryable,Expression)
  fullName: System.Linq.Queryable.Any(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool Any<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Queryable.Any<TSource>*
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable@)
  id: AsQueryable(System.Collections.IEnumerable@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable AsQueryable (this System.Collections.IEnumerable source);
    parameters:
    - id: source
      type: System.Collections.IEnumerable
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable
      description: Return description to be filled
- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0}@)
  id: AsQueryable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TElement> AsQueryable<TElement> (this System.Collections.Generic.IEnumerable<TElement> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TElement}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TElement}
      description: Return description to be filled
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal}@)
  id: Average(System.Linq.IQueryable{System.Decimal}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Average (this System.Linq.IQueryable<decimal> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double}@)
  id: Average(System.Linq.IQueryable{System.Double}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average (this System.Linq.IQueryable<double> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32}@)
  id: Average(System.Linq.IQueryable{System.Int32}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average (this System.Linq.IQueryable<int> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64}@)
  id: Average(System.Linq.IQueryable{System.Int64}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average (this System.Linq.IQueryable<long> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)
  id: Average(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Average (this System.Linq.IQueryable<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}}@)
  id: Average(System.Linq.IQueryable{System.Nullable{System.Double}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average (this System.Linq.IQueryable<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}}@)
  id: Average(System.Linq.IQueryable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average (this System.Linq.IQueryable<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}}@)
  id: Average(System.Linq.IQueryable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average (this System.Linq.IQueryable<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}}@)
  id: Average(System.Linq.IQueryable{System.Nullable{System.Single}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Average (this System.Linq.IQueryable<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single}@)
  id: Average(System.Linq.IQueryable{System.Single}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Average (this System.Linq.IQueryable<float> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Queryable.Average*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,decimal>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,double>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,long>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<decimal>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Decimal}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<double>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Double}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<int>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int32}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<long>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int64}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<float>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Single}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,float>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Queryable.Average<TSource>*
- uid: System.Linq.Queryable.Cast``1(System.Linq.IQueryable@)
  id: Cast``1(System.Linq.IQueryable@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Cast(IQueryable)
  nameWithType: Queryable.Cast(IQueryable)
  fullName: System.Linq.Queryable.Cast(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> Cast<TResult> (this System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
- uid: System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: Concat``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Concat(IQueryable,IEnumerable)
  nameWithType: Queryable.Concat(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.Concat(IQueryable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Concat<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0)
  id: Contains``1(System.Linq.IQueryable{``0}@,``0)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Contains(IQueryable,TSource)
  nameWithType: Queryable.Contains(IQueryable,TSource)
  fullName: System.Linq.Queryable.Contains(IQueryable,TSource)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool Contains<TSource> (this System.Linq.IQueryable<TSource> source, TSource item);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: item
      type: TSource
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Queryable.Contains<TSource>*
- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})
  id: Contains``1(System.Linq.IQueryable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Contains(IQueryable,TSource,IEqualityComparer)
  nameWithType: Queryable.Contains(IQueryable,TSource,IEqualityComparer)
  fullName: System.Linq.Queryable.Contains(IQueryable,TSource,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool Contains<TSource> (this System.Linq.IQueryable<TSource> source, TSource item, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: item
      type: TSource
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Queryable.Contains<TSource>*
- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@)
  id: Count``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Count(IQueryable)
  nameWithType: Queryable.Count(IQueryable)
  fullName: System.Linq.Queryable.Count(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Count<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Queryable.Count<TSource>*
- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: Count``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Count(IQueryable,Expression)
  nameWithType: Queryable.Count(IQueryable,Expression)
  fullName: System.Linq.Queryable.Count(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Count<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Queryable.Count<TSource>*
- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@)
  id: DefaultIfEmpty``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: DefaultIfEmpty(IQueryable)
  nameWithType: Queryable.DefaultIfEmpty(IQueryable)
  fullName: System.Linq.Queryable.DefaultIfEmpty(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> DefaultIfEmpty<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.DefaultIfEmpty<TSource>*
- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@,``0)
  id: DefaultIfEmpty``1(System.Linq.IQueryable{``0}@,``0)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: DefaultIfEmpty(IQueryable,TSource)
  nameWithType: Queryable.DefaultIfEmpty(IQueryable,TSource)
  fullName: System.Linq.Queryable.DefaultIfEmpty(IQueryable,TSource)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> DefaultIfEmpty<TSource> (this System.Linq.IQueryable<TSource> source, TSource defaultValue);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: defaultValue
      type: TSource
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.DefaultIfEmpty<TSource>*
- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@)
  id: Distinct``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Distinct(IQueryable)
  nameWithType: Queryable.Distinct(IQueryable)
  fullName: System.Linq.Queryable.Distinct(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Distinct<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Distinct<TSource>*
- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEqualityComparer{``0})
  id: Distinct``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Distinct(IQueryable,IEqualityComparer)
  nameWithType: Queryable.Distinct(IQueryable,IEqualityComparer)
  fullName: System.Linq.Queryable.Distinct(IQueryable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Distinct<TSource> (this System.Linq.IQueryable<TSource> source, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Distinct<TSource>*
- uid: System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0}@,System.Int32)
  id: ElementAt``1(System.Linq.IQueryable{``0}@,System.Int32)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: ElementAt(IQueryable,Int32)
  nameWithType: Queryable.ElementAt(IQueryable,Int32)
  fullName: System.Linq.Queryable.ElementAt(IQueryable,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource ElementAt<TSource> (this System.Linq.IQueryable<TSource> source, int index);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
- uid: System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0}@,System.Int32)
  id: ElementAtOrDefault``1(System.Linq.IQueryable{``0}@,System.Int32)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: ElementAtOrDefault(IQueryable,Int32)
  nameWithType: Queryable.ElementAtOrDefault(IQueryable,Int32)
  fullName: System.Linq.Queryable.ElementAtOrDefault(IQueryable,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource ElementAtOrDefault<TSource> (this System.Linq.IQueryable<TSource> source, int index);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Except(IQueryable,IEnumerable)
  nameWithType: Queryable.Except(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.Except(IQueryable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Except<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Except<TSource>*
- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Except(IQueryable,IEnumerable,IEqualityComparer)
  nameWithType: Queryable.Except(IQueryable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Queryable.Except(IQueryable,IEnumerable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Except<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Except<TSource>*
- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@)
  id: First``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: First(IQueryable)
  nameWithType: Queryable.First(IQueryable)
  fullName: System.Linq.Queryable.First(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource First<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.First<TSource>*
- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: First``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: First(IQueryable,Expression)
  nameWithType: Queryable.First(IQueryable,Expression)
  fullName: System.Linq.Queryable.First(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource First<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.First<TSource>*
- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@)
  id: FirstOrDefault``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: FirstOrDefault(IQueryable)
  nameWithType: Queryable.FirstOrDefault(IQueryable)
  fullName: System.Linq.Queryable.FirstOrDefault(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource FirstOrDefault<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.FirstOrDefault<TSource>*
- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: FirstOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: FirstOrDefault(IQueryable,Expression)
  nameWithType: Queryable.FirstOrDefault(IQueryable,Expression)
  fullName: System.Linq.Queryable.FirstOrDefault(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource FirstOrDefault<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.FirstOrDefault<TSource>*
- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupBy(IQueryable,Expression)
  nameWithType: Queryable.GroupBy(IQueryable,Expression)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<System.Linq.IGrouping<TKey,TSource>> GroupBy<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TSource}}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupBy<TSource,TKey>*
- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupBy(IQueryable,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<System.Linq.IGrouping<TKey,TSource>> GroupBy<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TSource}}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupBy<TSource,TKey>*
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  id: GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupBy(IQueryable,Expression,Expression)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<System.Linq.IGrouping<TKey,TElement>> GroupBy<TSource,TKey,TElement> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TSource,TElement>> elementSelector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TElement}}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TElement>*
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<System.Linq.IGrouping<TKey,TElement>> GroupBy<TSource,TKey,TElement> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TSource,TElement>> elementSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TElement}}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TElement>*
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  id: GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupBy(IQueryable,Expression,Expression)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> GroupBy<TSource,TKey,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult>> resultSelector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TResult>*
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> GroupBy<TSource,TKey,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult>> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TResult>*
- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})
  id: GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupBy(IQueryable,Expression,Expression,Expression)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression,Expression)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> GroupBy<TSource,TKey,TElement,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TSource,TElement>> elementSelector, System.Linq.Expressions.Expression<Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult>> resultSelector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TElement,TResult>*
- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupBy(IQueryable,Expression,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression,Expression,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> GroupBy<TSource,TKey,TElement,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TSource,TElement>> elementSelector, System.Linq.Expressions.Expression<Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult>> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TElement,TResult>*
- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  id: GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression)
  nameWithType: Queryable.GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression)
  fullName: System.Linq.Queryable.GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Linq.IQueryable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, System.Linq.Expressions.Expression<Func<TOuter,TKey>> outerKeySelector, System.Linq.Expressions.Expression<Func<TInner,TKey>> innerKeySelector, System.Linq.Expressions.Expression<Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult>> resultSelector);
    parameters:
    - id: outer
      type: System.Linq.IQueryable{TOuter}
      description: Parameter description to be filled
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: Parameter description to be filled
    - id: outerKeySelector
      type: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}
      description: Parameter description to be filled
    - id: innerKeySelector
      type: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupJoin<TOuter,TInner,TKey,TResult>*
- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  id: GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Linq.IQueryable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, System.Linq.Expressions.Expression<Func<TOuter,TKey>> outerKeySelector, System.Linq.Expressions.Expression<Func<TInner,TKey>> innerKeySelector, System.Linq.Expressions.Expression<Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult>> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: outer
      type: System.Linq.IQueryable{TOuter}
      description: Parameter description to be filled
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: Parameter description to be filled
    - id: outerKeySelector
      type: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}
      description: Parameter description to be filled
    - id: innerKeySelector
      type: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.GroupJoin<TOuter,TInner,TKey,TResult>*
- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Intersect(IQueryable,IEnumerable)
  nameWithType: Queryable.Intersect(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.Intersect(IQueryable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Intersect<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Intersect<TSource>*
- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Intersect(IQueryable,IEnumerable,IEqualityComparer)
  nameWithType: Queryable.Intersect(IQueryable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Queryable.Intersect(IQueryable,IEnumerable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Intersect<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Intersect<TSource>*
- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  id: Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Join(IQueryable,IEnumerable,Expression,Expression,Expression)
  nameWithType: Queryable.Join(IQueryable,IEnumerable,Expression,Expression,Expression)
  fullName: System.Linq.Queryable.Join(IQueryable,IEnumerable,Expression,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Linq.IQueryable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, System.Linq.Expressions.Expression<Func<TOuter,TKey>> outerKeySelector, System.Linq.Expressions.Expression<Func<TInner,TKey>> innerKeySelector, System.Linq.Expressions.Expression<Func<TOuter,TInner,TResult>> resultSelector);
    parameters:
    - id: outer
      type: System.Linq.IQueryable{TOuter}
      description: Parameter description to be filled
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: Parameter description to be filled
    - id: outerKeySelector
      type: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}
      description: Parameter description to be filled
    - id: innerKeySelector
      type: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TOuter,TInner,TResult}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.Join<TOuter,TInner,TKey,TResult>*
- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  id: Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Join(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.Join(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.Join(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Linq.IQueryable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, System.Linq.Expressions.Expression<Func<TOuter,TKey>> outerKeySelector, System.Linq.Expressions.Expression<Func<TInner,TKey>> innerKeySelector, System.Linq.Expressions.Expression<Func<TOuter,TInner,TResult>> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: outer
      type: System.Linq.IQueryable{TOuter}
      description: Parameter description to be filled
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: Parameter description to be filled
    - id: outerKeySelector
      type: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}
      description: Parameter description to be filled
    - id: innerKeySelector
      type: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TOuter,TInner,TResult}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.Join<TOuter,TInner,TKey,TResult>*
- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@)
  id: Last``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Last(IQueryable)
  nameWithType: Queryable.Last(IQueryable)
  fullName: System.Linq.Queryable.Last(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Last<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.Last<TSource>*
- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: Last``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Last(IQueryable,Expression)
  nameWithType: Queryable.Last(IQueryable,Expression)
  fullName: System.Linq.Queryable.Last(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Last<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.Last<TSource>*
- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@)
  id: LastOrDefault``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: LastOrDefault(IQueryable)
  nameWithType: Queryable.LastOrDefault(IQueryable)
  fullName: System.Linq.Queryable.LastOrDefault(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource LastOrDefault<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.LastOrDefault<TSource>*
- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: LastOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: LastOrDefault(IQueryable,Expression)
  nameWithType: Queryable.LastOrDefault(IQueryable,Expression)
  fullName: System.Linq.Queryable.LastOrDefault(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource LastOrDefault<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.LastOrDefault<TSource>*
- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@)
  id: LongCount``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: LongCount(IQueryable)
  nameWithType: Queryable.LongCount(IQueryable)
  fullName: System.Linq.Queryable.LongCount(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long LongCount<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Queryable.LongCount<TSource>*
- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: LongCount``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: LongCount(IQueryable,Expression)
  nameWithType: Queryable.LongCount(IQueryable,Expression)
  fullName: System.Linq.Queryable.LongCount(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long LongCount<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Queryable.LongCount<TSource>*
- uid: System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0}@)
  id: Max``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Max(IQueryable)
  nameWithType: Queryable.Max(IQueryable)
  fullName: System.Linq.Queryable.Max(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Max<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
- uid: System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: Max``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Max(IQueryable,Expression)
  nameWithType: Queryable.Max(IQueryable,Expression)
  fullName: System.Linq.Queryable.Max(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TResult Max<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TResult>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TResult}}
      description: Parameter description to be filled
    return:
      type: TResult
      description: Return description to be filled
- uid: System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0}@)
  id: Min``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Min(IQueryable)
  nameWithType: Queryable.Min(IQueryable)
  fullName: System.Linq.Queryable.Min(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Min<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
- uid: System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: Min``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Min(IQueryable,Expression)
  nameWithType: Queryable.Min(IQueryable,Expression)
  fullName: System.Linq.Queryable.Min(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TResult Min<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TResult>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TResult}}
      description: Parameter description to be filled
    return:
      type: TResult
      description: Return description to be filled
- uid: System.Linq.Queryable.OfType``1(System.Linq.IQueryable@)
  id: OfType``1(System.Linq.IQueryable@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: OfType(IQueryable)
  nameWithType: Queryable.OfType(IQueryable)
  fullName: System.Linq.Queryable.OfType(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> OfType<TResult> (this System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: OrderBy(IQueryable,Expression)
  nameWithType: Queryable.OrderBy(IQueryable,Expression)
  fullName: System.Linq.Queryable.OrderBy(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedQueryable<TSource> OrderBy<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.OrderBy<TSource,TKey>*
- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  id: OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: OrderBy(IQueryable,Expression,IComparer)
  nameWithType: Queryable.OrderBy(IQueryable,Expression,IComparer)
  fullName: System.Linq.Queryable.OrderBy(IQueryable,Expression,IComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedQueryable<TSource> OrderBy<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.OrderBy<TSource,TKey>*
- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: OrderByDescending(IQueryable,Expression)
  nameWithType: Queryable.OrderByDescending(IQueryable,Expression)
  fullName: System.Linq.Queryable.OrderByDescending(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedQueryable<TSource> OrderByDescending<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.OrderByDescending<TSource,TKey>*
- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  id: OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: OrderByDescending(IQueryable,Expression,IComparer)
  nameWithType: Queryable.OrderByDescending(IQueryable,Expression,IComparer)
  fullName: System.Linq.Queryable.OrderByDescending(IQueryable,Expression,IComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedQueryable<TSource> OrderByDescending<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.OrderByDescending<TSource,TKey>*
- uid: System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0}@)
  id: Reverse``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Reverse(IQueryable)
  nameWithType: Queryable.Reverse(IQueryable)
  fullName: System.Linq.Queryable.Reverse(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Reverse<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})
  id: Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Select(IQueryable,Expression)
  nameWithType: Queryable.Select(IQueryable,Expression)
  fullName: System.Linq.Queryable.Select(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> Select<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,TResult>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,TResult}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.Select<TSource,TResult>*
- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Select(IQueryable,Expression)
  nameWithType: Queryable.Select(IQueryable,Expression)
  fullName: System.Linq.Queryable.Select(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> Select<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TResult>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TResult}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.Select<TSource,TResult>*
- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  id: SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SelectMany(IQueryable,Expression)
  nameWithType: Queryable.SelectMany(IQueryable,Expression)
  fullName: System.Linq.Queryable.SelectMany(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> SelectMany<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,System.Collections.Generic.IEnumerable<TResult>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Collections.Generic.IEnumerable{TResult}}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.SelectMany<TSource,TResult>*
- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})
  id: SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SelectMany(IQueryable,Expression)
  nameWithType: Queryable.SelectMany(IQueryable,Expression)
  fullName: System.Linq.Queryable.SelectMany(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> SelectMany<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,System.Collections.Generic.IEnumerable<TResult>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TResult}}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.SelectMany<TSource,TResult>*
- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  id: SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SelectMany(IQueryable,Expression,Expression)
  nameWithType: Queryable.SelectMany(IQueryable,Expression,Expression)
  fullName: System.Linq.Queryable.SelectMany(IQueryable,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> SelectMany<TSource,TCollection,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,System.Collections.Generic.IEnumerable<TCollection>>> collectionSelector, System.Linq.Expressions.Expression<Func<TSource,TCollection,TResult>> resultSelector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: collectionSelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Collections.Generic.IEnumerable{TCollection}}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TCollection,TResult}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.SelectMany<TSource,TCollection,TResult>*
- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  id: SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SelectMany(IQueryable,Expression,Expression)
  nameWithType: Queryable.SelectMany(IQueryable,Expression,Expression)
  fullName: System.Linq.Queryable.SelectMany(IQueryable,Expression,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> SelectMany<TSource,TCollection,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,System.Collections.Generic.IEnumerable<TCollection>>> collectionSelector, System.Linq.Expressions.Expression<Func<TSource,TCollection,TResult>> resultSelector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: collectionSelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TCollection}}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TCollection,TResult}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
  overload: System.Linq.Queryable.SelectMany<TSource,TCollection,TResult>*
- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SequenceEqual(IQueryable,IEnumerable)
  nameWithType: Queryable.SequenceEqual(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.SequenceEqual(IQueryable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool SequenceEqual<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Queryable.SequenceEqual<TSource>*
- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SequenceEqual(IQueryable,IEnumerable,IEqualityComparer)
  nameWithType: Queryable.SequenceEqual(IQueryable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Queryable.SequenceEqual(IQueryable,IEnumerable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool SequenceEqual<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Queryable.SequenceEqual<TSource>*
- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@)
  id: Single``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Single(IQueryable)
  nameWithType: Queryable.Single(IQueryable)
  fullName: System.Linq.Queryable.Single(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Single<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.Single<TSource>*
- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: Single``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Single(IQueryable,Expression)
  nameWithType: Queryable.Single(IQueryable,Expression)
  fullName: System.Linq.Queryable.Single(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Single<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.Single<TSource>*
- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@)
  id: SingleOrDefault``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SingleOrDefault(IQueryable)
  nameWithType: Queryable.SingleOrDefault(IQueryable)
  fullName: System.Linq.Queryable.SingleOrDefault(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource SingleOrDefault<TSource> (this System.Linq.IQueryable<TSource> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.SingleOrDefault<TSource>*
- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: SingleOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SingleOrDefault(IQueryable,Expression)
  nameWithType: Queryable.SingleOrDefault(IQueryable,Expression)
  fullName: System.Linq.Queryable.SingleOrDefault(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource SingleOrDefault<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Queryable.SingleOrDefault<TSource>*
- uid: System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0}@,System.Int32)
  id: Skip``1(System.Linq.IQueryable{``0}@,System.Int32)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Skip(IQueryable,Int32)
  nameWithType: Queryable.Skip(IQueryable,Int32)
  fullName: System.Linq.Queryable.Skip(IQueryable,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Skip<TSource> (this System.Linq.IQueryable<TSource> source, int count);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SkipWhile(IQueryable,Expression)
  nameWithType: Queryable.SkipWhile(IQueryable,Expression)
  fullName: System.Linq.Queryable.SkipWhile(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> SkipWhile<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.SkipWhile<TSource>*
- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  id: SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: SkipWhile(IQueryable,Expression)
  nameWithType: Queryable.SkipWhile(IQueryable,Expression)
  fullName: System.Linq.Queryable.SkipWhile(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> SkipWhile<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.SkipWhile<TSource>*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal}@)
  id: Sum(System.Linq.IQueryable{System.Decimal}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Sum (this System.Linq.IQueryable<decimal> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double}@)
  id: Sum(System.Linq.IQueryable{System.Double}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Sum (this System.Linq.IQueryable<double> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32}@)
  id: Sum(System.Linq.IQueryable{System.Int32}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Sum (this System.Linq.IQueryable<int> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64}@)
  id: Sum(System.Linq.IQueryable{System.Int64}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long Sum (this System.Linq.IQueryable<long> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)
  id: Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Sum (this System.Linq.IQueryable<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}}@)
  id: Sum(System.Linq.IQueryable{System.Nullable{System.Double}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Sum (this System.Linq.IQueryable<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}}@)
  id: Sum(System.Linq.IQueryable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<int> Sum (this System.Linq.IQueryable<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int32}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}}@)
  id: Sum(System.Linq.IQueryable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<long> Sum (this System.Linq.IQueryable<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int64}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}}@)
  id: Sum(System.Linq.IQueryable{System.Nullable{System.Single}}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Sum (this System.Linq.IQueryable<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single}@)
  id: Sum(System.Linq.IQueryable{System.Single}@)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Sum (this System.Linq.IQueryable<float> source);
    parameters:
    - id: source
      type: System.Linq.IQueryable{System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,decimal>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,double>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,long>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<decimal>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Decimal}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<double>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Double}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<int> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<int>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int32}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int32}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<long> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<long>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int64}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int64}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<float>>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Single}}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,float>> selector);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Queryable.Sum<TSource>*
- uid: System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0}@,System.Int32)
  id: Take``1(System.Linq.IQueryable{``0}@,System.Int32)
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Take(IQueryable,Int32)
  nameWithType: Queryable.Take(IQueryable,Int32)
  fullName: System.Linq.Queryable.Take(IQueryable,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Take<TSource> (this System.Linq.IQueryable<TSource> source, int count);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: TakeWhile(IQueryable,Expression)
  nameWithType: Queryable.TakeWhile(IQueryable,Expression)
  fullName: System.Linq.Queryable.TakeWhile(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> TakeWhile<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.TakeWhile<TSource>*
- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  id: TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: TakeWhile(IQueryable,Expression)
  nameWithType: Queryable.TakeWhile(IQueryable,Expression)
  fullName: System.Linq.Queryable.TakeWhile(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> TakeWhile<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.TakeWhile<TSource>*
- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: ThenBy(IOrderedQueryable,Expression)
  nameWithType: Queryable.ThenBy(IOrderedQueryable,Expression)
  fullName: System.Linq.Queryable.ThenBy(IOrderedQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedQueryable<TSource> ThenBy<TSource,TKey> (this System.Linq.IOrderedQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);
    parameters:
    - id: source
      type: System.Linq.IOrderedQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.ThenBy<TSource,TKey>*
- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  id: ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: ThenBy(IOrderedQueryable,Expression,IComparer)
  nameWithType: Queryable.ThenBy(IOrderedQueryable,Expression,IComparer)
  fullName: System.Linq.Queryable.ThenBy(IOrderedQueryable,Expression,IComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedQueryable<TSource> ThenBy<TSource,TKey> (this System.Linq.IOrderedQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IOrderedQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.ThenBy<TSource,TKey>*
- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  id: ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: ThenByDescending(IOrderedQueryable,Expression)
  nameWithType: Queryable.ThenByDescending(IOrderedQueryable,Expression)
  fullName: System.Linq.Queryable.ThenByDescending(IOrderedQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedQueryable<TSource> ThenByDescending<TSource,TKey> (this System.Linq.IOrderedQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);
    parameters:
    - id: source
      type: System.Linq.IOrderedQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.ThenByDescending<TSource,TKey>*
- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  id: ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: ThenByDescending(IOrderedQueryable,Expression,IComparer)
  nameWithType: Queryable.ThenByDescending(IOrderedQueryable,Expression,IComparer)
  fullName: System.Linq.Queryable.ThenByDescending(IOrderedQueryable,Expression,IComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedQueryable<TSource> ThenByDescending<TSource,TKey> (this System.Linq.IOrderedQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IOrderedQueryable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.ThenByDescending<TSource,TKey>*
- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Union(IQueryable,IEnumerable)
  nameWithType: Queryable.Union(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.Union(IQueryable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Union<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Union<TSource>*
- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Union(IQueryable,IEnumerable,IEqualityComparer)
  nameWithType: Queryable.Union(IQueryable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Queryable.Union(IQueryable,IEnumerable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Union<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Union<TSource>*
- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  id: Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Where(IQueryable,Expression)
  nameWithType: Queryable.Where(IQueryable,Expression)
  fullName: System.Linq.Queryable.Where(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Where<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Where<TSource>*
- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  id: Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Where(IQueryable,Expression)
  nameWithType: Queryable.Where(IQueryable,Expression)
  fullName: System.Linq.Queryable.Where(IQueryable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TSource> Where<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,bool>> predicate);
    parameters:
    - id: source
      type: System.Linq.IQueryable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Boolean}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TSource}
      description: Return description to be filled
  overload: System.Linq.Queryable.Where<TSource>*
- uid: System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  id: Zip``3(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Linq.Queryable
  langs:
  - csharp
  - vb
  name: Zip(IQueryable,IEnumerable,Expression)
  nameWithType: Queryable.Zip(IQueryable,IEnumerable,Expression)
  fullName: System.Linq.Queryable.Zip(IQueryable,IEnumerable,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IQueryable<TResult> Zip<TFirst,TSecond,TResult> (this System.Linq.IQueryable<TFirst> source1, System.Collections.Generic.IEnumerable<TSecond> source2, System.Linq.Expressions.Expression<Func<TFirst,TSecond,TResult>> resultSelector);
    parameters:
    - id: source1
      type: System.Linq.IQueryable{TFirst}
      description: Parameter description to be filled
    - id: source2
      type: System.Collections.Generic.IEnumerable{TSecond}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Linq.Expressions.Expression{System.Func{TFirst,TSecond,TResult}}
      description: Parameter description to be filled
    return:
      type: System.Linq.IQueryable{TResult}
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Aggregate(IQueryable,Expression)
  nameWithType: Queryable.Aggregate(IQueryable,Expression)
  fullName: System.Linq.Queryable.Aggregate(IQueryable,Expression)
- uid: System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Aggregate(IQueryable,TAccumulate,Expression)
  nameWithType: Queryable.Aggregate(IQueryable,TAccumulate,Expression)
  fullName: System.Linq.Queryable.Aggregate(IQueryable,TAccumulate,Expression)
- uid: System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Aggregate(IQueryable,TAccumulate,Expression,Expression)
  nameWithType: Queryable.Aggregate(IQueryable,TAccumulate,Expression,Expression)
  fullName: System.Linq.Queryable.Aggregate(IQueryable,TAccumulate,Expression,Expression)
- uid: System.Linq.Queryable.All``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: All(IQueryable,Expression)
  nameWithType: Queryable.All(IQueryable,Expression)
  fullName: System.Linq.Queryable.All(IQueryable,Expression)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Any(IQueryable)
  nameWithType: Queryable.Any(IQueryable)
  fullName: System.Linq.Queryable.Any(IQueryable)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Any(IQueryable,Expression)
  nameWithType: Queryable.Any(IQueryable,Expression)
  fullName: System.Linq.Queryable.Any(IQueryable,Expression)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable@)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(IEnumerable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: false
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: System.Linq.Queryable.AsQueryable(IEnumerable)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable)
  nameWithType: Queryable.Average(IQueryable)
  fullName: System.Linq.Queryable.Average(IQueryable)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Average(IQueryable,Expression)
  nameWithType: Queryable.Average(IQueryable,Expression)
  fullName: System.Linq.Queryable.Average(IQueryable,Expression)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Queryable.Cast``1(System.Linq.IQueryable@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Cast(IQueryable)
  nameWithType: Queryable.Cast(IQueryable)
  fullName: System.Linq.Queryable.Cast(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: false
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Concat(IQueryable,IEnumerable)
  nameWithType: Queryable.Concat(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.Concat(IQueryable,IEnumerable)
- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0)
  parent: System.Linq.Queryable
  isExternal: false
  name: Contains(IQueryable,TSource)
  nameWithType: Queryable.Contains(IQueryable,TSource)
  fullName: System.Linq.Queryable.Contains(IQueryable,TSource)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Contains(IQueryable,TSource,IEqualityComparer)
  nameWithType: Queryable.Contains(IQueryable,TSource,IEqualityComparer)
  fullName: System.Linq.Queryable.Contains(IQueryable,TSource,IEqualityComparer)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Count(IQueryable)
  nameWithType: Queryable.Count(IQueryable)
  fullName: System.Linq.Queryable.Count(IQueryable)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Count(IQueryable,Expression)
  nameWithType: Queryable.Count(IQueryable,Expression)
  fullName: System.Linq.Queryable.Count(IQueryable,Expression)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: DefaultIfEmpty(IQueryable)
  nameWithType: Queryable.DefaultIfEmpty(IQueryable)
  fullName: System.Linq.Queryable.DefaultIfEmpty(IQueryable)
- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@,``0)
  parent: System.Linq.Queryable
  isExternal: false
  name: DefaultIfEmpty(IQueryable,TSource)
  nameWithType: Queryable.DefaultIfEmpty(IQueryable,TSource)
  fullName: System.Linq.Queryable.DefaultIfEmpty(IQueryable,TSource)
- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Distinct(IQueryable)
  nameWithType: Queryable.Distinct(IQueryable)
  fullName: System.Linq.Queryable.Distinct(IQueryable)
- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Distinct(IQueryable,IEqualityComparer)
  nameWithType: Queryable.Distinct(IQueryable,IEqualityComparer)
  fullName: System.Linq.Queryable.Distinct(IQueryable,IEqualityComparer)
- uid: System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0}@,System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: ElementAt(IQueryable,Int32)
  nameWithType: Queryable.ElementAt(IQueryable,Int32)
  fullName: System.Linq.Queryable.ElementAt(IQueryable,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0}@,System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: ElementAtOrDefault(IQueryable,Int32)
  nameWithType: Queryable.ElementAtOrDefault(IQueryable,Int32)
  fullName: System.Linq.Queryable.ElementAtOrDefault(IQueryable,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Except(IQueryable,IEnumerable)
  nameWithType: Queryable.Except(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.Except(IQueryable,IEnumerable)
- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Except(IQueryable,IEnumerable,IEqualityComparer)
  nameWithType: Queryable.Except(IQueryable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Queryable.Except(IQueryable,IEnumerable,IEqualityComparer)
- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: First(IQueryable)
  nameWithType: Queryable.First(IQueryable)
  fullName: System.Linq.Queryable.First(IQueryable)
- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: First(IQueryable,Expression)
  nameWithType: Queryable.First(IQueryable,Expression)
  fullName: System.Linq.Queryable.First(IQueryable,Expression)
- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: FirstOrDefault(IQueryable)
  nameWithType: Queryable.FirstOrDefault(IQueryable)
  fullName: System.Linq.Queryable.FirstOrDefault(IQueryable)
- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: FirstOrDefault(IQueryable,Expression)
  nameWithType: Queryable.FirstOrDefault(IQueryable,Expression)
  fullName: System.Linq.Queryable.FirstOrDefault(IQueryable,Expression)
- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy(IQueryable,Expression)
  nameWithType: Queryable.GroupBy(IQueryable,Expression)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression)
- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy(IQueryable,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,IEqualityComparer)
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy(IQueryable,Expression,Expression)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression)
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy(IQueryable,Expression,Expression)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression)
- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression,IEqualityComparer)
- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy(IQueryable,Expression,Expression,Expression)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression,Expression)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression,Expression)
- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupBy(IQueryable,Expression,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupBy(IQueryable,Expression,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupBy(IQueryable,Expression,Expression,Expression,IEqualityComparer)
- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression)
  nameWithType: Queryable.GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression)
  fullName: System.Linq.Queryable.GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression)
- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Queryable
  isExternal: false
  name: GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.GroupJoin(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Intersect(IQueryable,IEnumerable)
  nameWithType: Queryable.Intersect(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.Intersect(IQueryable,IEnumerable)
- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Intersect(IQueryable,IEnumerable,IEqualityComparer)
  nameWithType: Queryable.Intersect(IQueryable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Queryable.Intersect(IQueryable,IEnumerable,IEqualityComparer)
- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Join(IQueryable,IEnumerable,Expression,Expression,Expression)
  nameWithType: Queryable.Join(IQueryable,IEnumerable,Expression,Expression,Expression)
  fullName: System.Linq.Queryable.Join(IQueryable,IEnumerable,Expression,Expression,Expression)
- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Queryable
  isExternal: false
  name: Join(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  nameWithType: Queryable.Join(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
  fullName: System.Linq.Queryable.Join(IQueryable,IEnumerable,Expression,Expression,Expression,IEqualityComparer)
- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Last(IQueryable)
  nameWithType: Queryable.Last(IQueryable)
  fullName: System.Linq.Queryable.Last(IQueryable)
- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Last(IQueryable,Expression)
  nameWithType: Queryable.Last(IQueryable,Expression)
  fullName: System.Linq.Queryable.Last(IQueryable,Expression)
- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: LastOrDefault(IQueryable)
  nameWithType: Queryable.LastOrDefault(IQueryable)
  fullName: System.Linq.Queryable.LastOrDefault(IQueryable)
- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: LastOrDefault(IQueryable,Expression)
  nameWithType: Queryable.LastOrDefault(IQueryable,Expression)
  fullName: System.Linq.Queryable.LastOrDefault(IQueryable,Expression)
- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: LongCount(IQueryable)
  nameWithType: Queryable.LongCount(IQueryable)
  fullName: System.Linq.Queryable.LongCount(IQueryable)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: LongCount(IQueryable,Expression)
  nameWithType: Queryable.LongCount(IQueryable,Expression)
  fullName: System.Linq.Queryable.LongCount(IQueryable,Expression)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Max(IQueryable)
  nameWithType: Queryable.Max(IQueryable)
  fullName: System.Linq.Queryable.Max(IQueryable)
- uid: System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Max(IQueryable,Expression)
  nameWithType: Queryable.Max(IQueryable,Expression)
  fullName: System.Linq.Queryable.Max(IQueryable,Expression)
- uid: System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Min(IQueryable)
  nameWithType: Queryable.Min(IQueryable)
  fullName: System.Linq.Queryable.Min(IQueryable)
- uid: System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Min(IQueryable,Expression)
  nameWithType: Queryable.Min(IQueryable,Expression)
  fullName: System.Linq.Queryable.Min(IQueryable,Expression)
- uid: System.Linq.Queryable.OfType``1(System.Linq.IQueryable@)
  parent: System.Linq.Queryable
  isExternal: false
  name: OfType(IQueryable)
  nameWithType: Queryable.OfType(IQueryable)
  fullName: System.Linq.Queryable.OfType(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: false
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: OrderBy(IQueryable,Expression)
  nameWithType: Queryable.OrderBy(IQueryable,Expression)
  fullName: System.Linq.Queryable.OrderBy(IQueryable,Expression)
- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: OrderBy(IQueryable,Expression,IComparer)
  nameWithType: Queryable.OrderBy(IQueryable,Expression,IComparer)
  fullName: System.Linq.Queryable.OrderBy(IQueryable,Expression,IComparer)
- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: OrderByDescending(IQueryable,Expression)
  nameWithType: Queryable.OrderByDescending(IQueryable,Expression)
  fullName: System.Linq.Queryable.OrderByDescending(IQueryable,Expression)
- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: OrderByDescending(IQueryable,Expression,IComparer)
  nameWithType: Queryable.OrderByDescending(IQueryable,Expression,IComparer)
  fullName: System.Linq.Queryable.OrderByDescending(IQueryable,Expression,IComparer)
- uid: System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Reverse(IQueryable)
  nameWithType: Queryable.Reverse(IQueryable)
  fullName: System.Linq.Queryable.Reverse(IQueryable)
- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Select(IQueryable,Expression)
  nameWithType: Queryable.Select(IQueryable,Expression)
  fullName: System.Linq.Queryable.Select(IQueryable,Expression)
- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Select(IQueryable,Expression)
  nameWithType: Queryable.Select(IQueryable,Expression)
  fullName: System.Linq.Queryable.Select(IQueryable,Expression)
- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SelectMany(IQueryable,Expression)
  nameWithType: Queryable.SelectMany(IQueryable,Expression)
  fullName: System.Linq.Queryable.SelectMany(IQueryable,Expression)
- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SelectMany(IQueryable,Expression)
  nameWithType: Queryable.SelectMany(IQueryable,Expression)
  fullName: System.Linq.Queryable.SelectMany(IQueryable,Expression)
- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SelectMany(IQueryable,Expression,Expression)
  nameWithType: Queryable.SelectMany(IQueryable,Expression,Expression)
  fullName: System.Linq.Queryable.SelectMany(IQueryable,Expression,Expression)
- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SelectMany(IQueryable,Expression,Expression)
  nameWithType: Queryable.SelectMany(IQueryable,Expression,Expression)
  fullName: System.Linq.Queryable.SelectMany(IQueryable,Expression,Expression)
- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: SequenceEqual(IQueryable,IEnumerable)
  nameWithType: Queryable.SequenceEqual(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.SequenceEqual(IQueryable,IEnumerable)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: SequenceEqual(IQueryable,IEnumerable,IEqualityComparer)
  nameWithType: Queryable.SequenceEqual(IQueryable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Queryable.SequenceEqual(IQueryable,IEnumerable,IEqualityComparer)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Single(IQueryable)
  nameWithType: Queryable.Single(IQueryable)
  fullName: System.Linq.Queryable.Single(IQueryable)
- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Single(IQueryable,Expression)
  nameWithType: Queryable.Single(IQueryable,Expression)
  fullName: System.Linq.Queryable.Single(IQueryable,Expression)
- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: SingleOrDefault(IQueryable)
  nameWithType: Queryable.SingleOrDefault(IQueryable)
  fullName: System.Linq.Queryable.SingleOrDefault(IQueryable)
- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SingleOrDefault(IQueryable,Expression)
  nameWithType: Queryable.SingleOrDefault(IQueryable,Expression)
  fullName: System.Linq.Queryable.SingleOrDefault(IQueryable,Expression)
- uid: System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0}@,System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: Skip(IQueryable,Int32)
  nameWithType: Queryable.Skip(IQueryable,Int32)
  fullName: System.Linq.Queryable.Skip(IQueryable,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SkipWhile(IQueryable,Expression)
  nameWithType: Queryable.SkipWhile(IQueryable,Expression)
  fullName: System.Linq.Queryable.SkipWhile(IQueryable,Expression)
- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: SkipWhile(IQueryable,Expression)
  nameWithType: Queryable.SkipWhile(IQueryable,Expression)
  fullName: System.Linq.Queryable.SkipWhile(IQueryable,Expression)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single}@)
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable)
  nameWithType: Queryable.Sum(IQueryable)
  fullName: System.Linq.Queryable.Sum(IQueryable)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Sum(IQueryable,Expression)
  nameWithType: Queryable.Sum(IQueryable,Expression)
  fullName: System.Linq.Queryable.Sum(IQueryable,Expression)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0}@,System.Int32)
  parent: System.Linq.Queryable
  isExternal: false
  name: Take(IQueryable,Int32)
  nameWithType: Queryable.Take(IQueryable,Int32)
  fullName: System.Linq.Queryable.Take(IQueryable,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: TakeWhile(IQueryable,Expression)
  nameWithType: Queryable.TakeWhile(IQueryable,Expression)
  fullName: System.Linq.Queryable.TakeWhile(IQueryable,Expression)
- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: TakeWhile(IQueryable,Expression)
  nameWithType: Queryable.TakeWhile(IQueryable,Expression)
  fullName: System.Linq.Queryable.TakeWhile(IQueryable,Expression)
- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: ThenBy(IOrderedQueryable,Expression)
  nameWithType: Queryable.ThenBy(IOrderedQueryable,Expression)
  fullName: System.Linq.Queryable.ThenBy(IOrderedQueryable,Expression)
- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: ThenBy(IOrderedQueryable,Expression,IComparer)
  nameWithType: Queryable.ThenBy(IOrderedQueryable,Expression,IComparer)
  fullName: System.Linq.Queryable.ThenBy(IOrderedQueryable,Expression,IComparer)
- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})
  parent: System.Linq.Queryable
  isExternal: false
  name: ThenByDescending(IOrderedQueryable,Expression)
  nameWithType: Queryable.ThenByDescending(IOrderedQueryable,Expression)
  fullName: System.Linq.Queryable.ThenByDescending(IOrderedQueryable,Expression)
- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Queryable
  isExternal: false
  name: ThenByDescending(IOrderedQueryable,Expression,IComparer)
  nameWithType: Queryable.ThenByDescending(IOrderedQueryable,Expression,IComparer)
  fullName: System.Linq.Queryable.ThenByDescending(IOrderedQueryable,Expression,IComparer)
- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Union(IQueryable,IEnumerable)
  nameWithType: Queryable.Union(IQueryable,IEnumerable)
  fullName: System.Linq.Queryable.Union(IQueryable,IEnumerable)
- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Queryable
  isExternal: false
  name: Union(IQueryable,IEnumerable,IEqualityComparer)
  nameWithType: Queryable.Union(IQueryable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Queryable.Union(IQueryable,IEnumerable,IEqualityComparer)
- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Where(IQueryable,Expression)
  nameWithType: Queryable.Where(IQueryable,Expression)
  fullName: System.Linq.Queryable.Where(IQueryable,Expression)
- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Where(IQueryable,Expression)
  nameWithType: Queryable.Where(IQueryable,Expression)
  fullName: System.Linq.Queryable.Where(IQueryable,Expression)
- uid: System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})
  parent: System.Linq.Queryable
  isExternal: false
  name: Zip(IQueryable,IEnumerable,Expression)
  nameWithType: Queryable.Zip(IQueryable,IEnumerable,Expression)
  fullName: System.Linq.Queryable.Zip(IQueryable,IEnumerable,Expression)
- uid: System.Linq.Queryable.Any<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Average*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Average<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Contains<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Count<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.DefaultIfEmpty<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Distinct<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Except<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.First<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.FirstOrDefault<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.GroupBy<TSource,TKey>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.GroupBy<TSource,TKey,TElement>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.GroupBy<TSource,TKey,TResult>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.GroupBy<TSource,TKey,TElement,TResult>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.GroupJoin<TOuter,TInner,TKey,TResult>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Intersect<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Join<TOuter,TInner,TKey,TResult>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Last<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.LastOrDefault<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.LongCount<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.OrderBy<TSource,TKey>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.OrderByDescending<TSource,TKey>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Select<TSource,TResult>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.SelectMany<TSource,TResult>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.SelectMany<TSource,TCollection,TResult>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.SequenceEqual<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Single<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.SingleOrDefault<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.SkipWhile<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Sum*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Sum<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.TakeWhile<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.ThenBy<TSource,TKey>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.ThenByDescending<TSource,TKey>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Union<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
- uid: System.Linq.Queryable.Where<TSource>*
  parent: System.Linq.Queryable
  isExternal: false
  nameWithType: Queryable.
