### YamlMime:ManagedReference
items:
- uid: System.Linq.Enumerable
  id: Enumerable
  children:
  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``0,``0})
  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0}@,``1,System.Func{``1,``0,``1})
  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0}@,``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single}@)
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable@)
  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0}@,``0)
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0}@,``0)
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  - System.Linq.Enumerable.Empty``1
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal}@)
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double}@)
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32}@)
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64}@)
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single}@)
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal}@)
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double}@)
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32}@)
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64}@)
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single}@)
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable@)
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.Range(System.Int32,System.Int32)
  - System.Linq.Enumerable.Repeat``1(``0,System.Int32)
  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,``1})
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal}@)
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double}@)
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32}@)
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64}@)
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single}@)
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  langs:
  - csharp
  - vb
  name: Enumerable
  nameWithType: Enumerable
  fullName: System.Linq.Enumerable
  type: Class
  syntax:
    content: public static class Enumerable
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``0,``0})
  id: Aggregate``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``0,``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Aggregate(IEnumerable,Func)
  nameWithType: Enumerable.Aggregate(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Aggregate(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Aggregate<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TSource,TSource> func);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: func
      type: System.Func{TSource,TSource,TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0}@,``1,System.Func{``1,``0,``1})
  id: Aggregate``2(System.Collections.Generic.IEnumerable{``0}@,``1,System.Func{``1,``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Aggregate(IEnumerable,TAccumulate,Func)
  nameWithType: Enumerable.Aggregate(IEnumerable,TAccumulate,Func)
  fullName: System.Linq.Enumerable.Aggregate(IEnumerable,TAccumulate,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TAccumulate Aggregate<TSource,TAccumulate> (this System.Collections.Generic.IEnumerable<TSource> source, TAccumulate seed, Func<TAccumulate,TSource,TAccumulate> func);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: seed
      type: TAccumulate
      description: Parameter description to be filled
    - id: func
      type: System.Func{TAccumulate,TSource,TAccumulate}
      description: Parameter description to be filled
    return:
      type: TAccumulate
      description: Return description to be filled
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0}@,``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  id: Aggregate``3(System.Collections.Generic.IEnumerable{``0}@,``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Aggregate(IEnumerable,TAccumulate,Func,Func)
  nameWithType: Enumerable.Aggregate(IEnumerable,TAccumulate,Func,Func)
  fullName: System.Linq.Enumerable.Aggregate(IEnumerable,TAccumulate,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TResult Aggregate<TSource,TAccumulate,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, TAccumulate seed, Func<TAccumulate,TSource,TAccumulate> func, Func<TAccumulate,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: seed
      type: TAccumulate
      description: Parameter description to be filled
    - id: func
      type: System.Func{TAccumulate,TSource,TAccumulate}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TAccumulate,TResult}
      description: Parameter description to be filled
    return:
      type: TResult
      description: Return description to be filled
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: All``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: All(IEnumerable,Func)
  nameWithType: Enumerable.All(IEnumerable,Func)
  fullName: System.Linq.Enumerable.All(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool All<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0}@)
  id: Any``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Any(IEnumerable)
  nameWithType: Enumerable.Any(IEnumerable)
  fullName: System.Linq.Enumerable.Any(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool Any<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Enumerable.Any<TSource>*
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: Any``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Any(IEnumerable,Func)
  nameWithType: Enumerable.Any(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Any(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool Any<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Enumerable.Any<TSource>*
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0}@)
  id: AsEnumerable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: AsEnumerable(IEnumerable)
  nameWithType: Enumerable.AsEnumerable(IEnumerable)
  fullName: System.Linq.Enumerable.AsEnumerable(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> AsEnumerable<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Decimal}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Average (this System.Collections.Generic.IEnumerable<decimal> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Double}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average (this System.Collections.Generic.IEnumerable<double> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Int32}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average (this System.Collections.Generic.IEnumerable<int> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Int64}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average (this System.Collections.Generic.IEnumerable<long> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Average (this System.Collections.Generic.IEnumerable<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average (this System.Collections.Generic.IEnumerable<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average (this System.Collections.Generic.IEnumerable<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average (this System.Collections.Generic.IEnumerable<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Average (this System.Collections.Generic.IEnumerable<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single}@)
  id: Average(System.Collections.Generic.IEnumerable{System.Single}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Average (this System.Collections.Generic.IEnumerable<float> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,decimal> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,double> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,long> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<decimal>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<double>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<int>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<long>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<float>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  id: Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Average<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,float> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Enumerable.Average<TSource>*
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable@)
  id: Cast``1(System.Collections.IEnumerable@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Cast(IEnumerable)
  nameWithType: Enumerable.Cast(IEnumerable)
  fullName: System.Linq.Enumerable.Cast(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> Cast<TResult> (this System.Collections.IEnumerable source);
    parameters:
    - id: source
      type: System.Collections.IEnumerable
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: Concat``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Concat(IEnumerable,IEnumerable)
  nameWithType: Enumerable.Concat(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.Concat(IEnumerable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Concat<TSource> (this System.Collections.Generic.IEnumerable<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0}@,``0)
  id: Contains``1(System.Collections.Generic.IEnumerable{``0}@,``0)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Contains(IEnumerable,TSource)
  nameWithType: Enumerable.Contains(IEnumerable,TSource)
  fullName: System.Linq.Enumerable.Contains(IEnumerable,TSource)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool Contains<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, TSource value);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: value
      type: TSource
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Enumerable.Contains<TSource>*
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})
  id: Contains``1(System.Collections.Generic.IEnumerable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Contains(IEnumerable,TSource,IEqualityComparer)
  nameWithType: Enumerable.Contains(IEnumerable,TSource,IEqualityComparer)
  fullName: System.Linq.Enumerable.Contains(IEnumerable,TSource,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool Contains<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, TSource value, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: value
      type: TSource
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Enumerable.Contains<TSource>*
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0}@)
  id: Count``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Count(IEnumerable)
  nameWithType: Enumerable.Count(IEnumerable)
  fullName: System.Linq.Enumerable.Count(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Count<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Enumerable.Count<TSource>*
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: Count``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Count(IEnumerable,Func)
  nameWithType: Enumerable.Count(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Count(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Count<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Enumerable.Count<TSource>*
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0}@)
  id: DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: DefaultIfEmpty(IEnumerable)
  nameWithType: Enumerable.DefaultIfEmpty(IEnumerable)
  fullName: System.Linq.Enumerable.DefaultIfEmpty(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> DefaultIfEmpty<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.DefaultIfEmpty<TSource>*
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0}@,``0)
  id: DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0}@,``0)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: DefaultIfEmpty(IEnumerable,TSource)
  nameWithType: Enumerable.DefaultIfEmpty(IEnumerable,TSource)
  fullName: System.Linq.Enumerable.DefaultIfEmpty(IEnumerable,TSource)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> DefaultIfEmpty<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, TSource defaultValue);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: defaultValue
      type: TSource
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.DefaultIfEmpty<TSource>*
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0}@)
  id: Distinct``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Distinct(IEnumerable)
  nameWithType: Enumerable.Distinct(IEnumerable)
  fullName: System.Linq.Enumerable.Distinct(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Distinct<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Distinct<TSource>*
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEqualityComparer{``0})
  id: Distinct``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Distinct(IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.Distinct(IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.Distinct(IEnumerable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Distinct<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Distinct<TSource>*
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  id: ElementAt``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ElementAt(IEnumerable,Int32)
  nameWithType: Enumerable.ElementAt(IEnumerable,Int32)
  fullName: System.Linq.Enumerable.ElementAt(IEnumerable,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource ElementAt<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, int index);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  id: ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ElementAtOrDefault(IEnumerable,Int32)
  nameWithType: Enumerable.ElementAtOrDefault(IEnumerable,Int32)
  fullName: System.Linq.Enumerable.ElementAtOrDefault(IEnumerable,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource ElementAtOrDefault<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, int index);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
- uid: System.Linq.Enumerable.Empty``1
  id: Empty``1
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Empty()
  nameWithType: Enumerable.Empty()
  fullName: System.Linq.Enumerable.Empty()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> Empty<TResult> ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: Except``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Except(IEnumerable,IEnumerable)
  nameWithType: Enumerable.Except(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.Except(IEnumerable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Except<TSource> (this System.Collections.Generic.IEnumerable<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Except<TSource>*
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Except``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Except(IEnumerable,IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.Except(IEnumerable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.Except(IEnumerable,IEnumerable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Except<TSource> (this System.Collections.Generic.IEnumerable<TSource> first, System.Collections.Generic.IEnumerable<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Except<TSource>*
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0}@)
  id: First``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: First(IEnumerable)
  nameWithType: Enumerable.First(IEnumerable)
  fullName: System.Linq.Enumerable.First(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource First<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.First<TSource>*
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: First``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: First(IEnumerable,Func)
  nameWithType: Enumerable.First(IEnumerable,Func)
  fullName: System.Linq.Enumerable.First(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource First<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.First<TSource>*
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  id: FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: FirstOrDefault(IEnumerable)
  nameWithType: Enumerable.FirstOrDefault(IEnumerable)
  fullName: System.Linq.Enumerable.FirstOrDefault(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource FirstOrDefault<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.FirstOrDefault<TSource>*
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: FirstOrDefault(IEnumerable,Func)
  nameWithType: Enumerable.FirstOrDefault(IEnumerable,Func)
  fullName: System.Linq.Enumerable.FirstOrDefault(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource FirstOrDefault<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.FirstOrDefault<TSource>*
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  id: GroupBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupBy(IEnumerable,Func)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey,TSource>> GroupBy<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{TKey,TSource}}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupBy<TSource,TKey>*
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupBy(IEnumerable,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey,TSource>> GroupBy<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{TKey,TSource}}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupBy<TSource,TKey>*
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  id: GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupBy(IEnumerable,Func,Func)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey,TElement>> GroupBy<TSource,TKey,TElement> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{TKey,TElement}}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement>*
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey,TElement>> GroupBy<TSource,TKey,TElement> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{TKey,TElement}}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement>*
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  id: GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupBy(IEnumerable,Func,Func)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> GroupBy<TSource,TKey,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupBy<TSource,TKey,TResult>*
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> GroupBy<TSource,TKey,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupBy<TSource,TKey,TResult>*
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  id: GroupBy``4(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupBy(IEnumerable,Func,Func,Func)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func,Func)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> GroupBy<TSource,TKey,TElement,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement,TResult>*
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``4(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupBy(IEnumerable,Func,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> GroupBy<TSource,TKey,TElement,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement,TResult>*
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  id: GroupJoin``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupJoin(IEnumerable,IEnumerable,Func,Func,Func)
  nameWithType: Enumerable.GroupJoin(IEnumerable,IEnumerable,Func,Func,Func)
  fullName: System.Linq.Enumerable.GroupJoin(IEnumerable,IEnumerable,Func,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Collections.Generic.IEnumerable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult> resultSelector);
    parameters:
    - id: outer
      type: System.Collections.Generic.IEnumerable{TOuter}
      description: Parameter description to be filled
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: Parameter description to be filled
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: Parameter description to be filled
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>*
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  id: GroupJoin``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: GroupJoin(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupJoin(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupJoin(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Collections.Generic.IEnumerable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: outer
      type: System.Collections.Generic.IEnumerable{TOuter}
      description: Parameter description to be filled
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: Parameter description to be filled
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: Parameter description to be filled
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>*
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: Intersect``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Intersect(IEnumerable,IEnumerable)
  nameWithType: Enumerable.Intersect(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.Intersect(IEnumerable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Intersect<TSource> (this System.Collections.Generic.IEnumerable<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Intersect<TSource>*
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Intersect``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Intersect(IEnumerable,IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.Intersect(IEnumerable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.Intersect(IEnumerable,IEnumerable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Intersect<TSource> (this System.Collections.Generic.IEnumerable<TSource> first, System.Collections.Generic.IEnumerable<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Intersect<TSource>*
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  id: Join``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Join(IEnumerable,IEnumerable,Func,Func,Func)
  nameWithType: Enumerable.Join(IEnumerable,IEnumerable,Func,Func,Func)
  fullName: System.Linq.Enumerable.Join(IEnumerable,IEnumerable,Func,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Collections.Generic.IEnumerable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,TInner,TResult> resultSelector);
    parameters:
    - id: outer
      type: System.Collections.Generic.IEnumerable{TOuter}
      description: Parameter description to be filled
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: Parameter description to be filled
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: Parameter description to be filled
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TOuter,TInner,TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Join<TOuter,TInner,TKey,TResult>*
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  id: Join``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Join(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.Join(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.Join(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Collections.Generic.IEnumerable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, Func<TOuter,TKey> outerKeySelector, Func<TInner,TKey> innerKeySelector, Func<TOuter,TInner,TResult> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: outer
      type: System.Collections.Generic.IEnumerable{TOuter}
      description: Parameter description to be filled
    - id: inner
      type: System.Collections.Generic.IEnumerable{TInner}
      description: Parameter description to be filled
    - id: outerKeySelector
      type: System.Func{TOuter,TKey}
      description: Parameter description to be filled
    - id: innerKeySelector
      type: System.Func{TInner,TKey}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TOuter,TInner,TResult}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Join<TOuter,TInner,TKey,TResult>*
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0}@)
  id: Last``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Last(IEnumerable)
  nameWithType: Enumerable.Last(IEnumerable)
  fullName: System.Linq.Enumerable.Last(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Last<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.Last<TSource>*
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: Last``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Last(IEnumerable,Func)
  nameWithType: Enumerable.Last(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Last(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Last<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.Last<TSource>*
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  id: LastOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: LastOrDefault(IEnumerable)
  nameWithType: Enumerable.LastOrDefault(IEnumerable)
  fullName: System.Linq.Enumerable.LastOrDefault(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource LastOrDefault<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.LastOrDefault<TSource>*
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: LastOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: LastOrDefault(IEnumerable,Func)
  nameWithType: Enumerable.LastOrDefault(IEnumerable,Func)
  fullName: System.Linq.Enumerable.LastOrDefault(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource LastOrDefault<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.LastOrDefault<TSource>*
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0}@)
  id: LongCount``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: LongCount(IEnumerable)
  nameWithType: Enumerable.LongCount(IEnumerable)
  fullName: System.Linq.Enumerable.LongCount(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long LongCount<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Enumerable.LongCount<TSource>*
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: LongCount``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: LongCount(IEnumerable,Func)
  nameWithType: Enumerable.LongCount(IEnumerable,Func)
  fullName: System.Linq.Enumerable.LongCount(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long LongCount<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Enumerable.LongCount<TSource>*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Decimal}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Max (this System.Collections.Generic.IEnumerable<decimal> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Double}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Max (this System.Collections.Generic.IEnumerable<double> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Int32}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Max (this System.Collections.Generic.IEnumerable<int> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Int64}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long Max (this System.Collections.Generic.IEnumerable<long> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Max (this System.Collections.Generic.IEnumerable<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Max (this System.Collections.Generic.IEnumerable<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<int> Max (this System.Collections.Generic.IEnumerable<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int32}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<long> Max (this System.Collections.Generic.IEnumerable<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int64}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Max (this System.Collections.Generic.IEnumerable<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single}@)
  id: Max(System.Collections.Generic.IEnumerable{System.Single}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Max (this System.Collections.Generic.IEnumerable<float> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@)
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,decimal> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,double> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,long> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<decimal>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<double>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<int> Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<int>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int32}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<long> Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<long>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int64}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<float>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  id: Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Max<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,float> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Enumerable.Max<TSource>*
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  id: Max``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TResult Max<TSource,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TResult> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,TResult}
      description: Parameter description to be filled
    return:
      type: TResult
      description: Return description to be filled
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Decimal}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Min (this System.Collections.Generic.IEnumerable<decimal> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Double}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Min (this System.Collections.Generic.IEnumerable<double> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Int32}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Min (this System.Collections.Generic.IEnumerable<int> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Int64}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long Min (this System.Collections.Generic.IEnumerable<long> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Min (this System.Collections.Generic.IEnumerable<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Min (this System.Collections.Generic.IEnumerable<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<int> Min (this System.Collections.Generic.IEnumerable<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int32}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<long> Min (this System.Collections.Generic.IEnumerable<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int64}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Min (this System.Collections.Generic.IEnumerable<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single}@)
  id: Min(System.Collections.Generic.IEnumerable{System.Single}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Min (this System.Collections.Generic.IEnumerable<float> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@)
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,decimal> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,double> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,long> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<decimal>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<double>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<int> Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<int>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int32}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<long> Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<long>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int64}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<float>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  id: Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Min<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,float> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Enumerable.Min<TSource>*
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  id: Min``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TResult Min<TSource,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TResult> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,TResult}
      description: Parameter description to be filled
    return:
      type: TResult
      description: Return description to be filled
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable@)
  id: OfType``1(System.Collections.IEnumerable@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: OfType(IEnumerable)
  nameWithType: Enumerable.OfType(IEnumerable)
  fullName: System.Linq.Enumerable.OfType(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> OfType<TResult> (this System.Collections.IEnumerable source);
    parameters:
    - id: source
      type: System.Collections.IEnumerable
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  id: OrderBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: OrderBy(IEnumerable,Func)
  nameWithType: Enumerable.OrderBy(IEnumerable,Func)
  fullName: System.Linq.Enumerable.OrderBy(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedEnumerable<TSource> OrderBy<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.OrderBy<TSource,TKey>*
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: OrderBy(IEnumerable,Func,IComparer)
  nameWithType: Enumerable.OrderBy(IEnumerable,Func,IComparer)
  fullName: System.Linq.Enumerable.OrderBy(IEnumerable,Func,IComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedEnumerable<TSource> OrderBy<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.OrderBy<TSource,TKey>*
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  id: OrderByDescending``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: OrderByDescending(IEnumerable,Func)
  nameWithType: Enumerable.OrderByDescending(IEnumerable,Func)
  fullName: System.Linq.Enumerable.OrderByDescending(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedEnumerable<TSource> OrderByDescending<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.OrderByDescending<TSource,TKey>*
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderByDescending``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: OrderByDescending(IEnumerable,Func,IComparer)
  nameWithType: Enumerable.OrderByDescending(IEnumerable,Func,IComparer)
  fullName: System.Linq.Enumerable.OrderByDescending(IEnumerable,Func,IComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedEnumerable<TSource> OrderByDescending<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.OrderByDescending<TSource,TKey>*
- uid: System.Linq.Enumerable.Range(System.Int32,System.Int32)
  id: Range(System.Int32,System.Int32)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Range(Int32,Int32)
  nameWithType: Enumerable.Range(Int32,Int32)
  fullName: System.Linq.Enumerable.Range(Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<int> Range (int start, int count);
    parameters:
    - id: start
      type: System.Int32
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: Return description to be filled
- uid: System.Linq.Enumerable.Repeat``1(``0,System.Int32)
  id: Repeat``1(``0,System.Int32)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Repeat(TResult,Int32)
  nameWithType: Enumerable.Repeat(TResult,Int32)
  fullName: System.Linq.Enumerable.Repeat(TResult,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> Repeat<TResult> (TResult element, int count);
    parameters:
    - id: element
      type: TResult
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0}@)
  id: Reverse``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Reverse(IEnumerable)
  nameWithType: Enumerable.Reverse(IEnumerable)
  fullName: System.Linq.Enumerable.Reverse(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Reverse<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,``1})
  id: Select``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Select(IEnumerable,Func)
  nameWithType: Enumerable.Select(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Select(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> Select<TSource,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int,TResult> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int32,TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Select<TSource,TResult>*
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  id: Select``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Select(IEnumerable,Func)
  nameWithType: Enumerable.Select(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Select(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> Select<TSource,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TResult> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Select<TSource,TResult>*
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  id: SelectMany``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SelectMany(IEnumerable,Func)
  nameWithType: Enumerable.SelectMany(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SelectMany(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> SelectMany<TSource,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,System.Collections.Generic.IEnumerable<TResult>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Collections.Generic.IEnumerable{TResult}}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.SelectMany<TSource,TResult>*
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  id: SelectMany``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SelectMany(IEnumerable,Func)
  nameWithType: Enumerable.SelectMany(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SelectMany(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> SelectMany<TSource,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int,System.Collections.Generic.IEnumerable<TResult>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TResult}}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.SelectMany<TSource,TResult>*
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  id: SelectMany``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SelectMany(IEnumerable,Func,Func)
  nameWithType: Enumerable.SelectMany(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.SelectMany(IEnumerable,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> SelectMany<TSource,TCollection,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,System.Collections.Generic.IEnumerable<TCollection>> collectionSelector, Func<TSource,TCollection,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: collectionSelector
      type: System.Func{TSource,System.Collections.Generic.IEnumerable{TCollection}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TSource,TCollection,TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.SelectMany<TSource,TCollection,TResult>*
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  id: SelectMany``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SelectMany(IEnumerable,Func,Func)
  nameWithType: Enumerable.SelectMany(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.SelectMany(IEnumerable,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> SelectMany<TSource,TCollection,TResult> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int,System.Collections.Generic.IEnumerable<TCollection>> collectionSelector, Func<TSource,TCollection,TResult> resultSelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: collectionSelector
      type: System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TCollection}}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TSource,TCollection,TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
  overload: System.Linq.Enumerable.SelectMany<TSource,TCollection,TResult>*
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: SequenceEqual``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SequenceEqual(IEnumerable,IEnumerable)
  nameWithType: Enumerable.SequenceEqual(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.SequenceEqual(IEnumerable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool SequenceEqual<TSource> (this System.Collections.Generic.IEnumerable<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Enumerable.SequenceEqual<TSource>*
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: SequenceEqual``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SequenceEqual(IEnumerable,IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.SequenceEqual(IEnumerable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.SequenceEqual(IEnumerable,IEnumerable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static bool SequenceEqual<TSource> (this System.Collections.Generic.IEnumerable<TSource> first, System.Collections.Generic.IEnumerable<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
  overload: System.Linq.Enumerable.SequenceEqual<TSource>*
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0}@)
  id: Single``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Single(IEnumerable)
  nameWithType: Enumerable.Single(IEnumerable)
  fullName: System.Linq.Enumerable.Single(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Single<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.Single<TSource>*
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: Single``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Single(IEnumerable,Func)
  nameWithType: Enumerable.Single(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Single(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource Single<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.Single<TSource>*
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  id: SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SingleOrDefault(IEnumerable)
  nameWithType: Enumerable.SingleOrDefault(IEnumerable)
  fullName: System.Linq.Enumerable.SingleOrDefault(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource SingleOrDefault<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.SingleOrDefault<TSource>*
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SingleOrDefault(IEnumerable,Func)
  nameWithType: Enumerable.SingleOrDefault(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SingleOrDefault(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource SingleOrDefault<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: TSource
      description: Return description to be filled
  overload: System.Linq.Enumerable.SingleOrDefault<TSource>*
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  id: Skip``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Skip(IEnumerable,Int32)
  nameWithType: Enumerable.Skip(IEnumerable,Int32)
  fullName: System.Linq.Enumerable.Skip(IEnumerable,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Skip<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, int count);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: SkipWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SkipWhile(IEnumerable,Func)
  nameWithType: Enumerable.SkipWhile(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SkipWhile(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> SkipWhile<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.SkipWhile<TSource>*
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  id: SkipWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: SkipWhile(IEnumerable,Func)
  nameWithType: Enumerable.SkipWhile(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SkipWhile(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> SkipWhile<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Int32,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.SkipWhile<TSource>*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Decimal}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Sum (this System.Collections.Generic.IEnumerable<decimal> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Double}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Sum (this System.Collections.Generic.IEnumerable<double> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Int32}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Sum (this System.Collections.Generic.IEnumerable<int> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Int64}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long Sum (this System.Collections.Generic.IEnumerable<long> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Sum (this System.Collections.Generic.IEnumerable<Nullable<decimal>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Sum (this System.Collections.Generic.IEnumerable<Nullable<double>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<int> Sum (this System.Collections.Generic.IEnumerable<Nullable<int>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int32}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<long> Sum (this System.Collections.Generic.IEnumerable<Nullable<long>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int64}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Sum (this System.Collections.Generic.IEnumerable<Nullable<float>> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single}@)
  id: Sum(System.Collections.Generic.IEnumerable{System.Single}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Sum (this System.Collections.Generic.IEnumerable<float> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static decimal Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,decimal> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Decimal}
      description: Parameter description to be filled
    return:
      type: System.Decimal
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static double Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,double> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Double}
      description: Parameter description to be filled
    return:
      type: System.Double
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static int Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int32}
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static long Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,long> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Int64}
      description: Parameter description to be filled
    return:
      type: System.Int64
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<decimal> Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<decimal>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Decimal}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Decimal}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<double> Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<double>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Double}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Double}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<int> Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<int>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int32}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int32}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<long> Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<long>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Int64}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Int64}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static Nullable<float> Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,Nullable<float>> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Nullable{System.Single}}
      description: Parameter description to be filled
    return:
      type: System.Nullable{System.Single}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static float Sum<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,float> selector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{TSource,System.Single}
      description: Parameter description to be filled
    return:
      type: System.Single
      description: Return description to be filled
  overload: System.Linq.Enumerable.Sum<TSource>*
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  id: Take``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Take(IEnumerable,Int32)
  nameWithType: Enumerable.Take(IEnumerable,Int32)
  fullName: System.Linq.Enumerable.Take(IEnumerable,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Take<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, int count);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: TakeWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: TakeWhile(IEnumerable,Func)
  nameWithType: Enumerable.TakeWhile(IEnumerable,Func)
  fullName: System.Linq.Enumerable.TakeWhile(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> TakeWhile<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.TakeWhile<TSource>*
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  id: TakeWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: TakeWhile(IEnumerable,Func)
  nameWithType: Enumerable.TakeWhile(IEnumerable,Func)
  fullName: System.Linq.Enumerable.TakeWhile(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> TakeWhile<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Int32,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.TakeWhile<TSource>*
- uid: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1})
  id: ThenBy``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ThenBy(IOrderedEnumerable,Func)
  nameWithType: Enumerable.ThenBy(IOrderedEnumerable,Func)
  fullName: System.Linq.Enumerable.ThenBy(IOrderedEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedEnumerable<TSource> ThenBy<TSource,TKey> (this System.Linq.IOrderedEnumerable<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ThenBy<TSource,TKey>*
- uid: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenBy``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ThenBy(IOrderedEnumerable,Func,IComparer)
  nameWithType: Enumerable.ThenBy(IOrderedEnumerable,Func,IComparer)
  fullName: System.Linq.Enumerable.ThenBy(IOrderedEnumerable,Func,IComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedEnumerable<TSource> ThenBy<TSource,TKey> (this System.Linq.IOrderedEnumerable<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ThenBy<TSource,TKey>*
- uid: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1})
  id: ThenByDescending``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ThenByDescending(IOrderedEnumerable,Func)
  nameWithType: Enumerable.ThenByDescending(IOrderedEnumerable,Func)
  fullName: System.Linq.Enumerable.ThenByDescending(IOrderedEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedEnumerable<TSource> ThenByDescending<TSource,TKey> (this System.Linq.IOrderedEnumerable<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ThenByDescending<TSource,TKey>*
- uid: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenByDescending``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ThenByDescending(IOrderedEnumerable,Func,IComparer)
  nameWithType: Enumerable.ThenByDescending(IOrderedEnumerable,Func,IComparer)
  fullName: System.Linq.Enumerable.ThenByDescending(IOrderedEnumerable,Func,IComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.IOrderedEnumerable<TSource> ThenByDescending<TSource,TKey> (this System.Linq.IOrderedEnumerable<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.IOrderedEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ThenByDescending<TSource,TKey>*
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0}@)
  id: ToArray``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToArray(IEnumerable)
  nameWithType: Enumerable.ToArray(IEnumerable)
  fullName: System.Linq.Enumerable.ToArray(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static TSource[] ToArray<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: TSource[]
      description: Return description to be filled
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  id: ToDictionary``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToDictionary(IEnumerable,Func)
  nameWithType: Enumerable.ToDictionary(IEnumerable,Func)
  fullName: System.Linq.Enumerable.ToDictionary(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TSource> ToDictionary<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.Dictionary{TKey,TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ToDictionary<TSource,TKey>*
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: ToDictionary``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToDictionary(IEnumerable,Func,IEqualityComparer)
  nameWithType: Enumerable.ToDictionary(IEnumerable,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.ToDictionary(IEnumerable,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TSource> ToDictionary<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.Dictionary{TKey,TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ToDictionary<TSource,TKey>*
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  id: ToDictionary``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToDictionary(IEnumerable,Func,Func)
  nameWithType: Enumerable.ToDictionary(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.ToDictionary(IEnumerable,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TElement> ToDictionary<TSource,TKey,TElement> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.Dictionary{TKey,TElement}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ToDictionary<TSource,TKey,TElement>*
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: ToDictionary``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToDictionary(IEnumerable,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.ToDictionary(IEnumerable,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.ToDictionary(IEnumerable,Func,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.Dictionary<TKey,TElement> ToDictionary<TSource,TKey,TElement> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.Dictionary{TKey,TElement}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ToDictionary<TSource,TKey,TElement>*
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0}@)
  id: ToList``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToList(IEnumerable)
  nameWithType: Enumerable.ToList(IEnumerable)
  fullName: System.Linq.Enumerable.ToList(IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.List<TSource> ToList<TSource> (this System.Collections.Generic.IEnumerable<TSource> source);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.List{TSource}
      description: Return description to be filled
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  id: ToLookup``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToLookup(IEnumerable,Func)
  nameWithType: Enumerable.ToLookup(IEnumerable,Func)
  fullName: System.Linq.Enumerable.ToLookup(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.ILookup<TKey,TSource> ToLookup<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.ILookup{TKey,TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ToLookup<TSource,TKey>*
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: ToLookup``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToLookup(IEnumerable,Func,IEqualityComparer)
  nameWithType: Enumerable.ToLookup(IEnumerable,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.ToLookup(IEnumerable,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.ILookup<TKey,TSource> ToLookup<TSource,TKey> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.ILookup{TKey,TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ToLookup<TSource,TKey>*
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  id: ToLookup``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToLookup(IEnumerable,Func,Func)
  nameWithType: Enumerable.ToLookup(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.ToLookup(IEnumerable,Func,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.ILookup<TKey,TElement> ToLookup<TSource,TKey,TElement> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: Parameter description to be filled
    return:
      type: System.Linq.ILookup{TKey,TElement}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ToLookup<TSource,TKey,TElement>*
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: ToLookup``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: ToLookup(IEnumerable,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.ToLookup(IEnumerable,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.ToLookup(IEnumerable,Func,Func,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Linq.ILookup<TKey,TElement> ToLookup<TSource,TKey,TElement> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,TKey> keySelector, Func<TSource,TElement> elementSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: keySelector
      type: System.Func{TSource,TKey}
      description: Parameter description to be filled
    - id: elementSelector
      type: System.Func{TSource,TElement}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TKey}
      description: Parameter description to be filled
    return:
      type: System.Linq.ILookup{TKey,TElement}
      description: Return description to be filled
  overload: System.Linq.Enumerable.ToLookup<TSource,TKey,TElement>*
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  id: Union``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Union(IEnumerable,IEnumerable)
  nameWithType: Enumerable.Union(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.Union(IEnumerable,IEnumerable)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Union<TSource> (this System.Collections.Generic.IEnumerable<TSource> first, System.Collections.Generic.IEnumerable<TSource> second);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Union<TSource>*
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Union``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Union(IEnumerable,IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.Union(IEnumerable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.Union(IEnumerable,IEnumerable,IEqualityComparer)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Union<TSource> (this System.Collections.Generic.IEnumerable<TSource> first, System.Collections.Generic.IEnumerable<TSource> second, System.Collections.Generic.IEqualityComparer<TSource> comparer);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{TSource}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Union<TSource>*
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  id: Where``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Where(IEnumerable,Func)
  nameWithType: Enumerable.Where(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Where(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Where<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Where<TSource>*
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  id: Where``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Where(IEnumerable,Func)
  nameWithType: Enumerable.Where(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Where(IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TSource> Where<TSource> (this System.Collections.Generic.IEnumerable<TSource> source, Func<TSource,int,bool> predicate);
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{TSource,System.Int32,System.Boolean}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TSource}
      description: Return description to be filled
  overload: System.Linq.Enumerable.Where<TSource>*
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  id: Zip``3(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  langs:
  - csharp
  - vb
  name: Zip(IEnumerable,IEnumerable,Func)
  nameWithType: Enumerable.Zip(IEnumerable,IEnumerable,Func)
  fullName: System.Linq.Enumerable.Zip(IEnumerable,IEnumerable,Func)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public static System.Collections.Generic.IEnumerable<TResult> Zip<TFirst,TSecond,TResult> (this System.Collections.Generic.IEnumerable<TFirst> first, System.Collections.Generic.IEnumerable<TSecond> second, Func<TFirst,TSecond,TResult> resultSelector);
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{TFirst}
      description: Parameter description to be filled
    - id: second
      type: System.Collections.Generic.IEnumerable{TSecond}
      description: Parameter description to be filled
    - id: resultSelector
      type: System.Func{TFirst,TSecond,TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``0,``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Aggregate(IEnumerable,Func)
  nameWithType: Enumerable.Aggregate(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Aggregate(IEnumerable,Func)
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0}@,``1,System.Func{``1,``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Aggregate(IEnumerable,TAccumulate,Func)
  nameWithType: Enumerable.Aggregate(IEnumerable,TAccumulate,Func)
  fullName: System.Linq.Enumerable.Aggregate(IEnumerable,TAccumulate,Func)
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0}@,``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Aggregate(IEnumerable,TAccumulate,Func,Func)
  nameWithType: Enumerable.Aggregate(IEnumerable,TAccumulate,Func,Func)
  fullName: System.Linq.Enumerable.Aggregate(IEnumerable,TAccumulate,Func,Func)
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: All(IEnumerable,Func)
  nameWithType: Enumerable.All(IEnumerable,Func)
  fullName: System.Linq.Enumerable.All(IEnumerable,Func)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Any(IEnumerable)
  nameWithType: Enumerable.Any(IEnumerable)
  fullName: System.Linq.Enumerable.Any(IEnumerable)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Any(IEnumerable,Func)
  nameWithType: Enumerable.Any(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Any(IEnumerable,Func)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: AsEnumerable(IEnumerable)
  nameWithType: Enumerable.AsEnumerable(IEnumerable)
  fullName: System.Linq.Enumerable.AsEnumerable(IEnumerable)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable)
  nameWithType: Enumerable.Average(IEnumerable)
  fullName: System.Linq.Enumerable.Average(IEnumerable)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Average(IEnumerable,Func)
  nameWithType: Enumerable.Average(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Average(IEnumerable,Func)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast(IEnumerable)
  nameWithType: Enumerable.Cast(IEnumerable)
  fullName: System.Linq.Enumerable.Cast(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Concat(IEnumerable,IEnumerable)
  nameWithType: Enumerable.Concat(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.Concat(IEnumerable,IEnumerable)
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0}@,``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Contains(IEnumerable,TSource)
  nameWithType: Enumerable.Contains(IEnumerable,TSource)
  fullName: System.Linq.Enumerable.Contains(IEnumerable,TSource)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Contains(IEnumerable,TSource,IEqualityComparer)
  nameWithType: Enumerable.Contains(IEnumerable,TSource,IEqualityComparer)
  fullName: System.Linq.Enumerable.Contains(IEnumerable,TSource,IEqualityComparer)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Count(IEnumerable)
  nameWithType: Enumerable.Count(IEnumerable)
  fullName: System.Linq.Enumerable.Count(IEnumerable)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Count(IEnumerable,Func)
  nameWithType: Enumerable.Count(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Count(IEnumerable,Func)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: DefaultIfEmpty(IEnumerable)
  nameWithType: Enumerable.DefaultIfEmpty(IEnumerable)
  fullName: System.Linq.Enumerable.DefaultIfEmpty(IEnumerable)
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0}@,``0)
  parent: System.Linq.Enumerable
  isExternal: false
  name: DefaultIfEmpty(IEnumerable,TSource)
  nameWithType: Enumerable.DefaultIfEmpty(IEnumerable,TSource)
  fullName: System.Linq.Enumerable.DefaultIfEmpty(IEnumerable,TSource)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Distinct(IEnumerable)
  nameWithType: Enumerable.Distinct(IEnumerable)
  fullName: System.Linq.Enumerable.Distinct(IEnumerable)
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Distinct(IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.Distinct(IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.Distinct(IEnumerable,IEqualityComparer)
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: ElementAt(IEnumerable,Int32)
  nameWithType: Enumerable.ElementAt(IEnumerable,Int32)
  fullName: System.Linq.Enumerable.ElementAt(IEnumerable,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: ElementAtOrDefault(IEnumerable,Int32)
  nameWithType: Enumerable.ElementAtOrDefault(IEnumerable,Int32)
  fullName: System.Linq.Enumerable.ElementAtOrDefault(IEnumerable,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Empty``1
  parent: System.Linq.Enumerable
  isExternal: false
  name: Empty()
  nameWithType: Enumerable.Empty()
  fullName: System.Linq.Enumerable.Empty()
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Except(IEnumerable,IEnumerable)
  nameWithType: Enumerable.Except(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.Except(IEnumerable,IEnumerable)
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Except(IEnumerable,IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.Except(IEnumerable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.Except(IEnumerable,IEnumerable,IEqualityComparer)
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: First(IEnumerable)
  nameWithType: Enumerable.First(IEnumerable)
  fullName: System.Linq.Enumerable.First(IEnumerable)
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: First(IEnumerable,Func)
  nameWithType: Enumerable.First(IEnumerable,Func)
  fullName: System.Linq.Enumerable.First(IEnumerable,Func)
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: FirstOrDefault(IEnumerable)
  nameWithType: Enumerable.FirstOrDefault(IEnumerable)
  fullName: System.Linq.Enumerable.FirstOrDefault(IEnumerable)
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: FirstOrDefault(IEnumerable,Func)
  nameWithType: Enumerable.FirstOrDefault(IEnumerable,Func)
  fullName: System.Linq.Enumerable.FirstOrDefault(IEnumerable,Func)
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy(IEnumerable,Func)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func)
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy(IEnumerable,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,IEqualityComparer)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy(IEnumerable,Func,Func)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func,IEqualityComparer)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy(IEnumerable,Func,Func)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func)
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func,IEqualityComparer)
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy(IEnumerable,Func,Func,Func)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func,Func)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func,Func)
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupBy(IEnumerable,Func,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupBy(IEnumerable,Func,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupBy(IEnumerable,Func,Func,Func,IEqualityComparer)
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupJoin(IEnumerable,IEnumerable,Func,Func,Func)
  nameWithType: Enumerable.GroupJoin(IEnumerable,IEnumerable,Func,Func,Func)
  fullName: System.Linq.Enumerable.GroupJoin(IEnumerable,IEnumerable,Func,Func,Func)
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: GroupJoin(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.GroupJoin(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.GroupJoin(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Intersect(IEnumerable,IEnumerable)
  nameWithType: Enumerable.Intersect(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.Intersect(IEnumerable,IEnumerable)
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Intersect(IEnumerable,IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.Intersect(IEnumerable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.Intersect(IEnumerable,IEnumerable,IEqualityComparer)
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Join(IEnumerable,IEnumerable,Func,Func,Func)
  nameWithType: Enumerable.Join(IEnumerable,IEnumerable,Func,Func,Func)
  fullName: System.Linq.Enumerable.Join(IEnumerable,IEnumerable,Func,Func,Func)
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Join(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.Join(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.Join(IEnumerable,IEnumerable,Func,Func,Func,IEqualityComparer)
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Last(IEnumerable)
  nameWithType: Enumerable.Last(IEnumerable)
  fullName: System.Linq.Enumerable.Last(IEnumerable)
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Last(IEnumerable,Func)
  nameWithType: Enumerable.Last(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Last(IEnumerable,Func)
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: LastOrDefault(IEnumerable)
  nameWithType: Enumerable.LastOrDefault(IEnumerable)
  fullName: System.Linq.Enumerable.LastOrDefault(IEnumerable)
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LastOrDefault(IEnumerable,Func)
  nameWithType: Enumerable.LastOrDefault(IEnumerable,Func)
  fullName: System.Linq.Enumerable.LastOrDefault(IEnumerable,Func)
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: LongCount(IEnumerable)
  nameWithType: Enumerable.LongCount(IEnumerable)
  fullName: System.Linq.Enumerable.LongCount(IEnumerable)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: LongCount(IEnumerable,Func)
  nameWithType: Enumerable.LongCount(IEnumerable,Func)
  fullName: System.Linq.Enumerable.LongCount(IEnumerable,Func)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable)
  nameWithType: Enumerable.Max(IEnumerable)
  fullName: System.Linq.Enumerable.Max(IEnumerable)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Max(IEnumerable,Func)
  nameWithType: Enumerable.Max(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Max(IEnumerable,Func)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable)
  nameWithType: Enumerable.Min(IEnumerable)
  fullName: System.Linq.Enumerable.Min(IEnumerable)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Min(IEnumerable,Func)
  nameWithType: Enumerable.Min(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Min(IEnumerable,Func)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType(IEnumerable)
  nameWithType: Enumerable.OfType(IEnumerable)
  fullName: System.Linq.Enumerable.OfType(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderBy(IEnumerable,Func)
  nameWithType: Enumerable.OrderBy(IEnumerable,Func)
  fullName: System.Linq.Enumerable.OrderBy(IEnumerable,Func)
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderBy(IEnumerable,Func,IComparer)
  nameWithType: Enumerable.OrderBy(IEnumerable,Func,IComparer)
  fullName: System.Linq.Enumerable.OrderBy(IEnumerable,Func,IComparer)
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderByDescending(IEnumerable,Func)
  nameWithType: Enumerable.OrderByDescending(IEnumerable,Func)
  fullName: System.Linq.Enumerable.OrderByDescending(IEnumerable,Func)
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: OrderByDescending(IEnumerable,Func,IComparer)
  nameWithType: Enumerable.OrderByDescending(IEnumerable,Func,IComparer)
  fullName: System.Linq.Enumerable.OrderByDescending(IEnumerable,Func,IComparer)
- uid: System.Linq.Enumerable.Range(System.Int32,System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Range(Int32,Int32)
  nameWithType: Enumerable.Range(Int32,Int32)
  fullName: System.Linq.Enumerable.Range(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Repeat``1(``0,System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Repeat(TResult,Int32)
  nameWithType: Enumerable.Repeat(TResult,Int32)
  fullName: System.Linq.Enumerable.Repeat(TResult,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Reverse(IEnumerable)
  nameWithType: Enumerable.Reverse(IEnumerable)
  fullName: System.Linq.Enumerable.Reverse(IEnumerable)
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Select(IEnumerable,Func)
  nameWithType: Enumerable.Select(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Select(IEnumerable,Func)
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Select(IEnumerable,Func)
  nameWithType: Enumerable.Select(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Select(IEnumerable,Func)
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany(IEnumerable,Func)
  nameWithType: Enumerable.SelectMany(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SelectMany(IEnumerable,Func)
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany(IEnumerable,Func)
  nameWithType: Enumerable.SelectMany(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SelectMany(IEnumerable,Func)
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany(IEnumerable,Func,Func)
  nameWithType: Enumerable.SelectMany(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.SelectMany(IEnumerable,Func,Func)
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SelectMany(IEnumerable,Func,Func)
  nameWithType: Enumerable.SelectMany(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.SelectMany(IEnumerable,Func,Func)
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SequenceEqual(IEnumerable,IEnumerable)
  nameWithType: Enumerable.SequenceEqual(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.SequenceEqual(IEnumerable,IEnumerable)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SequenceEqual(IEnumerable,IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.SequenceEqual(IEnumerable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.SequenceEqual(IEnumerable,IEnumerable,IEqualityComparer)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Single(IEnumerable)
  nameWithType: Enumerable.Single(IEnumerable)
  fullName: System.Linq.Enumerable.Single(IEnumerable)
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Single(IEnumerable,Func)
  nameWithType: Enumerable.Single(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Single(IEnumerable,Func)
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: SingleOrDefault(IEnumerable)
  nameWithType: Enumerable.SingleOrDefault(IEnumerable)
  fullName: System.Linq.Enumerable.SingleOrDefault(IEnumerable)
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SingleOrDefault(IEnumerable,Func)
  nameWithType: Enumerable.SingleOrDefault(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SingleOrDefault(IEnumerable,Func)
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Skip(IEnumerable,Int32)
  nameWithType: Enumerable.Skip(IEnumerable,Int32)
  fullName: System.Linq.Enumerable.Skip(IEnumerable,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SkipWhile(IEnumerable,Func)
  nameWithType: Enumerable.SkipWhile(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SkipWhile(IEnumerable,Func)
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: SkipWhile(IEnumerable,Func)
  nameWithType: Enumerable.SkipWhile(IEnumerable,Func)
  fullName: System.Linq.Enumerable.SkipWhile(IEnumerable,Func)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable)
  nameWithType: Enumerable.Sum(IEnumerable)
  fullName: System.Linq.Enumerable.Sum(IEnumerable)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Decimal
  parent: System
  isExternal: false
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Double
  parent: System
  isExternal: false
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Sum(IEnumerable,Func)
  nameWithType: Enumerable.Sum(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Sum(IEnumerable,Func)
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0}@,System.Int32)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Take(IEnumerable,Int32)
  nameWithType: Enumerable.Take(IEnumerable,Int32)
  fullName: System.Linq.Enumerable.Take(IEnumerable,Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: TakeWhile(IEnumerable,Func)
  nameWithType: Enumerable.TakeWhile(IEnumerable,Func)
  fullName: System.Linq.Enumerable.TakeWhile(IEnumerable,Func)
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: TakeWhile(IEnumerable,Func)
  nameWithType: Enumerable.TakeWhile(IEnumerable,Func)
  fullName: System.Linq.Enumerable.TakeWhile(IEnumerable,Func)
- uid: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ThenBy(IOrderedEnumerable,Func)
  nameWithType: Enumerable.ThenBy(IOrderedEnumerable,Func)
  fullName: System.Linq.Enumerable.ThenBy(IOrderedEnumerable,Func)
- uid: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ThenBy(IOrderedEnumerable,Func,IComparer)
  nameWithType: Enumerable.ThenBy(IOrderedEnumerable,Func,IComparer)
  fullName: System.Linq.Enumerable.ThenBy(IOrderedEnumerable,Func,IComparer)
- uid: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ThenByDescending(IOrderedEnumerable,Func)
  nameWithType: Enumerable.ThenByDescending(IOrderedEnumerable,Func)
  fullName: System.Linq.Enumerable.ThenByDescending(IOrderedEnumerable,Func)
- uid: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ThenByDescending(IOrderedEnumerable,Func,IComparer)
  nameWithType: Enumerable.ThenByDescending(IOrderedEnumerable,Func,IComparer)
  fullName: System.Linq.Enumerable.ThenByDescending(IOrderedEnumerable,Func,IComparer)
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToArray(IEnumerable)
  nameWithType: Enumerable.ToArray(IEnumerable)
  fullName: System.Linq.Enumerable.ToArray(IEnumerable)
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary(IEnumerable,Func)
  nameWithType: Enumerable.ToDictionary(IEnumerable,Func)
  fullName: System.Linq.Enumerable.ToDictionary(IEnumerable,Func)
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary(IEnumerable,Func,IEqualityComparer)
  nameWithType: Enumerable.ToDictionary(IEnumerable,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.ToDictionary(IEnumerable,Func,IEqualityComparer)
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary(IEnumerable,Func,Func)
  nameWithType: Enumerable.ToDictionary(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.ToDictionary(IEnumerable,Func,Func)
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToDictionary(IEnumerable,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.ToDictionary(IEnumerable,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.ToDictionary(IEnumerable,Func,Func,IEqualityComparer)
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToList(IEnumerable)
  nameWithType: Enumerable.ToList(IEnumerable)
  fullName: System.Linq.Enumerable.ToList(IEnumerable)
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup(IEnumerable,Func)
  nameWithType: Enumerable.ToLookup(IEnumerable,Func)
  fullName: System.Linq.Enumerable.ToLookup(IEnumerable,Func)
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup(IEnumerable,Func,IEqualityComparer)
  nameWithType: Enumerable.ToLookup(IEnumerable,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.ToLookup(IEnumerable,Func,IEqualityComparer)
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup(IEnumerable,Func,Func)
  nameWithType: Enumerable.ToLookup(IEnumerable,Func,Func)
  fullName: System.Linq.Enumerable.ToLookup(IEnumerable,Func,Func)
- uid: System.Linq.ILookup`2
  parent: System.Linq
  isExternal: false
  name: ILookup<TKey,TElement>
  nameWithType: ILookup<TKey,TElement>
  fullName: System.Linq.ILookup<TKey,TElement>
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  isExternal: false
  name: ToLookup(IEnumerable,Func,Func,IEqualityComparer)
  nameWithType: Enumerable.ToLookup(IEnumerable,Func,Func,IEqualityComparer)
  fullName: System.Linq.Enumerable.ToLookup(IEnumerable,Func,Func,IEqualityComparer)
- uid: System.Linq.ILookup`2
  parent: System.Linq
  isExternal: false
  name: ILookup<TKey,TElement>
  nameWithType: ILookup<TKey,TElement>
  fullName: System.Linq.ILookup<TKey,TElement>
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Union(IEnumerable,IEnumerable)
  nameWithType: Enumerable.Union(IEnumerable,IEnumerable)
  fullName: System.Linq.Enumerable.Union(IEnumerable,IEnumerable)
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Union(IEnumerable,IEnumerable,IEqualityComparer)
  nameWithType: Enumerable.Union(IEnumerable,IEnumerable,IEqualityComparer)
  fullName: System.Linq.Enumerable.Union(IEnumerable,IEnumerable,IEqualityComparer)
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Where(IEnumerable,Func)
  nameWithType: Enumerable.Where(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Where(IEnumerable,Func)
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Where(IEnumerable,Func)
  nameWithType: Enumerable.Where(IEnumerable,Func)
  fullName: System.Linq.Enumerable.Where(IEnumerable,Func)
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  isExternal: false
  name: Zip(IEnumerable,IEnumerable,Func)
  nameWithType: Enumerable.Zip(IEnumerable,IEnumerable,Func)
  fullName: System.Linq.Enumerable.Zip(IEnumerable,IEnumerable,Func)
- uid: System.Linq.Enumerable.Any<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Average*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Average<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Contains<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Count<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.DefaultIfEmpty<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Distinct<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Except<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.First<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.FirstOrDefault<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.GroupBy<TSource,TKey>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.GroupBy<TSource,TKey,TResult>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.GroupBy<TSource,TKey,TElement,TResult>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Intersect<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Join<TOuter,TInner,TKey,TResult>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Last<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.LastOrDefault<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.LongCount<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Max*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Max<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Min*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Min<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.OrderBy<TSource,TKey>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.OrderByDescending<TSource,TKey>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Select<TSource,TResult>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.SelectMany<TSource,TResult>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.SelectMany<TSource,TCollection,TResult>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.SequenceEqual<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Single<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.SingleOrDefault<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.SkipWhile<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Sum*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Sum<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.TakeWhile<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.ThenBy<TSource,TKey>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.ThenByDescending<TSource,TKey>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.ToDictionary<TSource,TKey>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.ToDictionary<TSource,TKey,TElement>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.ToLookup<TSource,TKey>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.ToLookup<TSource,TKey,TElement>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Union<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
- uid: System.Linq.Enumerable.Where<TSource>*
  parent: System.Linq.Enumerable
  isExternal: false
  nameWithType: Enumerable.
