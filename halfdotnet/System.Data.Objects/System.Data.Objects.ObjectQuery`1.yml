### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectQuery`1
  id: ObjectQuery`1
  children:
  - System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)
  - System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)
  - System.Data.Objects.ObjectQuery`1.Distinct
  - System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})
  - System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)
  - System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.Include(System.String)
  - System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})
  - System.Data.Objects.ObjectQuery`1.Name
  - System.Data.Objects.ObjectQuery`1.OfType``1
  - System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])
  - System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})
  - System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})
  - System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])
  langs:
  - csharp
  - vb
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
  type: Class
  syntax:
    content: 'public class ObjectQuery<T> : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable<T>, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable<T>, System.Linq.IQueryable<T>'
    typeParameters:
    - id: T
      description: Parameter description to be filled
  inheritance:
  - System.Object
  - System.Data.Objects.ObjectQuery
  implements:
  - System.Collections.Generic.IEnumerable<T>
  - System.ComponentModel.IListSource
  - System.Linq.IOrderedQueryable<T>
  - System.Linq.IQueryable<T>
  inheritedMembers:
  - System.Data.Objects.ObjectQuery.CommandText
  - System.Data.Objects.ObjectQuery.Context
  - System.Data.Objects.ObjectQuery.EnablePlanCaching
  - System.Data.Objects.ObjectQuery.GetResultType
  - System.Data.Objects.ObjectQuery.MergeOption
  - System.Data.Objects.ObjectQuery.Parameters
  - System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression
  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider
  - System.Data.Objects.ObjectQuery.ToTraceString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)
  id: '#ctor(System.String,System.Data.Objects.ObjectContext)'
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: ObjectQuery<T>..ctor
  fullName: System.Data.Objects.ObjectQuery<T>..ctor
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);
    parameters:
    - id: commandText
      type: System.String
      description: Parameter description to be filled
    - id: context
      type: System.Data.Objects.ObjectContext
      description: Parameter description to be filled
- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)
  id: '#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)'
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: ObjectQuery<T>..ctor
  fullName: System.Data.Objects.ObjectQuery<T>..ctor
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: commandText
      type: System.String
      description: Parameter description to be filled
    - id: context
      type: System.Data.Objects.ObjectContext
      description: Parameter description to be filled
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: Parameter description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Distinct
  id: Distinct
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Distinct
  nameWithType: ObjectQuery<T>.Distinct
  fullName: System.Data.Objects.ObjectQuery<T>.Distinct
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> Distinct ();
    parameters: []
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})
  id: Except(System.Data.Objects.ObjectQuery{`0})
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Except
  nameWithType: ObjectQuery<T>.Except
  fullName: System.Data.Objects.ObjectQuery<T>.Except
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> Except (System.Data.Objects.ObjectQuery<T> query);
    parameters:
    - id: query
      type: System.Data.Objects.ObjectQuery{T}
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)
  id: Execute(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Execute
  nameWithType: ObjectQuery<T>.Execute
  fullName: System.Data.Objects.ObjectQuery<T>.Execute
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectResult<T> Execute (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectResult{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])
  id: GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: GroupBy
  nameWithType: ObjectQuery<T>.GroupBy
  fullName: System.Data.Objects.ObjectQuery<T>.GroupBy
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<System.Data.Common.DbDataRecord> GroupBy (string keys, string projection, System.Data.Objects.ObjectParameter[] parameters);
    parameters:
    - id: keys
      type: System.String
      description: Parameter description to be filled
    - id: projection
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Data.Objects.ObjectParameter[]
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{System.Data.Common.DbDataRecord}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Include(System.String)
  id: Include(System.String)
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Include
  nameWithType: ObjectQuery<T>.Include
  fullName: System.Data.Objects.ObjectQuery<T>.Include
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> Include (string path);
    parameters:
    - id: path
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})
  id: Intersect(System.Data.Objects.ObjectQuery{`0})
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Intersect
  nameWithType: ObjectQuery<T>.Intersect
  fullName: System.Data.Objects.ObjectQuery<T>.Intersect
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> Intersect (System.Data.Objects.ObjectQuery<T> query);
    parameters:
    - id: query
      type: System.Data.Objects.ObjectQuery{T}
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Name
  id: Name
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ObjectQuery<T>.Name
  fullName: System.Data.Objects.ObjectQuery<T>.Name
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.OfType``1
  id: OfType``1
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: OfType<TResultType>
  nameWithType: ObjectQuery<T>.OfType<TResultType>
  fullName: System.Data.Objects.ObjectQuery<T>.OfType<TResultType>
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<TResultType> OfType<TResultType> ();
    parameters: []
    return:
      type: System.Data.Objects.ObjectQuery{TResultType}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])
  id: OrderBy(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: OrderBy
  nameWithType: ObjectQuery<T>.OrderBy
  fullName: System.Data.Objects.ObjectQuery<T>.OrderBy
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> OrderBy (string keys, System.Data.Objects.ObjectParameter[] parameters);
    parameters:
    - id: keys
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Data.Objects.ObjectParameter[]
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])
  id: Select(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Select
  nameWithType: ObjectQuery<T>.Select
  fullName: System.Data.Objects.ObjectQuery<T>.Select
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<System.Data.Common.DbDataRecord> Select (string projection, System.Data.Objects.ObjectParameter[] parameters);
    parameters:
    - id: projection
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Data.Objects.ObjectParameter[]
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{System.Data.Common.DbDataRecord}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])
  id: SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: SelectValue<TResultType>
  nameWithType: ObjectQuery<T>.SelectValue<TResultType>
  fullName: System.Data.Objects.ObjectQuery<T>.SelectValue<TResultType>
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<TResultType> SelectValue<TResultType> (string projection, System.Data.Objects.ObjectParameter[] parameters);
    parameters:
    - id: projection
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Data.Objects.ObjectParameter[]
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{TResultType}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])
  id: Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Skip
  nameWithType: ObjectQuery<T>.Skip
  fullName: System.Data.Objects.ObjectQuery<T>.Skip
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> Skip (string keys, string count, System.Data.Objects.ObjectParameter[] parameters);
    parameters:
    - id: keys
      type: System.String
      description: Parameter description to be filled
    - id: count
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Data.Objects.ObjectParameter[]
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isEii: true
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType: ObjectQuery<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName: System.Data.Objects.ObjectQuery<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])
  id: Top(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: ObjectQuery<T>.Top
  fullName: System.Data.Objects.ObjectQuery<T>.Top
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> Top (string count, System.Data.Objects.ObjectParameter[] parameters);
    parameters:
    - id: count
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Data.Objects.ObjectParameter[]
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})
  id: Union(System.Data.Objects.ObjectQuery{`0})
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Union
  nameWithType: ObjectQuery<T>.Union
  fullName: System.Data.Objects.ObjectQuery<T>.Union
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> Union (System.Data.Objects.ObjectQuery<T> query);
    parameters:
    - id: query
      type: System.Data.Objects.ObjectQuery{T}
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})
  id: UnionAll(System.Data.Objects.ObjectQuery{`0})
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: UnionAll
  nameWithType: ObjectQuery<T>.UnionAll
  fullName: System.Data.Objects.ObjectQuery<T>.UnionAll
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> UnionAll (System.Data.Objects.ObjectQuery<T> query);
    parameters:
    - id: query
      type: System.Data.Objects.ObjectQuery{T}
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
- uid: System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])
  id: Where(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  langs:
  - csharp
  - vb
  name: Where
  nameWithType: ObjectQuery<T>.Where
  fullName: System.Data.Objects.ObjectQuery<T>.Where
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: public System.Data.Objects.ObjectQuery<T> Where (string predicate, System.Data.Objects.ObjectParameter[] parameters);
    parameters:
    - id: predicate
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Data.Objects.ObjectParameter[]
      description: Parameter description to be filled
    return:
      type: System.Data.Objects.ObjectQuery{T}
      description: Return description to be filled
references:
- uid: System.Data.Objects.ObjectQuery
  isExternal: false
  name: System.Data.Objects.ObjectQuery
- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: .ctor
  nameWithType: ObjectQuery<T>..ctor
  fullName: System.Data.Objects.ObjectQuery<T>..ctor
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectContext
  parent: System.Data.Objects
  isExternal: false
  name: ObjectContext
  nameWithType: ObjectContext
  fullName: System.Data.Objects.ObjectContext
- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: .ctor
  nameWithType: ObjectQuery<T>..ctor
  fullName: System.Data.Objects.ObjectQuery<T>..ctor
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectContext
  parent: System.Data.Objects
  isExternal: false
  name: ObjectContext
  nameWithType: ObjectContext
  fullName: System.Data.Objects.ObjectContext
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.ObjectQuery`1.Distinct
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Distinct
  nameWithType: ObjectQuery<T>.Distinct
  fullName: System.Data.Objects.ObjectQuery<T>.Distinct
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Except
  nameWithType: ObjectQuery<T>.Except
  fullName: System.Data.Objects.ObjectQuery<T>.Except
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Execute
  nameWithType: ObjectQuery<T>.Execute
  fullName: System.Data.Objects.ObjectQuery<T>.Execute
- uid: System.Data.Objects.ObjectResult`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectResult<T>
  nameWithType: ObjectResult<T>
  fullName: System.Data.Objects.ObjectResult<T>
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: GroupBy
  nameWithType: ObjectQuery<T>.GroupBy
  fullName: System.Data.Objects.ObjectQuery<T>.GroupBy
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery`1.Include(System.String)
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Include
  nameWithType: ObjectQuery<T>.Include
  fullName: System.Data.Objects.ObjectQuery<T>.Include
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Intersect
  nameWithType: ObjectQuery<T>.Intersect
  fullName: System.Data.Objects.ObjectQuery<T>.Intersect
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.Data.Objects.ObjectQuery`1.Name
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Name
  nameWithType: ObjectQuery<T>.Name
  fullName: System.Data.Objects.ObjectQuery<T>.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery`1.OfType``1
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: OfType<TResultType>
  nameWithType: ObjectQuery<T>.OfType<TResultType>
  fullName: System.Data.Objects.ObjectQuery<T>.OfType<TResultType>
- uid: System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: OrderBy
  nameWithType: ObjectQuery<T>.OrderBy
  fullName: System.Data.Objects.ObjectQuery<T>.OrderBy
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Select
  nameWithType: ObjectQuery<T>.Select
  fullName: System.Data.Objects.ObjectQuery<T>.Select
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: SelectValue<TResultType>
  nameWithType: ObjectQuery<T>.SelectValue<TResultType>
  fullName: System.Data.Objects.ObjectQuery<T>.SelectValue<TResultType>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Skip
  nameWithType: ObjectQuery<T>.Skip
  fullName: System.Data.Objects.ObjectQuery<T>.Skip
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType: ObjectQuery<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName: System.Data.Objects.ObjectQuery<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Top
  nameWithType: ObjectQuery<T>.Top
  fullName: System.Data.Objects.ObjectQuery<T>.Top
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Union
  nameWithType: ObjectQuery<T>.Union
  fullName: System.Data.Objects.ObjectQuery<T>.Union
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: UnionAll
  nameWithType: ObjectQuery<T>.UnionAll
  fullName: System.Data.Objects.ObjectQuery<T>.UnionAll
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])
  parent: System.Data.Objects.ObjectQuery`1
  isExternal: false
  name: Where
  nameWithType: ObjectQuery<T>.Where
  fullName: System.Data.Objects.ObjectQuery<T>.Where
- uid: System.Data.Objects.ObjectQuery`1
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<T>
  nameWithType: ObjectQuery<T>
  fullName: System.Data.Objects.ObjectQuery<T>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
