### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Proxies.RealProxy
  id: RealProxy
  children:
  - System.Runtime.Remoting.Proxies.RealProxy.#ctor
  - System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type)
  - System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type,System.IntPtr,System.Object)
  - System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)
  - System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)
  - System.Runtime.Remoting.Proxies.RealProxy.DetachServer
  - System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)
  - System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
  - System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
  - System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy
  - System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
  - System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  - System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  - System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)
  - System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)
  - System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)
  langs:
  - csharp
  name: RealProxy
  nameWithType: RealProxy
  fullName: System.Runtime.Remoting.Proxies.RealProxy
  type: Class
  summary: Provides base functionality for proxies.
  remarks: "The RealProxy class is the `abstract` base class from which proxies must derive.  \n  \n A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object. The transparent proxy provides the illusion that the actual object resides in the client's space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.  \n  \n The transparent proxy is itself housed by an instance of a managed runtime class of type RealProxy. The RealProxy implements a part of the functionality that is needed to forward the operations from the transparent proxy. Note that a proxy object inherits the associated semantics of managed objects such as garbage collection, support for fields and methods, and can be extended to form new classes. The proxy has a dual nature: it acts as an object of the same class as the remote object (transparent proxy), and it is a managed object itself.  \n  \n A proxy object can be used without regard to any remoting subdivisions within a <xref:System.AppDomain>.  \n  \n> [!NOTE]\n>  This class makes a link demand and an inheritance demand at the class level. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission. For details about security demands, see [Link Demands](../Topic/Link%20Demands.md) and [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - '[!CODE [ChannelServices_SyncDispatchMessage#1](../CodeSnippet/VS_Snippets_Remoting/ChannelServices_SyncDispatchMessage#1)]'
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public abstract class RealProxy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: RealProxy()
  nameWithType: RealProxy.RealProxy()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.RealProxy()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Proxies.RealProxy"> class with default values.
  remarks: ''
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#12](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#12)]'
  syntax:
    content: protected RealProxy ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: RealProxy(Type)
  nameWithType: RealProxy.RealProxy(Type)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.RealProxy(Type)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Proxies.RealProxy"> class that represents a remote object of the specified <xref:System.Type>.
  remarks: "The current method creates a transparent proxy, which can be accessed through the <xref:System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy%2A> method.  \n  \n A client that uses an object across any kind of a remoting boundary is actually using a transparent proxy for the object. The transparent proxy gives the impression that the actual object resides in the client's space. It achieves this by forwarding calls made on it to the real object using the remoting infrastructure.  \n  \n The transparent proxy is housed by an instance of a managed runtime class <xref:System.Runtime.Remoting.Proxies.RealProxy>. The <xref:System.Runtime.Remoting.Proxies.RealProxy> implements a part of the functionality that is needed to forward the operations from the transparent proxy. Note that a proxy object inherits the associated semantics of managed objects such as garbage collection and support for fields and methods, and can be extended to form new classes. The proxy has a dual nature: it acts as an object of the same class as the remote object (transparent proxy), and is a managed object itself."
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#10](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#10)]'
  syntax:
    content: protected RealProxy (Type classToProxy);
    parameters:
    - id: classToProxy
      type: System.Type
      description: The <see cref="T:System.Type"> of the remote object for which to create a proxy.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type,System.IntPtr,System.Object)
  id: '#ctor(System.Type,System.IntPtr,System.Object)'
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: RealProxy(Type,IntPtr,Object)
  nameWithType: RealProxy.RealProxy(Type,IntPtr,Object)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.RealProxy(Type,IntPtr,Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Proxies.RealProxy"> class.
  remarks: The stub data is used by custom proxy users to decide what to do with an incoming method call. For example, the stub data might be information about the server's context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.
  syntax:
    content: protected RealProxy (Type classToProxy, IntPtr stub, object stubData);
    parameters:
    - id: classToProxy
      type: System.Type
      description: The <see cref="T:System.Type"> of the remote object for which to create a proxy.
    - id: stub
      type: System.IntPtr
      description: A stub to associate with the new proxy instance.
    - id: stubData
      type: System.Object
      description: The stub data to set for the specified stub and the new proxy instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)
  id: AttachServer(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: AttachServer(MarshalByRefObject)
  nameWithType: RealProxy.AttachServer(MarshalByRefObject)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.AttachServer(MarshalByRefObject)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Attaches the current proxy instance to the specified remote <see cref="T:System.MarshalByRefObject">.
  remarks: To be added.
  syntax:
    content: protected void AttachServer (MarshalByRefObject s);
    parameters:
    - id: s
      type: System.MarshalByRefObject
      description: The <see cref="T:System.MarshalByRefObject"> that the current proxy instance represents.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)
  id: CreateObjRef(System.Type)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: CreateObjRef(Type)
  nameWithType: RealProxy.CreateObjRef(Type)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Creates an <see cref="T:System.Runtime.Remoting.ObjRef"> for the specified object type, and registers it with the remoting infrastructure as a client-activated object.
  remarks: ''
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#6](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#6)]'
  syntax:
    content: public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);
    parameters:
    - id: requestedType
      type: System.Type
      description: The object type that an <see cref="T:System.Runtime.Remoting.ObjRef"> is created for.
    return:
      type: System.Runtime.Remoting.ObjRef
      description: A new instance of <see cref="T:System.Runtime.Remoting.ObjRef"> that is created for the specified type.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.DetachServer
  id: DetachServer
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: DetachServer()
  nameWithType: RealProxy.DetachServer()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.DetachServer()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Detaches the current proxy instance from the remote server object that it represents.
  remarks: To be added.
  syntax:
    content: protected MarshalByRefObject DetachServer ();
    parameters: []
    return:
      type: System.MarshalByRefObject
      description: The detached server object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)
  id: GetCOMIUnknown(System.Boolean)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: GetCOMIUnknown(Boolean)
  nameWithType: RealProxy.GetCOMIUnknown(Boolean)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Requests an unmanaged reference to the object represented by the current proxy instance.
  remarks: "If the proxy is requested for marshaling, then an `IUnknown` interface for the object represented by the current proxy instance is returned. If an `IUnknown` was previously cached by the <xref:System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown%2A> method, then that instance is returned; otherwise, a new instance is returned.  \n  \n If the proxy is requested not for marshaling but for communication with unmanaged objects in the current process, then a [COM Callable Wrapper](../Topic/COM%20Callable%20Wrapper.md) (CCW), which can be used in the current process for communication through COM, is returned."
  example:
  - '[!CODE [RealProxy_Sample#2](../CodeSnippet/VS_Snippets_Remoting/RealProxy_Sample#2)]'
  syntax:
    content: public virtual IntPtr GetCOMIUnknown (bool fIsMarshalled);
    parameters:
    - id: fIsMarshalled
      type: System.Boolean
      description: '`true` if the object reference is requested for marshaling to a remote location; `false` if the object reference is requested for communication with unmanaged objects in the current process through COM.'
    return:
      type: System.IntPtr
      description: A pointer to a [COM Callable Wrapper](../Topic/COM%20Callable%20Wrapper.md) if the object reference is requested for communication with unmanaged objects in the current process through COM, or a pointer to a cached or newly generated `IUnknown` COM interface if the object reference is requested for marshaling to a remote location.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RealProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Adds the transparent proxy of the object represented by the current instance of <see cref="T:System.Runtime.Remoting.Proxies.RealProxy"> to the specified <xref:System.Runtime.Serialization.SerializationInfo>.
  remarks: ''
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#7](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#7)]'
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <see cref="T:System.Runtime.Serialization.SerializationInfo"> into which the transparent proxy is serialized.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The source and destination of the serialization.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
  id: GetProxiedType
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: GetProxiedType()
  nameWithType: RealProxy.GetProxiedType()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Returns the <see cref="T:System.Type"> of the object that the current instance of <xref:System.Runtime.Remoting.Proxies.RealProxy> represents.
  remarks: ''
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#10](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#10)]'
  syntax:
    content: public Type GetProxiedType ();
    parameters: []
    return:
      type: System.Type
      description: The <see cref="T:System.Type"> of the object that the current instance of <xref:System.Runtime.Remoting.Proxies.RealProxy> represents.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
  id: GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: GetStubData(RealProxy)
  nameWithType: RealProxy.GetStubData(RealProxy)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetStubData(RealProxy)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Retrieves stub data that is stored for the specified proxy.
  remarks: The stub data is used by custom proxy users to decide what to do with an incoming method call. For example, the stub data might be information about the server's context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#9](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#9)]'
  syntax:
    content: public static object GetStubData (System.Runtime.Remoting.Proxies.RealProxy rp);
    parameters:
    - id: rp
      type: System.Runtime.Remoting.Proxies.RealProxy
      description: The proxy for which stub data is requested.
    return:
      type: System.Object
      description: Stub data for the specified proxy.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy
  id: GetTransparentProxy
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: GetTransparentProxy()
  nameWithType: RealProxy.GetTransparentProxy()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Returns the transparent proxy for the current instance of <see cref="T:System.Runtime.Remoting.Proxies.RealProxy">.
  remarks: ''
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#8](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#8)]'
  syntax:
    content: public virtual object GetTransparentProxy ();
    parameters: []
    return:
      type: System.Object
      description: The transparent proxy for the current proxy instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
  id: GetUnwrappedServer
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: GetUnwrappedServer()
  nameWithType: RealProxy.GetUnwrappedServer()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Returns the server object that is represented by the current proxy instance.
  remarks: The GetUnwrappedServer method is used in scenarios involving an external <xref:System.Runtime.Remoting.Contexts.Context> in the same <xref:System.AppDomain>.
  syntax:
    content: protected MarshalByRefObject GetUnwrappedServer ();
    parameters: []
    return:
      type: System.MarshalByRefObject
      description: The server object that is represented by the current proxy instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  id: InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: InitializeServerObject(IConstructionCallMessage)
  nameWithType: RealProxy.InitializeServerObject(IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(IConstructionCallMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Initializes a new instance of the object <see cref="T:System.Type"> of the remote object that the current instance of <xref:System.Runtime.Remoting.Proxies.RealProxy> represents with the specified <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage>.
  remarks: If the  parameter is `null`, then the InitializeServerObject method calls the default constructor for the new instance of the remote object that is represented by the current <xref:System.Runtime.Remoting.Proxies.RealProxy>.
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#5](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#5)]'
  syntax:
    content: public System.Runtime.Remoting.Activation.IConstructionReturnMessage InitializeServerObject (System.Runtime.Remoting.Activation.IConstructionCallMessage ctorMsg);
    parameters:
    - id: ctorMsg
      type: System.Runtime.Remoting.Activation.IConstructionCallMessage
      description: A construction call message that contains the constructor parameters for the new instance of the remote object that is represented by the current <see cref="T:System.Runtime.Remoting.Proxies.RealProxy">. Can be `null`.
    return:
      type: System.Runtime.Remoting.Activation.IConstructionReturnMessage
      description: The result of the construction request.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  id: Invoke(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: Invoke(IMessage)
  nameWithType: RealProxy.Invoke(IMessage)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.Invoke(IMessage)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: When overridden in a derived class, invokes the method that is specified in the provided <see cref="T:System.Runtime.Remoting.Messaging.IMessage"> on the remote object that is represented by the current instance.
  remarks: "When the transparent proxy that is backed by the <xref:System.Runtime.Remoting.Proxies.RealProxy> is called, it delegates the calls to the Invoke method. The Invoke method transforms the message in the  parameter into a <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>, and sends it to the remote object that is represented by the current instance of <xref:System.Runtime.Remoting.Proxies.RealProxy>.  \n  \n The <xref:System.Runtime.Remoting.Messaging.IMessage> parameter provides a dictionary through the <xref:System.Runtime.Remoting.Messaging.IMessage.Properties%2A?displayProperty=fullName> property. The dictionary contains name/value pairs of information about the method call, such as the name of the method called and its parameters."
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#4](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#4)]'
  syntax:
    content: public abstract System.Runtime.Remoting.Messaging.IMessage Invoke (System.Runtime.Remoting.Messaging.IMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: A <see cref="T:System.Runtime.Remoting.Messaging.IMessage"> that contains a <xref:System.Collections.IDictionary> of information about the method call.
    return:
      type: System.Runtime.Remoting.Messaging.IMessage
      description: The message returned by the invoked method, containing the return value and any `out` or `ref` parameters.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)
  id: SetCOMIUnknown(System.IntPtr)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: SetCOMIUnknown(IntPtr)
  nameWithType: RealProxy.SetCOMIUnknown(IntPtr)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Stores an unmanaged proxy of the object that is represented by the current instance.
  remarks: "When an unmanaged proxy attempts to communicate with the common language runtime through COM, the runtime resolves the remote object that is represented by the unmanaged proxy. If the remote object is managed and also resides in a common language environment, then instead of communicating with it through distributed COM, the object is sent to the current process.  \n  \n If the remote object is not derived from <xref:System.MarshalByRefObject>, then it is serialized and copied to the current location. If it is derived from <xref:System.MarshalByRefObject>, then it returns a transparent proxy, and the remoting infrastructure caches the unmanaged proxy (the `IUnknown` interface) in the transparent proxy for future use."
  example:
  - '[!CODE [RealProxy_Sample#3](../CodeSnippet/VS_Snippets_Remoting/RealProxy_Sample#3)]'
  syntax:
    content: public virtual void SetCOMIUnknown (IntPtr i);
    parameters:
    - id: i
      type: System.IntPtr
      description: A pointer to the `IUnknown` interface for the object that is represented by the current proxy instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)
  id: SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: SetStubData(RealProxy,Object)
  nameWithType: RealProxy.SetStubData(RealProxy,Object)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.SetStubData(RealProxy,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Sets the stub data for the specified proxy.
  remarks: The stub data is used by custom proxy users to decide what to do with an incoming method call. For example, the stub data might be information about the server's context that you can use to determine whether to execute the call locally, or send it through the remoting infrastructure.
  example:
  - '[!CODE [CustomProxy_Attribute_RealProxy#3](../CodeSnippet/VS_Snippets_Remoting/CustomProxy_Attribute_RealProxy#3)]'
  syntax:
    content: public static void SetStubData (System.Runtime.Remoting.Proxies.RealProxy rp, object stubData);
    parameters:
    - id: rp
      type: System.Runtime.Remoting.Proxies.RealProxy
      description: The proxy for which to set stub data.
    - id: stubData
      type: System.Object
      description: The new stub data.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)
  id: SupportsInterface(System.Guid@)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  langs:
  - csharp
  name: SupportsInterface(Guid)
  nameWithType: RealProxy.SupportsInterface(Guid)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Proxies
  summary: Requests a COM interface with the specified ID.
  remarks: "The SupportsInterface method allows the current proxy instance to implement additional COM interfaces on behalf of the server object that the current instance represents. The current method generates the requested interface and returns a pointer to it. The types of COM interfaces that can be generated by this method depend on the proxy type, which in turn might depend on the type of the server object that the current proxy instance represents.  \n  \n For more information, see <xref:System.Runtime.Remoting.Proxies.ProxyAttribute>."
  example:
  - '[!CODE [RealProxy_Sample#1](../CodeSnippet/VS_Snippets_Remoting/RealProxy_Sample#1)]'
  syntax:
    content: public virtual IntPtr SupportsInterface (ref Guid iid);
    parameters:
    - id: iid
      type: System.Guid
      description: A reference to the requested interface.
    return:
      type: System.IntPtr
      description: A pointer to the requested interface.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.Proxies.RealProxy.#ctor
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: RealProxy()
  nameWithType: RealProxy.RealProxy()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.RealProxy()
- uid: System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: RealProxy(Type)
  nameWithType: RealProxy.RealProxy(Type)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.RealProxy(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.Proxies.RealProxy.#ctor(System.Type,System.IntPtr,System.Object)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: RealProxy(Type,IntPtr,Object)
  nameWithType: RealProxy.RealProxy(Type,IntPtr,Object)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.RealProxy(Type,IntPtr,Object)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Proxies.RealProxy.AttachServer(System.MarshalByRefObject)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: AttachServer(MarshalByRefObject)
  nameWithType: RealProxy.AttachServer(MarshalByRefObject)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.AttachServer(MarshalByRefObject)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(System.Type)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: RealProxy.CreateObjRef(Type)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.CreateObjRef(Type)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.Proxies.RealProxy.DetachServer
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: DetachServer()
  nameWithType: RealProxy.DetachServer()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.DetachServer()
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(System.Boolean)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: GetCOMIUnknown(Boolean)
  nameWithType: RealProxy.GetCOMIUnknown(Boolean)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetCOMIUnknown(Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RealProxy.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: GetProxiedType()
  nameWithType: RealProxy.GetProxiedType()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType()
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetStubData(System.Runtime.Remoting.Proxies.RealProxy)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: GetStubData(RealProxy)
  nameWithType: RealProxy.GetStubData(RealProxy)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetStubData(RealProxy)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Proxies.RealProxy
  parent: System.Runtime.Remoting.Proxies
  isExternal: false
  name: RealProxy
  nameWithType: RealProxy
  fullName: System.Runtime.Remoting.Proxies.RealProxy
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: GetTransparentProxy()
  nameWithType: RealProxy.GetTransparentProxy()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: GetUnwrappedServer()
  nameWithType: RealProxy.GetUnwrappedServer()
  fullName: System.Runtime.Remoting.Proxies.RealProxy.GetUnwrappedServer()
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(System.Runtime.Remoting.Activation.IConstructionCallMessage)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: InitializeServerObject(IConstructionCallMessage)
  nameWithType: RealProxy.InitializeServerObject(IConstructionCallMessage)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.InitializeServerObject(IConstructionCallMessage)
- uid: System.Runtime.Remoting.Activation.IConstructionReturnMessage
  parent: System.Runtime.Remoting.Activation
  isExternal: false
  name: IConstructionReturnMessage
  nameWithType: IConstructionReturnMessage
  fullName: System.Runtime.Remoting.Activation.IConstructionReturnMessage
- uid: System.Runtime.Remoting.Activation.IConstructionCallMessage
  parent: System.Runtime.Remoting.Activation
  isExternal: false
  name: IConstructionCallMessage
  nameWithType: IConstructionCallMessage
  fullName: System.Runtime.Remoting.Activation.IConstructionCallMessage
- uid: System.Runtime.Remoting.Proxies.RealProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: Invoke(IMessage)
  nameWithType: RealProxy.Invoke(IMessage)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.Invoke(IMessage)
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(System.IntPtr)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: SetCOMIUnknown(IntPtr)
  nameWithType: RealProxy.SetCOMIUnknown(IntPtr)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.SetCOMIUnknown(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.Remoting.Proxies.RealProxy.SetStubData(System.Runtime.Remoting.Proxies.RealProxy,System.Object)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: SetStubData(RealProxy,Object)
  nameWithType: RealProxy.SetStubData(RealProxy,Object)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.SetStubData(RealProxy,Object)
- uid: System.Runtime.Remoting.Proxies.RealProxy
  parent: System.Runtime.Remoting.Proxies
  isExternal: false
  name: RealProxy
  nameWithType: RealProxy
  fullName: System.Runtime.Remoting.Proxies.RealProxy
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(System.Guid@)
  parent: System.Runtime.Remoting.Proxies.RealProxy
  isExternal: false
  name: SupportsInterface(Guid)
  nameWithType: RealProxy.SupportsInterface(Guid)
  fullName: System.Runtime.Remoting.Proxies.RealProxy.SupportsInterface(Guid)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
