### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
  id: ReadOnlyArrayAttribute
  children:
  - System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
  langs:
  - csharp
  name: ReadOnlyArrayAttribute
  nameWithType: ReadOnlyArrayAttribute
  fullName: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
  type: Class
  summary: When applied to an array parameter in a [!INCLUDE[wrt](../../add/includes/wrt-md.md)] component, specifies that the contents of the array that is passed to that parameter are used only for input. The caller expects the array to be unchanged by the call. See the Remarks section for important information about callers that are written using managed code.
  remarks: "If an array parameter in your [!INCLUDE[wrt](../../add/includes/wrt-md.md)] component is passed by value (`ByVal` in Visual Basic), you must apply one of the following attributes to it:  \n  \n-   Apply the ReadOnlyArrayAttribute attribute if you intend the contents of the array to be used for input only.  \n  \n-   Apply the <xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them).  \n  \n Applying both attributes to a parameter causes an error. For more information, including the standard pattern for making changes to an array, see [Passing arrays to a Windows Runtime component](http://go.microsoft.com/fwlink/?LinkId=251026) in the Windows Dev Center.  \n  \n> [!IMPORTANT]\n>  Parameters that have the ReadOnlyArrayAttributeattribute behave differently depending on whether the caller is written in native code or managed code. If the caller is native code (JavaScript or [!INCLUDE[cppwrt](../../add/includes/cppwrt-md.md)]), the array is copied when the call crosses the application binary interface (ABI) boundary. Elements are converted if necessary. Therefore, any accidental changes the method makes to an input-only array are not visible to the caller.  \n>   \n>  If the caller is managed code, the array is not copied. The original array is available to the called method, as it would be in any method call in the .NET Framework. Array contents are mutable in .NET Framework code, so any changes the method makes to the array are visible to the caller. This is important to remember because it affects unit tests written for a [!INCLUDE[wrt](../../add/includes/wrt-md.md)] component. If the tests are written in managed code, the contents of an array will appear to be mutable during testing.  \n  \n Applying this attribute to a parameter that has the <xref:System.Runtime.InteropServices.InAttribute> or <xref:System.Runtime.InteropServices.OutAttribute> attribute causes an error when the module is exported. Applying the attribute to an `out` parameter also causes an error."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public sealed class ReadOnlyArrayAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
  id: '#ctor'
  parent: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
  langs:
  - csharp
  name: ReadOnlyArrayAttribute()
  nameWithType: ReadOnlyArrayAttribute.ReadOnlyArrayAttribute()
  fullName: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.ReadOnlyArrayAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices.WindowsRuntime
  summary: Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute"> class.
  remarks: To be added.
  syntax:
    content: public ReadOnlyArrayAttribute ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.#ctor
  parent: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
  isExternal: false
  name: ReadOnlyArrayAttribute()
  nameWithType: ReadOnlyArrayAttribute.ReadOnlyArrayAttribute()
  fullName: System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.ReadOnlyArrayAttribute()
