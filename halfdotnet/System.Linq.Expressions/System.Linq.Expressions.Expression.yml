### YamlMime:ManagedReference
items:
- uid: System.Linq.Expressions.Expression
  id: Expression
  children:
  - System.Linq.Expressions.Expression.#ctor
  - System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)
  - System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.CanReduce
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Constant(System.Object)
  - System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Default(System.Type)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Empty
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.GetActionType(System.Type[])
  - System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  - System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Label
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Label(System.String)
  - System.Linq.Expressions.Expression.Label(System.Type)
  - System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Label(System.Type,System.String)
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  - System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  - System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  - System.Linq.Expressions.Expression.New(System.Type)
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  - System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.NodeType
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Parameter(System.Type)
  - System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  - System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  - System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Reduce
  - System.Linq.Expressions.Expression.ReduceAndCheck
  - System.Linq.Expressions.Expression.ReduceExtensions
  - System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Rethrow
  - System.Linq.Expressions.Expression.Rethrow(System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  - System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  - System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  - System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  - System.Linq.Expressions.Expression.SymbolDocument(System.String)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.ToString
  - System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  - System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  - System.Linq.Expressions.Expression.Type
  - System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  - System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type)
  - System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  - System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
  type: Class
  syntax:
    content: public abstract class Expression
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: System.Linq.Expressions.Expression.#ctor
  id: '#ctor'
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: Expression..ctor
  fullName: System.Linq.Expressions.Expression..ctor
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: protected Expression ();
    parameters: []
- uid: System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)
  id: '#ctor(System.Linq.Expressions.ExpressionType,System.Type)'
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: .ctor
  nameWithType: Expression..ctor
  fullName: System.Linq.Expressions.Expression..ctor
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: protected Expression (System.Linq.Expressions.ExpressionType nodeType, Type type);
    parameters:
    - id: nodeType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  id: Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Accept
  nameWithType: Expression.Accept
  fullName: System.Linq.Expressions.Expression.Accept
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: protected virtual System.Linq.Expressions.Expression Accept (System.Linq.Expressions.ExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Linq.Expressions.ExpressionVisitor
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: Expression.Add
  fullName: System.Linq.Expressions.Expression.Add
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Add*
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: Expression.Add
  fullName: System.Linq.Expressions.Expression.Add
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Add (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Add*
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AddAssign
  nameWithType: Expression.AddAssign
  fullName: System.Linq.Expressions.Expression.AddAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AddAssign*
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AddAssign
  nameWithType: Expression.AddAssign
  fullName: System.Linq.Expressions.Expression.AddAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AddAssign*
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AddAssign
  nameWithType: Expression.AddAssign
  fullName: System.Linq.Expressions.Expression.AddAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AddAssign*
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AddAssignChecked
  nameWithType: Expression.AddAssignChecked
  fullName: System.Linq.Expressions.Expression.AddAssignChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AddAssignChecked*
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AddAssignChecked
  nameWithType: Expression.AddAssignChecked
  fullName: System.Linq.Expressions.Expression.AddAssignChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AddAssignChecked*
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AddAssignChecked
  nameWithType: Expression.AddAssignChecked
  fullName: System.Linq.Expressions.Expression.AddAssignChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AddAssignChecked*
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AddChecked
  nameWithType: Expression.AddChecked
  fullName: System.Linq.Expressions.Expression.AddChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AddChecked*
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AddChecked
  nameWithType: Expression.AddChecked
  fullName: System.Linq.Expressions.Expression.AddChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AddChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AddChecked*
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: And
  nameWithType: Expression.And
  fullName: System.Linq.Expressions.Expression.And
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.And*
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: And
  nameWithType: Expression.And
  fullName: System.Linq.Expressions.Expression.And
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression And (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.And*
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AndAlso
  nameWithType: Expression.AndAlso
  fullName: System.Linq.Expressions.Expression.AndAlso
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AndAlso*
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AndAlso
  nameWithType: Expression.AndAlso
  fullName: System.Linq.Expressions.Expression.AndAlso
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAlso (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AndAlso*
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AndAssign
  nameWithType: Expression.AndAssign
  fullName: System.Linq.Expressions.Expression.AndAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AndAssign*
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AndAssign
  nameWithType: Expression.AndAssign
  fullName: System.Linq.Expressions.Expression.AndAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AndAssign*
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: AndAssign
  nameWithType: Expression.AndAssign
  fullName: System.Linq.Expressions.Expression.AndAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression AndAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.AndAssign*
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ArrayAccess
  nameWithType: Expression.ArrayAccess
  fullName: System.Linq.Expressions.Expression.ArrayAccess
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> indexes);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexes
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ArrayAccess*
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  id: ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ArrayAccess
  nameWithType: Expression.ArrayAccess
  fullName: System.Linq.Expressions.Expression.ArrayAccess
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression ArrayAccess (System.Linq.Expressions.Expression array, System.Linq.Expressions.Expression[] indexes);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexes
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ArrayAccess*
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ArrayIndex
  nameWithType: Expression.ArrayIndex
  fullName: System.Linq.Expressions.Expression.ArrayIndex
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> indexes);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexes
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ArrayIndex*
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ArrayIndex
  nameWithType: Expression.ArrayIndex
  fullName: System.Linq.Expressions.Expression.ArrayIndex
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Linq.Expressions.Expression index);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: index
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ArrayIndex*
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  id: ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ArrayIndex
  nameWithType: Expression.ArrayIndex
  fullName: System.Linq.Expressions.Expression.ArrayIndex
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression ArrayIndex (System.Linq.Expressions.Expression array, System.Linq.Expressions.Expression[] indexes);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexes
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ArrayIndex*
- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  id: ArrayLength(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ArrayLength
  nameWithType: Expression.ArrayLength
  fullName: System.Linq.Expressions.Expression.ArrayLength
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression ArrayLength (System.Linq.Expressions.Expression array);
    parameters:
    - id: array
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Assign
  nameWithType: Expression.Assign
  fullName: System.Linq.Expressions.Expression.Assign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Assign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  id: Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Bind
  nameWithType: Expression.Bind
  fullName: System.Linq.Expressions.Expression.Bind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MemberInfo member, System.Linq.Expressions.Expression expression);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberAssignment
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Bind*
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  id: Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Bind
  nameWithType: Expression.Bind
  fullName: System.Linq.Expressions.Expression.Bind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberAssignment Bind (System.Reflection.MethodInfo propertyAccessor, System.Linq.Expressions.Expression expression);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberAssignment
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Bind*
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> expressions);
    parameters:
    - id: expressions
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  id: Block(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression[] expressions);
    parameters:
    - id: expressions
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> expressions);
    parameters:
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    - id: expressions
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  id: Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables, System.Linq.Expressions.Expression[] expressions);
    parameters:
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    - id: expressions
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> expressions);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: expressions
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  id: Block(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (Type type, System.Linq.Expressions.Expression[] expressions);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: expressions
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> expressions);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    - id: expressions
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  id: Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables, System.Linq.Expressions.Expression[] expressions);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    - id: expressions
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BlockExpression Block (System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);
    parameters:
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg4
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BlockExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Block*
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  id: Break(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Break
  nameWithType: Expression.Break
  fullName: System.Linq.Expressions.Expression.Break
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Break*
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  id: Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Break
  nameWithType: Expression.Break
  fullName: System.Linq.Expressions.Expression.Break
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Break*
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  id: Break(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Break
  nameWithType: Expression.Break
  fullName: System.Linq.Expressions.Expression.Break
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Break*
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  id: Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Break
  nameWithType: Expression.Break
  fullName: System.Linq.Expressions.Expression.Break
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Break (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Break*
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  id: Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, string methodName, Type[] typeArguments, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: methodName
      type: System.String
      description: Parameter description to be filled
    - id: typeArguments
      type: System.Type[]
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  id: Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (Type type, string methodName, Type[] typeArguments, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: methodName
      type: System.String
      description: Parameter description to be filled
    - id: typeArguments
      type: System.Type[]
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Linq.Expressions.Expression instance, System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MethodCallExpression Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3, System.Linq.Expressions.Expression arg4);
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg4
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MethodCallExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Call*
- uid: System.Linq.Expressions.Expression.CanReduce
  id: CanReduce
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: CanReduce
  nameWithType: Expression.CanReduce
  fullName: System.Linq.Expressions.Expression.CanReduce
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public virtual bool CanReduce { get; }
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  id: Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Catch
  nameWithType: Expression.Catch
  fullName: System.Linq.Expressions.Expression.Catch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body);
    parameters:
    - id: variable
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Catch*
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  id: Catch(System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Catch
  nameWithType: Expression.Catch
  fullName: System.Linq.Expressions.Expression.Catch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Catch*
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Catch
  nameWithType: Expression.Catch
  fullName: System.Linq.Expressions.Expression.Catch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock Catch (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);
    parameters:
    - id: variable
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: filter
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Catch*
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Catch
  nameWithType: Expression.Catch
  fullName: System.Linq.Expressions.Expression.Catch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock Catch (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: filter
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Catch*
- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  id: ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ClearDebugInfo
  nameWithType: Expression.ClearDebugInfo
  fullName: System.Linq.Expressions.Expression.ClearDebugInfo
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DebugInfoExpression ClearDebugInfo (System.Linq.Expressions.SymbolDocumentInfo document);
    parameters:
    - id: document
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DebugInfoExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Coalesce
  nameWithType: Expression.Coalesce
  fullName: System.Linq.Expressions.Expression.Coalesce
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Coalesce*
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  id: Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Coalesce
  nameWithType: Expression.Coalesce
  fullName: System.Linq.Expressions.Expression.Coalesce
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Coalesce (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Coalesce*
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: Expression.Condition
  fullName: System.Linq.Expressions.Expression.Condition
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);
    parameters:
    - id: test
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifTrue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifFalse
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConditionalExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Condition*
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  id: Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: Expression.Condition
  fullName: System.Linq.Expressions.Expression.Condition
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConditionalExpression Condition (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse, Type type);
    parameters:
    - id: test
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifTrue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifFalse
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConditionalExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Condition*
- uid: System.Linq.Expressions.Expression.Constant(System.Object)
  id: Constant(System.Object)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Constant
  nameWithType: Expression.Constant
  fullName: System.Linq.Expressions.Expression.Constant
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConstantExpression Constant (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConstantExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Constant*
- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  id: Constant(System.Object,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Constant
  nameWithType: Expression.Constant
  fullName: System.Linq.Expressions.Expression.Constant
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConstantExpression Constant (object value, Type type);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConstantExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Constant*
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  id: Continue(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Continue
  nameWithType: Expression.Continue
  fullName: System.Linq.Expressions.Expression.Continue
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Continue*
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  id: Continue(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Continue
  nameWithType: Expression.Continue
  fullName: System.Linq.Expressions.Expression.Continue
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Continue (System.Linq.Expressions.LabelTarget target, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Continue*
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  id: Convert(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Convert
  nameWithType: Expression.Convert
  fullName: System.Linq.Expressions.Expression.Convert
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Convert*
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  id: Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Convert
  nameWithType: Expression.Convert
  fullName: System.Linq.Expressions.Expression.Convert
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Convert (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Convert*
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  id: ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ConvertChecked
  nameWithType: Expression.ConvertChecked
  fullName: System.Linq.Expressions.Expression.ConvertChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ConvertChecked*
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  id: ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ConvertChecked
  nameWithType: Expression.ConvertChecked
  fullName: System.Linq.Expressions.Expression.ConvertChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression ConvertChecked (System.Linq.Expressions.Expression expression, Type type, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ConvertChecked*
- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: DebugInfo
  nameWithType: Expression.DebugInfo
  fullName: System.Linq.Expressions.Expression.DebugInfo
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DebugInfoExpression DebugInfo (System.Linq.Expressions.SymbolDocumentInfo document, int startLine, int startColumn, int endLine, int endColumn);
    parameters:
    - id: document
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Parameter description to be filled
    - id: startLine
      type: System.Int32
      description: Parameter description to be filled
    - id: startColumn
      type: System.Int32
      description: Parameter description to be filled
    - id: endLine
      type: System.Int32
      description: Parameter description to be filled
    - id: endColumn
      type: System.Int32
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DebugInfoExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  id: Decrement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Decrement
  nameWithType: Expression.Decrement
  fullName: System.Linq.Expressions.Expression.Decrement
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Decrement*
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Decrement
  nameWithType: Expression.Decrement
  fullName: System.Linq.Expressions.Expression.Decrement
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Decrement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Decrement*
- uid: System.Linq.Expressions.Expression.Default(System.Type)
  id: Default(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: Expression.Default
  fullName: System.Linq.Expressions.Expression.Default
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DefaultExpression Default (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DefaultExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Divide
  nameWithType: Expression.Divide
  fullName: System.Linq.Expressions.Expression.Divide
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Divide*
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Divide
  nameWithType: Expression.Divide
  fullName: System.Linq.Expressions.Expression.Divide
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Divide (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Divide*
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: DivideAssign
  nameWithType: Expression.DivideAssign
  fullName: System.Linq.Expressions.Expression.DivideAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.DivideAssign*
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: DivideAssign
  nameWithType: Expression.DivideAssign
  fullName: System.Linq.Expressions.Expression.DivideAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.DivideAssign*
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: DivideAssign
  nameWithType: Expression.DivideAssign
  fullName: System.Linq.Expressions.Expression.DivideAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression DivideAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.DivideAssign*
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression Dynamic (System.Runtime.CompilerServices.CallSiteBinder binder, Type returnType, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: returnType
      type: System.Type
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Dynamic*
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ElementInit
  nameWithType: Expression.ElementInit
  fullName: System.Linq.Expressions.Expression.ElementInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: addMethod
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ElementInit
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ElementInit*
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  id: ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ElementInit
  nameWithType: Expression.ElementInit
  fullName: System.Linq.Expressions.Expression.ElementInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ElementInit ElementInit (System.Reflection.MethodInfo addMethod, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: addMethod
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ElementInit
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ElementInit*
- uid: System.Linq.Expressions.Expression.Empty
  id: Empty
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Expression.Empty
  fullName: System.Linq.Expressions.Expression.Empty
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DefaultExpression Empty ();
    parameters: []
    return:
      type: System.Linq.Expressions.DefaultExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Equal
  nameWithType: Expression.Equal
  fullName: System.Linq.Expressions.Expression.Equal
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Equal*
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Equal
  nameWithType: Expression.Equal
  fullName: System.Linq.Expressions.Expression.Equal
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Equal (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Equal*
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ExclusiveOr
  nameWithType: Expression.ExclusiveOr
  fullName: System.Linq.Expressions.Expression.ExclusiveOr
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOr*
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ExclusiveOr
  nameWithType: Expression.ExclusiveOr
  fullName: System.Linq.Expressions.Expression.ExclusiveOr
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOr (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOr*
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ExclusiveOrAssign
  nameWithType: Expression.ExclusiveOrAssign
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOrAssign*
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ExclusiveOrAssign
  nameWithType: Expression.ExclusiveOrAssign
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOrAssign*
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ExclusiveOrAssign
  nameWithType: Expression.ExclusiveOrAssign
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ExclusiveOrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ExclusiveOrAssign*
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  id: Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: Expression.Field
  fullName: System.Linq.Expressions.Expression.Field
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, System.Reflection.FieldInfo field);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: field
      type: System.Reflection.FieldInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Field*
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  id: Field(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: Expression.Field
  fullName: System.Linq.Expressions.Expression.Field
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, string fieldName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: fieldName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Field*
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  id: Field(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: Expression.Field
  fullName: System.Linq.Expressions.Expression.Field
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Field (System.Linq.Expressions.Expression expression, Type type, string fieldName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: fieldName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Field*
- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  id: GetActionType(System.Type[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: GetActionType
  nameWithType: Expression.GetActionType
  fullName: System.Linq.Expressions.Expression.GetActionType
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static Type GetActionType (Type[] typeArgs);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    return:
      type: System.Type
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  id: GetDelegateType(System.Type[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: GetDelegateType
  nameWithType: Expression.GetDelegateType
  fullName: System.Linq.Expressions.Expression.GetDelegateType
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static Type GetDelegateType (Type[] typeArgs);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    return:
      type: System.Type
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  id: GetFuncType(System.Type[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: GetFuncType
  nameWithType: Expression.GetFuncType
  fullName: System.Linq.Expressions.Expression.GetFuncType
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static Type GetFuncType (Type[] typeArgs);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    return:
      type: System.Type
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  id: Goto(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Goto
  nameWithType: Expression.Goto
  fullName: System.Linq.Expressions.Expression.Goto
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Goto*
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  id: Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Goto
  nameWithType: Expression.Goto
  fullName: System.Linq.Expressions.Expression.Goto
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Goto*
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  id: Goto(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Goto
  nameWithType: Expression.Goto
  fullName: System.Linq.Expressions.Expression.Goto
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Goto*
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  id: Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Goto
  nameWithType: Expression.Goto
  fullName: System.Linq.Expressions.Expression.Goto
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Goto (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Goto*
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: GreaterThan
  nameWithType: Expression.GreaterThan
  fullName: System.Linq.Expressions.Expression.GreaterThan
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.GreaterThan*
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: GreaterThan
  nameWithType: Expression.GreaterThan
  fullName: System.Linq.Expressions.Expression.GreaterThan
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression GreaterThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.GreaterThan*
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual
  nameWithType: Expression.GreaterThanOrEqual
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.GreaterThanOrEqual*
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual
  nameWithType: Expression.GreaterThanOrEqual
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression GreaterThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.GreaterThanOrEqual*
- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: IfThen
  nameWithType: Expression.IfThen
  fullName: System.Linq.Expressions.Expression.IfThen
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConditionalExpression IfThen (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue);
    parameters:
    - id: test
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifTrue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConditionalExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: IfThenElse
  nameWithType: Expression.IfThenElse
  fullName: System.Linq.Expressions.Expression.IfThenElse
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ConditionalExpression IfThenElse (System.Linq.Expressions.Expression test, System.Linq.Expressions.Expression ifTrue, System.Linq.Expressions.Expression ifFalse);
    parameters:
    - id: test
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifTrue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: ifFalse
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ConditionalExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  id: Increment(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Increment
  nameWithType: Expression.Increment
  fullName: System.Linq.Expressions.Expression.Increment
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Increment*
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Increment
  nameWithType: Expression.Increment
  fullName: System.Linq.Expressions.Expression.Increment
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Increment (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Increment*
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Invoke
  nameWithType: Expression.Invoke
  fullName: System.Linq.Expressions.Expression.Invoke
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.InvocationExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Invoke*
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  id: Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Invoke
  nameWithType: Expression.Invoke
  fullName: System.Linq.Expressions.Expression.Invoke
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.InvocationExpression Invoke (System.Linq.Expressions.Expression expression, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.InvocationExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Invoke*
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  id: IsFalse(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: IsFalse
  nameWithType: Expression.IsFalse
  fullName: System.Linq.Expressions.Expression.IsFalse
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.IsFalse*
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: IsFalse
  nameWithType: Expression.IsFalse
  fullName: System.Linq.Expressions.Expression.IsFalse
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression IsFalse (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.IsFalse*
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  id: IsTrue(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: IsTrue
  nameWithType: Expression.IsTrue
  fullName: System.Linq.Expressions.Expression.IsTrue
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.IsTrue*
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: IsTrue
  nameWithType: Expression.IsTrue
  fullName: System.Linq.Expressions.Expression.IsTrue
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression IsTrue (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.IsTrue*
- uid: System.Linq.Expressions.Expression.Label
  id: Label
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelTarget Label ();
    parameters: []
    return:
      type: System.Linq.Expressions.LabelTarget
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Label*
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  id: Label(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Label*
- uid: System.Linq.Expressions.Expression.Label(System.String)
  id: Label(System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelTarget Label (string name);
    parameters:
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelTarget
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Label*
- uid: System.Linq.Expressions.Expression.Label(System.Type)
  id: Label(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelTarget Label (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelTarget
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Label*
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  id: Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelExpression Label (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression defaultValue);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: defaultValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Label*
- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
  id: Label(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LabelTarget Label (Type type, string name);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LabelTarget
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Label*
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  id: Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  id: Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, bool tailCall, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, bool tailCall, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LambdaExpression Lambda (Type delegateType, System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LambdaExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda*
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression{TDelegate}
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  id: Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression{TDelegate}
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression{TDelegate}
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  id: Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, bool tailCall, System.Linq.Expressions.ParameterExpression[] parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression{TDelegate}
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, string name, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression{TDelegate}
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.Expression<TDelegate> Lambda<TDelegate> (System.Linq.Expressions.Expression body, string name, bool tailCall, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> parameters);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    - id: tailCall
      type: System.Boolean
      description: Parameter description to be filled
    - id: parameters
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression{TDelegate}
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Lambda<TDelegate>*
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: LeftShift
  nameWithType: Expression.LeftShift
  fullName: System.Linq.Expressions.Expression.LeftShift
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.LeftShift*
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: LeftShift
  nameWithType: Expression.LeftShift
  fullName: System.Linq.Expressions.Expression.LeftShift
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.LeftShift*
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: LeftShiftAssign
  nameWithType: Expression.LeftShiftAssign
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.LeftShiftAssign*
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: LeftShiftAssign
  nameWithType: Expression.LeftShiftAssign
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.LeftShiftAssign*
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: LeftShiftAssign
  nameWithType: Expression.LeftShiftAssign
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LeftShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.LeftShiftAssign*
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: LessThan
  nameWithType: Expression.LessThan
  fullName: System.Linq.Expressions.Expression.LessThan
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.LessThan*
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: LessThan
  nameWithType: Expression.LessThan
  fullName: System.Linq.Expressions.Expression.LessThan
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LessThan (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.LessThan*
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual
  nameWithType: Expression.LessThanOrEqual
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.LessThanOrEqual*
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual
  nameWithType: Expression.LessThanOrEqual
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression LessThanOrEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.LessThanOrEqual*
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  id: ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListBind
  nameWithType: Expression.ListBind
  fullName: System.Linq.Expressions.Expression.ListBind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit> initializers);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListBind*
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  id: ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListBind
  nameWithType: Expression.ListBind
  fullName: System.Linq.Expressions.Expression.ListBind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MemberInfo member, System.Linq.Expressions.ElementInit[] initializers);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.ElementInit[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListBind*
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  id: ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListBind
  nameWithType: Expression.ListBind
  fullName: System.Linq.Expressions.Expression.ListBind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit> initializers);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListBind*
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  id: ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListBind
  nameWithType: Expression.ListBind
  fullName: System.Linq.Expressions.Expression.ListBind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberListBinding ListBind (System.Reflection.MethodInfo propertyAccessor, System.Linq.Expressions.ElementInit[] initializers);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.ElementInit[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListBind*
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  id: ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.ElementInit> initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  id: ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Linq.Expressions.ElementInit[] initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.ElementInit[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  id: ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Linq.Expressions.Expression[] initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: addMethod
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  id: ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ListInitExpression ListInit (System.Linq.Expressions.NewExpression newExpression, System.Reflection.MethodInfo addMethod, System.Linq.Expressions.Expression[] initializers);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: addMethod
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ListInitExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ListInit*
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  id: Loop(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Loop
  nameWithType: Expression.Loop
  fullName: System.Linq.Expressions.Expression.Loop
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LoopExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Loop*
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  id: Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Loop
  nameWithType: Expression.Loop
  fullName: System.Linq.Expressions.Expression.Loop
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: break
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LoopExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Loop*
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  id: Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Loop
  nameWithType: Expression.Loop
  fullName: System.Linq.Expressions.Expression.Loop
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.LoopExpression Loop (System.Linq.Expressions.Expression body, System.Linq.Expressions.LabelTarget break, System.Linq.Expressions.LabelTarget continue);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: break
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: continue
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.LoopExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Loop*
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeBinary
  nameWithType: Expression.MakeBinary
  fullName: System.Linq.Expressions.Expression.MakeBinary
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: binaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeBinary*
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeBinary
  nameWithType: Expression.MakeBinary
  fullName: System.Linq.Expressions.Expression.MakeBinary
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: binaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeBinary*
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeBinary
  nameWithType: Expression.MakeBinary
  fullName: System.Linq.Expressions.Expression.MakeBinary
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MakeBinary (System.Linq.Expressions.ExpressionType binaryType, System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: binaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeBinary*
- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeCatchBlock
  nameWithType: Expression.MakeCatchBlock
  fullName: System.Linq.Expressions.Expression.MakeCatchBlock
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.CatchBlock MakeCatchBlock (Type type, System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression filter);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: variable
      type: System.Linq.Expressions.ParameterExpression
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: filter
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.CatchBlock
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.DynamicExpression MakeDynamic (Type delegateType, System.Runtime.CompilerServices.CallSiteBinder binder, System.Linq.Expressions.Expression arg0, System.Linq.Expressions.Expression arg1, System.Linq.Expressions.Expression arg2, System.Linq.Expressions.Expression arg3);
    parameters:
    - id: delegateType
      type: System.Type
      description: Parameter description to be filled
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: Parameter description to be filled
    - id: arg0
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg1
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg2
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: arg3
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.DynamicExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeDynamic*
- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  id: MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeGoto
  nameWithType: Expression.MakeGoto
  fullName: System.Linq.Expressions.Expression.MakeGoto
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression MakeGoto (System.Linq.Expressions.GotoExpressionKind kind, System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: kind
      type: System.Linq.Expressions.GotoExpressionKind
      description: Parameter description to be filled
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeIndex
  nameWithType: Expression.MakeIndex
  fullName: System.Linq.Expressions.Expression.MakeIndex
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression MakeIndex (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexer
      type: System.Reflection.PropertyInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  id: MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeMemberAccess
  nameWithType: Expression.MakeMemberAccess
  fullName: System.Linq.Expressions.Expression.MakeMemberAccess
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression MakeMemberAccess (System.Linq.Expressions.Expression expression, System.Reflection.MemberInfo member);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  id: MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeTry
  nameWithType: Expression.MakeTry
  fullName: System.Linq.Expressions.Expression.MakeTry
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression MakeTry (Type type, System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, System.Linq.Expressions.Expression fault, System.Collections.Generic.IEnumerable<System.Linq.Expressions.CatchBlock> handlers);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: finally
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: fault
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: handlers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  id: MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeUnary
  nameWithType: Expression.MakeUnary
  fullName: System.Linq.Expressions.Expression.MakeUnary
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type);
    parameters:
    - id: unaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: operand
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeUnary*
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  id: MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MakeUnary
  nameWithType: Expression.MakeUnary
  fullName: System.Linq.Expressions.Expression.MakeUnary
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression MakeUnary (System.Linq.Expressions.ExpressionType unaryType, System.Linq.Expressions.Expression operand, Type type, System.Reflection.MethodInfo method);
    parameters:
    - id: unaryType
      type: System.Linq.Expressions.ExpressionType
      description: Parameter description to be filled
    - id: operand
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MakeUnary*
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  id: MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MemberBind
  nameWithType: Expression.MemberBind
  fullName: System.Linq.Expressions.Expression.MemberBind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding> bindings);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: bindings
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MemberBind*
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  id: MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MemberBind
  nameWithType: Expression.MemberBind
  fullName: System.Linq.Expressions.Expression.MemberBind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MemberInfo member, System.Linq.Expressions.MemberBinding[] bindings);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: Parameter description to be filled
    - id: bindings
      type: System.Linq.Expressions.MemberBinding[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MemberBind*
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  id: MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MemberBind
  nameWithType: Expression.MemberBind
  fullName: System.Linq.Expressions.Expression.MemberBind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding> bindings);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: bindings
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MemberBind*
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  id: MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MemberBind
  nameWithType: Expression.MemberBind
  fullName: System.Linq.Expressions.Expression.MemberBind
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberMemberBinding MemberBind (System.Reflection.MethodInfo propertyAccessor, System.Linq.Expressions.MemberBinding[] bindings);
    parameters:
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: bindings
      type: System.Linq.Expressions.MemberBinding[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MemberBind*
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  id: MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MemberInit
  nameWithType: Expression.MemberInit
  fullName: System.Linq.Expressions.Expression.MemberInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, System.Collections.Generic.IEnumerable<System.Linq.Expressions.MemberBinding> bindings);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: bindings
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberInitExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MemberInit*
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  id: MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MemberInit
  nameWithType: Expression.MemberInit
  fullName: System.Linq.Expressions.Expression.MemberInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberInitExpression MemberInit (System.Linq.Expressions.NewExpression newExpression, System.Linq.Expressions.MemberBinding[] bindings);
    parameters:
    - id: newExpression
      type: System.Linq.Expressions.NewExpression
      description: Parameter description to be filled
    - id: bindings
      type: System.Linq.Expressions.MemberBinding[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberInitExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MemberInit*
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Modulo
  nameWithType: Expression.Modulo
  fullName: System.Linq.Expressions.Expression.Modulo
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Modulo*
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Modulo
  nameWithType: Expression.Modulo
  fullName: System.Linq.Expressions.Expression.Modulo
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Modulo (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Modulo*
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ModuloAssign
  nameWithType: Expression.ModuloAssign
  fullName: System.Linq.Expressions.Expression.ModuloAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ModuloAssign*
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ModuloAssign
  nameWithType: Expression.ModuloAssign
  fullName: System.Linq.Expressions.Expression.ModuloAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ModuloAssign*
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ModuloAssign
  nameWithType: Expression.ModuloAssign
  fullName: System.Linq.Expressions.Expression.ModuloAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ModuloAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.ModuloAssign*
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Multiply
  nameWithType: Expression.Multiply
  fullName: System.Linq.Expressions.Expression.Multiply
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Multiply*
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Multiply
  nameWithType: Expression.Multiply
  fullName: System.Linq.Expressions.Expression.Multiply
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Multiply (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Multiply*
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MultiplyAssign
  nameWithType: Expression.MultiplyAssign
  fullName: System.Linq.Expressions.Expression.MultiplyAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssign*
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MultiplyAssign
  nameWithType: Expression.MultiplyAssign
  fullName: System.Linq.Expressions.Expression.MultiplyAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssign*
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MultiplyAssign
  nameWithType: Expression.MultiplyAssign
  fullName: System.Linq.Expressions.Expression.MultiplyAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssign*
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MultiplyAssignChecked
  nameWithType: Expression.MultiplyAssignChecked
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssignChecked*
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MultiplyAssignChecked
  nameWithType: Expression.MultiplyAssignChecked
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssignChecked*
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MultiplyAssignChecked
  nameWithType: Expression.MultiplyAssignChecked
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyAssignChecked*
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MultiplyChecked
  nameWithType: Expression.MultiplyChecked
  fullName: System.Linq.Expressions.Expression.MultiplyChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyChecked*
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: MultiplyChecked
  nameWithType: Expression.MultiplyChecked
  fullName: System.Linq.Expressions.Expression.MultiplyChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression MultiplyChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.MultiplyChecked*
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  id: Negate(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Negate
  nameWithType: Expression.Negate
  fullName: System.Linq.Expressions.Expression.Negate
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Negate*
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Negate
  nameWithType: Expression.Negate
  fullName: System.Linq.Expressions.Expression.Negate
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Negate (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Negate*
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  id: NegateChecked(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: NegateChecked
  nameWithType: Expression.NegateChecked
  fullName: System.Linq.Expressions.Expression.NegateChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.NegateChecked*
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: NegateChecked
  nameWithType: Expression.NegateChecked
  fullName: System.Linq.Expressions.Expression.NegateChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression NegateChecked (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.NegateChecked*
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  id: New(System.Reflection.ConstructorInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.New*
- uid: System.Linq.Expressions.Expression.New(System.Type)
  id: New(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.New*
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.New*
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  id: New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.New*
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  id: New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments, System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo> members);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    - id: members
      type: System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.New*
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  id: New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewExpression New (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments, System.Reflection.MemberInfo[] members);
    parameters:
    - id: constructor
      type: System.Reflection.ConstructorInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    - id: members
      type: System.Reflection.MemberInfo[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.New*
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: NewArrayBounds
  nameWithType: Expression.NewArrayBounds
  fullName: System.Linq.Expressions.Expression.NewArrayBounds
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> bounds);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: bounds
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewArrayExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.NewArrayBounds*
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  id: NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: NewArrayBounds
  nameWithType: Expression.NewArrayBounds
  fullName: System.Linq.Expressions.Expression.NewArrayBounds
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewArrayExpression NewArrayBounds (Type type, System.Linq.Expressions.Expression[] bounds);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: bounds
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewArrayExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.NewArrayBounds*
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: NewArrayInit
  nameWithType: Expression.NewArrayInit
  fullName: System.Linq.Expressions.Expression.NewArrayInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> initializers);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: initializers
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewArrayExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.NewArrayInit*
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  id: NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: NewArrayInit
  nameWithType: Expression.NewArrayInit
  fullName: System.Linq.Expressions.Expression.NewArrayInit
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.NewArrayExpression NewArrayInit (Type type, System.Linq.Expressions.Expression[] initializers);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: initializers
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.NewArrayExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.NewArrayInit*
- uid: System.Linq.Expressions.Expression.NodeType
  id: NodeType
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: NodeType
  nameWithType: Expression.NodeType
  fullName: System.Linq.Expressions.Expression.NodeType
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public virtual System.Linq.Expressions.ExpressionType NodeType { get; }
    return:
      type: System.Linq.Expressions.ExpressionType
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  id: Not(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Not
  nameWithType: Expression.Not
  fullName: System.Linq.Expressions.Expression.Not
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Not*
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Not
  nameWithType: Expression.Not
  fullName: System.Linq.Expressions.Expression.Not
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Not (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Not*
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: NotEqual
  nameWithType: Expression.NotEqual
  fullName: System.Linq.Expressions.Expression.NotEqual
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.NotEqual*
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  id: NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: NotEqual
  nameWithType: Expression.NotEqual
  fullName: System.Linq.Expressions.Expression.NotEqual
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression NotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, bool liftToNull, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: liftToNull
      type: System.Boolean
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.NotEqual*
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  id: OnesComplement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: OnesComplement
  nameWithType: Expression.OnesComplement
  fullName: System.Linq.Expressions.Expression.OnesComplement
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.OnesComplement*
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: OnesComplement
  nameWithType: Expression.OnesComplement
  fullName: System.Linq.Expressions.Expression.OnesComplement
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression OnesComplement (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.OnesComplement*
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Or
  nameWithType: Expression.Or
  fullName: System.Linq.Expressions.Expression.Or
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Or*
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Or
  nameWithType: Expression.Or
  fullName: System.Linq.Expressions.Expression.Or
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Or (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Or*
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: OrAssign
  nameWithType: Expression.OrAssign
  fullName: System.Linq.Expressions.Expression.OrAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.OrAssign*
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: OrAssign
  nameWithType: Expression.OrAssign
  fullName: System.Linq.Expressions.Expression.OrAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.OrAssign*
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: OrAssign
  nameWithType: Expression.OrAssign
  fullName: System.Linq.Expressions.Expression.OrAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.OrAssign*
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: OrElse
  nameWithType: Expression.OrElse
  fullName: System.Linq.Expressions.Expression.OrElse
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.OrElse*
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: OrElse
  nameWithType: Expression.OrElse
  fullName: System.Linq.Expressions.Expression.OrElse
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression OrElse (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.OrElse*
- uid: System.Linq.Expressions.Expression.Parameter(System.Type)
  id: Parameter(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Parameter
  nameWithType: Expression.Parameter
  fullName: System.Linq.Expressions.Expression.Parameter
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ParameterExpression Parameter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ParameterExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Parameter*
- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  id: Parameter(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Parameter
  nameWithType: Expression.Parameter
  fullName: System.Linq.Expressions.Expression.Parameter
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ParameterExpression Parameter (Type type, string name);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ParameterExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Parameter*
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  id: PostDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PostDecrementAssign
  nameWithType: Expression.PostDecrementAssign
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PostDecrementAssign*
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PostDecrementAssign
  nameWithType: Expression.PostDecrementAssign
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PostDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PostDecrementAssign*
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  id: PostIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PostIncrementAssign
  nameWithType: Expression.PostIncrementAssign
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PostIncrementAssign*
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PostIncrementAssign
  nameWithType: Expression.PostIncrementAssign
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PostIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PostIncrementAssign*
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Power
  nameWithType: Expression.Power
  fullName: System.Linq.Expressions.Expression.Power
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Power*
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Power
  nameWithType: Expression.Power
  fullName: System.Linq.Expressions.Expression.Power
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Power (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Power*
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PowerAssign
  nameWithType: Expression.PowerAssign
  fullName: System.Linq.Expressions.Expression.PowerAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PowerAssign*
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PowerAssign
  nameWithType: Expression.PowerAssign
  fullName: System.Linq.Expressions.Expression.PowerAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PowerAssign*
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PowerAssign
  nameWithType: Expression.PowerAssign
  fullName: System.Linq.Expressions.Expression.PowerAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression PowerAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PowerAssign*
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  id: PreDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PreDecrementAssign
  nameWithType: Expression.PreDecrementAssign
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PreDecrementAssign*
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PreDecrementAssign
  nameWithType: Expression.PreDecrementAssign
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PreDecrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PreDecrementAssign*
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  id: PreIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PreIncrementAssign
  nameWithType: Expression.PreIncrementAssign
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PreIncrementAssign*
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PreIncrementAssign
  nameWithType: Expression.PreIncrementAssign
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression PreIncrementAssign (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.PreIncrementAssign*
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo propertyAccessor);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: propertyAccessor
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Property*
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  id: Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, System.Reflection.PropertyInfo property);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: property
      type: System.Reflection.PropertyInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Property*
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  id: Property(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, string propertyName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: propertyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Property*
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexer
      type: System.Reflection.PropertyInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Property*
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  id: Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, System.Reflection.PropertyInfo indexer, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: indexer
      type: System.Reflection.PropertyInfo
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Property*
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  id: Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.IndexExpression Property (System.Linq.Expressions.Expression instance, string propertyName, System.Linq.Expressions.Expression[] arguments);
    parameters:
    - id: instance
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: propertyName
      type: System.String
      description: Parameter description to be filled
    - id: arguments
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.IndexExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Property*
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  id: Property(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression Property (System.Linq.Expressions.Expression expression, Type type, string propertyName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: propertyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Property*
- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  id: PropertyOrField(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: PropertyOrField
  nameWithType: Expression.PropertyOrField
  fullName: System.Linq.Expressions.Expression.PropertyOrField
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.MemberExpression PropertyOrField (System.Linq.Expressions.Expression expression, string propertyOrFieldName);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: propertyOrFieldName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.MemberExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  id: Quote(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Quote
  nameWithType: Expression.Quote
  fullName: System.Linq.Expressions.Expression.Quote
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Quote (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Reduce
  id: Reduce
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Reduce
  nameWithType: Expression.Reduce
  fullName: System.Linq.Expressions.Expression.Reduce
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public virtual System.Linq.Expressions.Expression Reduce ();
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.ReduceAndCheck
  id: ReduceAndCheck
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ReduceAndCheck
  nameWithType: Expression.ReduceAndCheck
  fullName: System.Linq.Expressions.Expression.ReduceAndCheck
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public System.Linq.Expressions.Expression ReduceAndCheck ();
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.ReduceExtensions
  id: ReduceExtensions
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ReduceExtensions
  nameWithType: Expression.ReduceExtensions
  fullName: System.Linq.Expressions.Expression.ReduceExtensions
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public System.Linq.Expressions.Expression ReduceExtensions ();
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ReferenceEqual
  nameWithType: Expression.ReferenceEqual
  fullName: System.Linq.Expressions.Expression.ReferenceEqual
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ReferenceEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ReferenceNotEqual
  nameWithType: Expression.ReferenceNotEqual
  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression ReferenceNotEqual (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Rethrow
  id: Rethrow
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Rethrow
  nameWithType: Expression.Rethrow
  fullName: System.Linq.Expressions.Expression.Rethrow
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Rethrow ();
    parameters: []
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Rethrow*
- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
  id: Rethrow(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Rethrow
  nameWithType: Expression.Rethrow
  fullName: System.Linq.Expressions.Expression.Rethrow
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Rethrow (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Rethrow*
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  id: Return(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Return
  nameWithType: Expression.Return
  fullName: System.Linq.Expressions.Expression.Return
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Return*
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  id: Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Return
  nameWithType: Expression.Return
  fullName: System.Linq.Expressions.Expression.Return
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Return*
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  id: Return(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Return
  nameWithType: Expression.Return
  fullName: System.Linq.Expressions.Expression.Return
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Return*
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  id: Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Return
  nameWithType: Expression.Return
  fullName: System.Linq.Expressions.Expression.Return
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.GotoExpression Return (System.Linq.Expressions.LabelTarget target, System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: target
      type: System.Linq.Expressions.LabelTarget
      description: Parameter description to be filled
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.GotoExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Return*
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: RightShift
  nameWithType: Expression.RightShift
  fullName: System.Linq.Expressions.Expression.RightShift
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.RightShift*
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: RightShift
  nameWithType: Expression.RightShift
  fullName: System.Linq.Expressions.Expression.RightShift
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShift (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.RightShift*
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: RightShiftAssign
  nameWithType: Expression.RightShiftAssign
  fullName: System.Linq.Expressions.Expression.RightShiftAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.RightShiftAssign*
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: RightShiftAssign
  nameWithType: Expression.RightShiftAssign
  fullName: System.Linq.Expressions.Expression.RightShiftAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.RightShiftAssign*
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: RightShiftAssign
  nameWithType: Expression.RightShiftAssign
  fullName: System.Linq.Expressions.Expression.RightShiftAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression RightShiftAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.RightShiftAssign*
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  id: RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: RuntimeVariables
  nameWithType: Expression.RuntimeVariables
  fullName: System.Linq.Expressions.Expression.RuntimeVariables
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression> variables);
    parameters:
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.RuntimeVariablesExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.RuntimeVariables*
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  id: RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: RuntimeVariables
  nameWithType: Expression.RuntimeVariables
  fullName: System.Linq.Expressions.Expression.RuntimeVariables
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.RuntimeVariablesExpression RuntimeVariables (System.Linq.Expressions.ParameterExpression[] variables);
    parameters:
    - id: variables
      type: System.Linq.Expressions.ParameterExpression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.RuntimeVariablesExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.RuntimeVariables*
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Subtract
  nameWithType: Expression.Subtract
  fullName: System.Linq.Expressions.Expression.Subtract
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Subtract*
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Subtract
  nameWithType: Expression.Subtract
  fullName: System.Linq.Expressions.Expression.Subtract
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression Subtract (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Subtract*
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SubtractAssign
  nameWithType: Expression.SubtractAssign
  fullName: System.Linq.Expressions.Expression.SubtractAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssign*
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SubtractAssign
  nameWithType: Expression.SubtractAssign
  fullName: System.Linq.Expressions.Expression.SubtractAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssign*
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SubtractAssign
  nameWithType: Expression.SubtractAssign
  fullName: System.Linq.Expressions.Expression.SubtractAssign
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssign (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssign*
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SubtractAssignChecked
  nameWithType: Expression.SubtractAssignChecked
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssignChecked*
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SubtractAssignChecked
  nameWithType: Expression.SubtractAssignChecked
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssignChecked*
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  id: SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SubtractAssignChecked
  nameWithType: Expression.SubtractAssignChecked
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractAssignChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method, System.Linq.Expressions.LambdaExpression conversion);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: conversion
      type: System.Linq.Expressions.LambdaExpression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SubtractAssignChecked*
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SubtractChecked
  nameWithType: Expression.SubtractChecked
  fullName: System.Linq.Expressions.Expression.SubtractChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SubtractChecked*
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SubtractChecked
  nameWithType: Expression.SubtractChecked
  fullName: System.Linq.Expressions.Expression.SubtractChecked
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.BinaryExpression SubtractChecked (System.Linq.Expressions.Expression left, System.Linq.Expressions.Expression right, System.Reflection.MethodInfo method);
    parameters:
    - id: left
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: right
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.BinaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SubtractChecked*
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  id: Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.SwitchCase[] cases);
    parameters:
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: cases
      type: System.Linq.Expressions.SwitchCase[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  id: Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Linq.Expressions.SwitchCase[] cases);
    parameters:
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: cases
      type: System.Linq.Expressions.SwitchCase[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  id: Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase> cases);
    parameters:
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: comparison
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: cases
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  id: Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Linq.Expressions.SwitchCase[] cases);
    parameters:
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: comparison
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: cases
      type: System.Linq.Expressions.SwitchCase[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  id: Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Collections.Generic.IEnumerable<System.Linq.Expressions.SwitchCase> cases);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: comparison
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: cases
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  id: Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchExpression Switch (Type type, System.Linq.Expressions.Expression switchValue, System.Linq.Expressions.Expression defaultBody, System.Reflection.MethodInfo comparison, System.Linq.Expressions.SwitchCase[] cases);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: switchValue
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: defaultBody
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: comparison
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    - id: cases
      type: System.Linq.Expressions.SwitchCase[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Switch*
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  id: SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SwitchCase
  nameWithType: Expression.SwitchCase
  fullName: System.Linq.Expressions.Expression.SwitchCase
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> testValues);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: testValues
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchCase
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SwitchCase*
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  id: SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SwitchCase
  nameWithType: Expression.SwitchCase
  fullName: System.Linq.Expressions.Expression.SwitchCase
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SwitchCase SwitchCase (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression[] testValues);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: testValues
      type: System.Linq.Expressions.Expression[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SwitchCase
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SwitchCase*
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  id: SymbolDocument(System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SymbolDocument
  nameWithType: Expression.SymbolDocument
  fullName: System.Linq.Expressions.Expression.SymbolDocument
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SymbolDocument*
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  id: SymbolDocument(System.String,System.Guid)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SymbolDocument
  nameWithType: Expression.SymbolDocument
  fullName: System.Linq.Expressions.Expression.SymbolDocument
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language);
    parameters:
    - id: fileName
      type: System.String
      description: Parameter description to be filled
    - id: language
      type: System.Guid
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SymbolDocument*
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  id: SymbolDocument(System.String,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SymbolDocument
  nameWithType: Expression.SymbolDocument
  fullName: System.Linq.Expressions.Expression.SymbolDocument
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor);
    parameters:
    - id: fileName
      type: System.String
      description: Parameter description to be filled
    - id: language
      type: System.Guid
      description: Parameter description to be filled
    - id: languageVendor
      type: System.Guid
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SymbolDocument*
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: SymbolDocument
  nameWithType: Expression.SymbolDocument
  fullName: System.Linq.Expressions.Expression.SymbolDocument
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.SymbolDocumentInfo SymbolDocument (string fileName, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: fileName
      type: System.String
      description: Parameter description to be filled
    - id: language
      type: System.Guid
      description: Parameter description to be filled
    - id: languageVendor
      type: System.Guid
      description: Parameter description to be filled
    - id: documentType
      type: System.Guid
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.SymbolDocumentInfo
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.SymbolDocument*
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  id: Throw(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Throw
  nameWithType: Expression.Throw
  fullName: System.Linq.Expressions.Expression.Throw
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value);
    parameters:
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Throw*
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  id: Throw(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Throw
  nameWithType: Expression.Throw
  fullName: System.Linq.Expressions.Expression.Throw
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Throw (System.Linq.Expressions.Expression value, Type type);
    parameters:
    - id: value
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Throw*
- uid: System.Linq.Expressions.Expression.ToString
  id: ToString
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: ToString
  nameWithType: Expression.ToString
  fullName: System.Linq.Expressions.Expression.ToString
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  id: TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: TryCatch
  nameWithType: Expression.TryCatch
  fullName: System.Linq.Expressions.Expression.TryCatch
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression TryCatch (System.Linq.Expressions.Expression body, System.Linq.Expressions.CatchBlock[] handlers);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: handlers
      type: System.Linq.Expressions.CatchBlock[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  id: TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: TryCatchFinally
  nameWithType: Expression.TryCatchFinally
  fullName: System.Linq.Expressions.Expression.TryCatchFinally
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression TryCatchFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally, System.Linq.Expressions.CatchBlock[] handlers);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: finally
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: handlers
      type: System.Linq.Expressions.CatchBlock[]
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: TryFault
  nameWithType: Expression.TryFault
  fullName: System.Linq.Expressions.Expression.TryFault
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression TryFault (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression fault);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: fault
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: TryFinally
  nameWithType: Expression.TryFinally
  fullName: System.Linq.Expressions.Expression.TryFinally
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TryExpression TryFinally (System.Linq.Expressions.Expression body, System.Linq.Expressions.Expression finally);
    parameters:
    - id: body
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: finally
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  id: TryGetActionType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: TryGetActionType
  nameWithType: Expression.TryGetActionType
  fullName: System.Linq.Expressions.Expression.TryGetActionType
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static bool TryGetActionType (Type[] typeArgs, out Type actionType);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    - id: actionType
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  id: TryGetFuncType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: TryGetFuncType
  nameWithType: Expression.TryGetFuncType
  fullName: System.Linq.Expressions.Expression.TryGetFuncType
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static bool TryGetFuncType (Type[] typeArgs, out Type funcType);
    parameters:
    - id: typeArgs
      type: System.Type[]
      description: Parameter description to be filled
    - id: funcType
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Type
  id: Type
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Expression.Type
  fullName: System.Linq.Expressions.Expression.Type
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public virtual Type Type { get; }
    return:
      type: System.Type
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  id: TypeAs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: TypeAs
  nameWithType: Expression.TypeAs
  fullName: System.Linq.Expressions.Expression.TypeAs
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression TypeAs (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  id: TypeEqual(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: TypeEqual
  nameWithType: Expression.TypeEqual
  fullName: System.Linq.Expressions.Expression.TypeEqual
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TypeBinaryExpression TypeEqual (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TypeBinaryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  id: TypeIs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: TypeIs
  nameWithType: Expression.TypeIs
  fullName: System.Linq.Expressions.Expression.TypeIs
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.TypeBinaryExpression TypeIs (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.TypeBinaryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  id: UnaryPlus(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: UnaryPlus
  nameWithType: Expression.UnaryPlus
  fullName: System.Linq.Expressions.Expression.UnaryPlus
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.UnaryPlus*
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  id: UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: UnaryPlus
  nameWithType: Expression.UnaryPlus
  fullName: System.Linq.Expressions.Expression.UnaryPlus
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression UnaryPlus (System.Linq.Expressions.Expression expression, System.Reflection.MethodInfo method);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: method
      type: System.Reflection.MethodInfo
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.UnaryPlus*
- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  id: Unbox(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Unbox
  nameWithType: Expression.Unbox
  fullName: System.Linq.Expressions.Expression.Unbox
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.UnaryExpression Unbox (System.Linq.Expressions.Expression expression, Type type);
    parameters:
    - id: expression
      type: System.Linq.Expressions.Expression
      description: Parameter description to be filled
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.UnaryExpression
      description: Return description to be filled
- uid: System.Linq.Expressions.Expression.Variable(System.Type)
  id: Variable(System.Type)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Variable
  nameWithType: Expression.Variable
  fullName: System.Linq.Expressions.Expression.Variable
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ParameterExpression Variable (Type type);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ParameterExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Variable*
- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  id: Variable(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: Variable
  nameWithType: Expression.Variable
  fullName: System.Linq.Expressions.Expression.Variable
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: public static System.Linq.Expressions.ParameterExpression Variable (Type type, string name);
    parameters:
    - id: type
      type: System.Type
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.ParameterExpression
      description: Return description to be filled
  overload: System.Linq.Expressions.Expression.Variable*
- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  id: VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  langs:
  - csharp
  - vb
  name: VisitChildren
  nameWithType: Expression.VisitChildren
  fullName: System.Linq.Expressions.Expression.VisitChildren
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  syntax:
    content: protected virtual System.Linq.Expressions.Expression VisitChildren (System.Linq.Expressions.ExpressionVisitor visitor);
    parameters:
    - id: visitor
      type: System.Linq.Expressions.ExpressionVisitor
      description: Parameter description to be filled
    return:
      type: System.Linq.Expressions.Expression
      description: Return description to be filled
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Linq.Expressions.Expression.#ctor
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: .ctor
  nameWithType: Expression..ctor
  fullName: System.Linq.Expressions.Expression..ctor
- uid: System.Linq.Expressions.Expression.#ctor(System.Linq.Expressions.ExpressionType,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: .ctor
  nameWithType: Expression..ctor
  fullName: System.Linq.Expressions.Expression..ctor
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
  fullName: System.Linq.Expressions.Expression.Accept
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Add
  nameWithType: Expression.Add
  fullName: System.Linq.Expressions.Expression.Add
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Add
  nameWithType: Expression.Add
  fullName: System.Linq.Expressions.Expression.Add
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign
  nameWithType: Expression.AddAssign
  fullName: System.Linq.Expressions.Expression.AddAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign
  nameWithType: Expression.AddAssign
  fullName: System.Linq.Expressions.Expression.AddAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssign
  nameWithType: Expression.AddAssign
  fullName: System.Linq.Expressions.Expression.AddAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked
  nameWithType: Expression.AddAssignChecked
  fullName: System.Linq.Expressions.Expression.AddAssignChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked
  nameWithType: Expression.AddAssignChecked
  fullName: System.Linq.Expressions.Expression.AddAssignChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddAssignChecked
  nameWithType: Expression.AddAssignChecked
  fullName: System.Linq.Expressions.Expression.AddAssignChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddChecked
  nameWithType: Expression.AddChecked
  fullName: System.Linq.Expressions.Expression.AddChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AddChecked
  nameWithType: Expression.AddChecked
  fullName: System.Linq.Expressions.Expression.AddChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: And
  nameWithType: Expression.And
  fullName: System.Linq.Expressions.Expression.And
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: And
  nameWithType: Expression.And
  fullName: System.Linq.Expressions.Expression.And
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAlso
  nameWithType: Expression.AndAlso
  fullName: System.Linq.Expressions.Expression.AndAlso
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAlso
  nameWithType: Expression.AndAlso
  fullName: System.Linq.Expressions.Expression.AndAlso
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign
  nameWithType: Expression.AndAssign
  fullName: System.Linq.Expressions.Expression.AndAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign
  nameWithType: Expression.AndAssign
  fullName: System.Linq.Expressions.Expression.AndAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: AndAssign
  nameWithType: Expression.AndAssign
  fullName: System.Linq.Expressions.Expression.AndAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayAccess
  nameWithType: Expression.ArrayAccess
  fullName: System.Linq.Expressions.Expression.ArrayAccess
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayAccess
  nameWithType: Expression.ArrayAccess
  fullName: System.Linq.Expressions.Expression.ArrayAccess
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex
  nameWithType: Expression.ArrayIndex
  fullName: System.Linq.Expressions.Expression.ArrayIndex
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex
  nameWithType: Expression.ArrayIndex
  fullName: System.Linq.Expressions.Expression.ArrayIndex
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayIndex
  nameWithType: Expression.ArrayIndex
  fullName: System.Linq.Expressions.Expression.ArrayIndex
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ArrayLength
  nameWithType: Expression.ArrayLength
  fullName: System.Linq.Expressions.Expression.ArrayLength
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Assign
  nameWithType: Expression.Assign
  fullName: System.Linq.Expressions.Expression.Assign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Bind
  nameWithType: Expression.Bind
  fullName: System.Linq.Expressions.Expression.Bind
- uid: System.Linq.Expressions.MemberAssignment
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberAssignment
  nameWithType: MemberAssignment
  fullName: System.Linq.Expressions.MemberAssignment
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Bind
  nameWithType: Expression.Bind
  fullName: System.Linq.Expressions.Expression.Bind
- uid: System.Linq.Expressions.MemberAssignment
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberAssignment
  nameWithType: MemberAssignment
  fullName: System.Linq.Expressions.MemberAssignment
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Block
  nameWithType: Expression.Block
  fullName: System.Linq.Expressions.Expression.Block
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BlockExpression
  nameWithType: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break
  nameWithType: Expression.Break
  fullName: System.Linq.Expressions.Expression.Break
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break
  nameWithType: Expression.Break
  fullName: System.Linq.Expressions.Expression.Break
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break
  nameWithType: Expression.Break
  fullName: System.Linq.Expressions.Expression.Break
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Break
  nameWithType: Expression.Break
  fullName: System.Linq.Expressions.Expression.Break
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Call
  nameWithType: Expression.Call
  fullName: System.Linq.Expressions.Expression.Call
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MethodCallExpression
  nameWithType: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.CanReduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: CanReduce
  nameWithType: Expression.CanReduce
  fullName: System.Linq.Expressions.Expression.CanReduce
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch
  nameWithType: Expression.Catch
  fullName: System.Linq.Expressions.Expression.Catch
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch
  nameWithType: Expression.Catch
  fullName: System.Linq.Expressions.Expression.Catch
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch
  nameWithType: Expression.Catch
  fullName: System.Linq.Expressions.Expression.Catch
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Catch
  nameWithType: Expression.Catch
  fullName: System.Linq.Expressions.Expression.Catch
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ClearDebugInfo
  nameWithType: Expression.ClearDebugInfo
  fullName: System.Linq.Expressions.Expression.ClearDebugInfo
- uid: System.Linq.Expressions.DebugInfoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DebugInfoExpression
  nameWithType: DebugInfoExpression
  fullName: System.Linq.Expressions.DebugInfoExpression
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Coalesce
  nameWithType: Expression.Coalesce
  fullName: System.Linq.Expressions.Expression.Coalesce
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Coalesce
  nameWithType: Expression.Coalesce
  fullName: System.Linq.Expressions.Expression.Coalesce
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Condition
  nameWithType: Expression.Condition
  fullName: System.Linq.Expressions.Expression.Condition
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Condition
  nameWithType: Expression.Condition
  fullName: System.Linq.Expressions.Expression.Condition
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Constant(System.Object)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Constant
  nameWithType: Expression.Constant
  fullName: System.Linq.Expressions.Expression.Constant
- uid: System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConstantExpression
  nameWithType: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.Expressions.Expression.Constant(System.Object,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Constant
  nameWithType: Expression.Constant
  fullName: System.Linq.Expressions.Expression.Constant
- uid: System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConstantExpression
  nameWithType: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Continue
  nameWithType: Expression.Continue
  fullName: System.Linq.Expressions.Expression.Continue
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Continue
  nameWithType: Expression.Continue
  fullName: System.Linq.Expressions.Expression.Continue
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Convert
  nameWithType: Expression.Convert
  fullName: System.Linq.Expressions.Expression.Convert
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Convert
  nameWithType: Expression.Convert
  fullName: System.Linq.Expressions.Expression.Convert
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ConvertChecked
  nameWithType: Expression.ConvertChecked
  fullName: System.Linq.Expressions.Expression.ConvertChecked
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ConvertChecked
  nameWithType: Expression.ConvertChecked
  fullName: System.Linq.Expressions.Expression.ConvertChecked
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DebugInfo
  nameWithType: Expression.DebugInfo
  fullName: System.Linq.Expressions.Expression.DebugInfo
- uid: System.Linq.Expressions.DebugInfoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DebugInfoExpression
  nameWithType: DebugInfoExpression
  fullName: System.Linq.Expressions.DebugInfoExpression
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Decrement
  nameWithType: Expression.Decrement
  fullName: System.Linq.Expressions.Expression.Decrement
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Decrement
  nameWithType: Expression.Decrement
  fullName: System.Linq.Expressions.Expression.Decrement
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Default(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Default
  nameWithType: Expression.Default
  fullName: System.Linq.Expressions.Expression.Default
- uid: System.Linq.Expressions.DefaultExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DefaultExpression
  nameWithType: DefaultExpression
  fullName: System.Linq.Expressions.DefaultExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Divide
  nameWithType: Expression.Divide
  fullName: System.Linq.Expressions.Expression.Divide
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Divide
  nameWithType: Expression.Divide
  fullName: System.Linq.Expressions.Expression.Divide
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign
  nameWithType: Expression.DivideAssign
  fullName: System.Linq.Expressions.Expression.DivideAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign
  nameWithType: Expression.DivideAssign
  fullName: System.Linq.Expressions.Expression.DivideAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: DivideAssign
  nameWithType: Expression.DivideAssign
  fullName: System.Linq.Expressions.Expression.DivideAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Dynamic
  nameWithType: Expression.Dynamic
  fullName: System.Linq.Expressions.Expression.Dynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ElementInit
  nameWithType: Expression.ElementInit
  fullName: System.Linq.Expressions.Expression.ElementInit
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  nameWithType: ElementInit
  fullName: System.Linq.Expressions.ElementInit
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ElementInit
  nameWithType: Expression.ElementInit
  fullName: System.Linq.Expressions.Expression.ElementInit
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  name: ElementInit
  nameWithType: ElementInit
  fullName: System.Linq.Expressions.ElementInit
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Empty
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Empty
  nameWithType: Expression.Empty
  fullName: System.Linq.Expressions.Expression.Empty
- uid: System.Linq.Expressions.DefaultExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DefaultExpression
  nameWithType: DefaultExpression
  fullName: System.Linq.Expressions.DefaultExpression
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Equal
  nameWithType: Expression.Equal
  fullName: System.Linq.Expressions.Expression.Equal
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Equal
  nameWithType: Expression.Equal
  fullName: System.Linq.Expressions.Expression.Equal
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOr
  nameWithType: Expression.ExclusiveOr
  fullName: System.Linq.Expressions.Expression.ExclusiveOr
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOr
  nameWithType: Expression.ExclusiveOr
  fullName: System.Linq.Expressions.Expression.ExclusiveOr
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign
  nameWithType: Expression.ExclusiveOrAssign
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign
  nameWithType: Expression.ExclusiveOrAssign
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ExclusiveOrAssign
  nameWithType: Expression.ExclusiveOrAssign
  fullName: System.Linq.Expressions.Expression.ExclusiveOrAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Field
  nameWithType: Expression.Field
  fullName: System.Linq.Expressions.Expression.Field
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: false
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Field
  nameWithType: Expression.Field
  fullName: System.Linq.Expressions.Expression.Field
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Field
  nameWithType: Expression.Field
  fullName: System.Linq.Expressions.Expression.Field
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.GetActionType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GetActionType
  nameWithType: Expression.GetActionType
  fullName: System.Linq.Expressions.Expression.GetActionType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.GetDelegateType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GetDelegateType
  nameWithType: Expression.GetDelegateType
  fullName: System.Linq.Expressions.Expression.GetDelegateType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.GetFuncType(System.Type[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GetFuncType
  nameWithType: Expression.GetFuncType
  fullName: System.Linq.Expressions.Expression.GetFuncType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto
  nameWithType: Expression.Goto
  fullName: System.Linq.Expressions.Expression.Goto
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto
  nameWithType: Expression.Goto
  fullName: System.Linq.Expressions.Expression.Goto
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto
  nameWithType: Expression.Goto
  fullName: System.Linq.Expressions.Expression.Goto
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Goto
  nameWithType: Expression.Goto
  fullName: System.Linq.Expressions.Expression.Goto
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThan
  nameWithType: Expression.GreaterThan
  fullName: System.Linq.Expressions.Expression.GreaterThan
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThan
  nameWithType: Expression.GreaterThan
  fullName: System.Linq.Expressions.Expression.GreaterThan
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: Expression.GreaterThanOrEqual
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: Expression.GreaterThanOrEqual
  fullName: System.Linq.Expressions.Expression.GreaterThanOrEqual
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IfThen
  nameWithType: Expression.IfThen
  fullName: System.Linq.Expressions.Expression.IfThen
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IfThenElse
  nameWithType: Expression.IfThenElse
  fullName: System.Linq.Expressions.Expression.IfThenElse
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ConditionalExpression
  nameWithType: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Increment
  nameWithType: Expression.Increment
  fullName: System.Linq.Expressions.Expression.Increment
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Increment
  nameWithType: Expression.Increment
  fullName: System.Linq.Expressions.Expression.Increment
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Invoke
  nameWithType: Expression.Invoke
  fullName: System.Linq.Expressions.Expression.Invoke
- uid: System.Linq.Expressions.InvocationExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: InvocationExpression
  nameWithType: InvocationExpression
  fullName: System.Linq.Expressions.InvocationExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Invoke
  nameWithType: Expression.Invoke
  fullName: System.Linq.Expressions.Expression.Invoke
- uid: System.Linq.Expressions.InvocationExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: InvocationExpression
  nameWithType: InvocationExpression
  fullName: System.Linq.Expressions.InvocationExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsFalse
  nameWithType: Expression.IsFalse
  fullName: System.Linq.Expressions.Expression.IsFalse
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsFalse
  nameWithType: Expression.IsFalse
  fullName: System.Linq.Expressions.Expression.IsFalse
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsTrue
  nameWithType: Expression.IsTrue
  fullName: System.Linq.Expressions.Expression.IsTrue
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: IsTrue
  nameWithType: Expression.IsTrue
  fullName: System.Linq.Expressions.Expression.IsTrue
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Label
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
- uid: System.Linq.Expressions.LabelExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelExpression
  nameWithType: LabelExpression
  fullName: System.Linq.Expressions.LabelExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Label(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Label(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
- uid: System.Linq.Expressions.LabelExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelExpression
  nameWithType: LabelExpression
  fullName: System.Linq.Expressions.LabelExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Label(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Label
  nameWithType: Expression.Label
  fullName: System.Linq.Expressions.Expression.Label
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda
  nameWithType: Expression.Lambda
  fullName: System.Linq.Expressions.Expression.Lambda
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Lambda<TDelegate>
  nameWithType: Expression.Lambda<TDelegate>
  fullName: System.Linq.Expressions.Expression.Lambda<TDelegate>
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShift
  nameWithType: Expression.LeftShift
  fullName: System.Linq.Expressions.Expression.LeftShift
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShift
  nameWithType: Expression.LeftShift
  fullName: System.Linq.Expressions.Expression.LeftShift
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign
  nameWithType: Expression.LeftShiftAssign
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign
  nameWithType: Expression.LeftShiftAssign
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LeftShiftAssign
  nameWithType: Expression.LeftShiftAssign
  fullName: System.Linq.Expressions.Expression.LeftShiftAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThan
  nameWithType: Expression.LessThan
  fullName: System.Linq.Expressions.Expression.LessThan
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThan
  nameWithType: Expression.LessThan
  fullName: System.Linq.Expressions.Expression.LessThan
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThanOrEqual
  nameWithType: Expression.LessThanOrEqual
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: LessThanOrEqual
  nameWithType: Expression.LessThanOrEqual
  fullName: System.Linq.Expressions.Expression.LessThanOrEqual
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind
  nameWithType: Expression.ListBind
  fullName: System.Linq.Expressions.Expression.ListBind
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberListBinding
  nameWithType: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind
  nameWithType: Expression.ListBind
  fullName: System.Linq.Expressions.Expression.ListBind
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberListBinding
  nameWithType: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind
  nameWithType: Expression.ListBind
  fullName: System.Linq.Expressions.Expression.ListBind
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberListBinding
  nameWithType: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListBind
  nameWithType: Expression.ListBind
  fullName: System.Linq.Expressions.Expression.ListBind
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberListBinding
  nameWithType: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ListInit
  nameWithType: Expression.ListInit
  fullName: System.Linq.Expressions.Expression.ListInit
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ListInitExpression
  nameWithType: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop
  nameWithType: Expression.Loop
  fullName: System.Linq.Expressions.Expression.Loop
- uid: System.Linq.Expressions.LoopExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LoopExpression
  nameWithType: LoopExpression
  fullName: System.Linq.Expressions.LoopExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop
  nameWithType: Expression.Loop
  fullName: System.Linq.Expressions.Expression.Loop
- uid: System.Linq.Expressions.LoopExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LoopExpression
  nameWithType: LoopExpression
  fullName: System.Linq.Expressions.LoopExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Loop
  nameWithType: Expression.Loop
  fullName: System.Linq.Expressions.Expression.Loop
- uid: System.Linq.Expressions.LoopExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LoopExpression
  nameWithType: LoopExpression
  fullName: System.Linq.Expressions.LoopExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary
  nameWithType: Expression.MakeBinary
  fullName: System.Linq.Expressions.Expression.MakeBinary
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary
  nameWithType: Expression.MakeBinary
  fullName: System.Linq.Expressions.Expression.MakeBinary
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeBinary
  nameWithType: Expression.MakeBinary
  fullName: System.Linq.Expressions.Expression.MakeBinary
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeCatchBlock
  nameWithType: Expression.MakeCatchBlock
  fullName: System.Linq.Expressions.Expression.MakeCatchBlock
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  name: CatchBlock
  nameWithType: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeDynamic
  nameWithType: Expression.MakeDynamic
  fullName: System.Linq.Expressions.Expression.MakeDynamic
- uid: System.Linq.Expressions.DynamicExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: DynamicExpression
  nameWithType: DynamicExpression
  fullName: System.Linq.Expressions.DynamicExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  name: CallSiteBinder
  nameWithType: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeGoto
  nameWithType: Expression.MakeGoto
  fullName: System.Linq.Expressions.Expression.MakeGoto
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.GotoExpressionKind
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpressionKind
  nameWithType: GotoExpressionKind
  fullName: System.Linq.Expressions.GotoExpressionKind
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeIndex
  nameWithType: Expression.MakeIndex
  fullName: System.Linq.Expressions.Expression.MakeIndex
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeMemberAccess
  nameWithType: Expression.MakeMemberAccess
  fullName: System.Linq.Expressions.Expression.MakeMemberAccess
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeTry
  nameWithType: Expression.MakeTry
  fullName: System.Linq.Expressions.Expression.MakeTry
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeUnary
  nameWithType: Expression.MakeUnary
  fullName: System.Linq.Expressions.Expression.MakeUnary
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MakeUnary
  nameWithType: Expression.MakeUnary
  fullName: System.Linq.Expressions.Expression.MakeUnary
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind
  nameWithType: Expression.MemberBind
  fullName: System.Linq.Expressions.Expression.MemberBind
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberMemberBinding
  nameWithType: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind
  nameWithType: Expression.MemberBind
  fullName: System.Linq.Expressions.Expression.MemberBind
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberMemberBinding
  nameWithType: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: false
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind
  nameWithType: Expression.MemberBind
  fullName: System.Linq.Expressions.Expression.MemberBind
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberMemberBinding
  nameWithType: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberBind
  nameWithType: Expression.MemberBind
  fullName: System.Linq.Expressions.Expression.MemberBind
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberMemberBinding
  nameWithType: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberInit
  nameWithType: Expression.MemberInit
  fullName: System.Linq.Expressions.Expression.MemberInit
- uid: System.Linq.Expressions.MemberInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberInitExpression
  nameWithType: MemberInitExpression
  fullName: System.Linq.Expressions.MemberInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MemberInit
  nameWithType: Expression.MemberInit
  fullName: System.Linq.Expressions.Expression.MemberInit
- uid: System.Linq.Expressions.MemberInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberInitExpression
  nameWithType: MemberInitExpression
  fullName: System.Linq.Expressions.MemberInitExpression
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Modulo
  nameWithType: Expression.Modulo
  fullName: System.Linq.Expressions.Expression.Modulo
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Modulo
  nameWithType: Expression.Modulo
  fullName: System.Linq.Expressions.Expression.Modulo
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign
  nameWithType: Expression.ModuloAssign
  fullName: System.Linq.Expressions.Expression.ModuloAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign
  nameWithType: Expression.ModuloAssign
  fullName: System.Linq.Expressions.Expression.ModuloAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ModuloAssign
  nameWithType: Expression.ModuloAssign
  fullName: System.Linq.Expressions.Expression.ModuloAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Multiply
  nameWithType: Expression.Multiply
  fullName: System.Linq.Expressions.Expression.Multiply
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Multiply
  nameWithType: Expression.Multiply
  fullName: System.Linq.Expressions.Expression.Multiply
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign
  nameWithType: Expression.MultiplyAssign
  fullName: System.Linq.Expressions.Expression.MultiplyAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign
  nameWithType: Expression.MultiplyAssign
  fullName: System.Linq.Expressions.Expression.MultiplyAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssign
  nameWithType: Expression.MultiplyAssign
  fullName: System.Linq.Expressions.Expression.MultiplyAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked
  nameWithType: Expression.MultiplyAssignChecked
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked
  nameWithType: Expression.MultiplyAssignChecked
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyAssignChecked
  nameWithType: Expression.MultiplyAssignChecked
  fullName: System.Linq.Expressions.Expression.MultiplyAssignChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyChecked
  nameWithType: Expression.MultiplyChecked
  fullName: System.Linq.Expressions.Expression.MultiplyChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: MultiplyChecked
  nameWithType: Expression.MultiplyChecked
  fullName: System.Linq.Expressions.Expression.MultiplyChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Negate
  nameWithType: Expression.Negate
  fullName: System.Linq.Expressions.Expression.Negate
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Negate
  nameWithType: Expression.Negate
  fullName: System.Linq.Expressions.Expression.Negate
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NegateChecked
  nameWithType: Expression.NegateChecked
  fullName: System.Linq.Expressions.Expression.NegateChecked
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NegateChecked
  nameWithType: Expression.NegateChecked
  fullName: System.Linq.Expressions.Expression.NegateChecked
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Linq.Expressions.Expression.New(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: New
  nameWithType: Expression.New
  fullName: System.Linq.Expressions.Expression.New
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewExpression
  nameWithType: NewExpression
  fullName: System.Linq.Expressions.NewExpression
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: false
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayBounds
  nameWithType: Expression.NewArrayBounds
  fullName: System.Linq.Expressions.Expression.NewArrayBounds
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewArrayExpression
  nameWithType: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayBounds
  nameWithType: Expression.NewArrayBounds
  fullName: System.Linq.Expressions.Expression.NewArrayBounds
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewArrayExpression
  nameWithType: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayInit
  nameWithType: Expression.NewArrayInit
  fullName: System.Linq.Expressions.Expression.NewArrayInit
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewArrayExpression
  nameWithType: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NewArrayInit
  nameWithType: Expression.NewArrayInit
  fullName: System.Linq.Expressions.Expression.NewArrayInit
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: NewArrayExpression
  nameWithType: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.NodeType
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NodeType
  nameWithType: Expression.NodeType
  fullName: System.Linq.Expressions.Expression.NodeType
- uid: System.Linq.Expressions.ExpressionType
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionType
  nameWithType: ExpressionType
  fullName: System.Linq.Expressions.ExpressionType
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Not
  nameWithType: Expression.Not
  fullName: System.Linq.Expressions.Expression.Not
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Not
  nameWithType: Expression.Not
  fullName: System.Linq.Expressions.Expression.Not
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NotEqual
  nameWithType: Expression.NotEqual
  fullName: System.Linq.Expressions.Expression.NotEqual
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: NotEqual
  nameWithType: Expression.NotEqual
  fullName: System.Linq.Expressions.Expression.NotEqual
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OnesComplement
  nameWithType: Expression.OnesComplement
  fullName: System.Linq.Expressions.Expression.OnesComplement
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OnesComplement
  nameWithType: Expression.OnesComplement
  fullName: System.Linq.Expressions.Expression.OnesComplement
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Or
  nameWithType: Expression.Or
  fullName: System.Linq.Expressions.Expression.Or
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Or
  nameWithType: Expression.Or
  fullName: System.Linq.Expressions.Expression.Or
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign
  nameWithType: Expression.OrAssign
  fullName: System.Linq.Expressions.Expression.OrAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign
  nameWithType: Expression.OrAssign
  fullName: System.Linq.Expressions.Expression.OrAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrAssign
  nameWithType: Expression.OrAssign
  fullName: System.Linq.Expressions.Expression.OrAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrElse
  nameWithType: Expression.OrElse
  fullName: System.Linq.Expressions.Expression.OrElse
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: OrElse
  nameWithType: Expression.OrElse
  fullName: System.Linq.Expressions.Expression.OrElse
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Parameter(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Parameter
  nameWithType: Expression.Parameter
  fullName: System.Linq.Expressions.Expression.Parameter
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Parameter(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Parameter
  nameWithType: Expression.Parameter
  fullName: System.Linq.Expressions.Expression.Parameter
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostDecrementAssign
  nameWithType: Expression.PostDecrementAssign
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostDecrementAssign
  nameWithType: Expression.PostDecrementAssign
  fullName: System.Linq.Expressions.Expression.PostDecrementAssign
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostIncrementAssign
  nameWithType: Expression.PostIncrementAssign
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PostIncrementAssign
  nameWithType: Expression.PostIncrementAssign
  fullName: System.Linq.Expressions.Expression.PostIncrementAssign
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Power
  nameWithType: Expression.Power
  fullName: System.Linq.Expressions.Expression.Power
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Power
  nameWithType: Expression.Power
  fullName: System.Linq.Expressions.Expression.Power
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign
  nameWithType: Expression.PowerAssign
  fullName: System.Linq.Expressions.Expression.PowerAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign
  nameWithType: Expression.PowerAssign
  fullName: System.Linq.Expressions.Expression.PowerAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PowerAssign
  nameWithType: Expression.PowerAssign
  fullName: System.Linq.Expressions.Expression.PowerAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreDecrementAssign
  nameWithType: Expression.PreDecrementAssign
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreDecrementAssign
  nameWithType: Expression.PreDecrementAssign
  fullName: System.Linq.Expressions.Expression.PreDecrementAssign
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreIncrementAssign
  nameWithType: Expression.PreIncrementAssign
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PreIncrementAssign
  nameWithType: Expression.PreIncrementAssign
  fullName: System.Linq.Expressions.Expression.PreIncrementAssign
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: false
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: IndexExpression
  nameWithType: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Property
  nameWithType: Expression.Property
  fullName: System.Linq.Expressions.Expression.Property
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: PropertyOrField
  nameWithType: Expression.PropertyOrField
  fullName: System.Linq.Expressions.Expression.PropertyOrField
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: MemberExpression
  nameWithType: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Quote
  nameWithType: Expression.Quote
  fullName: System.Linq.Expressions.Expression.Quote
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Reduce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Reduce
  nameWithType: Expression.Reduce
  fullName: System.Linq.Expressions.Expression.Reduce
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ReduceAndCheck
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReduceAndCheck
  nameWithType: Expression.ReduceAndCheck
  fullName: System.Linq.Expressions.Expression.ReduceAndCheck
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ReduceExtensions
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReduceExtensions
  nameWithType: Expression.ReduceExtensions
  fullName: System.Linq.Expressions.Expression.ReduceExtensions
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReferenceEqual
  nameWithType: Expression.ReferenceEqual
  fullName: System.Linq.Expressions.Expression.ReferenceEqual
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ReferenceNotEqual
  nameWithType: Expression.ReferenceNotEqual
  fullName: System.Linq.Expressions.Expression.ReferenceNotEqual
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Rethrow
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Rethrow
  nameWithType: Expression.Rethrow
  fullName: System.Linq.Expressions.Expression.Rethrow
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression.Rethrow(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Rethrow
  nameWithType: Expression.Rethrow
  fullName: System.Linq.Expressions.Expression.Rethrow
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return
  nameWithType: Expression.Return
  fullName: System.Linq.Expressions.Expression.Return
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return
  nameWithType: Expression.Return
  fullName: System.Linq.Expressions.Expression.Return
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return
  nameWithType: Expression.Return
  fullName: System.Linq.Expressions.Expression.Return
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Return
  nameWithType: Expression.Return
  fullName: System.Linq.Expressions.Expression.Return
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: GotoExpression
  nameWithType: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  name: LabelTarget
  nameWithType: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShift
  nameWithType: Expression.RightShift
  fullName: System.Linq.Expressions.Expression.RightShift
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShift
  nameWithType: Expression.RightShift
  fullName: System.Linq.Expressions.Expression.RightShift
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign
  nameWithType: Expression.RightShiftAssign
  fullName: System.Linq.Expressions.Expression.RightShiftAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign
  nameWithType: Expression.RightShiftAssign
  fullName: System.Linq.Expressions.Expression.RightShiftAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RightShiftAssign
  nameWithType: Expression.RightShiftAssign
  fullName: System.Linq.Expressions.Expression.RightShiftAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RuntimeVariables
  nameWithType: Expression.RuntimeVariables
  fullName: System.Linq.Expressions.Expression.RuntimeVariables
- uid: System.Linq.Expressions.RuntimeVariablesExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: RuntimeVariablesExpression
  nameWithType: RuntimeVariablesExpression
  fullName: System.Linq.Expressions.RuntimeVariablesExpression
- uid: System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: RuntimeVariables
  nameWithType: Expression.RuntimeVariables
  fullName: System.Linq.Expressions.Expression.RuntimeVariables
- uid: System.Linq.Expressions.RuntimeVariablesExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: RuntimeVariablesExpression
  nameWithType: RuntimeVariablesExpression
  fullName: System.Linq.Expressions.RuntimeVariablesExpression
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Subtract
  nameWithType: Expression.Subtract
  fullName: System.Linq.Expressions.Expression.Subtract
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Subtract
  nameWithType: Expression.Subtract
  fullName: System.Linq.Expressions.Expression.Subtract
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign
  nameWithType: Expression.SubtractAssign
  fullName: System.Linq.Expressions.Expression.SubtractAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign
  nameWithType: Expression.SubtractAssign
  fullName: System.Linq.Expressions.Expression.SubtractAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssign
  nameWithType: Expression.SubtractAssign
  fullName: System.Linq.Expressions.Expression.SubtractAssign
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked
  nameWithType: Expression.SubtractAssignChecked
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked
  nameWithType: Expression.SubtractAssignChecked
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractAssignChecked
  nameWithType: Expression.SubtractAssignChecked
  fullName: System.Linq.Expressions.Expression.SubtractAssignChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: LambdaExpression
  nameWithType: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractChecked
  nameWithType: Expression.SubtractChecked
  fullName: System.Linq.Expressions.Expression.SubtractChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SubtractChecked
  nameWithType: Expression.SubtractChecked
  fullName: System.Linq.Expressions.Expression.SubtractChecked
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: BinaryExpression
  nameWithType: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Switch
  nameWithType: Expression.Switch
  fullName: System.Linq.Expressions.Expression.Switch
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchExpression
  nameWithType: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SwitchCase
  nameWithType: Expression.SwitchCase
  fullName: System.Linq.Expressions.Expression.SwitchCase
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SwitchCase
  nameWithType: Expression.SwitchCase
  fullName: System.Linq.Expressions.Expression.SwitchCase
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument
  nameWithType: Expression.SymbolDocument
  fullName: System.Linq.Expressions.Expression.SymbolDocument
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument
  nameWithType: Expression.SymbolDocument
  fullName: System.Linq.Expressions.Expression.SymbolDocument
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument
  nameWithType: Expression.SymbolDocument
  fullName: System.Linq.Expressions.Expression.SymbolDocument
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: SymbolDocument
  nameWithType: Expression.SymbolDocument
  fullName: System.Linq.Expressions.Expression.SymbolDocument
- uid: System.Linq.Expressions.SymbolDocumentInfo
  parent: System.Linq.Expressions
  isExternal: false
  name: SymbolDocumentInfo
  nameWithType: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid
  parent: System
  isExternal: false
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Throw
  nameWithType: Expression.Throw
  fullName: System.Linq.Expressions.Expression.Throw
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Throw
  nameWithType: Expression.Throw
  fullName: System.Linq.Expressions.Expression.Throw
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.ToString
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: ToString
  nameWithType: Expression.ToString
  fullName: System.Linq.Expressions.Expression.ToString
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryCatch
  nameWithType: Expression.TryCatch
  fullName: System.Linq.Expressions.Expression.TryCatch
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryCatchFinally
  nameWithType: Expression.TryCatchFinally
  fullName: System.Linq.Expressions.Expression.TryCatchFinally
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryFault
  nameWithType: Expression.TryFault
  fullName: System.Linq.Expressions.Expression.TryFault
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryFinally
  nameWithType: Expression.TryFinally
  fullName: System.Linq.Expressions.Expression.TryFinally
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TryExpression
  nameWithType: TryExpression
  fullName: System.Linq.Expressions.TryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryGetActionType
  nameWithType: Expression.TryGetActionType
  fullName: System.Linq.Expressions.Expression.TryGetActionType
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TryGetFuncType
  nameWithType: Expression.TryGetFuncType
  fullName: System.Linq.Expressions.Expression.TryGetFuncType
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Type
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Type
  nameWithType: Expression.Type
  fullName: System.Linq.Expressions.Expression.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TypeAs
  nameWithType: Expression.TypeAs
  fullName: System.Linq.Expressions.Expression.TypeAs
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TypeEqual
  nameWithType: Expression.TypeEqual
  fullName: System.Linq.Expressions.Expression.TypeEqual
- uid: System.Linq.Expressions.TypeBinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TypeBinaryExpression
  nameWithType: TypeBinaryExpression
  fullName: System.Linq.Expressions.TypeBinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: TypeIs
  nameWithType: Expression.TypeIs
  fullName: System.Linq.Expressions.Expression.TypeIs
- uid: System.Linq.Expressions.TypeBinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: TypeBinaryExpression
  nameWithType: TypeBinaryExpression
  fullName: System.Linq.Expressions.TypeBinaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: UnaryPlus
  nameWithType: Expression.UnaryPlus
  fullName: System.Linq.Expressions.Expression.UnaryPlus
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: UnaryPlus
  nameWithType: Expression.UnaryPlus
  fullName: System.Linq.Expressions.Expression.UnaryPlus
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: false
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Unbox
  nameWithType: Expression.Unbox
  fullName: System.Linq.Expressions.Expression.Unbox
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: UnaryExpression
  nameWithType: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Variable(System.Type)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Variable
  nameWithType: Expression.Variable
  fullName: System.Linq.Expressions.Expression.Variable
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression.Variable(System.Type,System.String)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Variable
  nameWithType: Expression.Variable
  fullName: System.Linq.Expressions.Expression.Variable
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  name: ParameterExpression
  nameWithType: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: VisitChildren
  nameWithType: Expression.VisitChildren
  fullName: System.Linq.Expressions.Expression.VisitChildren
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  name: ExpressionVisitor
  nameWithType: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
- uid: System.Linq.Expressions.Expression.Add
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.AddAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.AddAssignChecked
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.AddChecked
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.And
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.AndAlso
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.AndAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.ArrayAccess
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.ArrayIndex
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Bind
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Block
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Break
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Call
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Catch
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Coalesce
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Condition
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Constant
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Continue
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Convert
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.ConvertChecked
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Decrement
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Divide
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.DivideAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Dynamic
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.ElementInit
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Equal
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.ExclusiveOr
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.ExclusiveOrAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Field
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Goto
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.GreaterThan
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.GreaterThanOrEqual
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Increment
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Invoke
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.IsFalse
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.IsTrue
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Label
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Lambda
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Lambda<TDelegate>
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.LeftShift
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.LeftShiftAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.LessThan
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.LessThanOrEqual
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.ListBind
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.ListInit
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Loop
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.MakeBinary
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.MakeDynamic
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.MakeUnary
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.MemberBind
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.MemberInit
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Modulo
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.ModuloAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Multiply
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.MultiplyAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.MultiplyAssignChecked
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.MultiplyChecked
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Negate
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.NegateChecked
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.New
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.NewArrayBounds
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.NewArrayInit
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Not
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.NotEqual
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.OnesComplement
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Or
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.OrAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.OrElse
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Parameter
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.PostDecrementAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.PostIncrementAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Power
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.PowerAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.PreDecrementAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.PreIncrementAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Property
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Rethrow
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Return
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.RightShift
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.RightShiftAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.RuntimeVariables
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Subtract
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.SubtractAssign
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.SubtractAssignChecked
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.SubtractChecked
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Switch
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.SwitchCase
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.SymbolDocument
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Throw
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.UnaryPlus
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
- uid: System.Linq.Expressions.Expression.Variable
  parent: System.Linq.Expressions.Expression
  isExternal: false
  name: Accept
  nameWithType: Expression.Accept
