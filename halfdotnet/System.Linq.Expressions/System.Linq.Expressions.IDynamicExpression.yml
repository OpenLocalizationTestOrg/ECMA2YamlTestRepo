### YamlMime:ManagedReference
items:
- uid: System.Linq.Expressions.IDynamicExpression
  id: IDynamicExpression
  children:
  - System.Linq.Expressions.IDynamicExpression.CreateCallSite
  - System.Linq.Expressions.IDynamicExpression.DelegateType
  - System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])
  langs:
  - csharp
  name: IDynamicExpression
  nameWithType: IDynamicExpression
  fullName: System.Linq.Expressions.IDynamicExpression
  type: Interface
  summary: Provides an internal interface for accessing the arguments of DynamicExpression tree nodes as well as CallSite and Rewriting functionality.  You should not use this API.  It is only public due to DLL refactoring and exists only for internal performance optimizations.
  remarks: To be added.
  syntax:
    content: 'public interface IDynamicExpression : System.Linq.Expressions.IArgumentProvider'
  implements:
  - System.Linq.Expressions.IArgumentProvider
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.IDynamicExpression.CreateCallSite
  id: CreateCallSite
  parent: System.Linq.Expressions.IDynamicExpression
  langs:
  - csharp
  name: CreateCallSite()
  nameWithType: IDynamicExpression.CreateCallSite()
  fullName: System.Linq.Expressions.IDynamicExpression.CreateCallSite()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  summary: Optionally creates the CallSite and returns the CallSite for the DynamicExpression’s polymorphic inline cache.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.
  remarks: To be added.
  syntax:
    content: public object CreateCallSite ();
    parameters: []
    return:
      type: System.Object
      description: The CallSite for the DynamicExpression’s polymorphic inline cache.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.IDynamicExpression.DelegateType
  id: DelegateType
  parent: System.Linq.Expressions.IDynamicExpression
  langs:
  - csharp
  name: DelegateType
  nameWithType: IDynamicExpression.DelegateType
  fullName: System.Linq.Expressions.IDynamicExpression.DelegateType
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  summary: Gets the delegate type used by the CallSite, which is the type of the rules used in the dynamic expression’s polymorhphic inline cache.
  remarks: To be added.
  syntax:
    content: public Type DelegateType { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])
  id: Rewrite(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.IDynamicExpression
  langs:
  - csharp
  name: Rewrite(Expression[])
  nameWithType: IDynamicExpression.Rewrite(Expression[])
  fullName: System.Linq.Expressions.IDynamicExpression.Rewrite(Expression[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  summary: Rewrites this node replacing the dynamic expression’s arguments with the provided values.  The number of `args` needs to match the number of the current expression.  You should not use this type.  It is only public due to assembly refactoring, and it is used internally for performance optimizations.  This helper method allows re-writing of nodes to be independent of the specific implementation class deriving from DynamicExpression that is being used at the call site.
  remarks: To be added.
  syntax:
    content: public System.Linq.Expressions.Expression Rewrite (System.Linq.Expressions.Expression[] args);
    parameters:
    - id: args
      type: System.Linq.Expressions.Expression[]
      description: The arguments used to replace this node.
    return:
      type: System.Linq.Expressions.Expression
      description: The rewritten node, but if no changes were made, then returns the same node.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Linq.Expressions.IDynamicExpression.CreateCallSite
  parent: System.Linq.Expressions.IDynamicExpression
  isExternal: false
  name: CreateCallSite()
  nameWithType: IDynamicExpression.CreateCallSite()
  fullName: System.Linq.Expressions.IDynamicExpression.CreateCallSite()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Linq.Expressions.IDynamicExpression.DelegateType
  parent: System.Linq.Expressions.IDynamicExpression
  isExternal: false
  name: DelegateType
  nameWithType: IDynamicExpression.DelegateType
  fullName: System.Linq.Expressions.IDynamicExpression.DelegateType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])
  parent: System.Linq.Expressions.IDynamicExpression
  isExternal: false
  name: Rewrite(Expression[])
  nameWithType: IDynamicExpression.Rewrite(Expression[])
  fullName: System.Linq.Expressions.IDynamicExpression.Rewrite(Expression[])
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression[]
