### YamlMime:ManagedReference
items:
- uid: System.Linq.Expressions.SwitchCase
  id: SwitchCase
  children:
  - System.Linq.Expressions.SwitchCase.Body
  - System.Linq.Expressions.SwitchCase.TestValues
  - System.Linq.Expressions.SwitchCase.ToString
  - System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)
  langs:
  - csharp
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase
  type: Class
  summary: Represents one case of a <see cref="T:System.Linq.Expressions.SwitchExpression">.
  remarks: ''
  example:
  - "The following example demonstrates how to create an expression that represents a switch statement without a default case by using the <xref:System.Linq.Expressions.Expression.SwitchCase%2A> method.  \n  \n [!CODE [System.Linq.Expressions.ExpressionDev10#34](../CodeSnippet/VS_Snippets_CLR_System/system.linq.expressions.expressiondev10#34)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Linq.Expressions.Expression/SwitchCaseProxy))]

      public sealed class SwitchCase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.SwitchCase.Body
  id: Body
  parent: System.Linq.Expressions.SwitchCase
  langs:
  - csharp
  name: Body
  nameWithType: SwitchCase.Body
  fullName: System.Linq.Expressions.SwitchCase.Body
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  summary: Gets the body of this case.
  remarks: To be added.
  syntax:
    content: public System.Linq.Expressions.Expression Body { get; }
    return:
      type: System.Linq.Expressions.Expression
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.SwitchCase.TestValues
  id: TestValues
  parent: System.Linq.Expressions.SwitchCase
  langs:
  - csharp
  name: TestValues
  nameWithType: SwitchCase.TestValues
  fullName: System.Linq.Expressions.SwitchCase.TestValues
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  summary: Gets the values of this case. This case is selected for execution when the <xref:System.Linq.Expressions.SwitchExpression.SwitchValue%2A> matches any of these values.
  remarks: To be added.
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression> TestValues { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.SwitchCase.ToString
  id: ToString
  parent: System.Linq.Expressions.SwitchCase
  langs:
  - csharp
  name: ToString()
  nameWithType: SwitchCase.ToString()
  fullName: System.Linq.Expressions.SwitchCase.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  summary: Returns a <see cref="T:System.String"> that represents the current <xref:System.Object>.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A <see cref="T:System.String"> that represents the current <xref:System.Object>.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)
  id: Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.SwitchCase
  langs:
  - csharp
  name: Update(IEnumerable<Expression>,Expression)
  nameWithType: SwitchCase.Update(IEnumerable<Expression>,Expression)
  fullName: System.Linq.Expressions.SwitchCase.Update(IEnumerable<Expression>,Expression)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq.Expressions
  summary: Creates a new expression that is like this one, but using the supplied children. If all of the children are the same, it will return this expression.
  remarks: To be added.
  syntax:
    content: public System.Linq.Expressions.SwitchCase Update (System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> testValues, System.Linq.Expressions.Expression body);
    parameters:
    - id: testValues
      type: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
      description: The <xref:System.Linq.Expressions.SwitchCase.TestValues%2A> property of the result.
    - id: body
      type: System.Linq.Expressions.Expression
      description: The <xref:System.Linq.Expressions.SwitchCase.Body%2A> property of the result.
    return:
      type: System.Linq.Expressions.SwitchCase
      description: This expression if no children are changed or an expression with the updated children.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Linq.Expressions.SwitchCase.Body
  parent: System.Linq.Expressions.SwitchCase
  isExternal: false
  name: Body
  nameWithType: SwitchCase.Body
  fullName: System.Linq.Expressions.SwitchCase.Body
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.SwitchCase.TestValues
  parent: System.Linq.Expressions.SwitchCase
  isExternal: false
  name: TestValues
  nameWithType: SwitchCase.TestValues
  fullName: System.Linq.Expressions.SwitchCase.TestValues
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<Expression>
  nameWithType: ReadOnlyCollection<Expression>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.SwitchCase.ToString
  parent: System.Linq.Expressions.SwitchCase
  isExternal: false
  name: ToString()
  nameWithType: SwitchCase.ToString()
  fullName: System.Linq.Expressions.SwitchCase.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.SwitchCase
  isExternal: false
  name: Update(IEnumerable<Expression>,Expression)
  nameWithType: SwitchCase.Update(IEnumerable<Expression>,Expression)
  fullName: System.Linq.Expressions.SwitchCase.Update(IEnumerable<Expression>,Expression)
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  name: SwitchCase
  nameWithType: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase
- uid: System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<Expression>
  nameWithType: IEnumerable<Expression>
  fullName: System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
