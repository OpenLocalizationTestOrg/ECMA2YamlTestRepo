### YamlMime:ManagedReference
items:
- uid: System.Collections.IComparer
  id: IComparer
  children:
  - System.Collections.IComparer.Compare(System.Object,System.Object)
  langs:
  - csharp
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
  type: Interface
  summary: Exposes a method that compares two objects.
  remarks: "This interface is used in conjunction with the <xref:System.Array.Sort%2A?displayProperty=fullName> and <xref:System.Array.BinarySearch%2A?displayProperty=fullName> methods. It provides a way to customize the sort order of a collection. See the <xref:System.Collections.IComparer.Compare%2A> method for notes on parameters and return value.  \n  \n The default implementation of this interface is the <xref:System.Collections.Comparer> class. For the generic version of this interface, see <xref:System.Collections.Generic.IComparer%601?displayProperty=fullName>."
  example:
  - "The following code example demonstrates the use of the IComparer interface to sort an <xref:System.Collections.ArrayList> object. In this example, the IComparer interface is implemented using the <xref:System.Collections.CaseInsensitiveComparer> class to reverse the order of the contents of the <xref:System.Collections.ArrayList>.  \n  \n [!CODE [System.Collections.ArrayList.Sort_2#1](../CodeSnippet/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IComparer
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.IComparer.Compare(System.Object,System.Object)
  id: Compare(System.Object,System.Object)
  parent: System.Collections.IComparer
  langs:
  - csharp
  name: Compare(Object,Object)
  nameWithType: IComparer.Compare(Object,Object)
  fullName: System.Collections.IComparer.Compare(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
  remarks: "The preferred implementation is to use the <xref:System.IComparable.CompareTo%2A> method of one of the parameters.  \n  \n Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>. When sorting, `null` is considered to be less than any other object."
  example:
  - "The following code example demonstrates the use of the <xref:System.Collections.IComparer> interface to sort an <xref:System.Collections.ArrayList> object. In this example, the <xref:System.Collections.IComparer> interface is implemented using the <xref:System.Collections.CaseInsensitiveComparer>class to reverse the order of the contents of the <xref:System.Collections.ArrayList>.  \n  \n [!CODE [System.Collections.ArrayList.Sort_2#1](../CodeSnippet/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2#1)]"
  syntax:
    content: public int Compare (object x, object y);
    parameters:
    - id: x
      type: System.Object
      description: The first object to compare.
    - id: y
      type: System.Object
      description: The second object to compare.
    return:
      type: System.Int32
      description: "A signed integer that indicates the relative values of  and , as shown in the following table.  \n  \n|Value|Meaning|  \n|-----------|-------------|  \n|Less than zero|is less than .|  \n|Zero|equals .|  \n|Greater than zero|is greater than .|"
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Collections.IComparer.Compare(System.Object,System.Object)
  parent: System.Collections.IComparer
  isExternal: false
  name: Compare(Object,Object)
  nameWithType: IComparer.Compare(Object,Object)
  fullName: System.Collections.IComparer.Compare(Object,Object)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
