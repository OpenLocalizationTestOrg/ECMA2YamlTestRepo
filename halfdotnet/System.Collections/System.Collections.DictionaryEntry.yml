### YamlMime:ManagedReference
items:
- uid: System.Collections.DictionaryEntry
  id: DictionaryEntry
  children:
  - System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)
  - System.Collections.DictionaryEntry.Key
  - System.Collections.DictionaryEntry.Value
  langs:
  - csharp
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry
  type: Struct
  summary: Defines a dictionary key/value pair that can be set or retrieved.
  remarks: "The <xref:System.Collections.IDictionaryEnumerator.Entry%2A?displayProperty=fullName> method returns an instance of this type.  \n  \n The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` in Visual Basic) requires the type of each element in the collection. Since each element of the <xref:System.Collections.IDictionary> is a key/value pair, the element type is not the type of the key or the type of the value. Instead, the element type is DictionaryEntry. For example:  \n  \n [!CODE [System.Collections.DictionaryEntry#01](../CodeSnippet/VS_Snippets_CLR_System/system.Collections.DictionaryEntry#01)]  \n  \n The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection."
  example:
  - "The following example demonstrates the use of DictionaryEntry to iterate through a <xref:System.Collections.Hashtable> object.  \n  \n [!CODE [System.Collections.DictionaryEntry#00](../CodeSnippet/VS_Snippets_CLR_System/system.Collections.DictionaryEntry#00)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct DictionaryEntry
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)
  id: '#ctor(System.Object,System.Object)'
  parent: System.Collections.DictionaryEntry
  langs:
  - csharp
  name: DictionaryEntry(Object,Object)
  nameWithType: DictionaryEntry.DictionaryEntry(Object,Object)
  fullName: System.Collections.DictionaryEntry.DictionaryEntry(Object,Object)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: Initializes an instance of the <see cref="T:System.Collections.DictionaryEntry"> type with the specified key and value.
  remarks: In the [!INCLUDE[dnprdnlong](../../add/includes/dnprdnlong-md.md)] can be `null`.
  syntax:
    content: public DictionaryEntry (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: The object defined in each key/value pair.
    - id: value
      type: System.Object
      description: The definition associated with .
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.DictionaryEntry.Key
  id: Key
  parent: System.Collections.DictionaryEntry
  langs:
  - csharp
  name: Key
  nameWithType: DictionaryEntry.Key
  fullName: System.Collections.DictionaryEntry.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: Gets or sets the key in the key/value pair.
  remarks: ''
  example:
  - "The following example demonstrates the Key property. This code example is part of a larger example provided for the <xref:System.Collections.DictionaryEntry> class.  \n  \n [!CODE [Dictionary#9](../CodeSnippet/VS_Snippets_CLR/Dictionary#9)]"
  syntax:
    content: public object Key { get; set; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.DictionaryEntry.Value
  id: Value
  parent: System.Collections.DictionaryEntry
  langs:
  - csharp
  name: Value
  nameWithType: DictionaryEntry.Value
  fullName: System.Collections.DictionaryEntry.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: Gets or sets the value in the key/value pair.
  remarks: ''
  example:
  - "The following example demonstrates the Value property. This code example is part of a larger example provided for the <xref:System.Collections.DictionaryEntry> class.  \n  \n [!CODE [Dictionary#9](../CodeSnippet/VS_Snippets_CLR/Dictionary#9)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)
  parent: System.Collections.DictionaryEntry
  isExternal: false
  name: DictionaryEntry(Object,Object)
  nameWithType: DictionaryEntry.DictionaryEntry(Object,Object)
  fullName: System.Collections.DictionaryEntry.DictionaryEntry(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.DictionaryEntry.Key
  parent: System.Collections.DictionaryEntry
  isExternal: false
  name: Key
  nameWithType: DictionaryEntry.Key
  fullName: System.Collections.DictionaryEntry.Key
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.DictionaryEntry.Value
  parent: System.Collections.DictionaryEntry
  isExternal: false
  name: Value
  nameWithType: DictionaryEntry.Value
  fullName: System.Collections.DictionaryEntry.Value
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
