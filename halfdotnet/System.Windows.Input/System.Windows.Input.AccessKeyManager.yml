### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.AccessKeyManager
  id: AccessKeyManager
  children:
  - System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  - System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  - System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  - System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  - System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  - System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  - System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  langs:
  - csharp
  name: AccessKeyManager
  nameWithType: AccessKeyManager
  fullName: System.Windows.Input.AccessKeyManager
  type: Class
  summary: Maintains the registration of all access keys and the handling of interop keyboard commands between [!INCLUDE[TLA#tla_winforms](../../add/includes/tlasharptla-winforms-md.md)], [!INCLUDE[TLA#tla_win32](../../add/includes/tlasharptla-win32-md.md)], and [!INCLUDE[TLA#tla_winclient](../../add/includes/tlasharptla-winclient-md.md)].
  remarks: "An AccessKeyManager object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.  \n  \n The AccessKeyManager is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.  \n  \n When the registered access key is pressed, the AccessKeyManager calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.  \n  \n An element can be associated with any number of access keys."
  syntax:
    content: public sealed class AccessKeyManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  id: AccessKeyPressedEvent
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: AccessKeyPressedEvent
  nameWithType: AccessKeyManager.AccessKeyPressedEvent
  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Identifies the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> routed event.
  remarks: To be added.
  syntax:
    content: public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  id: AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Adds a handler for the <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> attached event.
  remarks: To be added.
  syntax:
    content: public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The <see cref="T:System.Windows.UIElement"> or <xref:System.Windows.ContentElement> that listens to this event.
    - id: handler
      type: System.Windows.Input.AccessKeyPressedEventHandler
      description: The event handler to be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  id: IsKeyRegistered(System.Object,System.String)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: IsKeyRegistered(Object,String)
  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)
  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Indicates whether the specified key is registered as an access keys in the specified scope.
  remarks: To be added.
  syntax:
    content: public static bool IsKeyRegistered (object scope, string key);
    parameters:
    - id: scope
      type: System.Object
      description: The presentation source to query for .
    - id: key
      type: System.String
      description: The key to query.
    return:
      type: System.Boolean
      description: '`true` if the key is registered; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  id: ProcessKey(System.Object,System.String,System.Boolean)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: ProcessKey(Object,String,Boolean)
  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)
  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Processes the specified access keys as if a <see cref="E:System.Windows.UIElement.KeyDown"> event for the key was passed to the <xref:System.Windows.Input.AccessKeyManager>.
  remarks: To be added.
  syntax:
    content: public static bool ProcessKey (object scope, string key, bool isMultiple);
    parameters:
    - id: scope
      type: System.Object
      description: The scope for the access key.
    - id: key
      type: System.String
      description: The access key.
    - id: isMultiple
      type: System.Boolean
      description: Indicates if  has multiple matches.
    return:
      type: System.Boolean
      description: '`true` if there are more keys that match; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  id: Register(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: Register(String,IInputElement)
  nameWithType: AccessKeyManager.Register(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Associates the specified access keys with the specified element.
  remarks: "When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of  is called.  \n  \n An element can be associated with any number of access keys."
  syntax:
    content: public static void Register (string key, System.Windows.IInputElement element);
    parameters:
    - id: key
      type: System.String
      description: The access key.
    - id: element
      type: System.Windows.IInputElement
      description: The element to associate  with.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  id: RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Removes the specified <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed> event handler from the specified object.
  remarks: To be added.
  syntax:
    content: public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: The <see cref="T:System.Windows.UIElement"> or <xref:System.Windows.ContentElement> that listens to this event.
    - id: handler
      type: System.Windows.Input.AccessKeyPressedEventHandler
      description: The event handler to be removed.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  id: Unregister(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: Unregister(String,IInputElement)
  nameWithType: AccessKeyManager.Unregister(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Disassociates the specified access keys from the specified element.
  remarks: To be added.
  syntax:
    content: public static void Unregister (string key, System.Windows.IInputElement element);
    parameters:
    - id: key
      type: System.String
      description: The access key.
    - id: element
      type: System.Windows.IInputElement
      description: The element from which to disassociate .
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AccessKeyPressedEvent
  nameWithType: AccessKeyManager.AccessKeyPressedEvent
  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Input.AccessKeyPressedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: AccessKeyPressedEventHandler
  nameWithType: AccessKeyPressedEventHandler
  fullName: System.Windows.Input.AccessKeyPressedEventHandler
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: IsKeyRegistered(Object,String)
  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)
  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: ProcessKey(Object,String,Boolean)
  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)
  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Register(String,IInputElement)
  nameWithType: AccessKeyManager.Register(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Input.AccessKeyPressedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: AccessKeyPressedEventHandler
  nameWithType: AccessKeyPressedEventHandler
  fullName: System.Windows.Input.AccessKeyPressedEventHandler
- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Unregister(String,IInputElement)
  nameWithType: AccessKeyManager.Unregister(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
