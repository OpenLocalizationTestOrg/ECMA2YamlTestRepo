### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.CanExecuteChangedEventManager
  id: CanExecuteChangedEventManager
  children:
  - System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  - System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  - System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  - System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)
  - System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)
  langs:
  - csharp
  name: CanExecuteChangedEventManager
  nameWithType: CanExecuteChangedEventManager
  fullName: System.Windows.Input.CanExecuteChangedEventManager
  type: Class
  summary: Provides a <xref:System.Windows.WeakEventManager> implementation so that you can use the "weak event listener" pattern to attach listeners for the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event.
  remarks: For information about how to use this class, see “Using an Existing Weak Event Manager Class“ in[Weak Event Patterns](../Topic/Weak%20Event%20Patterns.md).
  syntax:
    content: 'public class CanExecuteChangedEventManager : System.Windows.WeakEventManager'
  inheritance:
  - System.Windows.WeakEventManager
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  id: AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: AddHandler(ICommand,EventHandler<EventArgs>)
  nameWithType: CanExecuteChangedEventManager.AddHandler(ICommand,EventHandler<EventArgs>)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(ICommand,EventHandler<EventArgs>)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Adds the specified delegate as an event handler of the specified source.
  remarks: To be added.
  syntax:
    content: public static void AddHandler (System.Windows.Input.ICommand source, EventHandler<EventArgs> handler);
    parameters:
    - id: source
      type: System.Windows.Input.ICommand
      description: The source object that the raises the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event.
    - id: handler
      type: System.EventHandler{System.EventArgs}
      description: The delegate that handles the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  id: Purge(System.Object,System.Object,System.Boolean)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: Purge(Object,Object,Boolean)
  nameWithType: CanExecuteChangedEventManager.Purge(Object,Object,Boolean)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.Purge(Object,Object,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Removes inactive listener entries from the data list for the provided source.
  remarks: To be added.
  syntax:
    content: protected override bool Purge (object source, object data, bool purgeAll);
    parameters:
    - id: source
      type: System.Object
      description: The source for events being listened to.
    - id: data
      type: System.Object
      description: The data to check. This object is expected to be a <xref:System.Windows.WeakEventManager.ListenerList> implementation.
    - id: purgeAll
      type: System.Boolean
      description: '`true` to stop listening to , and completely remove all entries from .'
    return:
      type: System.Boolean
      description: '`true` if some entries were actually removed; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  id: RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: RemoveHandler(ICommand,EventHandler<EventArgs>)
  nameWithType: CanExecuteChangedEventManager.RemoveHandler(ICommand,EventHandler<EventArgs>)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(ICommand,EventHandler<EventArgs>)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Removes the specified event handler from the specified source.
  remarks: To be added.
  syntax:
    content: public static void RemoveHandler (System.Windows.Input.ICommand source, EventHandler<EventArgs> handler);
    parameters:
    - id: source
      type: System.Windows.Input.ICommand
      description: The source object that the raises the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event.
    - id: handler
      type: System.EventHandler{System.EventArgs}
      description: The delegate that handles the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: CanExecuteChangedEventManager.StartListening(Object)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StartListening(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Begins listening for the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event on the specified source.
  remarks: To be added.
  syntax:
    content: protected override void StartListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: The object with the event.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: CanExecuteChangedEventManager.StopListening(Object)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StopListening(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Stops listening for the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event on the specified source.
  remarks: To be added.
  syntax:
    content: protected override void StopListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: The source object to stop listening for.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.WeakEventManager
  isExternal: false
  name: System.Windows.WeakEventManager
- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: AddHandler(ICommand,EventHandler<EventArgs>)
  nameWithType: CanExecuteChangedEventManager.AddHandler(ICommand,EventHandler<EventArgs>)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(ICommand,EventHandler<EventArgs>)
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.EventHandler{System.EventArgs}
  parent: System
  isExternal: false
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: Purge(Object,Object,Boolean)
  nameWithType: CanExecuteChangedEventManager.Purge(Object,Object,Boolean)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.Purge(Object,Object,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: RemoveHandler(ICommand,EventHandler<EventArgs>)
  nameWithType: CanExecuteChangedEventManager.RemoveHandler(ICommand,EventHandler<EventArgs>)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(ICommand,EventHandler<EventArgs>)
- uid: System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.EventHandler{System.EventArgs}
  parent: System
  isExternal: false
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: StartListening(Object)
  nameWithType: CanExecuteChangedEventManager.StartListening(Object)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StartListening(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)
  parent: System.Windows.Input.CanExecuteChangedEventManager
  isExternal: false
  name: StopListening(Object)
  nameWithType: CanExecuteChangedEventManager.StopListening(Object)
  fullName: System.Windows.Input.CanExecuteChangedEventManager.StopListening(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
