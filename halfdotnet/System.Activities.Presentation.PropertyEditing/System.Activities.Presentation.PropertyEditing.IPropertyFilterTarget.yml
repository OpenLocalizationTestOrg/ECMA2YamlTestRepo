### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  id: IPropertyFilterTarget
  children:
  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)
  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
  - System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)
  langs:
  - csharp
  name: IPropertyFilterTarget
  nameWithType: IPropertyFilterTarget
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  type: Interface
  summary: Interface that is used by the host infrastructure for property editing to handle sorting and filtering functionality.
  remarks: It is used to determine whether a particular object should be filtered out.
  syntax:
    content: public interface IPropertyFilterTarget
  implements: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)
  id: ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  langs:
  - csharp
  name: ApplyFilter(PropertyFilter)
  nameWithType: IPropertyFilterTarget.ApplyFilter(PropertyFilter)
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(PropertyFilter)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: Used to set a new <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter"> on the <xref:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget>.
  remarks: To be added.
  syntax:
    content: public void ApplyFilter (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);
    parameters:
    - id: filter
      type: System.Activities.Presentation.PropertyEditing.PropertyFilter
      description: The new <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter"> instance.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
  id: FilterApplied
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  langs:
  - csharp
  name: FilterApplied
  nameWithType: IPropertyFilterTarget.FilterApplied
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: Declaration of the event raised when a <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter"> is changed through a call to <xref:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter%2A>.
  remarks: To be added.
  syntax:
    content: public event EventHandler<System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs> FilterApplied;
    return:
      type: System.EventHandler{System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs}
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
  id: MatchesFilter
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  langs:
  - csharp
  name: MatchesFilter
  nameWithType: IPropertyFilterTarget.MatchesFilter
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: Read-only property that returns `true` if the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter"> is a match for the object.
  remarks: To be added.
  syntax:
    content: public bool MatchesFilter { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)
  id: MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  langs:
  - csharp
  name: MatchesPredicate(PropertyFilterPredicate)
  nameWithType: IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.PropertyEditing
  summary: Used to determine whether this <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget"> is a match for a particular <xref:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate>.
  remarks: To be added.
  syntax:
    content: public bool MatchesPredicate (System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate);
    parameters:
    - id: predicate
      type: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate
      description: The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate"> to match against.
    return:
      type: System.Boolean
      description: '`true` if it there is a match between a property filter target and a property filter predicate; otherwise, `false`.'
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: ApplyFilter(PropertyFilter)
  nameWithType: IPropertyFilterTarget.ApplyFilter(PropertyFilter)
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(PropertyFilter)
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilter
  parent: System.Activities.Presentation.PropertyEditing
  isExternal: false
  name: PropertyFilter
  nameWithType: PropertyFilter
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilter
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: FilterApplied
  nameWithType: IPropertyFilterTarget.FilterApplied
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied
- uid: System.EventHandler{System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<PropertyFilterAppliedEventArgs>
  nameWithType: EventHandler<PropertyFilterAppliedEventArgs>
  fullName: System.EventHandler<System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs>
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: MatchesFilter
  nameWithType: IPropertyFilterTarget.MatchesFilter
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesFilter
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)
  parent: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget
  isExternal: false
  name: MatchesPredicate(PropertyFilterPredicate)
  nameWithType: IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)
  fullName: System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(PropertyFilterPredicate)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate
  parent: System.Activities.Presentation.PropertyEditing
  isExternal: false
  name: PropertyFilterPredicate
  nameWithType: PropertyFilterPredicate
  fullName: System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate
