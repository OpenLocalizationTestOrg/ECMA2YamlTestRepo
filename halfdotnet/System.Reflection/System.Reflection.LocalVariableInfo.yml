### YamlMime:ManagedReference
items:
- uid: System.Reflection.LocalVariableInfo
  id: LocalVariableInfo
  children:
  - System.Reflection.LocalVariableInfo.#ctor
  - System.Reflection.LocalVariableInfo.IsPinned
  - System.Reflection.LocalVariableInfo.LocalIndex
  - System.Reflection.LocalVariableInfo.LocalType
  - System.Reflection.LocalVariableInfo.ToString
  langs:
  - csharp
  name: LocalVariableInfo
  nameWithType: LocalVariableInfo
  fullName: System.Reflection.LocalVariableInfo
  type: Class
  summary: Discovers the attributes of a local variable and provides access to local variable metadata.
  remarks: "To get a list of local variables in a method, use the <xref:System.Reflection.MethodBody.LocalVariables%2A?displayProperty=fullName> property. Use the <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=fullName> method to obtain the <xref:System.Reflection.MethodBody> for a <xref:System.Reflection.MethodInfo> object.  \n  \n> [!NOTE]\n>  Local variable names are not persisted in metadata. In Microsoft intermediate language (MSIL), local variables are accessed by their position in the local variable signature."
  example:
  - "The following example defines a test method named `MethodBodyExample`, and displays its local variable information. The <xref:System.Reflection.MethodBase.GetMethodBody%2A> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method. The <xref:System.Reflection.MethodBody.LocalVariables%2A> property is then used to obtain a list of LocalVariableInfo objects and to display their types and index order.  \n  \n This code example is part of a larger example provided for the <xref:System.Reflection.MethodBody> class.  \n  \n [!CODE [MethodBody#2](../CodeSnippet/VS_Snippets_CLR/MethodBody#2)]  \n[!CODE [MethodBody#3](../CodeSnippet/VS_Snippets_CLR/MethodBody#3)]  \n[!CODE [MethodBody#5](../CodeSnippet/VS_Snippets_CLR/MethodBody#5)]  \n[!CODE [MethodBody#6](../CodeSnippet/VS_Snippets_CLR/MethodBody#6)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class LocalVariableInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.LocalVariableInfo.#ctor
  id: '#ctor'
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  name: LocalVariableInfo()
  nameWithType: LocalVariableInfo.LocalVariableInfo()
  fullName: System.Reflection.LocalVariableInfo.LocalVariableInfo()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Initializes a new instance of the <see cref="T:System.Reflection.LocalVariableInfo"> class.
  remarks: This constructor is invoked by derived classes during the construction of <xref:System.Reflection.LocalVariableInfo> objects.
  syntax:
    content: protected LocalVariableInfo ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.LocalVariableInfo.IsPinned
  id: IsPinned
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  name: IsPinned
  nameWithType: LocalVariableInfo.IsPinned
  fullName: System.Reflection.LocalVariableInfo.IsPinned
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets a <see cref="T:System.Boolean"> value that indicates whether the object referred to by the local variable is pinned in memory.
  remarks: In unsafe code, an object must be pinned before it can be referred to by an unmanaged pointer. While the referenced object is pinned, it cannot be moved by garbage collection.
  syntax:
    content: public virtual bool IsPinned { get; }
    return:
      type: System.Boolean
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.LocalVariableInfo.LocalIndex
  id: LocalIndex
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  name: LocalIndex
  nameWithType: LocalVariableInfo.LocalIndex
  fullName: System.Reflection.LocalVariableInfo.LocalIndex
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the index of the local variable within the method body.
  remarks: Index numbers are assigned to local variables in the order in which they are declared.
  syntax:
    content: public virtual int LocalIndex { get; }
    return:
      type: System.Int32
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.LocalVariableInfo.LocalType
  id: LocalType
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  name: LocalType
  nameWithType: LocalVariableInfo.LocalType
  fullName: System.Reflection.LocalVariableInfo.LocalType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the type of the local variable.
  remarks: To be added.
  syntax:
    content: public virtual Type LocalType { get; }
    return:
      type: System.Type
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.LocalVariableInfo.ToString
  id: ToString
  parent: System.Reflection.LocalVariableInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: LocalVariableInfo.ToString()
  fullName: System.Reflection.LocalVariableInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Returns a user-readable string that describes the local variable.
  remarks: To be added.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string that displays information about the local variable, including the type name, index, and pinned status.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Reflection.LocalVariableInfo.#ctor
  parent: System.Reflection.LocalVariableInfo
  isExternal: false
  name: LocalVariableInfo()
  nameWithType: LocalVariableInfo.LocalVariableInfo()
  fullName: System.Reflection.LocalVariableInfo.LocalVariableInfo()
- uid: System.Reflection.LocalVariableInfo.IsPinned
  parent: System.Reflection.LocalVariableInfo
  isExternal: false
  name: IsPinned
  nameWithType: LocalVariableInfo.IsPinned
  fullName: System.Reflection.LocalVariableInfo.IsPinned
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Reflection.LocalVariableInfo.LocalIndex
  parent: System.Reflection.LocalVariableInfo
  isExternal: false
  name: LocalIndex
  nameWithType: LocalVariableInfo.LocalIndex
  fullName: System.Reflection.LocalVariableInfo.LocalIndex
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.LocalVariableInfo.LocalType
  parent: System.Reflection.LocalVariableInfo
  isExternal: false
  name: LocalType
  nameWithType: LocalVariableInfo.LocalType
  fullName: System.Reflection.LocalVariableInfo.LocalType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.LocalVariableInfo.ToString
  parent: System.Reflection.LocalVariableInfo
  isExternal: false
  name: ToString()
  nameWithType: LocalVariableInfo.ToString()
  fullName: System.Reflection.LocalVariableInfo.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
