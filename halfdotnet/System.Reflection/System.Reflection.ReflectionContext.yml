### YamlMime:ManagedReference
items:
- uid: System.Reflection.ReflectionContext
  id: ReflectionContext
  children:
  - System.Reflection.ReflectionContext.#ctor
  - System.Reflection.ReflectionContext.GetTypeForObject(System.Object)
  - System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)
  - System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)
  langs:
  - csharp
  name: ReflectionContext
  nameWithType: ReflectionContext
  fullName: System.Reflection.ReflectionContext
  type: Class
  summary: Represents a context that can provide reflection objects.
  remarks: The purpose of this class is to provide a way for reflection code to be made aware when reflection objects originate in a context other than the default reflection context, so that operations on those objects can use that context. For example, reflection objects that originate with a <xref:System.Reflection.Context.CustomReflectionContext> object should be compared only with reflection objects that have the same origin. For more information, see the <xref:System.Reflection.Context.CustomReflectionContext> reference page.
  syntax:
    content: public abstract class ReflectionContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.ReflectionContext.#ctor
  id: '#ctor'
  parent: System.Reflection.ReflectionContext
  langs:
  - csharp
  name: ReflectionContext()
  nameWithType: ReflectionContext.ReflectionContext()
  fullName: System.Reflection.ReflectionContext.ReflectionContext()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Initializes a new instance of the <see cref="T:System.Reflection.ReflectionContext"> class.
  remarks: To be added.
  syntax:
    content: protected ReflectionContext ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)
  id: GetTypeForObject(System.Object)
  parent: System.Reflection.ReflectionContext
  langs:
  - csharp
  name: GetTypeForObject(Object)
  nameWithType: ReflectionContext.GetTypeForObject(Object)
  fullName: System.Reflection.ReflectionContext.GetTypeForObject(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the representation of the type of the specified object in this reflection context.
  remarks: To be added.
  syntax:
    content: public virtual System.Reflection.TypeInfo GetTypeForObject (object value);
    parameters:
    - id: value
      type: System.Object
      description: The object to represent.
    return:
      type: System.Reflection.TypeInfo
      description: An object that represents the type of the specified object.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)
  id: MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.ReflectionContext
  langs:
  - csharp
  name: MapAssembly(Assembly)
  nameWithType: ReflectionContext.MapAssembly(Assembly)
  fullName: System.Reflection.ReflectionContext.MapAssembly(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The external representation of the assembly to represent in this context.
    return:
      type: System.Reflection.Assembly
      description: The representation of the assembly in this reflection context.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)
  id: MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.ReflectionContext
  langs:
  - csharp
  name: MapType(TypeInfo)
  nameWithType: ReflectionContext.MapType(TypeInfo)
  fullName: System.Reflection.ReflectionContext.MapType(TypeInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the representation, in this reflection context, of a type represented by an object from another reflection context.
  remarks: To be added.
  syntax:
    content: public abstract System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);
    parameters:
    - id: type
      type: System.Reflection.TypeInfo
      description: The external representation of the type to represent in this context.
    return:
      type: System.Reflection.TypeInfo
      description: The representation of the type in this reflection context..
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Reflection.ReflectionContext.#ctor
  parent: System.Reflection.ReflectionContext
  isExternal: false
  name: ReflectionContext()
  nameWithType: ReflectionContext.ReflectionContext()
  fullName: System.Reflection.ReflectionContext.ReflectionContext()
- uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)
  parent: System.Reflection.ReflectionContext
  isExternal: false
  name: GetTypeForObject(Object)
  nameWithType: ReflectionContext.GetTypeForObject(Object)
  fullName: System.Reflection.ReflectionContext.GetTypeForObject(Object)
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)
  parent: System.Reflection.ReflectionContext
  isExternal: false
  name: MapAssembly(Assembly)
  nameWithType: ReflectionContext.MapAssembly(Assembly)
  fullName: System.Reflection.ReflectionContext.MapAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)
  parent: System.Reflection.ReflectionContext
  isExternal: false
  name: MapType(TypeInfo)
  nameWithType: ReflectionContext.MapType(TypeInfo)
  fullName: System.Reflection.ReflectionContext.MapType(TypeInfo)
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
- uid: System.Reflection.TypeInfo
  parent: System.Reflection
  isExternal: false
  name: TypeInfo
  nameWithType: TypeInfo
  fullName: System.Reflection.TypeInfo
