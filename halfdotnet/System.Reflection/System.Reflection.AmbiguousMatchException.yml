### YamlMime:ManagedReference
items:
- uid: System.Reflection.AmbiguousMatchException
  id: AmbiguousMatchException
  children:
  - System.Reflection.AmbiguousMatchException.#ctor
  - System.Reflection.AmbiguousMatchException.#ctor(System.String)
  - System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: AmbiguousMatchException
  nameWithType: AmbiguousMatchException
  fullName: System.Reflection.AmbiguousMatchException
  type: Class
  summary: The exception that is thrown when binding to a member results in more than one member matching the binding criteria. This class cannot be inherited.
  remarks: "`AmbiguousMatchException` uses the HRESULT COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.  \n  \n An `AmbiguousMatchException` is thrown when a member is invoked late-bound and multiple overloads satisfy the binding criteria, or when more than one member matches the binding criteria passed to a reflection method that can return only a single result (for example, <xref:System.Type.GetMethod%2A?displayProperty=fullName> or <xref:System.Type.GetProperty%2A?displayProperty=fullName>)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class AmbiguousMatchException : SystemException
  inheritance:
  - System.Object
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.AmbiguousMatchException.#ctor
  id: '#ctor'
  parent: System.Reflection.AmbiguousMatchException
  langs:
  - csharp
  name: AmbiguousMatchException()
  nameWithType: AmbiguousMatchException.AmbiguousMatchException()
  fullName: System.Reflection.AmbiguousMatchException.AmbiguousMatchException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException"> class with an empty message string and the root cause exception set to `null`.
  remarks: "`AmbiguousMatchException` inherits from <xref:System.Exception>. This constructor sets the properties of the `Exception` object as shown in the following table.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`|  \n|<xref:System.Exception.Message%2A>|The empty string (\"\").|"
  syntax:
    content: public AmbiguousMatchException ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.AmbiguousMatchException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.AmbiguousMatchException
  langs:
  - csharp
  name: AmbiguousMatchException(String)
  nameWithType: AmbiguousMatchException.AmbiguousMatchException(String)
  fullName: System.Reflection.AmbiguousMatchException.AmbiguousMatchException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException"> class with its message string set to the given message and the root cause exception set to `null`.
  remarks: "`AmbiguousMatchException` inherits from <xref:System.Exception>. This constructor sets the properties of the `Exception` object as shown in the following table.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`|  \n|<xref:System.Exception.Message%2A>|The  string.|"
  syntax:
    content: public AmbiguousMatchException (string message);
    parameters:
    - id: message
      type: System.String
      description: A string indicating the reason this exception was thrown.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Reflection.AmbiguousMatchException
  langs:
  - csharp
  name: AmbiguousMatchException(String,Exception)
  nameWithType: AmbiguousMatchException.AmbiguousMatchException(String,Exception)
  fullName: System.Reflection.AmbiguousMatchException.AmbiguousMatchException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Initializes a new instance of the <see cref="T:System.Reflection.AmbiguousMatchException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Reflection.AmbiguousMatchException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  example:
  - "The following example shows two classes, each named `Mymethod`. One class takes an integer and the other takes a string. If an integer is passed to `Mymethod`, the first class is used. If a string is passed, the second class is used. If it cannot be determined which `Mymethod` to use, `AmbiguousMatchException` is thrown.  \n  \n [!CODE [Classic AmbiguousMatchException.AmbiguousMatchException2 Example#1](../CodeSnippet/VS_Snippets_CLR_Classic/classic AmbiguousMatchException.AmbiguousMatchException2 Example#1)]"
  syntax:
    content: public AmbiguousMatchException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.Reflection.AmbiguousMatchException.#ctor
  parent: System.Reflection.AmbiguousMatchException
  isExternal: false
  name: AmbiguousMatchException()
  nameWithType: AmbiguousMatchException.AmbiguousMatchException()
  fullName: System.Reflection.AmbiguousMatchException.AmbiguousMatchException()
- uid: System.Reflection.AmbiguousMatchException.#ctor(System.String)
  parent: System.Reflection.AmbiguousMatchException
  isExternal: false
  name: AmbiguousMatchException(String)
  nameWithType: AmbiguousMatchException.AmbiguousMatchException(String)
  fullName: System.Reflection.AmbiguousMatchException.AmbiguousMatchException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)
  parent: System.Reflection.AmbiguousMatchException
  isExternal: false
  name: AmbiguousMatchException(String,Exception)
  nameWithType: AmbiguousMatchException.AmbiguousMatchException(String,Exception)
  fullName: System.Reflection.AmbiguousMatchException.AmbiguousMatchException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
