### YamlMime:ManagedReference
items:
- uid: System.Reflection.GenericParameterAttributes
  id: GenericParameterAttributes
  children:
  - System.Reflection.GenericParameterAttributes.Contravariant
  - System.Reflection.GenericParameterAttributes.Covariant
  - System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint
  - System.Reflection.GenericParameterAttributes.None
  - System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint
  - System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint
  - System.Reflection.GenericParameterAttributes.SpecialConstraintMask
  - System.Reflection.GenericParameterAttributes.VarianceMask
  langs:
  - csharp
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
  type: Enum
  summary: Describes the constraints on a generic type parameter of a generic type or method.
  remarks: The members of the GenericParameterAttributes enumeration are divided into two groups, the variance group and the special constraints group. To test a GenericParameterAttributes value for variance flags, first perform a bitwise AND operation with F:System.Reflection.GenericParameterAttributes.VarianceMask?qualifyHint=False&autoUpgrade=True. If the result is F:System.Reflection.GenericParameterAttributes.None?qualifyHint=False&autoUpgrade=True, there are no variance flags. Similarly, use F:System.Reflection.GenericParameterAttributes.SpecialConstraintMask?qualifyHint=False&autoUpgrade=True to test for constraint flags.
  example:
  - "The following code example defines a generic type `Test` with two type parameters. The second type parameter has a base class constraint and a reference type constraint. When the program executes, the constraints are examined using the P:System.Type.GenericParameterAttributes?qualifyHint=True&autoUpgrade=True property and the M:System.Type.GetGenericParameterConstraints?qualifyHint=True&autoUpgrade=True method.  \n  \n [!CODE [System.Type.GetGenericParameterConstraints#1](../../add/codesnippet/system.type.md)]"
  syntax:
    content: >-
      [System.Flags]

      public enum GenericParameterAttributes
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.GenericParameterAttributes.Contravariant
  id: Contravariant
  parent: System.Reflection.GenericParameterAttributes
  langs:
  - csharp
  name: Contravariant
  nameWithType: GenericParameterAttributes.Contravariant
  fullName: System.Reflection.GenericParameterAttributes.Contravariant
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: The generic type parameter is contravariant. A contravariant type parameter can appear as a parameter type in method signatures.
  syntax:
    content: Contravariant
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.GenericParameterAttributes.Covariant
  id: Covariant
  parent: System.Reflection.GenericParameterAttributes
  langs:
  - csharp
  name: Covariant
  nameWithType: GenericParameterAttributes.Covariant
  fullName: System.Reflection.GenericParameterAttributes.Covariant
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: The generic type parameter is covariant. A covariant type parameter can appear as the result type of a method, the type of a read-only field, a declared base type, or an implemented interface.
  syntax:
    content: Covariant
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint
  id: DefaultConstructorConstraint
  parent: System.Reflection.GenericParameterAttributes
  langs:
  - csharp
  name: DefaultConstructorConstraint
  nameWithType: GenericParameterAttributes.DefaultConstructorConstraint
  fullName: System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: A type can be substituted for the generic type parameter only if it has a parameterless constructor.
  syntax:
    content: DefaultConstructorConstraint
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.GenericParameterAttributes.None
  id: None
  parent: System.Reflection.GenericParameterAttributes
  langs:
  - csharp
  name: None
  nameWithType: GenericParameterAttributes.None
  fullName: System.Reflection.GenericParameterAttributes.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: There are no special flags.
  syntax:
    content: None
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint
  id: NotNullableValueTypeConstraint
  parent: System.Reflection.GenericParameterAttributes
  langs:
  - csharp
  name: NotNullableValueTypeConstraint
  nameWithType: GenericParameterAttributes.NotNullableValueTypeConstraint
  fullName: System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: A type can be substituted for the generic type parameter only if it is a value type and is not nullable.
  syntax:
    content: NotNullableValueTypeConstraint
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint
  id: ReferenceTypeConstraint
  parent: System.Reflection.GenericParameterAttributes
  langs:
  - csharp
  name: ReferenceTypeConstraint
  nameWithType: GenericParameterAttributes.ReferenceTypeConstraint
  fullName: System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: A type can be substituted for the generic type parameter only if it is a reference type.
  syntax:
    content: ReferenceTypeConstraint
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.GenericParameterAttributes.SpecialConstraintMask
  id: SpecialConstraintMask
  parent: System.Reflection.GenericParameterAttributes
  langs:
  - csharp
  name: SpecialConstraintMask
  nameWithType: GenericParameterAttributes.SpecialConstraintMask
  fullName: System.Reflection.GenericParameterAttributes.SpecialConstraintMask
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: 'Selects the combination of all special constraint flags. This value is the result of using logical OR to combine the following flags: F:System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint?qualifyHint=False&autoUpgrade=True, F:System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint?qualifyHint=False&autoUpgrade=True, and F:System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint?qualifyHint=False&autoUpgrade=True.'
  syntax:
    content: SpecialConstraintMask
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.GenericParameterAttributes.VarianceMask
  id: VarianceMask
  parent: System.Reflection.GenericParameterAttributes
  langs:
  - csharp
  name: VarianceMask
  nameWithType: GenericParameterAttributes.VarianceMask
  fullName: System.Reflection.GenericParameterAttributes.VarianceMask
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: 'Selects the combination of all variance flags. This value is the result of using logical OR to combine the following flags: F:System.Reflection.GenericParameterAttributes.Contravariant?qualifyHint=False&autoUpgrade=True and F:System.Reflection.GenericParameterAttributes.Covariant?qualifyHint=False&autoUpgrade=True.'
  syntax:
    content: VarianceMask
    return:
      type: System.Reflection.GenericParameterAttributes
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Reflection.GenericParameterAttributes.Contravariant
  parent: System.Reflection.GenericParameterAttributes
  isExternal: false
  name: Contravariant
  nameWithType: GenericParameterAttributes.Contravariant
  fullName: System.Reflection.GenericParameterAttributes.Contravariant
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes.Covariant
  parent: System.Reflection.GenericParameterAttributes
  isExternal: false
  name: Covariant
  nameWithType: GenericParameterAttributes.Covariant
  fullName: System.Reflection.GenericParameterAttributes.Covariant
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint
  parent: System.Reflection.GenericParameterAttributes
  isExternal: false
  name: DefaultConstructorConstraint
  nameWithType: GenericParameterAttributes.DefaultConstructorConstraint
  fullName: System.Reflection.GenericParameterAttributes.DefaultConstructorConstraint
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes.None
  parent: System.Reflection.GenericParameterAttributes
  isExternal: false
  name: None
  nameWithType: GenericParameterAttributes.None
  fullName: System.Reflection.GenericParameterAttributes.None
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint
  parent: System.Reflection.GenericParameterAttributes
  isExternal: false
  name: NotNullableValueTypeConstraint
  nameWithType: GenericParameterAttributes.NotNullableValueTypeConstraint
  fullName: System.Reflection.GenericParameterAttributes.NotNullableValueTypeConstraint
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint
  parent: System.Reflection.GenericParameterAttributes
  isExternal: false
  name: ReferenceTypeConstraint
  nameWithType: GenericParameterAttributes.ReferenceTypeConstraint
  fullName: System.Reflection.GenericParameterAttributes.ReferenceTypeConstraint
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes.SpecialConstraintMask
  parent: System.Reflection.GenericParameterAttributes
  isExternal: false
  name: SpecialConstraintMask
  nameWithType: GenericParameterAttributes.SpecialConstraintMask
  fullName: System.Reflection.GenericParameterAttributes.SpecialConstraintMask
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
- uid: System.Reflection.GenericParameterAttributes.VarianceMask
  parent: System.Reflection.GenericParameterAttributes
  isExternal: false
  name: VarianceMask
  nameWithType: GenericParameterAttributes.VarianceMask
  fullName: System.Reflection.GenericParameterAttributes.VarianceMask
- uid: System.Reflection.GenericParameterAttributes
  parent: System.Reflection
  isExternal: false
  name: GenericParameterAttributes
  nameWithType: GenericParameterAttributes
  fullName: System.Reflection.GenericParameterAttributes
