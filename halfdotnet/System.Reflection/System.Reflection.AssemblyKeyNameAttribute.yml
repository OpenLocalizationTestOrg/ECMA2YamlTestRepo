### YamlMime:ManagedReference
items:
- uid: System.Reflection.AssemblyKeyNameAttribute
  id: AssemblyKeyNameAttribute
  children:
  - System.Reflection.AssemblyKeyNameAttribute.#ctor(System.String)
  - System.Reflection.AssemblyKeyNameAttribute.KeyName
  langs:
  - csharp
  name: AssemblyKeyNameAttribute
  nameWithType: AssemblyKeyNameAttribute
  fullName: System.Reflection.AssemblyKeyNameAttribute
  type: Class
  summary: Specifies the name of a key container within the CSP containing the key pair used to generate a strong name.
  remarks: "When building a strong-named assembly, the author must supply either this attribute or <xref:System.Reflection.AssemblyKeyFileAttribute>.  \n  \n An example of the syntax is `[assembly:AssemblyKeyNameAttribute(\"myContainer\")]`.  \n  \n The classes in `System.Runtime.CompilerServices` are intended for use by compilers only. Do not use them unless you are building a compiler.  \n  \n For more information, see the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class AssemblyKeyNameAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.AssemblyKeyNameAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.AssemblyKeyNameAttribute
  langs:
  - csharp
  name: AssemblyKeyNameAttribute(String)
  nameWithType: AssemblyKeyNameAttribute.AssemblyKeyNameAttribute(String)
  fullName: System.Reflection.AssemblyKeyNameAttribute.AssemblyKeyNameAttribute(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Initializes a new instance of the <see cref="T:System.Reflection.AssemblyKeyNameAttribute"> class with the name of the container holding the key pair used to generate a strong name for the assembly being attributed.
  remarks: To be added.
  syntax:
    content: public AssemblyKeyNameAttribute (string keyName);
    parameters:
    - id: keyName
      type: System.String
      description: The name of the container containing the key pair.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.AssemblyKeyNameAttribute.KeyName
  id: KeyName
  parent: System.Reflection.AssemblyKeyNameAttribute
  langs:
  - csharp
  name: KeyName
  nameWithType: AssemblyKeyNameAttribute.KeyName
  fullName: System.Reflection.AssemblyKeyNameAttribute.KeyName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Gets the name of the container having the key pair that is used to generate a strong name for the attributed assembly.
  remarks: To be added.
  syntax:
    content: public string KeyName { get; }
    return:
      type: System.String
      description: To be added.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Reflection.AssemblyKeyNameAttribute.#ctor(System.String)
  parent: System.Reflection.AssemblyKeyNameAttribute
  isExternal: false
  name: AssemblyKeyNameAttribute(String)
  nameWithType: AssemblyKeyNameAttribute.AssemblyKeyNameAttribute(String)
  fullName: System.Reflection.AssemblyKeyNameAttribute.AssemblyKeyNameAttribute(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.AssemblyKeyNameAttribute.KeyName
  parent: System.Reflection.AssemblyKeyNameAttribute
  isExternal: false
  name: KeyName
  nameWithType: AssemblyKeyNameAttribute.KeyName
  fullName: System.Reflection.AssemblyKeyNameAttribute.KeyName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
