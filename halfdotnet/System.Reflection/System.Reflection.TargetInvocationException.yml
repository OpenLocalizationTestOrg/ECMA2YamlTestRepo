### YamlMime:ManagedReference
items:
- uid: System.Reflection.TargetInvocationException
  id: TargetInvocationException
  children:
  - System.Reflection.TargetInvocationException.#ctor(System.Exception)
  - System.Reflection.TargetInvocationException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: TargetInvocationException
  nameWithType: TargetInvocationException
  fullName: System.Reflection.TargetInvocationException
  type: Class
  summary: The exception that is thrown by methods invoked through reflection. This class cannot be inherited.
  remarks: "For more information, see <xref:System.Reflection.MethodBase.Invoke%2A>.  \n  \n `TargetInvocationException` uses the HRESULT COR_E_TARGETINVOCATION which has the value 0x80131604.  \n  \n When created, the `TargetInvocationException` is passed a reference to the exception thrown by the method invoked through reflection. The <xref:System.Exception.InnerException%2A> property holds the underlying exception."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class TargetInvocationException : ApplicationException
  inheritance:
  - System.Object
  - System.Exception
  - System.ApplicationException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.TargetInvocationException.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Reflection.TargetInvocationException
  langs:
  - csharp
  name: TargetInvocationException(Exception)
  nameWithType: TargetInvocationException.TargetInvocationException(Exception)
  fullName: System.Reflection.TargetInvocationException.TargetInvocationException(Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Initializes a new instance of the <see cref="T:System.Reflection.TargetInvocationException"> class with a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Reflection.TargetInvocationException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public TargetInvocationException (Exception inner);
    parameters:
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Reflection.TargetInvocationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Reflection.TargetInvocationException
  langs:
  - csharp
  name: TargetInvocationException(String,Exception)
  nameWithType: TargetInvocationException.TargetInvocationException(String,Exception)
  fullName: System.Reflection.TargetInvocationException.TargetInvocationException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: Initializes a new instance of the <see cref="T:System.Reflection.TargetInvocationException"> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.Reflection.TargetInvocationException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public TargetInvocationException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: inner
      type: System.Exception
      description: The exception that is the cause of the current exception. If the  parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ApplicationException
  isExternal: false
  name: System.ApplicationException
- uid: System.Reflection.TargetInvocationException.#ctor(System.Exception)
  parent: System.Reflection.TargetInvocationException
  isExternal: false
  name: TargetInvocationException(Exception)
  nameWithType: TargetInvocationException.TargetInvocationException(Exception)
  fullName: System.Reflection.TargetInvocationException.TargetInvocationException(Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Reflection.TargetInvocationException.#ctor(System.String,System.Exception)
  parent: System.Reflection.TargetInvocationException
  isExternal: false
  name: TargetInvocationException(String,Exception)
  nameWithType: TargetInvocationException.TargetInvocationException(String,Exception)
  fullName: System.Reflection.TargetInvocationException.TargetInvocationException(String,Exception)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
