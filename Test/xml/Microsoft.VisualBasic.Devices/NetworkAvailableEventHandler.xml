<Type Name="NetworkAvailableEventHandler" FullName="Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler">
  <TypeSignature Language="C#" Value="public delegate void NetworkAvailableEventHandler(object sender, NetworkAvailableEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed NetworkAvailableEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">A &lt;see cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs"&gt; object that contains the event data.</param>
    <summary>Represents the method that will handle the `My.Application.NetworkAvailabilityChanged` or `My.Computer.Network.NetworkAvailabilityChanged` event.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In Visual Basic, you do not need to work with this delegate explicitly. For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged?displayProperty=fullName> event or the <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged?displayProperty=fullName> event.  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>