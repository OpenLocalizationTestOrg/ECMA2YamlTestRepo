<Type Name="PropertyInformation" FullName="System.Configuration.PropertyInformation">
  <TypeSignature Language="C#" Value="public sealed class PropertyInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyInformation extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains meta-information on an individual property within the configuration. This type cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The PropertyInformation object contains the meta-information of an individual property within the configuration. This object can be used when validating and changing the properties of an individual attribute.  
  
 The PropertyInformation object is derived from the associated <xref:System.Configuration.PropertyInformationCollection> object. The <xref:System.Configuration.PropertyInformationCollection> object is derived from the associated <xref:System.Configuration.ElementInformation> object.  
  
   
  
## Examples  
 The following code example demonstrates how to use the PropertyInformation type.  
  
 [!CODE [System.Configuration.PropertyInformation#1](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;xref:System.ComponentModel.TypeConverter&gt; object related to the configuration attribute.</summary>
        <value>A &lt;xref:System.ComponentModel.TypeConverter&gt; object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.ComponentModel.TypeConverter> object is used to guide how the value of an attribute can be modified.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an object containing the default value related to a configuration attribute.</summary>
        <value>An object containing the default value of the configuration attribute.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the DefaultValue property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#2](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the description of the object that corresponds to a configuration attribute.</summary>
        <value>The description of the configuration attribute.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public bool IsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value specifying whether the configuration attribute is a key.</summary>
        <value>`true` if the configuration attribute is a key; otherwise, `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the IsKey property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#3](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocked">
      <MemberSignature Language="C#" Value="public bool IsLocked { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value specifying whether the configuration attribute is locked.</summary>
        <value>`true` if the &lt;see cref="T:System.Configuration.PropertyInformation"&gt; object is locked; otherwise, `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IsLocked property returns `true` when the related element is locked by the <xref:System.Configuration.ConfigurationElement.LockAttributes%2A> or <xref:System.Configuration.ConfigurationElement.LockAllAttributesExcept%2A> property.  
  
   
  
## Examples  
 The following code example demonstrates how to use the IsLocked property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#4](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModified">
      <MemberSignature Language="C#" Value="public bool IsModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value specifying whether the configuration attribute has been modified.</summary>
        <value>`true` if the &lt;see cref="T:System.Configuration.PropertyInformation"&gt; object has been modified; otherwise, `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the IsModified property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#5](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public bool IsRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value specifying whether the configuration attribute is required.</summary>
        <value>`true` if the &lt;see cref="T:System.Configuration.PropertyInformation"&gt; object is required; otherwise, `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the IsRequired property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#6](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the line number in the configuration file related to the configuration attribute.</summary>
        <value>A line number of the configuration file.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The line number associated with the source configuration file. Zero is returned when there is no source configuration file.  
  
   
  
## Examples  
 The following code example demonstrates how to use the LineNumber property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#7](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the object that corresponds to a configuration attribute.</summary>
        <value>The name of the &lt;see cref="T:System.Configuration.PropertyInformation"&gt; object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Configuration.PropertyInformation.LineNumber%2A> property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#8](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the source file that corresponds to a configuration attribute.</summary>
        <value>The source file of the &lt;see cref="T:System.Configuration.PropertyInformation"&gt; object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the Source property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#9](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;see cref="T:System.Type"&gt; of the object that corresponds to a configuration attribute.</summary>
        <value>The &lt;see cref="T:System.Type"&gt; of the &lt;xref:System.Configuration.PropertyInformation&gt; object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the Type property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#10](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validator">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationValidatorBase Validator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationValidatorBase Validator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationValidatorBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a &lt;see cref="T:System.Configuration.ConfigurationValidatorBase"&gt; object related to the configuration attribute.</summary>
        <value>A &lt;see cref="T:System.Configuration.ConfigurationValidatorBase"&gt; object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the returned <xref:System.Configuration.ConfigurationValidatorBase> object to validate the value configuration attribute.  
  
   
  
## Examples  
 The following code example demonstrates how to use the <xref:System.Configuration.PropertyInformation.Type%2A> property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#11](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets an object containing the value related to a configuration attribute.</summary>
        <value>An object containing the value for the &lt;see cref="T:System.Configuration.PropertyInformation"&gt; object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to use the Value property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#12](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueOrigin">
      <MemberSignature Language="C#" Value="public System.Configuration.PropertyValueOrigin ValueOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.PropertyValueOrigin ValueOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.PropertyValueOrigin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a &lt;see cref="T:System.Configuration.PropertyValueOrigin"&gt; object related to the configuration attribute.</summary>
        <value>A &lt;see cref="T:System.Configuration.PropertyValueOrigin"&gt; object.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Configuration.PropertyValueOrigin> object describes how the value of the configuration attribute was determined.  
  
   
  
## Examples  
 The following code example demonstrates how to use the ValueOrigin property. This code example is part of a larger example provided for the <xref:System.Configuration.PropertyInformation> class.  
  
 [!CODE [System.Configuration.PropertyInformation#13](../CodeSnippet/VS_Snippets_WebNet/System.Configuration.PropertyInformation#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>