<Type Name="CodeAccessSecurityAttribute" FullName="System.Security.Permissions.CodeAccessSecurityAttribute">
  <TypeSignature Language="C#" Value="public abstract class CodeAccessSecurityAttribute : System.Security.Permissions.SecurityAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CodeAccessSecurityAttribute extends System.Security.Permissions.SecurityAttribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Permissions.SecurityAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies the base attribute class for code access security.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This attribute class associates a <xref:System.Security.Permissions.SecurityAction>, for example, `Demand`, with a custom security attribute.  
  
 The types that derive from CodeAccessSecurityAttribute are used to help restrict access to resources or securable operations.  
  
 The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time. Security attributes are used only for declarative security. Use the corresponding permission class derived from <xref:System.Security.CodeAccessPermission> for imperative security.  
  
   
  
## Examples  
 The following example shows a permission attribute derived from the CodeAccessSecurityAttribute class.  
  
 [!CODE [System.Security.Permissions.CodeAccessSecurityAttribute#1](../CodeSnippet/VS_Snippets_CLR_System/system.Security.Permissions.CodeAccessSecurityAttribute#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeAccessSecurityAttribute (System.Security.Permissions.SecurityAction action);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.SecurityAction action) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
      </Parameters>
      <Docs>
        <param name="action">One of the &lt;see cref="T:System.Security.Permissions.SecurityAction"&gt; values.</param>
        <summary>Initializes a new instance of &lt;see cref="T:System.Security.Permissions.CodeAccessSecurityAttribute"&gt; with the specified &lt;xref:System.Security.Permissions.SecurityAction&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You cannot create an instance of this class. You must inherit from this class to make use of its functionality.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>