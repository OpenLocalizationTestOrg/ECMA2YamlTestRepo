<Type Name="EnvironmentPermissionAccess" FullName="System.Security.Permissions.EnvironmentPermissionAccess">
  <TypeSignature Language="C#" Value="public enum EnvironmentPermissionAccess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EnvironmentPermissionAccess extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies access to environment variables.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This enumeration is used by <xref:System.Security.Permissions.EnvironmentPermission>.  
  
> [!NOTE]
>  Although F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess?qualifyHint=False&autoUpgrade=True and F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess?qualifyHint=False&autoUpgrade=True appear in EnvironmentPermissionAccess, they are not valid for use as the parameter for M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)?qualifyHint=False&autoUpgrade=True because they describe no environment variable access types or all environment variable access types, respectively, and M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)?qualifyHint=False&autoUpgrade=True expects a single environment variable access type.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllAccess">
      <MemberSignature Language="C#" Value="AllAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.EnvironmentPermissionAccess AllAccess = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.EnvironmentPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>F:System.Security.Permissions.EnvironmentPermissionAccess.Read?qualifyHint=False&amp;autoUpgrade=True and F:System.Security.Permissions.EnvironmentPermissionAccess.Write?qualifyHint=False&amp;autoUpgrade=True access to environment variables. F:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess?qualifyHint=False&amp;autoUpgrade=True represents multiple EnvironmentPermissionAccess values and causes an T:System.ArgumentException?qualifyHint=False&amp;autoUpgrade=True when used as the  parameter for the M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)?qualifyHint=False&amp;autoUpgrade=True method, which expects a single value.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoAccess">
      <MemberSignature Language="C#" Value="NoAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.EnvironmentPermissionAccess NoAccess = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.EnvironmentPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>No access to environment variables. F:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess?qualifyHint=False&amp;autoUpgrade=True represents no valid EnvironmentPermissionAccess values and causes an T:System.ArgumentException?qualifyHint=False&amp;autoUpgrade=True when used as the parameter for M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)?qualifyHint=False&amp;autoUpgrade=True, which expects a single value.</summary>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="Read" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.EnvironmentPermissionAccess Read = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.EnvironmentPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Only read access to environment variables is specified. Changing, deleting and creating environment variables is not included in this access level.</summary>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="Write" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.EnvironmentPermissionAccess Write = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.EnvironmentPermissionAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Only write access to environment variables is specified. Write access includes creating and deleting environment variables as well as changing existing values. Reading environment variables is not included in this access level.</summary>
      </Docs>
    </Member>
  </Members>
</Type>