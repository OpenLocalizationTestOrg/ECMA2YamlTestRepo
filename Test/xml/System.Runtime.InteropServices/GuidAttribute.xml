<Type Name="GuidAttribute" FullName="System.Runtime.InteropServices.GuidAttribute">
  <TypeSignature Language="C#" Value="public sealed class GuidAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GuidAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Supplies an explicit &lt;xref:System.Guid?displayProperty=fullName&gt; when an automatic GUID is undesirable.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can apply this attribute to assemblies, interfaces, classes, enumerations, structures, or delegates, although the [Tlbimp.exe (Type Library Importer)](../Topic/Tlbimp.exe%20\(Type%20Library%20Importer\).md) can apply it for you when it imports a type library.  
  
 The string passed to the attribute must be in a format that is an acceptable constructor argument for the type <xref:System.Guid>. To avoid conflicts with the type <xref:System.Guid>, use the long name GuidAttribute explicitly. Only use an explicit GUID when a type must have a specific GUID. If the attribute is omitted, a GUID is assigned automatically.  
  
   
  
## Examples  
 The following example demonstrates how to apply the GuidAttribute to a class that is exported to COM with a fixed GUID.  
  
 [!CODE [Classic GuidAttribute Example#1](../CodeSnippet/VS_Snippets_CLR_Classic/classic GuidAttribute Example#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GuidAttribute (string guid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string guid) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="guid">The &lt;see cref="T:System.Guid"&gt; to be assigned.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Runtime.InteropServices.GuidAttribute"&gt; class with the specified GUID.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;see cref="T:System.Guid"&gt; of the class.</summary>
        <value>The &lt;see cref="T:System.Guid"&gt; of the class.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>