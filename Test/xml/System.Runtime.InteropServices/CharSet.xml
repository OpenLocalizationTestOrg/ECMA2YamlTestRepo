<Type Name="CharSet" FullName="System.Runtime.InteropServices.CharSet">
  <TypeSignature Language="C#" Value="public enum CharSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CharSet extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Dictates which character set marshaled strings should use.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Because there are several unmanaged string types and only one managed string type, you must use a character set to specify how managed strings should be marshaled to unmanaged code. This enumeration, which provides character set options, is used by <xref:System.Runtime.InteropServices.DllImportAttribute> and <xref:System.Runtime.InteropServices.StructLayoutAttribute>. For a detailed description of the string marshaling and name matching behavior associated with this enumeration, see [Specifying a Character Set](../Topic/Specifying%20a%20Character%20Set.md).  
  
   
  
## Examples  
 The following code example shows how to specify a CharSet enumeration value when applying the <xref:System.Runtime.InteropServices.StructLayoutAttribute> to a managed definition.  
  
 [!CODE [System.Runtime.InteropServices.CharSet#1](../CodeSnippet/VS_Snippets_CLR_System/system.runtime.interopservices.charset#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Ansi">
      <MemberSignature Language="C#" Value="Ansi" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CharSet Ansi = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Marshal strings as multiple-byte character strings.</summary>
      </Docs>
    </Member>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CharSet Auto = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Automatically marshal strings appropriately for the target operating system. The default is F:System.Runtime.InteropServices.CharSet.Unicode?qualifyHint=False&amp;autoUpgrade=True on Windows NT, Windows 2000, Windows XP, and the Windows Server 2003 family; the default is F:System.Runtime.InteropServices.CharSet.Ansi?qualifyHint=False&amp;autoUpgrade=True on Windows 98 and Windows Me. Although the common language runtime default is F:System.Runtime.InteropServices.CharSet.Auto?qualifyHint=False&amp;autoUpgrade=True, languages may override this default. For example, by default C# marks all methods and types as F:System.Runtime.InteropServices.CharSet.Ansi?qualifyHint=False&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CharSet None = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This value is obsolete and has the same behavior as F:System.Runtime.InteropServices.CharSet.Ansi?qualifyHint=True&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="Unicode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.InteropServices.CharSet Unicode = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.CharSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Marshal strings as Unicode 2-byte characters.</summary>
      </Docs>
    </Member>
  </Members>
</Type>