<Type Name="IconBitmapDecoder" FullName="System.Windows.Media.Imaging.IconBitmapDecoder">
  <TypeSignature Language="C#" Value="public sealed class IconBitmapDecoder : System.Windows.Media.Imaging.BitmapDecoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IconBitmapDecoder extends System.Windows.Media.Imaging.BitmapDecoder" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Imaging.BitmapDecoder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines a specialized decoder for icon (.ico) encoded images.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconBitmapDecoder (System.IO.Stream bitmapStream, System.Windows.Media.Imaging.BitmapCreateOptions createOptions, System.Windows.Media.Imaging.BitmapCacheOption cacheOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream bitmapStream, valuetype System.Windows.Media.Imaging.BitmapCreateOptions createOptions, valuetype System.Windows.Media.Imaging.BitmapCacheOption cacheOption) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bitmapStream" Type="System.IO.Stream" />
        <Parameter Name="createOptions" Type="System.Windows.Media.Imaging.BitmapCreateOptions" />
        <Parameter Name="cacheOption" Type="System.Windows.Media.Imaging.BitmapCacheOption" />
      </Parameters>
      <Docs>
        <param name="bitmapStream">The bitmap stream to decode.</param>
        <param name="createOptions">Initialization options for the bitmap image.</param>
        <param name="cacheOption">The cache method to use for the bitmap image.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Windows.Media.Imaging.IconBitmapDecoder"&gt; class from the specified file stream, with the specified  and .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the <xref:System.Windows.Media.Imaging.BitmapCacheOption> cache option if you wish to close the  after the bitmap is created. The default <xref:System.Windows.Media.Imaging.BitmapCacheOption> cache option retains access to the stream until the bitmap is needed and cleanup is handled by the garbage collector.  
  
   
  
## Examples  
 The following code example demonstrates how to create an instance of and use a <xref:System.Windows.Media.Imaging.GifBitmapDecoder> from a file stream.  
  
 [!code-cpp[GifBitmapDecoderEncoder#1](../../add/codesnippet/CPP/gifencoderdecoder/GifEncoderDecoder.cpp#1)]
 [!code-vb[GifBitmapDecoderEncoder#1](../../add/codesnippet/VisualBasic/GifEncoderDecoder/GifEncoderDecoder.vb#1)]
 [!code-cs[GifBitmapDecoderEncoder#1](../../add/codesnippet/CSharp/GifEncoderDecoder/GifEncoderDecoder.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconBitmapDecoder (Uri bitmapUri, System.Windows.Media.Imaging.BitmapCreateOptions createOptions, System.Windows.Media.Imaging.BitmapCacheOption cacheOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri bitmapUri, valuetype System.Windows.Media.Imaging.BitmapCreateOptions createOptions, valuetype System.Windows.Media.Imaging.BitmapCacheOption cacheOption) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bitmapUri" Type="System.Uri" />
        <Parameter Name="createOptions" Type="System.Windows.Media.Imaging.BitmapCreateOptions" />
        <Parameter Name="cacheOption" Type="System.Windows.Media.Imaging.BitmapCacheOption" />
      </Parameters>
      <Docs>
        <param name="bitmapUri">The &lt;xref:System.Uri&gt; that identifies the bitmap to decode.</param>
        <param name="createOptions">Initialization options for the bitmap image.</param>
        <param name="cacheOption">The cache method to use for the bitmap image.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Windows.Media.Imaging.IconBitmapDecoder"&gt; class from the specified &lt;xref:System.Uri&gt;, with the specified  and .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to create an instance of and use a <xref:System.Windows.Media.Imaging.GifBitmapDecoder> from a <xref:System.Uri>.  
  
 [!code-cpp[GifBitmapDecoderEncoder#5](../../add/codesnippet/CPP/gifencoderdecoder/GifEncoderDecoder.cpp#5)]
 [!code-vb[GifBitmapDecoderEncoder#5](../../add/codesnippet/VisualBasic/GifEncoderDecoder/GifEncoderDecoder.vb#5)]
 [!code-cs[GifBitmapDecoderEncoder#5](../../add/codesnippet/CSharp/GifEncoderDecoder/GifEncoderDecoder.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>