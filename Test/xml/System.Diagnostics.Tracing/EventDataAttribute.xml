<Type Name="EventDataAttribute" FullName="System.Diagnostics.Tracing.EventDataAttribute">
  <TypeSignature Language="C#" Value="public class EventDataAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventDataAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies a type to be passed to the &lt;xref:System.Diagnostics.Tracing.EventSource.Write%2A&gt; method.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.Tracing.EventSource.Write%2A> requires T to be an anonymous type or marked with the EventDataAttribute attribute. In addition, the properties of  must be a supported property type; either a simple framework type such as <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.String>, <xref:System.Guid>, <xref:System.DateTime> or <xref:System.DateTimeOffset>, or an array of primitive types.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventDataAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Diagnostics.Tracing.EventDataAttribute"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or set the name to apply to an event if the event type or property is not explicitly named.</summary>
        <value>The name to apply to the event or property.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you call <xref:System.Diagnostics.Tracing.EventSource.Write%2A>, passing `null` for , the event name is automatically derived from Name or determined based on the name of type .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>