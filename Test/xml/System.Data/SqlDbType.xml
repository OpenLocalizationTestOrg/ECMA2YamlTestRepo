<Type Name="SqlDbType" FullName="System.Data.SqlDbType">
  <TypeSignature Language="C#" Value="public enum SqlDbType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SqlDbType extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies SQL Server-specific data type of a field, property, for use in a &lt;see cref="T:System.Data.SqlClient.SqlParameter"&gt;.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When setting command parameters, the SqlDbType and <xref:System.Data.DbType> are linked. Therefore, setting the `DbType` changes the `SqlDbType` to a supporting `SqlDbType`.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BigInt">
      <MemberSignature Language="C#" Value="BigInt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType BigInt = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Int64?qualifyHint=False&amp;autoUpgrade=True. A 64-bit signed integer.</summary>
      </Docs>
    </Member>
    <Member MemberName="Binary">
      <MemberSignature Language="C#" Value="Binary" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Binary = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Array?qualifyHint=False&amp;autoUpgrade=True of type T:System.Byte?qualifyHint=False&amp;autoUpgrade=True. A fixed-length stream of binary data ranging between 1 and 8,000 bytes.</summary>
      </Docs>
    </Member>
    <Member MemberName="Bit">
      <MemberSignature Language="C#" Value="Bit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Bit = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Boolean?qualifyHint=False&amp;autoUpgrade=True. An unsigned numeric value that can be 0, 1, or `null`.</summary>
      </Docs>
    </Member>
    <Member MemberName="Char">
      <MemberSignature Language="C#" Value="Char" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Char = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.String?qualifyHint=False&amp;autoUpgrade=True. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters.</summary>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="Date" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Date = int32(31)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Date data ranging in value from January 1,1 AD through December 31, 9999 AD.</summary>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="DateTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType DateTime = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.DateTime?qualifyHint=False&amp;autoUpgrade=True. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.</summary>
      </Docs>
    </Member>
    <Member MemberName="DateTime2">
      <MemberSignature Language="C#" Value="DateTime2" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType DateTime2 = int32(33)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Date and time data. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds.</summary>
      </Docs>
    </Member>
    <Member MemberName="DateTimeOffset">
      <MemberSignature Language="C#" Value="DateTimeOffset" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType DateTimeOffset = int32(34)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Date and time data with time zone awareness. Date value range is from January 1,1 AD through December 31, 9999 AD. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Time zone value range is -14:00 through +14:00.</summary>
      </Docs>
    </Member>
    <Member MemberName="Decimal">
      <MemberSignature Language="C#" Value="Decimal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Decimal = int32(5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Decimal?qualifyHint=False&amp;autoUpgrade=True. A fixed precision and scale numeric value between -10 &lt;sup&gt;38&lt;/sup&gt; -1 and 10 &lt;sup&gt;38&lt;/sup&gt; -1.</summary>
      </Docs>
    </Member>
    <Member MemberName="Float">
      <MemberSignature Language="C#" Value="Float" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Float = int32(6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Double?qualifyHint=False&amp;autoUpgrade=True. A floating point number within the range of -1.79E +308 through 1.79E +308.</summary>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="Image" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Image = int32(7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Array?qualifyHint=False&amp;autoUpgrade=True of type T:System.Byte?qualifyHint=False&amp;autoUpgrade=True. A variable-length stream of binary data ranging from 0 to 2 &lt;sup&gt;31&lt;/sup&gt; -1 (or 2,147,483,647) bytes.</summary>
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="Int" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Int = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Int32?qualifyHint=False&amp;autoUpgrade=True. A 32-bit signed integer.</summary>
      </Docs>
    </Member>
    <Member MemberName="Money">
      <MemberSignature Language="C#" Value="Money" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Money = int32(9)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Decimal?qualifyHint=False&amp;autoUpgrade=True. A currency value ranging from -2 &lt;sup&gt;63&lt;/sup&gt; (or -9,223,372,036,854,775,808) to 2 &lt;sup&gt;63&lt;/sup&gt; -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.</summary>
      </Docs>
    </Member>
    <Member MemberName="NChar">
      <MemberSignature Language="C#" Value="NChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType NChar = int32(10)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.String?qualifyHint=False&amp;autoUpgrade=True. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters.</summary>
      </Docs>
    </Member>
    <Member MemberName="NText">
      <MemberSignature Language="C#" Value="NText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType NText = int32(11)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.String?qualifyHint=False&amp;autoUpgrade=True. A variable-length stream of Unicode data with a maximum length of 2 &lt;sup&gt;30&lt;/sup&gt; - 1 (or 1,073,741,823) characters.</summary>
      </Docs>
    </Member>
    <Member MemberName="NVarChar">
      <MemberSignature Language="C#" Value="NVarChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType NVarChar = int32(12)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.String?qualifyHint=False&amp;autoUpgrade=True. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. Explicitly set the object when working with strings longer than 4,000 characters. Use F:System.Data.SqlDbType.NVarChar?qualifyHint=False&amp;autoUpgrade=True when the database column is `nvarchar(max)`.</summary>
      </Docs>
    </Member>
    <Member MemberName="Real">
      <MemberSignature Language="C#" Value="Real" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Real = int32(13)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Single?qualifyHint=False&amp;autoUpgrade=True. A floating point number within the range of -3.40E +38 through 3.40E +38.</summary>
      </Docs>
    </Member>
    <Member MemberName="SmallDateTime">
      <MemberSignature Language="C#" Value="SmallDateTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType SmallDateTime = int32(15)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.DateTime?qualifyHint=False&amp;autoUpgrade=True. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute.</summary>
      </Docs>
    </Member>
    <Member MemberName="SmallInt">
      <MemberSignature Language="C#" Value="SmallInt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType SmallInt = int32(16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Int16?qualifyHint=False&amp;autoUpgrade=True. A 16-bit signed integer.</summary>
      </Docs>
    </Member>
    <Member MemberName="SmallMoney">
      <MemberSignature Language="C#" Value="SmallMoney" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType SmallMoney = int32(17)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Decimal?qualifyHint=False&amp;autoUpgrade=True. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit.</summary>
      </Docs>
    </Member>
    <Member MemberName="Structured">
      <MemberSignature Language="C#" Value="Structured" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Structured = int32(30)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A special data type for specifying structured data contained in table-valued parameters.</summary>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="Text" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Text = int32(18)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.String?qualifyHint=False&amp;autoUpgrade=True. A variable-length stream of non-Unicode data with a maximum length of 2 &lt;sup&gt;31&lt;/sup&gt; -1 (or 2,147,483,647) characters.</summary>
      </Docs>
    </Member>
    <Member MemberName="Time">
      <MemberSignature Language="C#" Value="Time" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Time = int32(32)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Time data based on a 24-hour clock. Time value range is 00:00:00 through 23:59:59.9999999 with an accuracy of 100 nanoseconds. Corresponds to a SQL Server `time` value.</summary>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="Timestamp" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Timestamp = int32(19)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Array?qualifyHint=False&amp;autoUpgrade=True of type T:System.Byte?qualifyHint=False&amp;autoUpgrade=True. Automatically generated binary numbers, which are guaranteed to be unique within a database. `timestamp` is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes.</summary>
      </Docs>
    </Member>
    <Member MemberName="TinyInt">
      <MemberSignature Language="C#" Value="TinyInt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType TinyInt = int32(20)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Byte?qualifyHint=False&amp;autoUpgrade=True. An 8-bit unsigned integer.</summary>
      </Docs>
    </Member>
    <Member MemberName="Udt">
      <MemberSignature Language="C#" Value="Udt" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Udt = int32(29)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A [!INCLUDE[ssNoVersion](../../add/includes/ssnoversion-md.md)] user-defined type (UDT).</summary>
      </Docs>
    </Member>
    <Member MemberName="UniqueIdentifier">
      <MemberSignature Language="C#" Value="UniqueIdentifier" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType UniqueIdentifier = int32(14)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Guid?qualifyHint=False&amp;autoUpgrade=True. A globally unique identifier (or GUID).</summary>
      </Docs>
    </Member>
    <Member MemberName="VarBinary">
      <MemberSignature Language="C#" Value="VarBinary" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType VarBinary = int32(21)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Array?qualifyHint=False&amp;autoUpgrade=True of type T:System.Byte?qualifyHint=False&amp;autoUpgrade=True. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes.</summary>
      </Docs>
    </Member>
    <Member MemberName="VarChar">
      <MemberSignature Language="C#" Value="VarChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType VarChar = int32(22)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.String?qualifyHint=False&amp;autoUpgrade=True. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. Use F:System.Data.SqlDbType.VarChar?qualifyHint=False&amp;autoUpgrade=True when the database column is `varchar(max)`.</summary>
      </Docs>
    </Member>
    <Member MemberName="Variant">
      <MemberSignature Language="C#" Value="Variant" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Variant = int32(23)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>T:System.Object?qualifyHint=False&amp;autoUpgrade=True. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared.</summary>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="Xml" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.SqlDbType Xml = int32(25)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An XML value. Obtain the XML as a string using the M:System.Data.SqlClient.SqlDataReader.GetValue(System.Int32)?qualifyHint=False&amp;autoUpgrade=True method or P:System.Data.SqlTypes.SqlXml.Value?qualifyHint=False&amp;autoUpgrade=True property, or as an T:System.Xml.XmlReader?qualifyHint=False&amp;autoUpgrade=True by calling the M:System.Data.SqlTypes.SqlXml.CreateReader?qualifyHint=False&amp;autoUpgrade=True method.</summary>
      </Docs>
    </Member>
  </Members>
</Type>