<Type Name="UpdateException" FullName="System.Data.UpdateException">
  <TypeSignature Language="C#" Value="public class UpdateException : System.Data.DataException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit UpdateException extends System.Data.DataException" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.DataException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The exception that is thrown when modifications to object instances cannot be persisted to the data source.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about how to handle exceptions in your code, see <xref:System.Exception>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of &lt;see cref="T:System.Data.UpdateException"&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about how to handle exceptions in your code, see <xref:System.Exception>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The message that describes the error.</param>
        <summary>Initializes a new instance of &lt;see cref="T:System.Data.UpdateException"&gt; with a specialized error message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about how to handle exceptions in your code, see <xref:System.Exception>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UpdateException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The &lt;see cref="T:System.Runtime.Serialization.SerializationInfo"&gt; that holds the serialized object data about the exception being thrown.</param>
        <param name="context">The &lt;see cref="T:System.Runtime.Serialization.StreamingContext"&gt; that contains contextual information about the source or destination.</param>
        <summary>Initializes a new instance of &lt;see cref="T:System.Data.UpdateException"&gt; with serialized data.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about how to handle exceptions in your code, see <xref:System.Exception>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The error message that explains the reason for the exception.</param>
        <param name="innerException">The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.UpdateException"&gt; class that uses a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about how to handle exceptions in your code, see <xref:System.Exception>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateException (string message, Exception innerException, System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt; stateEntries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectStateEntry&gt; stateEntries) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="stateEntries" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt;" />
      </Parameters>
      <Docs>
        <param name="message">The error message that explains the reason for the exception.</param>
        <param name="innerException">The exception that is the cause of the current exception, or a null reference (`Nothing` in Visual Basic) if no inner exception is specified.</param>
        <param name="stateEntries">The collection of &lt;see cref="T:System.Data.Objects.ObjectStateEntry"&gt; objects.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.UpdateException"&gt; class that uses a specified error message, a reference to the inner exception, and an enumerable collection of &lt;xref:System.Data.Objects.ObjectStateEntry&gt; objects.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about how to handle exceptions in your code, see <xref:System.Exception>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateEntries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.ObjectStateEntry&gt; StateEntries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Objects.ObjectStateEntry&gt; StateEntries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Objects.ObjectStateEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;see cref="T:System.Data.Objects.ObjectStateEntry"&gt; objects for this &lt;xref:System.Data.UpdateException&gt;.</summary>
        <value>A collection of &lt;see cref="T:System.Data.Objects.ObjectStateEntry"&gt; objects comprised of either a single entity and 0 or more relationships, or 0 entities and 1 or more relationships.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information about how to handle exceptions in your code, see <xref:System.Exception>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>