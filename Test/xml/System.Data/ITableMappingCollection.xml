<Type Name="ITableMappingCollection" FullName="System.Data.ITableMappingCollection">
  <TypeSignature Language="C#" Value="public interface ITableMappingCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITableMappingCollection implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Contains a collection of TableMapping objects, and is implemented by the &lt;see cref="T:System.Data.Common.DataTableMappingCollection"&gt;, which is used in common by .NET Framework data providers.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ITableMappingCollection interface allows an inheriting class to implement a TableMapping collection. For more information, see [DataAdapter DataTable and DataColumn Mappings](../Topic/DataAdapter%20DataTable%20and%20DataColumn%20Mappings.md).  
  
 An application does not create an instance of the ITableMappingCollection interface directly, but creates an instance of a class that inherits ITableMappingCollection.  
  
 Classes that inherit ITableMappingCollection must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the ITableMappingCollection interface defines one implementation of the <xref:System.Data.ITableMappingCollection.RemoveAt%2A> method. In turn, the <xref:System.Data.Common.DataTableMappingCollection> class inherits this method, and defines two additional overloads of <xref:System.Data.Common.DataTableMappingCollection.RemoveAt%2A>.  
  
   
  
## Examples  
 The following example creates an instance of the derived class, <xref:System.Data.Common.DataTableMapping>, and adds it to a <xref:System.Data.Common.DataTableMappingCollection> collection. It then informs the user that the mapping was added to the collection.  
  
 [!CODE [Classic WebData DataTableMapping Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData DataTableMapping Example#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Data.ITableMapping Add (string sourceTableName, string dataSetTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.ITableMapping Add(string sourceTableName, string dataSetTableName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTableName" Type="System.String" />
        <Parameter Name="dataSetTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceTableName">The case-sensitive name of the source table.</param>
        <param name="dataSetTableName">The name of the &lt;see cref="T:System.Data.DataSet"&gt; table.</param>
        <summary>Adds a table mapping to the collection.</summary>
        <returns>A reference to the newly-mapped &lt;see cref="T:System.Data.ITableMapping"&gt; object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string sourceTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string sourceTableName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceTableName">The case-sensitive name of the source table.</param>
        <summary>Gets a value indicating whether the collection contains a table mapping with the specified source table name.</summary>
        <returns>`true` if a table mapping with the specified source table name exists, otherwise `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByDataSetTable">
      <MemberSignature Language="C#" Value="public System.Data.ITableMapping GetByDataSetTable (string dataSetTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.ITableMapping GetByDataSetTable(string dataSetTableName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSetTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSetTableName">The name of the `DataSet` table within the collection.</param>
        <summary>Gets the TableMapping object with the specified &lt;see cref="T:System.Data.DataSet"&gt; table name.</summary>
        <returns>The TableMapping object with the specified `DataSet` table name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string sourceTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string sourceTableName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceTableName">The case-sensitive name of the source table.</param>
        <summary>Gets the location of the &lt;see cref="T:System.Data.ITableMapping"&gt; object within the collection.</summary>
        <returns>The zero-based location of the &lt;see cref="T:System.Data.ITableMapping"&gt; object within the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index">The `SourceTable` name of the &lt;see cref="T:System.Data.ITableMapping"&gt;.</param>
        <summary>Gets or sets the instance of &lt;see cref="T:System.Data.ITableMapping"&gt; with the specified &lt;xref:System.Data.ITableMapping.SourceTable%2A&gt; name.</summary>
        <value>The instance of &lt;see cref="T:System.Data.ITableMapping"&gt; with the specified `SourceTable` name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (string sourceTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(string sourceTableName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceTableName">The case-sensitive name of the `SourceTable`.</param>
        <summary>Removes the &lt;see cref="T:System.Data.ITableMapping"&gt; object with the specified &lt;xref:System.Data.ITableMapping.SourceTable%2A&gt; name from the collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>