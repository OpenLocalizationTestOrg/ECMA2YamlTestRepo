<Type Name="DataSetDateTime" FullName="System.Data.DataSetDateTime">
  <TypeSignature Language="C#" Value="public enum DataSetDateTime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataSetDateTime extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Describes the serialization format for &lt;see cref="T:System.DateTime"&gt; columns in a &lt;xref:System.Data.DataSet&gt;.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 DataSetDateTime cannot be set on non-<xref:System.DateTime> columns. Setting the <xref:System.Data.DataColumn.DateTimeMode%2A> property with the default value F:System.Data.DataSetDateTime.UnspecifiedLocal?qualifyHint=False&autoUpgrade=Truel on non-T:System.DateTime?qualifyHint=False&autoUpgrade=True columns is permitted. Modifying the column data type from T:System.DateTime?qualifyHint=False&autoUpgrade=True to any other type resets the P:System.Data.DataColumn.DateTimeMode?qualifyHint=False&autoUpgrade=True to the default value F:System.Data.DataSetDateTime.UnspecifiedLocal?qualifyHint=False&autoUpgrade=True.  
  
 Checking schema for merging, Relations, and ForeignKeyConstraints can be performed between T:System.DateTime?qualifyHint=False&autoUpgrade=True columns with matching P:System.Data.DataColumn.DateTimeMode?qualifyHint=False&autoUpgrade=True properties. Otherwise the columns should be considered as non-matching on schema. The only exception is between F:System.Data.DataSetDateTime.Unspecified?qualifyHint=False&autoUpgrade=True and F:System.Data.DataSetDateTime.UnspecifiedLocal?qualifyHint=False&autoUpgrade=True. It is permitted to have a relation or a `ForeignKeyConstraint` between two `DateTime` columns with one in `Unspecified` and other in `UnspecifiedLocal`P:System.Data.DataColumn.DateTimeMode?qualifyHint=False&autoUpgrade=True.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Local">
      <MemberSignature Language="C#" Value="Local" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.DataSetDateTime Local = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>`DateTime` is always stored in Local. If F:System.Data.DataSetDateTime.Utc?qualifyHint=False&amp;autoUpgrade=True or F:System.Data.DataSetDateTime.Unspecified?qualifyHint=False&amp;autoUpgrade=True is assigned to a column in this mode, it is first converted into Local. Serialization in this mode is always performed in Local. There is an offset during serialization.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unspecified">
      <MemberSignature Language="C#" Value="Unspecified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.DataSetDateTime Unspecified = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>`DateTime` is always stored in Unspecified. If F:System.Data.DataSetDateTime.Local?qualifyHint=False&amp;autoUpgrade=True or F:System.Data.DataSetDateTime.Utc?qualifyHint=False&amp;autoUpgrade=True is assigned to a column in this mode, it is first converted into F:System.Data.DataSetDateTime.Unspecified?qualifyHint=False&amp;autoUpgrade=True. Serialization in this mode does not cause an offset.</summary>
      </Docs>
    </Member>
    <Member MemberName="UnspecifiedLocal">
      <MemberSignature Language="C#" Value="UnspecifiedLocal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.DataSetDateTime UnspecifiedLocal = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>`DateTime` is stored in Unspecified. If F:System.Data.DataSetDateTime.Local?qualifyHint=False&amp;autoUpgrade=True or F:System.Data.DataSetDateTime.Utc?qualifyHint=False&amp;autoUpgrade=True is assigned to a column in this mode, it is first converted into F:System.Data.DataSetDateTime.Unspecified?qualifyHint=False&amp;autoUpgrade=True. Serialization in this mode causes offset. This is the default behavior and is backward compatible. This option should be thought of as being Unspecified in storage but applying an offset that is similar to F:System.Data.DataSetDateTime.Local?qualifyHint=False&amp;autoUpgrade=True during serialization.</summary>
      </Docs>
    </Member>
    <Member MemberName="Utc">
      <MemberSignature Language="C#" Value="Utc" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.DataSetDateTime Utc = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>`DateTime` is stored in Universal Coordinated Time (UTC). If F:System.Data.DataSetDateTime.Local?qualifyHint=False&amp;autoUpgrade=True or F:System.Data.DataSetDateTime.Unspecified?qualifyHint=False&amp;autoUpgrade=True is assigned to a column in this mode, it is first converted into `Utc` format. Serialization in this mode is always performed in `Utc`. There is no offset during serialization.</summary>
      </Docs>
    </Member>
  </Members>
</Type>