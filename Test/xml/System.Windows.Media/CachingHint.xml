<Type Name="CachingHint" FullName="System.Windows.Media.CachingHint">
  <TypeSignature Language="C#" Value="public enum CachingHint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CachingHint extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies whether to cache tiled brush objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, [!INCLUDE[TLA2#tla_winclient](../../add/includes/tla2sharptla-winclient-md.md)] does not cache the rendered contents of <xref:System.Windows.Media.DrawingBrush> and <xref:System.Windows.Media.VisualBrush> objects. In static scenarios where neither the contents nor the use of the brush in the scene is changing, not caching provides a benefit because it conserves video memory. When a brush with static content is used in a non-static way, the default behavior of [!INCLUDE[TLA2#tla_winclient](../../add/includes/tla2sharptla-winclient-md.md)] is to re-render the entire content of the brush every frame, even though the content is unchanging. For example, this will happen when a static <xref:System.Windows.Media.DrawingBrush> or <xref:System.Windows.Media.VisualBrush> is mapped to the surface of a rotating 3D object. Re-rendering the static content can have a negative impact on performance.  
  
 By setting the <xref:System.Windows.Media.RenderOptions.CachingHint%2A> attached property on the brush to F:System.Windows.Media.CachingHint.Cache?qualifyHint=False&autoUpgrade=True, you can increase performance by using cached versions of the tiled brush objects.  
  
 The P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum?qualifyHint=False&autoUpgrade=True and P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum?qualifyHint=False&autoUpgrade=True property values are relative size values that determine when the T:System.Windows.Media.TileBrush?qualifyHint=False&autoUpgrade=True object should be regenerated due to changes in scale. For example, by setting the P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum?qualifyHint=False&autoUpgrade=True property to 2.0, the cache for the T:System.Windows.Media.TileBrush?qualifyHint=False&autoUpgrade=True only needs to be regenerated when its size exceeds twice the size of the current cache.  
  
   
  
## Examples  
 The following example shows how to use the caching hint option for a T:System.Windows.Media.DrawingBrush?qualifyHint=False&autoUpgrade=True.  
  
 [!code-cs[RenderOptions#RenderOptionsSnippet3](../../add/codesnippet/CSharp/RenderOptionsSnippets/Window1.xaml.cs#renderoptionssnippet3)]
 [!code-vb[RenderOptions#RenderOptionsSnippet3](../../add/codesnippet/VisualBasic/renderoptionssnippets/window1.xaml.vb#renderoptionssnippet3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="Cache" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.CachingHint Cache = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CachingHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cache the tiled brush objects in an off-screen buffer, using the caching hints specified by the T:System.Windows.Media.RenderOptions?qualifyHint=False&amp;autoUpgrade=True settings.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unspecified">
      <MemberSignature Language="C#" Value="Unspecified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Media.CachingHint Unspecified = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CachingHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>No caching hints are specified.</summary>
      </Docs>
    </Member>
  </Members>
</Type>