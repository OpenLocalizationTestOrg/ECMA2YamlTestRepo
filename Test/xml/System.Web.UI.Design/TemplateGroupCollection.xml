<Type Name="TemplateGroupCollection" FullName="System.Web.UI.Design.TemplateGroupCollection">
  <TypeSignature Language="C#" Value="public sealed class TemplateGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents a collection of &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; objects within a control designer. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.UI.Design.ControlDesigner> class, and any derived class, defines the <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> property as a TemplateGroupCollection object. The TemplateGroupCollection property is typically used only by a design host such as [!INCLUDE[vsprvslong](../../add/includes/vsprvslong-md.md)].  
  
 The collection dynamically increases in size as objects are added. Indexes in this collection are zero-based. Use the <xref:System.Web.UI.Design.TemplateGroupCollection.Count%2A> property to determine how many groups are in the collection.  
  
 Additionally, use the TemplateGroupCollection methods and properties to provide the following functionality:  
  
-   The <xref:System.Web.UI.Design.TemplateGroupCollection.Add%2A> method to add a single group to the collection.  
  
-   The <xref:System.Web.UI.Design.TemplateGroupCollection.Insert%2A> method to add a group at a particular index within the collection.  
  
-   The <xref:System.Web.UI.Design.TemplateGroupCollection.Remove%2A> method to remove a group.  
  
-   The <xref:System.Web.UI.Design.TemplateGroupCollection.RemoveAt%2A> method to remove the group at a particular index.  
  
-   The <xref:System.Web.UI.Design.TemplateGroupCollection.Contains%2A> method to determine whether a particular group is already in the collection.  
  
-   The <xref:System.Web.UI.Design.TemplateGroupCollection.IndexOf%2A> method to retrieve the index of a group within the collection.  
  
-   The <xref:System.Web.UI.Design.TemplateGroupCollection.Item%2A> indexer to get or set the group at a particular index, using array notation.  
  
-   The <xref:System.Web.UI.Design.TemplateGroupCollection.AddRange%2A> method to add multiple groups to the collection.  
  
     You can add multiple groups either as an array of groups or as a TemplateGroupCollection object that you retrieve through the <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> property of another control designer.  
  
-   The <xref:System.Web.UI.Design.TemplateGroupCollection.Clear%2A> method to remove all groups from the collection.  
  
   
  
## Examples  
 The following code example demonstrates how to define a simple control designer that is derived from the <xref:System.Web.UI.Design.ControlDesigner> class. The derived control designer implements the <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> property by getting the template groups that are defined for the base class and adding a template group that is specific to the derived control designer.  
  
 [!CODE [System.Web.UI.Design.TemplateGroupCollection#1](../CodeSnippet/VS_Snippets_WebNet/System.Web.UI.Design.TemplateGroupCollection#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateGroupCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Web.UI.Design.TemplateGroupCollection"&gt; class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the TemplateGroupCollection constructor to create an empty collection. You can add elements to the collection by using the <xref:System.Web.UI.Design.TemplateGroupCollection.Add%2A>, <xref:System.Web.UI.Design.TemplateGroupCollection.AddRange%2A>, or <xref:System.Web.UI.Design.TemplateGroupCollection.Insert%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.Design.TemplateGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.Design.TemplateGroup group) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Web.UI.Design.TemplateGroup" />
      </Parameters>
      <Docs>
        <param name="group">The &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to add to the collection.</param>
        <summary>Adds the specified &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; object to the end of the collection.</summary>
        <returns>The index at which the &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; was added to the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Add method adds the specified <xref:System.Web.UI.Design.TemplateGroup> object to the end of the collection. To add a <xref:System.Web.UI.Design.TemplateGroup> object to the collection at a specific index location, use the <xref:System.Web.UI.Design.TemplateGroupCollection.Insert%2A> method.  
  
 To add multiple groups to the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.AddRange%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Web.UI.Design.TemplateGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Web.UI.Design.TemplateGroupCollection groups) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Web.UI.Design.TemplateGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups">A &lt;see cref="T:System.Web.UI.Design.TemplateGroupCollection"&gt; that contains the groups to add to the collection.</param>
        <summary>Adds the template groups in an existing &lt;see cref="T:System.Web.UI.Design.TemplateGroupCollection"&gt; object to the current &lt;see cref="T:System.Web.UI.Design.TemplateGroupCollection"&gt; object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The AddRange method adds multiple groups to the collection. To add a single <xref:System.Web.UI.Design.TemplateGroup> object to the end of the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.Add%2A> method. To add a <xref:System.Web.UI.Design.TemplateGroup> object to the collection at a specific index location, use the <xref:System.Web.UI.Design.TemplateGroupCollection.Insert%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all groups from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Clear method to remove all groups from the collection. To remove a specific group from the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.Remove%2A> method. To remove a group at a particular index, use the <xref:System.Web.UI.Design.TemplateGroupCollection.RemoveAt%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.Design.TemplateGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.Design.TemplateGroup group) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Web.UI.Design.TemplateGroup" />
      </Parameters>
      <Docs>
        <param name="group">The &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to locate within the collection.</param>
        <summary>Determines whether the specified group is contained within the collection.</summary>
        <returns>`true` if the  is in the collection; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Contains method determines equality by using the <xref:System.Object.Equals%2A> method on the <xref:System.Web.UI.Design.TemplateGroup> objects.  
  
 The Contains method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Web.UI.Design.TemplateGroupCollection.Count%2A> property. Because template group collections typically are small, the performance of the linear search operation is not critical.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.Design.TemplateGroup[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.Design.TemplateGroup[] array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.Design.TemplateGroup[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The &lt;see cref="T:System.Array"&gt; that is the destination of the copied groups. The &lt;see cref="T:System.Array"&gt; must have zero-based indexing.</param>
        <param name="index">The zero-based index in  at which copying begins.</param>
        <summary>Copies the groups in the collection to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The group elements are copied to the <xref:System.Array> object in the same order in which the group elements are indexed within the <xref:System.Web.UI.Design.TemplateGroupCollection> object.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; objects in the collection.</summary>
        <value>The number of &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; objects in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Count property generally is used to determine the upper boundary index when iterating through objects in the collection. Because the collection indexes are zero-based, the first element is at index `0` and the last element is at index `Count-1`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.Design.TemplateGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.Design.TemplateGroup group) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Web.UI.Design.TemplateGroup" />
      </Parameters>
      <Docs>
        <param name="group">The &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to locate within the collection.</param>
        <summary>Returns the index of the specified &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; object within the collection.</summary>
        <returns>The zero-based index of the first occurrence of  within the collection; otherwise, -1, if  is not in the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The IndexOf method determines equality by using the <xref:System.Object.Equals%2A> method on the <xref:System.Web.UI.Design.TemplateGroup> objects.  
  
 The IndexOf performs a linear search; therefore, the average execution time is proportional to the <xref:System.Web.UI.Design.TemplateGroupCollection.Count%2A> property. Because template group collections typically are small, the performance of the linear search operation is not critical.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.Design.TemplateGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.Design.TemplateGroup group) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Web.UI.Design.TemplateGroup" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index within the collection at which to insert .</param>
        <param name="group">The &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to insert into the collection.</param>
        <summary>Inserts a &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; object into the collection at the specified index.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Insert method adds a <xref:System.Web.UI.Design.TemplateGroup> object to the collection at a specific index location. To add a single <xref:System.Web.UI.Design.TemplateGroup> to the end of the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.Add%2A> method. To add multiple groups to the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.AddRange%2A> method.  
  
> [!NOTE]
>  When you insert an item into the collection, the indexes change for subsequent items in the collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.TemplateGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroup Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to get or set in the collection.</param>
        <summary>Gets or sets a &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; object at the specified index in the collection.</summary>
        <value>The &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; at  in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the Item indexer to retrieve the group at a specified  within the collection or to set the group at a specified  within the collection. You can index elements in the collection by using array notation. For example, you can index an element at index `i` with the notation `TemplateGroups(i)` for Microsoft VisualBasic or `TemplateGroups[i]` for C#.  
  
 When you have a reference to the group object and need the index of the object in the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.IndexOf%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.Design.TemplateGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.Design.TemplateGroup group) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Web.UI.Design.TemplateGroup" />
      </Parameters>
      <Docs>
        <param name="group">The &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to remove from the collection.</param>
        <summary>Removes the specified &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; object from the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Remove method removes the first occurrence of  from the collection. If the <xref:System.Web.UI.Design.TemplateGroupCollection> object does not contain , the collection remains unchanged. No exception is thrown.  
  
 The Remove method determines equality by using the <xref:System.Object.Equals%2A> method on the <xref:System.Web.UI.Design.TemplateGroup> objects.  
  
 The Remove method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Web.UI.Design.TemplateGroupCollection.Count%2A> property. Because template group collections typically are small, the performance of the linear search operation is not critical.  
  
 To remove a group at a particular index from the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.RemoveAt%2A> method. To remove all the groups from the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.Clear%2A> method.  
  
> [!NOTE]
>  When you remove an item from the collection, the indexes change for subsequent items in the collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index within the collection of the &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to remove.</param>
        <summary>Removes the &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; object at the specified index within the collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the RemoveAt method to remove a group at a particular index from the collection. To remove a specified group from the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.Remove%2A> method. To remove all the groups from the collection, use the <xref:System.Web.UI.Design.TemplateGroupCollection.Clear%2A> method.  
  
> [!NOTE]
>  When you remove an item from the collection, the indexes change for subsequent items in the collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">The &lt;see cref="T:System.Array"&gt; that is the destination of the copied groups. The &lt;see cref="T:System.Array"&gt; must have zero-based indexing.</param>
        <param name="index">The zero-based index in  at which copying begins.</param>
        <summary>For a description of this member, see &lt;xref:System.Collections.ICollection.CopyTo%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.Collections.ICollection.Count%2A&gt;.</summary>
        <value>The number of elements in the &lt;see cref="T:System.Web.UI.Design.TemplateGroupCollection"&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.Collections.ICollection.IsSynchronized%2A&gt;.</summary>
        <value>`false`, if access to the &lt;see cref="T:System.Web.UI.Design.TemplateGroupCollection"&gt; is not synchronized (thread safe); otherwise, `true`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;.</summary>
        <value>An object to use to synchronize access to the &lt;see cref="T:System.Web.UI.Design.TemplateGroupCollection"&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.ICollection> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;.</summary>
        <returns>An &lt;see cref="T:System.Collections.IEnumerator"&gt; to use to iterate through the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to add to the collection.</param>
        <summary>For a description of this member, see &lt;xref:System.Collections.IList.Add%2A&gt;.</summary>
        <returns>The index at which  was added to the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.Collections.IList.Clear%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to locate within the collection.</param>
        <summary>For a description of this member, see &lt;xref:System.Collections.IList.Contains%2A&gt;.</summary>
        <returns>`true`, if  is in the collection; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The &lt;see cref="T:System.Web.UI.Design.TemplateGroup"&gt; to locate within the collection.</param>
        <summary>For a description of this member, see &lt;xref:System.Collections.IList.IndexOf%2A&gt;.</summary>
        <returns>The zero-based index of the first occurrence of  within the collection; otherwise, -1, if  is not in the collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index within the collection at which to insert .</param>
        <param name="o">The object to insert into the collection.</param>
        <summary>For a description of this member, see &lt;xref:System.Collections.IList.Insert%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.Collections.IList.IsFixedSize%2A&gt;.</summary>
        <value>`false`, if the &lt;see cref="T:System.Web.UI.Design.TemplateGroupCollection"&gt; dynamically increases as new objects are added; otherwise, `true`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For a description of this member, see &lt;xref:System.Collections.IList.IsReadOnly%2A&gt;.</summary>
        <value>`false`, if the &lt;see cref="T:System.Web.UI.Design.TemplateGroupCollection"&gt; can be added, modified, and removed; otherwise, `true`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index of the object to get in the collection.</param>
        <summary>For a description of this member, see the &lt;see cref="T:System.Collections.IList"&gt; class.</summary>
        <value>The object at  in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">The object to remove from the collection.</param>
        <summary>For a description of this member, see &lt;xref:System.Collections.IList.Remove%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index within the collection of the object to remove.</param>
        <summary>For a description of this member, see &lt;xref:System.Collections.IList.RemoveAt%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.TemplateGroupCollection> instance is cast to an <xref:System.Collections.IList> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>