<Type Name="XmlDocumentSchema" FullName="System.Web.UI.Design.XmlDocumentSchema">
  <TypeSignature Language="C#" Value="public sealed class XmlDocumentSchema : System.Web.UI.Design.IDataSourceSchema" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlDocumentSchema extends System.Object implements class System.Web.UI.Design.IDataSourceSchema" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.Design.IDataSourceSchema</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Represents the structure, or schema, of an &lt;xref:System.Xml.XmlDocument&gt;. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The XmlDocumentSchema class is used by custom control designer components to list the structural elements of an XML document at design time. Use the XmlDocumentSchema class to populate lists of document elements to allow users to select document elements in UI features at design time.  
  
   
  
## Examples  
 The following code example uses an XmlDocumentSchema object to display the structure of an XML document in a <xref:System.Web.UI.WebControls.TreeView> control.  
  
 [!CODE [XmlDocumentSchemaSample#1](../CodeSnippet/VS_Snippets_WebNet/XmlDocumentSchemaSample#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDocumentSchema (System.Xml.XmlDocument xmlDocument, string xPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlDocument xmlDocument, string xPath) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlDocument" Type="System.Xml.XmlDocument" />
        <Parameter Name="xPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlDocument">An instance of an &lt;xref:System.Xml.XmlDocument&gt; object.</param>
        <param name="xPath">An XPath string identifying the child nodes of the document root.</param>
        <summary>Creates an instance of the &lt;see cref="T:System.Web.UI.Design.XmlDocumentSchema"&gt; class using a specified &lt;xref:System.Xml.XmlDocument&gt; and an XPath string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use the  parameter to specify either a specific node within the XML document to examine, or specify the empty string ("") to examine the complete document.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViews">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.IDataSourceViewSchema[] GetViews ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.Design.IDataSourceViewSchema[] GetViews() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IDataSourceViewSchema[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an array containing information about each child node starting at the node identified by the  parameter in the constructor, or each child node starting at the document root if the  parameter is empty.</summary>
        <returns>An array of &lt;see cref="T:System.Web.UI.Design.IDataSourceViewSchema"&gt; objects.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>