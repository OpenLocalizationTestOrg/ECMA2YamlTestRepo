<Type Name="SqlString" FullName="System.Data.SqlTypes.SqlString">
  <TypeSignature Language="C#" Value="public struct SqlString : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit SqlString extends System.ValueType implements class System.Data.SqlTypes.INullable, class System.IComparable, class System.Xml.Serialization.IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetXsdType")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a variable-length stream of characters to be stored in or retrieved from the database. SqlString has a different underlying data structure from its corresponding .NET Framework &lt;see cref="T:System.String"&gt; data type.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.String> always uses the default <xref:System.Globalization.CultureInfo> from the current thread, but SqlString contains its own locale Id and compare flags. The comparison result of two SqlString structures is independent of operating system and current thread locale.  
  
 When you use SqlString comparison operators, note that if the LCIDs of arguments are different, comparison functions throw an exception because they cannot be compared. For example, the statement  
  
```  
SqlString mySqlString = new SqlString("abc");  
```  
  
 is equivalent to  
  
```  
SqlString mySqlString = new SqlString("abc", CultureInfo.CurrentCulture.LCID);  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlString (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">The string to store.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure using the specified string.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlString (string data, int lcid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string data, int32 lcid) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="lcid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">The string to store.</param>
        <param name="lcid">Specifies the geographical locale and language for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure using the specified string and locale id values.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lcid, valuetype System.Data.SqlTypes.SqlCompareOptions compareOptions, unsigned int8[] data) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lcid" Type="System.Int32" />
        <Parameter Name="compareOptions" Type="System.Data.SqlTypes.SqlCompareOptions" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="lcid">Specifies the geographical locale and language for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <param name="compareOptions">Specifies the compare options for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <param name="data">The data array to store.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure using the specified locale id, compare options, and data.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlString (string data, int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string data, int32 lcid, valuetype System.Data.SqlTypes.SqlCompareOptions compareOptions) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="lcid" Type="System.Int32" />
        <Parameter Name="compareOptions" Type="System.Data.SqlTypes.SqlCompareOptions" />
      </Parameters>
      <Docs>
        <param name="data">The string to store.</param>
        <param name="lcid">Specifies the geographical locale and language for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <param name="compareOptions">Specifies the compare options for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure using the specified string, locale id, and compare option values.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, bool fUnicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lcid, valuetype System.Data.SqlTypes.SqlCompareOptions compareOptions, unsigned int8[] data, bool fUnicode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lcid" Type="System.Int32" />
        <Parameter Name="compareOptions" Type="System.Data.SqlTypes.SqlCompareOptions" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="fUnicode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="lcid">Specifies the geographical locale and language for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <param name="compareOptions">Specifies the compare options for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <param name="data">The data array to store.</param>
        <param name="fUnicode">`true` if Unicode encoded. Otherwise, `false`.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lcid, valuetype System.Data.SqlTypes.SqlCompareOptions compareOptions, unsigned int8[] data, int32 index, int32 count) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lcid" Type="System.Int32" />
        <Parameter Name="compareOptions" Type="System.Data.SqlTypes.SqlCompareOptions" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lcid">Specifies the geographical locale and language for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <param name="compareOptions">Specifies the compare options for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <param name="data">The data array to store.</param>
        <param name="index">The starting index within the array.</param>
        <param name="count">The number of characters from index to copy.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlString (int lcid, System.Data.SqlTypes.SqlCompareOptions compareOptions, byte[] data, int index, int count, bool fUnicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 lcid, valuetype System.Data.SqlTypes.SqlCompareOptions compareOptions, unsigned int8[] data, int32 index, int32 count, bool fUnicode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lcid" Type="System.Int32" />
        <Parameter Name="compareOptions" Type="System.Data.SqlTypes.SqlCompareOptions" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="fUnicode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="lcid">Specifies the geographical locale and language for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <param name="compareOptions">Specifies the compare options for the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</param>
        <param name="data">The data array to store.</param>
        <param name="index">The starting index within the array.</param>
        <param name="count">The number of characters from index to copy.</param>
        <param name="fUnicode">`true` if Unicode encoded. Otherwise, `false`.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString Add (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlString Add(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Concatenates two specified &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; values to create a new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; that is the concatenated value of  and .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 will appear first in the resulting <xref:System.Data.SqlTypes.SqlString>, followed by .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinarySort">
      <MemberSignature Language="C#" Value="public static readonly int BinarySort;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 BinarySort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that sorts should be based on a characters numeric value instead of its alphabetical value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 BinarySort functions as a constant for the <xref:System.Data.SqlTypes.SqlString> class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinarySort2">
      <MemberSignature Language="C#" Value="public static readonly int BinarySort2;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 BinarySort2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that sorts should be based on a character's numeric value instead of its alphabetical value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlString Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlString Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a copy of this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; object.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; object in which all property values are the same as the original.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CompareInfo CompareInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;see cref="T:System.Globalization.CompareInfo"&gt; object that defines how string comparisons should be performed for this &lt;xref:System.Data.SqlTypes.SqlString&gt; structure.</summary>
        <value>A `CompareInfo` object that defines string comparison for this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareOptionsFromSqlCompareOptions">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareOptions CompareOptionsFromSqlCompareOptions (System.Data.SqlTypes.SqlCompareOptions compareOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.CompareOptions CompareOptionsFromSqlCompareOptions(valuetype System.Data.SqlTypes.SqlCompareOptions compareOptions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareOptions" Type="System.Data.SqlTypes.SqlCompareOptions" />
      </Parameters>
      <Docs>
        <param name="compareOptions">A &lt;see cref="T:System.Data.SqlTypes.SqlCompareOptions"&gt; value that describes the comparison options for this &lt;xref:System.Data.SqlTypes.SqlString&gt; structure.</param>
        <summary>Gets the &lt;see cref="T:System.Globalization.CompareOptions"&gt; enumeration equilvalent of the specified &lt;xref:System.Data.SqlTypes.SqlCompareOptions&gt; value.</summary>
        <returns>A `CompareOptions` value that corresponds to the `SqlCompareOptions` for this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Data.SqlTypes.SqlString value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(valuetype System.Data.SqlTypes.SqlString value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="value">The &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; to be compared.</param>
        <summary>Compares this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; instance to the supplied &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; and returns an indication of their relative values.</summary>
        <returns>A signed number that indicates the relative values of the instance and the object.  
  
|Return value|Condition|  
|------------------|---------------|  
|Less than zero|This instance is less than the object.|  
|Zero|This instance is the same as the object.|  
|Greater than zero|This instance is greater than the object&lt;br /&gt;&lt;br /&gt; -or-&lt;br /&gt;&lt;br /&gt; The object is a null reference (`Nothing` in Visual Basic).|</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The &lt;see cref="T:System.Object"&gt; to be compared.</param>
        <summary>Compares this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; object to the supplied &lt;xref:System.Object&gt; and returns an indication of their relative values.</summary>
        <returns>A signed number that indicates the relative values of the instance and the object.  
  
|Return Value|Condition|  
|------------------|---------------|  
|Less than zero|This instance is less than the object.|  
|Zero|This instance is the same as the object.|  
|Greater than zero|This instance is greater than the object&lt;br /&gt;&lt;br /&gt; -or-&lt;br /&gt;&lt;br /&gt; The object is a null reference (`Nothing` in Visual Basic)|</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString Concat (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlString Concat(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Concatenates the two specified &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structures.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; parameters.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CultureInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CultureInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;see cref="T:System.Globalization.CultureInfo"&gt; structure that represents information about the culture of this &lt;xref:System.Data.SqlTypes.SqlString&gt; object.</summary>
        <value>A &lt;see cref="T:System.Globalization.CultureInfo"&gt; structure that describes information about the culture of this SqlString structure including the names of the culture, the writing system, and the calendar used, and also access to culture-specific objects that provide methods for common operations, such as formatting dates and sorting strings.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to be compared.</param>
        <summary>Compares the supplied object parameter to the &lt;xref:System.Data.SqlTypes.SqlString.Value%2A&gt; property of the &lt;xref:System.Data.SqlTypes.SqlString&gt; object.</summary>
        <returns>Equals will return `true` if the object is an instance of &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; and the two are equal; otherwise `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean Equals(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether they are equal.</summary>
        <returns>`true` if the two values are equal. Otherwise, `false`. If either instance is null, then the `SqlString` will be null.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the hash code for this instance.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNonUnicodeBytes">
      <MemberSignature Language="C#" Value="public byte[] GetNonUnicodeBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetNonUnicodeBytes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an array of bytes, that contains the contents of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; in ANSI format.</summary>
        <returns>An byte array, that contains the contents of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; in ANSI format.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeBytes">
      <MemberSignature Language="C#" Value="public byte[] GetUnicodeBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetUnicodeBytes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an array of bytes, that contains the contents of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; in Unicode format.</summary>
        <returns>An byte array, that contains the contents of the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; in Unicode format.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXsdType">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlQualifiedName GetXsdType(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemaSet">A &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</param>
        <summary>Returns the XML Schema definition language (XSD) of the specified &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</summary>
        <returns>A `string` value that indicates the XSD of the specified &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean GreaterThan(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether the first is greater than the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether the first is greater than or equal to the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="public static readonly int IgnoreCase;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 IgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; comparisons should ignore case.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IgnoreCase functions as a constant for the <xref:System.Data.SqlTypes.SqlString> class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreKanaType">
      <MemberSignature Language="C#" Value="public static readonly int IgnoreKanaType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 IgnoreKanaType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the string comparison must ignore the Kana type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kana type refers to Japanese hiragana and katakana characters that represent phonetic sounds in the Japanese language. Hiragana is used for native Japanese expressions and words, while katakana is used for words borrowed from other languages, such as "computer" or "Internet". A phonetic sound can be expressed in both hiragana and katakana. If this value is selected, the hiragana character for one sound is considered equal to the katakana character for the same sound.  
  
 IgnoreKanaType functions as a constant for the <xref:System.Data.SqlTypes.SqlString> class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreNonSpace">
      <MemberSignature Language="C#" Value="public static readonly int IgnoreNonSpace;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 IgnoreNonSpace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the string comparison must ignore non-space combining characters, such as diacritics.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Unicode Standard defines combining characters as characters that are combined with base characters to produce a new character. Non-space combining characters do not use character space by themselves when rendered. For more information about non-space combining characters, see the Unicode Standard at http://www.unicode.org.  
  
 IgnoreNonSpace functions as a constant for the <xref:System.Data.SqlTypes.SqlString> class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreWidth">
      <MemberSignature Language="C#" Value="public static readonly int IgnoreWidth;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 IgnoreWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies that the string comparison must ignore the character width.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For example, Japanese katakana characters can be written as full-width or half-width and, if this value is selected, the katakana characters written as full-width are considered equal to the same characters written in half-width.  
  
 IgnoreWidth functions as a constant for the <xref:System.Data.SqlTypes.SqlString> class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure is null.</summary>
        <value>`true` if &lt;xref:System.Data.SqlTypes.SqlString.Value%2A&gt; is &lt;xref:System.Data.SqlTypes.SqlString.Null&gt;. Otherwise, `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see [Handling Null Values](../Topic/Handling%20Null%20Values.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the geographical locale and language for the &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure.</summary>
        <value>The locale id for the string stored in the &lt;xref:System.Data.SqlTypes.SqlString.Value%2A&gt; property.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean LessThan(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether the first is less than the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean LessThanOrEqual(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether the first is less than or equal to the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean NotEquals(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether they are not equal.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are not equal or &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are equal. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.SqlTypes.SqlString Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.SqlTypes.SqlString Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a &lt;see cref="T:System.DBNull"&gt; that can be assigned to this instance of the &lt;xref:System.Data.SqlTypes.SqlString&gt; structure.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Null` functions as a constant for the <xref:System.Data.SqlTypes.SqlString> structure.  For more information, see [Handling Null Values](../Topic/Handling%20Null%20Values.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Addition (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Addition(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Concatenates the two specified &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structures.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; that contains the newly concatenated value representing the contents of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; parameters.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Equality(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether they are equal.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are equal or &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are not equal. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlBoolean x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlBoolean x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlByte x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlByte x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlByte" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDateTime x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlDateTime x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlDateTime" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDecimal x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlDecimal x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlDecimal" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlDouble x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlDouble x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlDouble" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlGuid x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlGuid x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlGuid" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt16 x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlInt16 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlInt16" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt32 x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlInt32 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlInt32" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlInt64 x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlInt64 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlInt64" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlMoney x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlMoney x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlMoney" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Explicit (System.Data.SqlTypes.SqlSingle x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Explicit(valuetype System.Data.SqlTypes.SqlSingle x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlSingle" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static string op_Explicit (System.Data.SqlTypes.SqlString x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname string op_Explicit(valuetype System.Data.SqlTypes.SqlString x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_GreaterThan(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether the first is greater than the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the first instance is greater than the second instance. Otherwise, &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether the first is greater than or equal to the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the first instance is greater than or equal to the second instance. Otherwise, &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlString op_Implicit (string x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlString op_Implicit(string x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Inequality(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether they are not equal.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are not equal or &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are equal. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_LessThan(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether the first is less than the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the first instance is less than the second instance. Otherwise, &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlString x, System.Data.SqlTypes.SqlString y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual(valuetype System.Data.SqlTypes.SqlString x, valuetype System.Data.SqlTypes.SqlString y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</param>
        <summary>Performs a logical comparison of the two &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; operands to determine whether the first is less than or equal to the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the first instance is less than or equal to the second instance. Otherwise, &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;. If either instance of &lt;xref:System.Data.SqlTypes.SqlString&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SqlCompareOptions">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlCompareOptions SqlCompareOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SqlTypes.SqlCompareOptions SqlCompareOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlCompareOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A combination of one or more of the &lt;see cref="T:System.Data.SqlTypes.SqlCompareOptions"&gt; enumeration values that represent the way in which this &lt;xref:System.Data.SqlTypes.SqlString&gt; should be compared to other &lt;xref:System.Data.SqlTypes.SqlString&gt; structures.</summary>
        <value>A value specifying how this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; should be compared to other &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structures.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <returns>An `XmlSchema`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">`XmlReader`</param>
        <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">`XmlWriter`</param>
        <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlBoolean">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlBoolean ToSqlBoolean() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlBoolean&gt;.</summary>
        <returns>`true` if the &lt;xref:System.Data.SqlTypes.SqlString.Value%2A&gt; is non-zero; `false` if zero; otherwise Null.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlByte">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlByte ToSqlByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlByte ToSqlByte() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlByte&gt;.</summary>
        <returns>A new `SqlByte` structure whose &lt;xref:System.Data.SqlTypes.SqlByte.Value%2A&gt; equals the number represented by this &lt;xref:System.Data.SqlTypes.SqlString&gt; structure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlDateTime">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlDateTime ToSqlDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlDateTime ToSqlDateTime() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlDateTime&gt;.</summary>
        <returns>A new `SqlDateTime` structure that contains the date value represented by this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlDecimal">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlDecimal ToSqlDecimal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlDecimal&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlDecimal"&gt; that contains the value of this &lt;xref:System.Data.SqlTypes.SqlString&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlDouble">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlDouble ToSqlDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlDouble ToSqlDouble() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDouble</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlDouble&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlDouble"&gt; that is equal to the numeric value of this &lt;xref:System.Data.SqlTypes.SqlString&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlGuid">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlGuid ToSqlGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlGuid ToSqlGuid() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlGuid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlGuid&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlGuid"&gt; structure whose &lt;xref:System.Data.SqlTypes.SqlGuid.Value%2A&gt; is the `Guid` represented by this &lt;xref:System.Data.SqlTypes.SqlString&gt; structure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlInt16">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlInt16 ToSqlInt16() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlInt16&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlInt16"&gt; that is equal to the numeric value of this &lt;xref:System.Data.SqlTypes.SqlString&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlInt32">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlInt32 ToSqlInt32() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlInt32&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlInt32"&gt; that is equal to the numeric value of this &lt;xref:System.Data.SqlTypes.SqlString&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlInt64">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlInt64 ToSqlInt64() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlInt64&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlInt64"&gt; that is equal to the numeric value of this &lt;xref:System.Data.SqlTypes.SqlString&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlMoney">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlMoney ToSqlMoney ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlMoney ToSqlMoney() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlMoney</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlMoney&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlMoney"&gt; that is equal to the numeric value of this &lt;xref:System.Data.SqlTypes.SqlString&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlSingle">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlSingle ToSqlSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlSingle ToSqlSingle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlSingle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlSingle&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlSingle"&gt; that is equal to the numeric value of this &lt;xref:System.Data.SqlTypes.SqlString&gt;..</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts a &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; object to a &lt;xref:System.String&gt;.</summary>
        <returns>A &lt;see cref="T:System.String"&gt; with the same value as this &lt;xref:System.Data.SqlTypes.SqlString&gt; structure.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the string that is stored in this &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure. This property is read-only.</summary>
        <value>The string that is stored.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>