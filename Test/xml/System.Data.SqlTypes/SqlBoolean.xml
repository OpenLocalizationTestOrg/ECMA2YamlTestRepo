<Type Name="SqlBoolean" FullName="System.Data.SqlTypes.SqlBoolean">
  <TypeSignature Language="C#" Value="public struct SqlBoolean : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit SqlBoolean extends System.ValueType implements class System.Data.SqlTypes.INullable, class System.IComparable, class System.Xml.Serialization.IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetXsdType")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents an integer value that is either 1 or 0 to be stored in or retrieved from a database.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Any non-zero value is interpreted as 1.  
  
 The key difference between a SqlBoolean structure and a standard Boolean value is that, where a standard Boolean has two possible values, `true` and `false`, a SqlBoolean structure has three possible values, <xref:System.Data.SqlTypes.SqlBoolean.True>, <xref:System.Data.SqlTypes.SqlBoolean.False>, or <xref:System.Data.SqlTypes.SqlBoolean.Null>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBoolean (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The value for the new &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure; either `true` or `false`.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure using the supplied Boolean value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBoolean (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The integer whose value is to be used for the new &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure using the specified integer value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean And (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean And(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Computes the bitwise AND operation of two specified &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structures.</summary>
        <returns>The result of the logical AND operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteValue">
      <MemberSignature Language="C#" Value="public byte ByteValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 ByteValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure as a byte.</summary>
        <value>A byte representing the value of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The byte value will be either 0 or 1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Data.SqlTypes.SqlBoolean value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(valuetype System.Data.SqlTypes.SqlBoolean value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="value">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;&lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; object to compare, or a null reference (`Nothing` in Visual Basic).</param>
        <summary>Compares this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; object to the supplied &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; object and returns an indication of their relative values.</summary>
        <returns>A signed number that indicates the relative values of the instance and value.  
  
|Value|Description|  
|-----------|-----------------|  
|A negative integer|This instance is less than .|  
|Zero|This instance is equal to .|  
|A positive integer|This instance is greater than .&lt;br /&gt;&lt;br /&gt; -or-&lt;br /&gt;&lt;br /&gt; is a null reference (`Nothing` in Visual Basic).|</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Any instance of <xref:System.Data.SqlTypes.SqlBoolean>, regardless of its value, is considered greater than a null reference (`Nothing` in Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">An object to compare, or a null reference (`Nothing` in Visual Basic).</param>
        <summary>Compares this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to a specified object and returns an indication of their relative values.</summary>
        <returns>A signed number that indicates the relative values of the instance and value.  
  
|Value|Description|  
|-----------|-----------------|  
|A negative integer|This instance is less than .|  
|Zero|This instance is equal to .|  
|A positive integer|This instance is greater than .&lt;br /&gt;&lt;br /&gt; -or-&lt;br /&gt;&lt;br /&gt; is a null reference (`Nothing` in Visual Basic).|</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Any instance of <xref:System.Data.SqlTypes.SqlBoolean>, regardless of its value, is considered greater than a null reference (`Nothing` in Visual Basic).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to be compared.</param>
        <summary>Compares the supplied object parameter to the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;.</summary>
        <returns>`true` if object is an instance of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; and the two are equal; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean Equals(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Compares two &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structures to determine whether they are equal.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are equal or &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are not equal. If either instance of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static readonly System.Data.SqlTypes.SqlBoolean False;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.SqlTypes.SqlBoolean False" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a false value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; property of an instance of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The False field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this instance.</summary>
        <returns>A 32-bit signed integer hash code.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXsdType">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlQualifiedName GetXsdType(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemaSet">A &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</param>
        <summary>Returns the XML Schema definition language (XSD) of the specified &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</summary>
        <returns>A `string` value that indicates the XSD of the specified &lt;xref:System.Xml.Schema.XmlSchemaSet&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean GreaterThan(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Compares two instances of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; to determine whether the first is greater than the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is `true` if the first instance is greater than the second instance; otherwise `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If either instance of  or  is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEquals">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean GreaterThanOrEquals(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Compares two instances of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; to determine whether the first is greater than or equal to the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is `true` if the first instance is greater than or equal to the second instance; otherwise `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If either instance of  or  is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFalse">
      <MemberSignature Language="C#" Value="public bool IsFalse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFalse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the current &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; is &lt;xref:System.Data.SqlTypes.SqlBoolean.False&gt;.</summary>
        <value>`true` if `Value` is `False`; otherwise, `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.Data.SqlTypes.SqlBoolean.Value%2A> is <xref:System.Data.SqlTypes.SqlBoolean.Null>, this property still will be `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure is null.</summary>
        <value>`true` if the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure is null; otherwise `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see [Handling Null Values](../Topic/Handling%20Null%20Values.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrue">
      <MemberSignature Language="C#" Value="public bool IsTrue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether the current &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; is &lt;xref:System.Data.SqlTypes.SqlBoolean.True&gt;.</summary>
        <value>`true` if `Value` is `True`; otherwise, `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:System.Data.SqlTypes.SqlBoolean.Value%2A> is <xref:System.Data.SqlTypes.SqlBoolean.Null>, this property still will be `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean LessThan(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Compares two instances of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; to determine whether the first is less than the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is `true` if the first instance is less than the second instance; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If either instance of  or  is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEquals">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean LessThanOrEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean LessThanOrEquals(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Compares two instances of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; to determine whether the first is less than or equal to the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is `true` if the first instance is less than or equal to the second instance; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If either instance of  or  is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotEquals">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean NotEquals(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Compares two instances of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; for equality.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are not equal or &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are equal. If either instance of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.SqlTypes.SqlBoolean Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.SqlTypes.SqlBoolean Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents &lt;see cref="T:System.DBNull"&gt; that can be assigned to this instance of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Null field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure. For more information, see [Handling Null Values](../Topic/Handling%20Null%20Values.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static readonly System.Data.SqlTypes.SqlBoolean One;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.SqlTypes.SqlBoolean One" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a one value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlBoolean.ByteValue%2A&gt; property of an instance of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The One field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean OnesComplement (System.Data.SqlTypes.SqlBoolean x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean OnesComplement(valuetype System.Data.SqlTypes.SqlBoolean x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Performs a one's complement operation on the supplied &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structures.</summary>
        <returns>The one's complement of the supplied &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_BitwiseAnd (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_BitwiseAnd(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Computes the bitwise AND operation of two specified &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structures.</summary>
        <returns>The result of the logical AND operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_BitwiseOr (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_BitwiseOr(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Computes the bitwise OR of its operands.</summary>
        <returns>The results of the logical OR operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Equality(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;.</param>
        <summary>Compares two instances of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; for equality.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are equal or &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are not equal. If either instance of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_ExclusiveOr (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_ExclusiveOr(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Performs a bitwise exclusive-OR (XOR) operation on the supplied parameters.</summary>
        <returns>The result of the logical XOR operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static bool op_Explicit (System.Data.SqlTypes.SqlBoolean x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Explicit(valuetype System.Data.SqlTypes.SqlBoolean x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlByte x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Explicit(valuetype System.Data.SqlTypes.SqlByte x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlByte" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlDecimal x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Explicit(valuetype System.Data.SqlTypes.SqlDecimal x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlDecimal" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlDouble x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Explicit(valuetype System.Data.SqlTypes.SqlDouble x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlDouble" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt16 x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Explicit(valuetype System.Data.SqlTypes.SqlInt16 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlInt16" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt32 x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Explicit(valuetype System.Data.SqlTypes.SqlInt32 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlInt32" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlInt64 x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Explicit(valuetype System.Data.SqlTypes.SqlInt64 x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlInt64" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlMoney x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Explicit(valuetype System.Data.SqlTypes.SqlMoney x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlMoney" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlSingle x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Explicit(valuetype System.Data.SqlTypes.SqlSingle x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlSingle" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Explicit (System.Data.SqlTypes.SqlString x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Explicit(valuetype System.Data.SqlTypes.SqlString x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlString" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_False">
      <MemberSignature Language="C#" Value="public static bool op_False (System.Data.SqlTypes.SqlBoolean x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_False(valuetype System.Data.SqlTypes.SqlBoolean x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">The &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to be tested.</param>
        <summary>The false operator can be used to test the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; to determine whether it is false.</summary>
        <returns>Returns `true` if the supplied parameter is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; is false, `false` otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_GreaterThan(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; object.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; object.</param>
        <summary>Compares two &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structures to determine whether the first is greater than the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is `true` if the first instance is greater than the second instance; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If either instance of  or  is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Compares two &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structures to determine whether the first is greater than or equal to the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is `true` if the first instance is greater than or equal to the second instance; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If either instance of  or  is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Implicit (bool x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Implicit(bool x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_Inequality(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;.</param>
        <summary>Compares two instances of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; to determine whether they are not equal.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are not equal or &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; if the two instances are equal. If either instance of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; is null, the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; will be &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_LessThan(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Compares two instances of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; to determine whether the first is less than the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is `true` if the first instance is less than the second instance; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If either instance of  or  is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Compares two instances of &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; to determine whether the first is less than or equal to the second.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; that is `true` if the first instance is less than or equal to the second instance; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If either instance of  or  is null, the value of the <xref:System.Data.SqlTypes.SqlBoolean> will be null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LogicalNot">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_LogicalNot (System.Data.SqlTypes.SqlBoolean x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_LogicalNot(valuetype System.Data.SqlTypes.SqlBoolean x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">The &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; on which the NOT operation will be performed.</param>
        <summary>Performs a NOT operation on a &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; with the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt;&lt;xref:System.Data.SqlTypes.SqlBoolean.True&gt; if argument was true, &lt;xref:System.Data.SqlTypes.SqlBoolean.Null&gt; if argument was null, and &lt;xref:System.Data.SqlTypes.SqlBoolean.False&gt; otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean op_OnesComplement (System.Data.SqlTypes.SqlBoolean x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Data.SqlTypes.SqlBoolean op_OnesComplement(valuetype System.Data.SqlTypes.SqlBoolean x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Performs a one's complement operation on the supplied &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structures.</summary>
        <returns>The one's complement of the supplied &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_True">
      <MemberSignature Language="C#" Value="public static bool op_True (System.Data.SqlTypes.SqlBoolean x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_True(valuetype System.Data.SqlTypes.SqlBoolean x) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">The &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to be tested.</param>
        <summary>The true operator can be used to test the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; to determine whether it is true.</summary>
        <returns>Returns `true` if the supplied parameter is &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; is true, `false` otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean Or (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean Or(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Performs a bitwise OR operation on the two specified &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structures.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure whose Value is the result of the bitwise OR operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean Parse(string s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">The &lt;see cref="T:System.String"&gt; to be converted.</param>
        <summary>Converts the specified &lt;see cref="T:System.String"&gt; representation of a logical value to its &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; equivalent.</summary>
        <returns>A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure that contains the parsed value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <returns>An `XmlSchema`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">`XmlReader`</param>
        <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">`XmlWriter`</param>
        <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlByte">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlByte ToSqlByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlByte ToSqlByte() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlByte&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlByte"&gt; structure whose value is 1 or 0. If the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure's value equals `true`, the new &lt;see cref="T:System.Data.SqlTypes.SqlByte"&gt; structure's value is 1. Otherwise, the new &lt;see cref="T:System.Data.SqlTypes.SqlByte"&gt; structure's value is 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlDecimal">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlDecimal ToSqlDecimal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDecimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlDecimal&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlDecimal"&gt; structure whose value is 1 or 0. If the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure's value equals `true` then the new &lt;see cref="T:System.Data.SqlTypes.SqlDecimal"&gt; structure's value is 1. Otherwise, the new &lt;see cref="T:System.Data.SqlTypes.SqlDecimal"&gt; structure's value is 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlDouble">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlDouble ToSqlDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlDouble ToSqlDouble() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlDouble</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlDouble&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlDouble"&gt; structure whose value is 1 or 0. If the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure's value equals `true` then the new &lt;see cref="T:System.Data.SqlTypes.SqlDouble"&gt; structure's value is 1. Otherwise, the new &lt;see cref="T:System.Data.SqlTypes.SqlDouble"&gt; structure's value is 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlInt16">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlInt16 ToSqlInt16() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt16</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlInt16&gt;.</summary>
        <returns>A new `SqlInt16` structure whose value is 1 or 0. If the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure's value equals `true` then the new &lt;xref:System.Data.SqlTypes.SqlInt16&gt; structure's value is 1. Otherwise, the new `SqlInt16` structure's value is 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlInt32">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlInt32 ToSqlInt32() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlInt32&gt;.</summary>
        <returns>A new `SqlInt32` structure whose value is 1 or 0. If the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure's value equals `true`, the new &lt;xref:System.Data.SqlTypes.SqlInt32&gt; structure's value is 1. Otherwise, the new `SqlInt32` structure's value is 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlInt64">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlInt64 ToSqlInt64() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlInt64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlInt64&gt;.</summary>
        <returns>A new `SqlInt64` structure whose value is 1 or 0. If the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure's value equals `true`, the new &lt;xref:System.Data.SqlTypes.SqlInt64&gt; structure's value is 1. Otherwise, the new `SqlInt64` structure's value is 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlMoney">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlMoney ToSqlMoney ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlMoney ToSqlMoney() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlMoney</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlMoney&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlMoney"&gt; structure whose value is 1 or 0. If the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure's value equals `true`, the new &lt;see cref="T:System.Data.SqlTypes.SqlMoney"&gt; value is 1. If the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure's value equals `false`, the new &lt;see cref="T:System.Data.SqlTypes.SqlMoney"&gt; value is 0. If &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure's value is neither 1 nor 0, the new &lt;see cref="T:System.Data.SqlTypes.SqlMoney"&gt; value is &lt;xref:System.Data.SqlTypes.SqlMoney.Null&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlSingle">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlSingle ToSqlSingle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlSingle ToSqlSingle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlSingle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlSingle&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlSingle"&gt; structure whose value is 1 or 0.  
  
 If the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure's value equals true, the new &lt;see cref="T:System.Data.SqlTypes.SqlSingle"&gt; structure's value is 1; otherwise the new &lt;see cref="T:System.Data.SqlTypes.SqlSingle"&gt; structure's value is 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToSqlString">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlString ToSqlString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.SqlTypes.SqlString ToSqlString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlString</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to &lt;xref:System.Data.SqlTypes.SqlString&gt;.</summary>
        <returns>A new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure whose value is 1 or 0. If the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure's value equals `true` then &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure's value is 1. Otherwise, the new &lt;see cref="T:System.Data.SqlTypes.SqlString"&gt; structure's value is 0.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts this &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure to a string.</summary>
        <returns>A string that contains the value of the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt;. If the value is null, the string will contain "null".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static readonly System.Data.SqlTypes.SqlBoolean True;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.SqlTypes.SqlBoolean True" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a true value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlBoolean.Value%2A&gt; property of an instance of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The True field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public bool Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure's value. This property is read-only.</summary>
        <value>`true` if the &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; is &lt;xref:System.Data.SqlTypes.SqlBoolean.True&gt;; otherwise `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public static System.Data.SqlTypes.SqlBoolean Xor (System.Data.SqlTypes.SqlBoolean x, System.Data.SqlTypes.SqlBoolean y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.SqlTypes.SqlBoolean Xor(valuetype System.Data.SqlTypes.SqlBoolean x, valuetype System.Data.SqlTypes.SqlBoolean y) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Data.SqlTypes.SqlBoolean" />
        <Parameter Name="y" Type="System.Data.SqlTypes.SqlBoolean" />
      </Parameters>
      <Docs>
        <param name="x">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <param name="y">A &lt;see cref="T:System.Data.SqlTypes.SqlBoolean"&gt; structure.</param>
        <summary>Performs a bitwise exclusive-OR operation on the supplied parameters.</summary>
        <returns>The result of the logical XOR operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly System.Data.SqlTypes.SqlBoolean Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Data.SqlTypes.SqlBoolean Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlBoolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents a zero value that can be assigned to the &lt;xref:System.Data.SqlTypes.SqlBoolean.ByteValue%2A&gt; property of an instance of the &lt;xref:System.Data.SqlTypes.SqlBoolean&gt; structure.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Zero field is a constant for the <xref:System.Data.SqlTypes.SqlBoolean> structure.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>