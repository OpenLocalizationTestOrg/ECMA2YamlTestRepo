<Type Name="Clipboard" FullName="System.Windows.Clipboard">
  <TypeSignature Language="C#" Value="public static class Clipboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Clipboard extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides static methods that facilitate transferring data to and from the system Clipboard.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All applications for [!INCLUDE[TLA#tla_mswin](../../add/includes/tlasharptla-mswin-md.md)] share the system Clipboard, so the contents are subject to change when you switch to another application.  
  
 For a list of predefined formats available to use with the Clipboard class, see the <xref:System.Windows.DataFormats> class.  
  
 **Security Alert:** For security purposes, the following points should be kept in mind.  
  
-   Paste operations need to be user initiated (Ctrl-V, Paste Menu).  
  
-   Copy can only be on user selected content.  
  
-   On copy or cut, partial trust code puts plaintext and [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)] on to the clipboard. Plaintext includes text, Unicode text, OEM (Object Exchange Model) text, and CSV (Comma-separated values).  
  
-   On paste, [!INCLUDE[TLA#tla_winclient](../../add/includes/tlasharptla-winclient-md.md)] will paste in [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)] if the source of that content is from a equally trusted or more trusted site. Specifically:  
  
    -   A partial trust application can paste [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)] from a full trust application.  
  
    -   A partial trust application can paste [!INCLUDE[TLA#tla_xaml](../../add/includes/tlasharptla-xaml-md.md)] from a partial trust application.  
  
    -   A full trust application can paste XAML only from another fully trusted application.  
  
    -   A non-[!INCLUDE[TLA#tla_winclient](../../add/includes/tlasharptla-winclient-md.md)] full trust application can examine the ApplicationTrust format on the clipboard and sanitize the XAML if appropriate.  
  
   
  
## Examples  
 The following example shows how to add data to the system Clipboard.  
  
 [!code-cs[DragDrop_DragDropMiscCode#_SetData](../../add/codesnippet/CSharp/DragDropMiscCode/Window1.xaml.cs#_setdata)]
 [!code-vb[DragDrop_DragDropMiscCode#_SetData](../../add/codesnippet/VisualBasic/dragdropmisccode/window1.xaml.vb#_setdata)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears any data from the system Clipboard.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Calling this method is equivalent to calling **OleSetClipboard**(**null**).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public static bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsAudio() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Queries the Clipboard for the presence of data in the &lt;see cref="F:System.Windows.DataFormats.WaveAudio"&gt; data format.</summary>
        <returns>`true` if the Clipboard contains data in the &lt;see cref="F:System.Windows.DataFormats.WaveAudio"&gt; data format; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method returns `true` only if the specified data format exists natively on the Clipboard; this method does not check for the presence of auto-convertible data formats.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsData">
      <MemberSignature Language="C#" Value="public static bool ContainsData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsData(string format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">The format of the data to look for. See &lt;see cref="T:System.Windows.DataFormats"&gt; for predefined formats.</param>
        <summary>Queries the Clipboard for the presence of data in a specified data format.</summary>
        <returns>`true` if data in the specified format is available on the Clipboard; otherwise, `false`. See Remarks.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A query for the data format <xref:System.Windows.DataFormats.Bitmap> or <xref:System.Windows.DataFormats.FileDrop> will return `true` if the data can be automatically converted to the specified data format.  For other data formats, this method returns `true` only if the specified format is available natively on the Clipboard.  
  
   
  
## Examples  
 The following example demonstrates the use of this method.  
  
 [!code-cs[DragDrop_DragDropMiscCode#_ContainsDataGetData](../../add/codesnippet/CSharp/DragDropMiscCode/Window1.xaml.cs#_containsdatagetdata)]
 [!code-vb[DragDrop_DragDropMiscCode#_ContainsDataGetData](../../add/codesnippet/VisualBasic/dragdropmisccode/window1.xaml.vb#_containsdatagetdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public static bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsFileDropList() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Queries the Clipboard for the presence of data in the &lt;see cref="F:System.Windows.DataFormats.FileDrop"&gt; data format.</summary>
        <returns>`true` if the Clipboard contains data in the &lt;see cref="F:System.Windows.DataFormats.FileDrop"&gt; data format; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method returns `true` only if the specified data format exists natively or is available as an auto-convertible data format on the Clipboard; this method does not check for the presence of auto-convertible data formats.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public static bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsImage() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Queries the Clipboard for the presence of data in the &lt;see cref="F:System.Windows.DataFormats.Bitmap"&gt; data format.</summary>
        <returns>`true` if the Clipboard contains data in the &lt;see cref="F:System.Windows.DataFormats.Bitmap"&gt; data format; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method returns `true` only if the specified data format exists natively or is available as an auto-convertible data format on the Clipboard; this method does not check for the presence of auto-convertible data formats.  
  
 A bitmap represents a computer graphic as an array of bits in memory, and these bits represent the attributes of the individual pixels in an image.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Queries the Clipboard for the presence of data in the &lt;see cref="F:System.Windows.DataFormats.UnicodeText"&gt; format.</summary>
        <returns>`true` if the Clipboard contains data in the &lt;see cref="F:System.Windows.DataFormats.UnicodeText"&gt; data format; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method returns `true` only if the specified data format exists natively on the Clipboard; this method does not check for the presence of auto-convertible data formats.  
  
 The <xref:System.Windows.DataFormats.UnicodeText> data format denotes 16-bit character encoded Unicode, also referred to as UTF-16, and USC-2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public static bool ContainsText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">A member of the &lt;see cref="T:System.Windows.TextDataFormat"&gt; enumeration that specifies the text data format to query for.</param>
        <summary>Queries the Clipboard for the presence of data in a text data format.</summary>
        <returns>`true` if the Clipboard contains data in the specified text data format; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method returns `true` only if the specified data format exists natively in the data object; this method does not check for the presence of auto-convertible data formats.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Permanently adds the data that is on the &lt;see cref="T:System.Windows.Clipboard"&gt; so that it is available after the data's original application closes.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetAudioStream() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a stream of Clipboard data in the &lt;see cref="F:System.Windows.DataFormats.WaveAudio"&gt; data format.</summary>
        <returns>A stream that contains the data in the &lt;see cref="F:System.Windows.DataFormats.WaveAudio"&gt; format, or `null` if the Clipboard does not contain data in this format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method returns a stream only if the specified format exists natively in the data object; this method does not return auto-convertible data.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetData(string format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">A string that specifies the format of the data to retrieve. For a set of predefined data formats, see the &lt;see cref="T:System.Windows.DataFormats"&gt; class.</param>
        <summary>Retrieves data in a specified format from the Clipboard.</summary>
        <returns>An object that contains the data in the specified format, or `null` if the data is unavailable in the specified format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates the use of this method.  
  
 [!code-cs[DragDrop_DragDropMiscCode#_ContainsDataGetData](../../add/codesnippet/CSharp/DragDropMiscCode/Window1.xaml.cs#_containsdatagetdata)]
 [!code-vb[DragDrop_DragDropMiscCode#_ContainsDataGetData](../../add/codesnippet/VisualBasic/dragdropmisccode/window1.xaml.vb#_containsdatagetdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.IDataObject GetDataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IDataObject GetDataObject() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a data object that represents the entire contents of the Clipboard.</summary>
        <returns>A data object that enables access to the entire contents of the system Clipboard, or `null` if there is no data on the Clipboard.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Access to data on the system Clipboard is enabled through a *data object*, that is, an object that implements the <xref:System.Windows.IDataObject> interface. A list of predefined formats is defined by the <xref:System.Windows.DataFormats> class.  Use the methods specified by <xref:System.Windows.IDataObject> and fields in <xref:System.Windows.DataFormats> to examine and extract the data from the data object.  
  
 To examine the formats of data on the system Clipboard, call <xref:System.Windows.IDataObject.GetFormats%2A> on the data object returned by this method.  To retrieve data from the system Clipboard, call <xref:System.Windows.IDataObject.GetData%2A> and specify the desired data format.  
  
 The system Clipboard is shared by all applications, so data on the Clipboard is subject to change by other applications.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string collection that contains a list of dropped files available on the Clipboard.</summary>
        <returns>A collection of strings, where each string specifies the name of a file in the list of dropped files on the Clipboard, or `null` if the data is unavailable in this format.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Imaging.BitmapSource GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Imaging.BitmapSource GetImage() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a &lt;see cref="T:System.Windows.Media.Imaging.BitmapSource"&gt; object from the Clipboard that contains data in the &lt;xref:System.Windows.DataFormats.Bitmap&gt; format.</summary>
        <returns>A &lt;see cref="T:System.Windows.Media.Imaging.BitmapSource"&gt; object that contains data in the &lt;xref:System.Windows.DataFormats.Bitmap&gt; format, or `null` if the data is unavailable in this format.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method returns a <xref:System.Windows.Media.Imaging.BitmapSource> object, either when data is available natively or when data can be auto-converted to the <xref:System.Windows.DataFormats.Bitmap> data format.  
  
 A bitmap represents a computer graphic as an array of bits in memory, and these bits represent the attributes of the individual pixels in an image.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string containing the &lt;see cref="F:System.Windows.DataFormats.UnicodeText"&gt; data on the Clipboard.</summary>
        <returns>A string containing the &lt;see cref="F:System.Windows.DataFormats.UnicodeText"&gt; data , or an empty string if no &lt;see cref="F:System.Windows.DataFormats.UnicodeText"&gt; data is available on the Clipboard.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Windows.DataFormats.UnicodeText> data format denotes 16-bit character encoded Unicode, also referred to as UTF-16, and UCS-2.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">A member of &lt;see cref="T:System.Windows.TextDataFormat"&gt; that specifies the text data format to retrieve.</param>
        <summary>Returns a string containing text data on the Clipboard.</summary>
        <returns>A string containing text data in the specified data format, or an empty string if no corresponding text data is available.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCurrent">
      <MemberSignature Language="C#" Value="public static bool IsCurrent (System.Windows.IDataObject data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCurrent(class System.Windows.IDataObject data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Windows.IDataObject" />
      </Parameters>
      <Docs>
        <param name="data">A data object to compare to the contents of the system Clipboard.</param>
        <summary>Compares a specified data object to the contents of the Clipboard.</summary>
        <returns>`true` if the specified data object matches what is on the system Clipboard; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this method to determine if a data object that was previously placed on the Clipboard is still present and unmodified.  
  
   
  
## Examples  
 The following example demonstrates the use of this method.  
  
 [!code-cs[DragDrop_DragDropMiscCode#_SetDataObjectIsCurrent](../../add/codesnippet/CSharp/DragDropMiscCode/Window1.xaml.cs#_setdataobjectiscurrent)]
 [!code-vb[DragDrop_DragDropMiscCode#_SetDataObjectIsCurrent](../../add/codesnippet/VisualBasic/dragdropmisccode/window1.xaml.vb#_setdataobjectiscurrent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">A byte array that contains audio data to store on the Clipboard.</param>
        <summary>Stores audio data (&lt;see cref="F:System.Windows.DataFormats.WaveAudio"&gt; data format) on the Clipboard.  The audio data is specified as a byte array.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method adds data with auto-conversion disabled.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public static void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">A stream that contains audio data to store on the Clipboard.</param>
        <summary>Stores audio data (&lt;see cref="F:System.Windows.DataFormats.WaveAudio"&gt; data format) on the Clipboard.  The audio data is specified as a stream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method adds data with auto-conversion disabled.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public static void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetData(string format, object data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A string that specifies the format to use to store the data. See the &lt;see cref="T:System.Windows.DataFormats"&gt; class for a set of predefined data formats.</param>
        <param name="data">An object representing the data to store on the Clipboard.</param>
        <summary>Stores the specified data on the Clipboard in the specified format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method adds data with auto-conversion enabled if the corresponding data format is <xref:System.Windows.DataFormats.FileDrop> or <xref:System.Windows.DataFormats.Bitmap>.  Otherwise, auto-conversion is disabled.  
  
   
  
## Examples  
 The following example demonstrates the use of this method.  
  
 [!code-cs[DragDrop_DragDropMiscCode#_SetData](../../add/codesnippet/CSharp/DragDropMiscCode/Window1.xaml.cs#_setdata)]
 [!code-vb[DragDrop_DragDropMiscCode#_SetData](../../add/codesnippet/VisualBasic/dragdropmisccode/window1.xaml.vb#_setdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">A data object (an object that implements &lt;see cref="T:System.Windows.IDataObject"&gt;) to place on the system Clipboard.</param>
        <summary>Places a specified non-persistent data object on the system Clipboard.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, data placed on the system Clipboard with <xref:System.Windows.Clipboard.SetDataObject%2A> is automatically cleared from the Clipboard when the application exits.  
  
> [!NOTE]
>  The default behavior of clearing the Clipboard on application exit might differ from other implementations, which might leave data on the Clipboard on application exit rather than clearing it by default.  Use the <xref:System.Windows.Clipboard.SetDataObject%2A> overload and specify the  parameter as `true` if you do not want data cleared from the Clipboard on application exit.  
>   
>  <xref:System.Windows.DataObject> provides a basic implementation of the <xref:System.Windows.IDataObject> interface.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataObject">
      <MemberSignature Language="C#" Value="public static void SetDataObject (object data, bool copy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDataObject(object data, bool copy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="copy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">A data object (an object that implements &lt;see cref="T:System.Windows.IDataObject"&gt;) to place on the system Clipboard.</param>
        <param name="copy">`true` to leave the data on the system Clipboard when the application exits; `false` to clear the data from the system Clipboard when the application exits.</param>
        <summary>Places a specified data object on the system Clipboard and accepts a Boolean parameter that indicates whether the data object should be left on the Clipboard when the application exits.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DataObject> provides a basic implementation of the <xref:System.Windows.IDataObject> interface. <xref:System.Windows.Clipboard.IsCurrent%2A> determines the data object previously placed on the clipboard by the last <xref:System.Windows.Clipboard.SetDataObject%2A> call.  
  
   
  
## Examples  
 The following example demonstrates the use of this method.  
  
 [!code-cs[DragDrop_DragDropMiscCode#_SetDataObjectIsCurrent](../../add/codesnippet/CSharp/DragDropMiscCode/Window1.xaml.cs#_setdataobjectiscurrent)]
 [!code-vb[DragDrop_DragDropMiscCode#_SetDataObjectIsCurrent](../../add/codesnippet/VisualBasic/dragdropmisccode/window1.xaml.vb#_setdataobjectiscurrent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public static void SetFileDropList (System.Collections.Specialized.StringCollection fileDropList);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFileDropList(class System.Collections.Specialized.StringCollection fileDropList) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDropList" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="fileDropList">A string collection that contains the dropped file list to store in the data object.</param>
        <summary>Stores &lt;see cref="F:System.Windows.DataFormats.FileDrop"&gt; data on the Clipboard.  The dropped file list is specified as a string collection.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method adds data with auto-conversion enabled.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public static void SetImage (System.Windows.Media.Imaging.BitmapSource image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetImage(class System.Windows.Media.Imaging.BitmapSource image) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Windows.Media.Imaging.BitmapSource" />
      </Parameters>
      <Docs>
        <param name="image">A &lt;see cref="T:System.Windows.Media.Imaging.BitmapSource"&gt; object that contains the image data to store on the Clipboard.</param>
        <summary>Stores &lt;see cref="F:System.Windows.DataFormats.Bitmap"&gt; data on the Clipboard.  The image data is specified as a &lt;xref:System.Windows.Media.Imaging.BitmapSource&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A bitmap represents a computer graphic as an array of bits in memory, and these bits represent the attributes of the individual pixels in an image.  
  
 This method adds data with auto-conversion enabled.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">A string that contains the &lt;see cref="F:System.Windows.DataFormats.UnicodeText"&gt; data to store on the Clipboard.</param>
        <summary>Stores &lt;see cref="F:System.Windows.DataFormats.UnicodeText"&gt; data on the Clipboard.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This data format denotes 16-bit character encoded Unicode, also referred to as UTF-16, and UCS-2.  
  
 This method adds data with auto-conversion disabled.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public static void SetText (string text, System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetText(string text, valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="text">A string that contains the text data to store on the Clipboard.</param>
        <param name="format">A member of &lt;see cref="T:System.Windows.TextDataFormat"&gt; that specifies the specific text data format to store.</param>
        <summary>Stores text data on the Clipboard in a specified text data format.  The &lt;see cref="F:System.Windows.DataFormats.UnicodeText"&gt; data to store is specified as a string.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method adds data with auto-conversion disabled.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>