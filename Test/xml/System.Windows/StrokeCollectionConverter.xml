<Type Name="StrokeCollectionConverter" FullName="System.Windows.StrokeCollectionConverter">
  <TypeSignature Language="C#" Value="public class StrokeCollectionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StrokeCollectionConverter extends System.ComponentModel.TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Converts a &lt;see cref="T:System.Windows.Ink.StrokeCollection"&gt; to a string.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The StrokeCollectionConverter converts a <xref:System.Windows.Ink.StrokeCollection> to a string that represents the <xref:System.Windows.Ink.StrokeCollection> in base-64, encoded Ink Serialized Format (ISF). It is useful to store ink data as base-64, encoded ISF when it is not possible to store raw byte data, such as in Web pages.  
  
<a name="XAMLTextUsage_StrokeCollectionConverter"></a>   
## XAML Text Usage  
   
  
## Examples  
 The following example demonstrates how to convert a base-64, encoded ISF string to a <xref:System.Windows.Ink.StrokeCollection>. This assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  
  
 [!code-cs[InkEraser#8](../../add/codesnippet/CSharp/MyInkEraser/InkEraser.cs#8)]
 [!code-vb[InkEraser#8](../../add/codesnippet/VisualBasic/MyInkEraser/InkEraser.vb#8)]  
[!code-cs[InkEraser#3](../../add/codesnippet/CSharp/MyInkEraser/InkEraser.cs#3)]
[!code-vb[InkEraser#3](../../add/codesnippet/VisualBasic/MyInkEraser/InkEraser.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollectionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Windows.StrokeCollectionConverter"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">An &lt;xref:System.ComponentModel.ITypeDescriptorContext&gt; that provides the format context.</param>
        <param name="sourceType">The &lt;see cref="T:System.Type"&gt; to convert from.</param>
        <summary>Returns a value that indicates whether the &lt;see cref="T:System.Windows.StrokeCollectionConverter"&gt; can convert an object of a specified type to a &lt;xref:System.Windows.Ink.StrokeCollection&gt;.</summary>
        <returns>`true` if the &lt;see cref="T:System.Windows.StrokeCollectionConverter"&gt; can convert an object of type  to a &lt;xref:System.Windows.Ink.StrokeCollection&gt;; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">An &lt;xref:System.ComponentModel.ITypeDescriptorContext&gt; that provides the format context.</param>
        <param name="destinationType">The &lt;see cref="T:System.Type"&gt; to convert to.</param>
        <summary>Returns a value that indicates whether the &lt;see cref="T:System.Windows.StrokeCollectionConverter"&gt; can convert a &lt;xref:System.Windows.Ink.StrokeCollection&gt; to the specified type.</summary>
        <returns>`true` if the &lt;see cref="T:System.Windows.StrokeCollectionConverter"&gt; can convert a &lt;xref:System.Windows.Ink.StrokeCollection&gt; to the ; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">An &lt;xref:System.ComponentModel.ITypeDescriptorContext&gt; that provides a format context.</param>
        <param name="culture">The &lt;see cref="T:System.Globalization.CultureInfo"&gt; to use as the current culture.</param>
        <param name="value">The &lt;see cref="T:System.Object"&gt; to convert.</param>
        <summary>Converts the specified object to a &lt;see cref="T:System.Windows.Ink.StrokeCollection"&gt;.</summary>
        <returns>A &lt;see cref="T:System.Windows.Ink.StrokeCollection"&gt; converted from .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ConvertFrom method returns `null` if  is not a <xref:System.String>.  
  
   
  
## Examples  
 The following example demonstrates how to convert a base-64, encoded Ink Serialized Format (ISF) string to a <xref:System.Windows.Ink.StrokeCollection>. This assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  
  
 [!code-cs[InkEraser#8](../../add/codesnippet/CSharp/MyInkEraser/InkEraser.cs#8)]
 [!code-vb[InkEraser#8](../../add/codesnippet/VisualBasic/MyInkEraser/InkEraser.vb#8)]  
[!code-cs[InkEraser#3](../../add/codesnippet/CSharp/MyInkEraser/InkEraser.cs#3)]
[!code-vb[InkEraser#3](../../add/codesnippet/VisualBasic/MyInkEraser/InkEraser.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">An &lt;xref:System.ComponentModel.ITypeDescriptorContext&gt; that provides a format context.</param>
        <param name="culture">The &lt;see cref="T:System.Globalization.CultureInfo"&gt; to use as the current culture.</param>
        <param name="value">The &lt;see cref="T:System.Object"&gt; to convert.</param>
        <param name="destinationType">The &lt;see cref="T:System.Type"&gt; to convert to.</param>
        <summary>Converts a &lt;see cref="T:System.Windows.Ink.StrokeCollection"&gt; to a string.</summary>
        <returns>An object that represents the specified &lt;see cref="T:System.Windows.Ink.StrokeCollection"&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ConvertTo method returns `null` if  is not a <xref:System.Windows.Ink.StrokeCollection>, or if  is not <xref:System.String> or <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.  
  
 The ConvertTo method returns a base-64, encoded Ink Serialized Format (ISF). It is useful to store ink data as base-64, encoded ISF when it is not possible to store raw byte data, such as in Web pages.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">An &lt;xref:System.ComponentModel.ITypeDescriptorContext&gt; that provides a format context.</param>
        <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
        <returns>`false` in all cases.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>