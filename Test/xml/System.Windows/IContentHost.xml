<Type Name="IContentHost" FullName="System.Windows.IContentHost">
  <TypeSignature Language="C#" Value="public interface IContentHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContentHost" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>This interface is implemented by layouts which host &lt;see cref="T:System.Windows.ContentElement"&gt;.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRectangles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt; GetRectangles (System.Windows.ContentElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Rect&gt; GetRectangles(class System.Windows.ContentElement child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.ContentElement" />
      </Parameters>
      <Docs>
        <param name="child">The child element that the bounding rectangles are returned for.</param>
        <summary>Returns a collection of bounding rectangles for a child element.</summary>
        <returns>A collection of bounding rectangles for a child element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostedElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt; HostedElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.IInputElement&gt; HostedElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an enumeration containing all descendant &lt;see cref="T:System.Windows.ContentElement"&gt;-derived classes, as well as all &lt;xref:System.Windows.UIElement&gt;-derived classes that are a direct descendant of the &lt;xref:System.Windows.IContentHost&gt; or one of its descendant &lt;see cref="T:System.Windows.ContentElement"&gt; classes.</summary>
        <value>Enumeration containing all descendant &lt;see cref="T:System.Windows.ContentElement"&gt;-derived classes, as well as all &lt;xref:System.Windows.UIElement&gt;-derived classes that are a direct descendant of the &lt;xref:System.Windows.IContentHost&gt; or one of its descendant &lt;see cref="T:System.Windows.ContentElement"&gt; classes. In other words, elements for which the &lt;xref:System.Windows.IContentHost&gt; creates a visual representation (&lt;see cref="T:System.Windows.ContentElement"&gt;-derived classes) or whose layout is driven by the &lt;xref:System.Windows.IContentHost&gt; (the first-level descendant &lt;xref:System.Windows.UIElement&gt;-derived classes).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">Mouse coordinates relative to the ContentHost.</param>
        <summary>Performs hit-testing for child elements.</summary>
        <returns>A descendant of &lt;see cref="T:System.Windows.IInputElement"&gt;, or **NULL** if no such element exists.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="public void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">Child element whose &lt;xref:System.Windows.UIElement.DesiredSize%2A&gt; has changed</param>
        <summary>Called when a &lt;see cref="T:System.Windows.UIElement"&gt;-derived class which is hosted by a &lt;xref:System.Windows.IContentHost&gt; changes its &lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>