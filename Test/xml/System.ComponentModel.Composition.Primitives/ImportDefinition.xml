<Type Name="ImportDefinition" FullName="System.ComponentModel.Composition.Primitives.ImportDefinition">
  <TypeSignature Language="C#" Value="public class ImportDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportDefinition extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an import that is required by a &lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"&gt; object.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ImportDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"&gt; class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Derived types that call this constructor must override the <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint%2A> property, and optionally, the <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A>, <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite%2A> and <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable%2A> properties.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportDefinition (System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,bool&gt;&gt; constraint, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt; constraint, string contractName, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="constraint" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean&gt;&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="constraint">An expression that contains a &lt;xref:System.Func%602&gt; object that defines the conditions an &lt;xref:System.ComponentModel.Composition.Primitives.Export&gt; must match to satisfy the import definition.</param>
        <param name="contractName">The contract name.</param>
        <param name="cardinality">One of the enumeration values that indicates the cardinality of the &lt;see cref="T:System.ComponentModel.Composition.Primitives.Export"&gt; objects required by the import definition.</param>
        <param name="isRecomposable">`true` to specify that the import definition can be satisfied multiple times throughout the lifetime of a &lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"&gt; object; otherwise, `false`.</param>
        <param name="isPrerequisite">`true` to specify that the import definition must be satisfied before a &lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"&gt; can start producing exported objects; otherwise, `false`.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"&gt; class with the specified constraint, contract name, and cardinality, and indicates whether the import definition is recomposable or a prerequisite.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportDefinition (System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,bool&gt;&gt; constraint, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt; constraint, string contractName, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="constraint" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean&gt;&gt;" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="constraint">An expression that contains a &lt;xref:System.Func%602&gt; object that defines the conditions an &lt;xref:System.ComponentModel.Composition.Primitives.Export&gt; must match to satisfy the import definition.</param>
        <param name="contractName">The contract name.</param>
        <param name="cardinality">One of the enumeration values that indicates the cardinality of the &lt;see cref="T:System.ComponentModel.Composition.Primitives.Export"&gt; objects required by the import definition.</param>
        <param name="isRecomposable">`true` to specify that the import definition can be satisfied multiple times throughout the lifetime of a &lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"&gt; object; otherwise, `false`.</param>
        <param name="isPrerequisite">`true` to specify that the import definition must be satisfied before a &lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart"&gt; can start producing exported objects; otherwise, `false`.</param>
        <param name="metadata">The metadata associated with the import.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"&gt; class with the specified constraint, contract name, cardinality, and metadata, and indicates whether the import definition is recomposable or a prerequisite.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cardinality">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Composition.Primitives.ImportCardinality Cardinality { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.Primitives.ImportCardinality Cardinality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ImportCardinality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cardinality of the exports required by the import definition.</summary>
        <value>One of the enumeration values that indicates the cardinality of the &lt;see cref="T:System.ComponentModel.Composition.Primitives.Export"&gt; objects required by the &lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition&gt;. The default is &lt;xref:System.ComponentModel.Composition.Primitives.ImportCardinality&gt;.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraint">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,bool&gt;&gt; Constraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt; Constraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an expression that defines conditions that the import must satisfy to match the import definition.</summary>
        <value>An expression that contains a &lt;xref:System.Func%602&gt; object that defines the conditions an &lt;xref:System.ComponentModel.Composition.Primitives.Export&gt; must satisfy to match the &lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Overrides of this property should never return `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public virtual string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the contract.</summary>
        <value>The contract name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstraintSatisfiedBy">
      <MemberSignature Language="C#" Value="public virtual bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsConstraintSatisfiedBy(class System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportDefinition" Type="System.ComponentModel.Composition.Primitives.ExportDefinition" />
      </Parameters>
      <Docs>
        <param name="exportDefinition">The export definition to test.</param>
        <summary>Gets a value that indicates whether the export represented by the specified definition satisfies the constraints of this import definition.</summary>
        <returns>`true` if the constraints are satisfied; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrerequisite">
      <MemberSignature Language="C#" Value="public virtual bool IsPrerequisite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrerequisite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the import definition must be satisfied before a part can start producing exported objects.</summary>
        <value>`true` if the &lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"&gt; must be satisfied before a &lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt; object can start producing exported objects; otherwise, `false`. The default is `true`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRecomposable">
      <MemberSignature Language="C#" Value="public virtual bool IsRecomposable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecomposable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the import definition can be satisfied multiple times.</summary>
        <value>`true` if the &lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition"&gt; can be satisfied multiple times throughout the lifetime of a &lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt; object; otherwise, `false`. The default is `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the metadata associated with this import.</summary>
        <value>A collection that contains the metadata associated with this import.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property should never return null. Imports with no metadata should return an empty <xref:System.Collections.Generic.IDictionary%602> collection.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of the import definition.</summary>
        <returns>A string representation of the import definition.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>