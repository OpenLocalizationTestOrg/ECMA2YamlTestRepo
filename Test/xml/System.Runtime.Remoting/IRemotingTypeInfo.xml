<Type Name="IRemotingTypeInfo" FullName="System.Runtime.Remoting.IRemotingTypeInfo">
  <TypeSignature Language="C#" Value="public interface IRemotingTypeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemotingTypeInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides type information for an object.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this interface to provide custom type information that is carried along with the <xref:System.Runtime.Remoting.ObjRef> objects.  
  
   
  
## Examples  
 [!CODE [Remoting.ObjRef#1](../CodeSnippet/VS_Snippets_Remoting/Remoting.ObjRef#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanCastTo">
      <MemberSignature Language="C#" Value="public bool CanCastTo (Type fromType, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanCastTo(class System.Type fromType, object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromType" Type="System.Type" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fromType">The type to cast to.</param>
        <param name="o">The object for which to check casting.</param>
        <summary>Checks whether the proxy that represents the specified object type can be cast to the type represented by the &lt;see cref="T:System.Runtime.Remoting.IRemotingTypeInfo"&gt; interface.</summary>
        <returns>`true` if cast will succeed; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The current method is called when an attempt is made to cast a proxy generated from a <xref:System.Runtime.Remoting.ObjRef>. This method takes into account the type information carried in the <xref:System.Runtime.Remoting.ObjRef>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the fully qualified type name of the server object in a &lt;see cref="T:System.Runtime.Remoting.ObjRef"&gt;.</summary>
        <value>The fully qualified type name of the server object in a &lt;see cref="T:System.Runtime.Remoting.ObjRef"&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!CODE [Remoting.ObjRef#1](../CodeSnippet/VS_Snippets_Remoting/Remoting.ObjRef#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>