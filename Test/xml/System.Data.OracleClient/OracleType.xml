<Type Name="OracleType" FullName="System.Data.OracleClient.OracleType">
  <TypeSignature Language="C#" Value="public enum OracleType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OracleType extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies the data type of a field or property for use in an &lt;see cref="T:System.Data.OracleClient.OracleParameter"&gt;.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The following table shows mappings between OracleType data types, Oracle data types, and .NET Framework types.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BFile">
      <MemberSignature Language="C#" Value="BFile" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType BFile = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `BFILE` data type that contains a reference to binary data with a maximum size of 4 gigabytes that is stored in an external file. Use the OracleClient &lt;see cref="T:System.Data.OracleClient.OracleBFile"&gt; data type with the &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt; property.</summary>
      </Docs>
    </Member>
    <Member MemberName="Blob">
      <MemberSignature Language="C#" Value="Blob" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Blob = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `BLOB` data type that contains binary data with a maximum size of 4 gigabytes. Use the OracleClient &lt;see cref="T:System.Data.OracleClient.OracleLob"&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="Byte">
      <MemberSignature Language="C#" Value="Byte" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Byte = int32(23)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integral type representing unsigned 8-bit integers with values between 0 and 255. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. Use the .NET Framework T:System.Byte?qualifyHint=False&amp;autoUpgrade=True data type in P:System.Data.OracleClient.OracleParameter.Value?qualifyHint=False&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="Char">
      <MemberSignature Language="C#" Value="Char" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Char = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `CHAR` data type that contains a fixed-length character string with a maximum size of 2,000 bytes. Use the .NET Framework &lt;see cref="T:System.String"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleString&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="Clob">
      <MemberSignature Language="C#" Value="Clob" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Clob = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `CLOB` data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes. Use the OracleClient &lt;see cref="T:System.Data.OracleClient.OracleLob"&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="Cursor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Cursor = int32(5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `REF CURSOR`. The &lt;see cref="T:System.Data.OracleClient.OracleDataReader"&gt; object is not available.</summary>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="DateTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType DateTime = int32(6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `DATE` data type that contains a fixed-length representation of a date and time, ranging from January 1, 4712 B.C. to December 31, A.D. 4712, with the default format *dd-mmm-yy*. For A.D. dates, `DATE` maps to &lt;see cref="T:System.DateTime"&gt;. To bind B.C. dates, use a `String` parameter and the Oracle TO_DATE or TO_CHAR conversion functions for input and output parameters respectively. Use the .NET Framework &lt;see cref="T:System.DateTime"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleDateTime&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="Double">
      <MemberSignature Language="C#" Value="Double" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Double = int32(30)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A double-precision floating-point value. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime (CLR) data types, see T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True. Use the .NET Framework T:System.Double?qualifyHint=False&amp;autoUpgrade=True or OracleClient T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True data type in P:System.Data.OracleClient.OracleParameter.Value?qualifyHint=False&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="Float">
      <MemberSignature Language="C#" Value="Float" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Float = int32(29)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A single-precision floating-point value. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime data types, see T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True. Use the .NET Framework T:System.Single?qualifyHint=False&amp;autoUpgrade=True or OracleClient T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True data type in P:System.Data.OracleClient.OracleParameter.Value?qualifyHint=False&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="Int16">
      <MemberSignature Language="C#" Value="Int16" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Int16 = int32(27)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integral type representing signed 16-bit integers with values between -32768 and 32767. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime (CLR) data types, see T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True. Use the .NET Framework T:System.Int16?qualifyHint=False&amp;autoUpgrade=True or OracleClient T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True data type in P:System.Data.OracleClient.OracleParameter.Value?qualifyHint=False&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="Int32">
      <MemberSignature Language="C#" Value="Int32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Int32 = int32(28)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647. This is not a native Oracle data type, but is provided for performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime data types, see T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True. Use the .NET Framework T:System.Int32?qualifyHint=False&amp;autoUpgrade=True or OracleClient T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True data type in P:System.Data.OracleClient.OracleParameter.Value?qualifyHint=False&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="IntervalDayToSecond">
      <MemberSignature Language="C#" Value="IntervalDayToSecond" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType IntervalDayToSecond = int32(7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `INTERVAL DAY TO SECOND` data type (Oracle 9i or later) that contains an interval of time in days, hours, minutes, and seconds, and has a fixed size of 11 bytes. Use the .NET Framework &lt;see cref="T:System.TimeSpan"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleTimeSpan&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="IntervalYearToMonth">
      <MemberSignature Language="C#" Value="IntervalYearToMonth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType IntervalYearToMonth = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `INTERVAL YEAR TO MONTH` data type (Oracle 9i or later) that contains an interval of time in years and months, and has a fixed size of 5 bytes. Use the .NET Framework &lt;see cref="T:System.Int32"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleMonthSpan&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="LongRaw">
      <MemberSignature Language="C#" Value="LongRaw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType LongRaw = int32(9)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `LONGRAW` data type that contains variable-length binary data with a maximum size of 2 gigabytes. Use the .NET Framework `Byte[]` or OracleClient &lt;see cref="T:System.Data.OracleClient.OracleBinary"&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you update a column with the `LONG RAW` data type, an exception is thrown when you enter a value of `NULL` in the column. The Oracle `LONG RAW` data type is a deprecated type in Oracle version 8.0. To avoid this error, use the `BLOB` data type instead of `LONG RAW`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LongVarChar">
      <MemberSignature Language="C#" Value="LongVarChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType LongVarChar = int32(10)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `LONG` data type that contains a variable-length character string with a maximum size of 2 gigabytes. Use the .NET Framework &lt;see cref="T:System.String"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleString&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="NChar">
      <MemberSignature Language="C#" Value="NChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType NChar = int32(11)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `NCHAR` data type that contains fixed-length character string to be stored in the national character set of the database, with a maximum size of 2,000 bytes (not characters) when stored in the database. The size of the value depends on the national character set of the database. See your Oracle documentation for more information. Use the .NET Framework &lt;see cref="T:System.String"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleString&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="NClob">
      <MemberSignature Language="C#" Value="NClob" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType NClob = int32(12)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `NCLOB` data type that contains character data to be stored in the national character set of the database, with a maximum size of 4 gigabytes (not characters) when stored in the database. The size of the value depends on the national character set of the database. See your Oracle documentation for more information. Use the .NET Framework &lt;see cref="T:System.String"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleString&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="Number" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Number = int32(13)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `NUMBER` data type that contains variable-length numeric data with a maximum precision and scale of 38. This maps to &lt;see cref="T:System.Decimal"&gt;. To bind an Oracle `NUMBER` that exceeds what &lt;xref:System.Decimal.MaxValue&gt; can contain, either use an &lt;xref:System.Data.OracleClient.OracleNumber&gt; data type, or use a `String` parameter and the Oracle TO_NUMBER or TO_CHAR conversion functions for input and output parameters respectively. Use the .NET Framework &lt;see cref="T:System.Decimal"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleNumber&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="NVarChar">
      <MemberSignature Language="C#" Value="NVarChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType NVarChar = int32(14)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `NVARCHAR2` data type that contains a variable-length character string stored in the national character set of the database, with a maximum size of 4,000 bytes (not characters) when stored in the database. The size of the value depends on the national character set of the database. See your Oracle documentation for more information. Use the .NET Framework &lt;see cref="T:System.String"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleString&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="Raw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Raw = int32(15)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `RAW` data type that contains variable-length binary data with a maximum size of 2,000 bytes. Use the .NET Framework `Byte[]` or OracleClient &lt;see cref="T:System.Data.OracleClient.OracleBinary"&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="RowId">
      <MemberSignature Language="C#" Value="RowId" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType RowId = int32(16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The base64 string representation of an Oracle `ROWID` data type. Use the .NET Framework &lt;see cref="T:System.String"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleString&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="SByte">
      <MemberSignature Language="C#" Value="SByte" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType SByte = int32(26)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integral type representing signed 8 bit integers with values between -128 and 127. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. Use the .NET Framework T:System.SByte?qualifyHint=False&amp;autoUpgrade=True data type in P:System.Data.OracleClient.OracleParameter.Value?qualifyHint=False&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="Timestamp" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType Timestamp = int32(18)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `TIMESTAMP` (Oracle 9i or later) that contains date and time (including seconds), and ranges in size from 7 to 11 bytes. Use the .NET Framework &lt;see cref="T:System.DateTime"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleDateTime&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="TimestampLocal">
      <MemberSignature Language="C#" Value="TimestampLocal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType TimestampLocal = int32(19)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `TIMESTAMP WITH LOCAL TIMEZONE` (Oracle 9i or later) that contains date, time, and a reference to the original time zone, and ranges in size from 7 to 11 bytes. Use the .NET Framework &lt;see cref="T:System.DateTime"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleDateTime&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="TimestampWithTZ">
      <MemberSignature Language="C#" Value="TimestampWithTZ" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType TimestampWithTZ = int32(20)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `TIMESTAMP WITH TIMEZONE` (Oracle 9i or later) that contains date, time, and a specified time zone, and has a fixed size of 13 bytes. Use the .NET Framework &lt;see cref="T:System.DateTime"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleDateTime&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
    <Member MemberName="UInt16">
      <MemberSignature Language="C#" Value="UInt16" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType UInt16 = int32(24)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integral type representing unsigned 16-bit integers with values between 0 and 65535. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime (CLR) data types, see T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True. Use the .NET Framework T:System.UInt16?qualifyHint=False&amp;autoUpgrade=True or OracleClient T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True data type in P:System.Data.OracleClient.OracleParameter.Value?qualifyHint=False&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="UInt32">
      <MemberSignature Language="C#" Value="UInt32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType UInt32 = int32(25)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integral type representing unsigned 32-bit integers with values between 0 and 4294967295. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime (CLR) data types, see T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True. Use the .NET Framework T:System.UInt32?qualifyHint=False&amp;autoUpgrade=True or OracleClient T:System.Data.OracleClient.OracleNumber?qualifyHint=False&amp;autoUpgrade=True data type in P:System.Data.OracleClient.OracleParameter.Value?qualifyHint=False&amp;autoUpgrade=True.</summary>
      </Docs>
    </Member>
    <Member MemberName="VarChar">
      <MemberSignature Language="C#" Value="VarChar" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.OracleClient.OracleType VarChar = int32(22)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An Oracle `VARCHAR2` data type that contains a variable-length character string with a maximum size of 4,000 bytes. Use the .NET Framework &lt;see cref="T:System.String"&gt; or OracleClient &lt;xref:System.Data.OracleClient.OracleString&gt; data type in &lt;xref:System.Data.OracleClient.OracleParameter.Value%2A&gt;.</summary>
      </Docs>
    </Member>
  </Members>
</Type>