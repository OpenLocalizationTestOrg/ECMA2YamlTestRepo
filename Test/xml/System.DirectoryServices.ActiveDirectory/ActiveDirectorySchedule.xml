<Type Name="ActiveDirectorySchedule" FullName="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
  <TypeSignature Language="C#" Value="public class ActiveDirectorySchedule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySchedule extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The ActiveDirectorySchedule class represents the weekly schedule for an Active Directory Domain Services replication.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySchedule (System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule schedule) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schedule" Type="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      </Parameters>
      <Docs>
        <param name="schedule">A &lt;see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"&gt; object that is copied to this object.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"&gt; class, using the specified &lt;see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"&gt; object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawSchedule">
      <MemberSignature Language="C#" Value="public bool[,,] RawSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool[,,] RawSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[,,]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a three-dimensional array that indicates at what time during the week that the source is available for replication.</summary>
        <value>A three-dimensional array of &lt;see cref="T:System.Boolean"&gt; elements in which the element is `true` if the source is available for replication during that specific 15-minute interval. The element is `false` if the source is not available for replication.  
  
 The array is in the form RawSchedule[\&lt;day-of-week&gt;, \&lt;hour&gt;, \&lt;15-minute interval&gt;]. All of these values are zero-based and the week begins at 00:00 on Sunday morning, Coordinated Universal Time.  
  
 The following are the valid values for the day-of-week.  
  
|Day-of-week value|Indicated day of the week.|  
|-------------------------|--------------------------------|  
|0|Sunday|  
|1|Monday|  
|2|Tuesday|  
|3|Wednesday|  
|4|Thursday|  
|5|Friday|  
|6|Saturday|  
  
 The hour is zero-based and specified in 24-hour format. For example, 2 P.M. would be specified as 14. Valid values are 0-23.  
  
 The 15-minute interval specifies the 15-minute block within the hour that the source is available for replication. The following table identifies the possible values for the 15-minute interval.  
  
|15-minute interval|Description|  
|-------------------------|-----------------|  
|0|The source is available for replication from 0 to 14 minutes after the hour.|  
|1|The source is available for replication from 15 to 29 minutes after the hour.|  
|2|The source is available for replication from 30 to 44 minutes after the hour.|  
|3|The source is available for replication from 45 to 59 minutes after the hour.|  
  
 The following C# example shows how to use this property to determine if the source is available for replication at 15:50 Coordinated Universal Time on Tuesday.  
  
```c#  
Boolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];  
```  
  
 The following C# example shows how to use this property to calculate the 15-minute interval at runtime by dividing the minutes by 15.  
  
```c#  
Boolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];  
```</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetSchedule">
      <MemberSignature Language="C#" Value="public void ResetSchedule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetSchedule() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the entire schedule to unavailable.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDailySchedule">
      <MemberSignature Language="C#" Value="public void SetDailySchedule (System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDailySchedule(valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="fromHour">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"&gt; members that specifies the first hour that the source will be available for replication.</param>
        <param name="fromMinute">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"&gt; members that specifies the first 15-minute interval that the source will be available for replication.</param>
        <param name="toHour">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"&gt; members that specifies the final hour that the source will be available for replication.</param>
        <param name="toMinute">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"&gt; members that specifies the final 15-minute interval that the source will be available for replication.</param>
        <summary>Adds a range of times for every day of the week to the schedule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All of the parameters in this method are inclusive.  
  
 This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek day, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek day, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="day" Type="System.DayOfWeek" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="day">One of the &lt;see cref="T:System.DayOfWeek"&gt; members that specifies the day of the week that the source will be available for replication.</param>
        <param name="fromHour">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"&gt; members that specifies the first hour that the source will be available for replication.</param>
        <param name="fromMinute">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"&gt; members that specifies the first 15-minute interval that the source will be available for replication.</param>
        <param name="toHour">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"&gt; members that specifies the final hour that the source will be available for replication.</param>
        <param name="toMinute">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"&gt; members that specifies the final 15-minute interval that the source will be available for replication.</param>
        <summary>Adds a range of times for a single day to the schedule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All of the parameters in this method are inclusive.  
  
 This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSchedule">
      <MemberSignature Language="C#" Value="public void SetSchedule (DayOfWeek[] days, System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, System.DirectoryServices.ActiveDirectory.HourOfDay toHour, System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSchedule(valuetype System.DayOfWeek[] days, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay fromHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour fromMinute, valuetype System.DirectoryServices.ActiveDirectory.HourOfDay toHour, valuetype System.DirectoryServices.ActiveDirectory.MinuteOfHour toMinute) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="days" Type="System.DayOfWeek[]" />
        <Parameter Name="fromHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="fromMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <Parameter Name="toHour" Type="System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <Parameter Name="toMinute" Type="System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
      </Parameters>
      <Docs>
        <param name="days">One of the &lt;see cref="T:System.DayOfWeek"&gt; members that specifies the day of the week that the source will be available for replication.</param>
        <param name="fromHour">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"&gt; members that specifies the first hour that the source will be available for replication.</param>
        <param name="fromMinute">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"&gt; members that specifies the first 15-minute interval that the source will be available for replication.</param>
        <param name="toHour">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"&gt; members that specifies the final hour that the source will be available for replication.</param>
        <param name="toMinute">One of the &lt;see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"&gt; members that specifies the final 15-minute interval that the source will be available for replication.</param>
        <summary>Adds a range of times for multiple days to the schedule.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 All of the parameters in this method are inclusive.  
  
 This method is cumulative and does not remove any existing schedule information. If an existing schedule and the new schedule overlap, the result will still be cumulative. To clear the schedule, use the <xref:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>