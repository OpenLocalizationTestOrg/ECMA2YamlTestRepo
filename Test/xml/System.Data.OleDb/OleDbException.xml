<Type Name="OleDbException" FullName="System.Data.OleDb.OleDbException">
  <TypeSignature Language="C#" Value="public sealed class OleDbException : System.Data.Common.DbException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit OleDbException extends System.Data.Common.DbException" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The exception that is thrown when the underlying provider returns a warning or error for an OLE DB data source. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This class is created whenever the .NET Framework Data Provider for OLE DB encounters an error generated from the server. (Client side errors are thrown as standard common language runtime exceptions.) OleDbException always contains at least one instance of <xref:System.Data.OleDb.OleDbError>.  
  
 If the severity of the error is too great, the server may close the <xref:System.Data.OleDb.OleDbConnection>. However, the user can reopen the connection and continue.  
  
 For general information about handling exceptions for a .NET Framework data provider, see <xref:System.Data.SqlClient.SqlException>.  
  
   
  
## Examples  
 The following example generates an OleDbException because of a missing data source, and then displays the exception.  
  
 [!CODE [Classic WebData OleDbException Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData OleDbException Example#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ErrorCode">
      <MemberSignature Language="C#" Value="public override int ErrorCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ErrorCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbException/ErrorCodeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the HRESULT of the error.</summary>
        <value>The HRESULT of the error.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbErrorCollection Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OleDb.OleDbErrorCollection Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbErrorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a collection of one or more &lt;see cref="T:System.Data.OleDb.OleDbError"&gt; objects that give detailed information about exceptions generated by the .NET Framework Data Provider for OLE DB.</summary>
        <value>The collected instances of the &lt;see cref="T:System.Data.OleDb.OleDbError"&gt; class.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Data.OleDb.OleDbErrorCollection> class always contains at least one instance of the <xref:System.Data.OleDb.OleDbError> class.  
  
 This is a wrapper for the <xref:System.Data.OleDb.OleDbErrorCollection> collection.  
  
   
  
## Examples  
 The following example displays each <xref:System.Data.OleDb.OleDbError> within the <xref:System.Data.OleDb.OleDbErrorCollection> collection.  
  
 [!CODE [Classic WebData OleDbError.Message Example#1](../CodeSnippet/VS_Snippets_ADO.NET/Classic WebData OleDbError.Message Example#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo si, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="si" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="si">The &lt;see cref="T:System.Runtime.Serialization.SerializationInfo"&gt; that holds the serialized object data about the exception being thrown.</param>
        <param name="context">The &lt;see cref="T:System.Runtime.Serialization.StreamingContext"&gt; that contains contextual information about the source or destination.</param>
        <summary>This member overrides &lt;xref:System.Exception.GetObjectData%2A&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization. During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>