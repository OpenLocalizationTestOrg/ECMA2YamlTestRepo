<Type Name="BookmarkOptions" FullName="System.Activities.BookmarkOptions">
  <TypeSignature Language="C#" Value="public enum BookmarkOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BookmarkOptions extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies the options for a &lt;see cref="T:System.Activities.Bookmark"&gt;.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="MultipleResume">
      <MemberSignature Language="C#" Value="MultipleResume" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.BookmarkOptions MultipleResume = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A &lt;see cref="T:System.Activities.Bookmark"&gt; that can be resumed multiple times.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, the workflow runtime removes a pending bookmark from its bookmarks table when resuming the bookmark. However if the bookmark is specified as F:System.Activities.BookmarkOptions.MultipleResume?qualifyHint=False&autoUpgrade=True, then the bookmark is not removed from the table and the same bookmark can be resumed multiple times. An example usage of F:System.Activities.BookmarkOptions.MultipleResume?qualifyHint=False&autoUpgrade=True is by looping activities such as T:System.Activities.While?qualifyHint=False&autoUpgrade=True, T:System.Activities.ForEach`1?qualifyHint=False&autoUpgrade=True, and T:System.Activities.Flowchart?qualifyHint=False&autoUpgrade=True.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonBlocking">
      <MemberSignature Language="C#" Value="NonBlocking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.BookmarkOptions NonBlocking = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A T:System.Activities.Bookmark?qualifyHint=False&amp;autoUpgrade=True that does not block the workflow.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, the workflow runtime does not consider an activity to have completed execution if it has pending bookmarks. However, if a bookmark is specified as F:System.Activities.BookmarkOptions.NonBlocking?qualifyHint=False&autoUpgrade=True at creation time, the workflow runtime allows the activity to complete execution even if it has pending F:System.Activities.BookmarkOptions.NonBlocking?qualifyHint=False&autoUpgrade=True bookmarks,  provided it has no other pending work.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Activities.BookmarkOptions None = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Default &lt;see cref="T:System.Activities.Bookmark"&gt; options,</summary>
      </Docs>
    </Member>
  </Members>
</Type>