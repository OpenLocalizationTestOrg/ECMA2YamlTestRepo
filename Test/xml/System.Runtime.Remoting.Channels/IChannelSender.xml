<Type Name="IChannelSender" FullName="System.Runtime.Remoting.Channels.IChannelSender">
  <TypeSignature Language="C#" Value="public interface IChannelSender : System.Runtime.Remoting.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelSender implements class System.Runtime.Remoting.Channels.IChannel" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides required functions and properties for the sender channels.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The sending side of channels must expose the IChannelSender interface.  
  
   
  
## Examples  
 [!CODE [IChannelSender#1](../CodeSnippet/VS_Snippets_Remoting/IChannelSender#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, string objectURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">The URL to which the new sink will deliver messages. Can be `null`.</param>
        <param name="remoteChannelData">The channel data object of the remote host to which the new sink will deliver messages. Can be `null`.</param>
        <param name="objectURI">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object. This parameter is passed uninitialized.</param>
        <summary>Returns a channel message sink that delivers messages to the specified URL or channel data object.</summary>
        <returns>A channel message sink that delivers messages to the specified URL or channel data object, or `null` if the channel cannot connect to the given endpoint.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The CreateMessageSink method returns a channel message sink that delivers messages to either the specified URL or the channel data object. If the  parameter is `null`, the  parameter is used as a target for the sink. Either the  parameter or the  parameter can be `null`, but not both.  
  
   
  
## Examples  
 [!CODE [IChannelSender#1](../CodeSnippet/VS_Snippets_Remoting/IChannelSender#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>