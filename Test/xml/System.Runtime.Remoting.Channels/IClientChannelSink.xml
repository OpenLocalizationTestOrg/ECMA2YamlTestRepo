<Type Name="IClientChannelSink" FullName="System.Runtime.Remoting.Channels.IClientChannelSink">
  <TypeSignature Language="C#" Value="public interface IClientChannelSink : System.Runtime.Remoting.Channels.IChannelSinkBase" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientChannelSink implements class System.Runtime.Remoting.Channels.IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides required functions and properties for client channel sinks.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object. Channel sinks are linked together in a chain of channel sink providers and all channel messages flow through this chain of sinks before they are serialized and transported.  
  
   
  
## Examples  
 The following code example illustrates an implementation of the IClientChannelSink interface.  
  
 [!CODE [Remoting_Sinks#20](../CodeSnippet/VS_Snippets_Remoting/Remoting_Sinks#20)]  
  
 See the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface documentation for an example of the corresponding client sink provider implementation.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncProcessRequest">
      <MemberSignature Language="C#" Value="public void AsyncProcessRequest (System.Runtime.Remoting.Channels.IClientChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessRequest(class System.Runtime.Remoting.Channels.IClientChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IClientChannelSinkStack" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">A stack of channel sinks that called this sink.</param>
        <param name="msg">The message to process.</param>
        <param name="headers">The headers to add to the outgoing message heading to the server.</param>
        <param name="stream">The stream headed to the transport sink.</param>
        <summary>Requests asynchronous processing of a method call on the current sink.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!CODE [SoapClientFormatterSinkProvider_BaseChannelSinkWithProperties#2](../CodeSnippet/VS_Snippets_Remoting/SoapClientFormatterSinkProvider_BaseChannelSinkWithProperties#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IClientResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">A stack of sinks that called this sink.</param>
        <param name="state">Information generated on the request side that is associated with this sink.</param>
        <param name="headers">The headers retrieved from the server response stream.</param>
        <param name="stream">The stream coming back from the transport sink.</param>
        <summary>Requests asynchronous processing of a response to a method call on the current sink.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!CODE [CommonTransportKeys#1](../CodeSnippet/VS_Snippets_Remoting/CommonTransportKeys#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetRequestStream (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetRequestStream(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="msg">The &lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage"&gt; containing details about the method call.</param>
        <param name="headers">The headers to add to the outgoing message heading to the server.</param>
        <summary>Returns the &lt;see cref="T:System.IO.Stream"&gt; onto which the provided message is to be serialized.</summary>
        <returns>The &lt;see cref="T:System.IO.Stream"&gt; onto which the provided message is to be serialized.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The GetRequestStream method is called by the formatter sink before it serializes the message.  
  
   
  
## Examples  
 The following code example illustrates an implementation of this method.  
  
 [!CODE [Remoting_Sinks#23](../CodeSnippet/VS_Snippets_Remoting/Remoting_Sinks#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IClientChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IClientChannelSink NextChannelSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IClientChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the next client channel sink in the client sink chain.</summary>
        <value>The next client channel sink in the client sink chain.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Channel sinks are linked together in a chain of sink providers and all channel messages flow through this chain before they are serialized and transported.  
  
   
  
## Examples  
 The following code example illustrates an implementation of this property.  
  
 [!CODE [Remoting_Sinks#22](../CodeSnippet/VS_Snippets_Remoting/Remoting_Sinks#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public void ProcessMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessage(class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, class System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, class System.IO.Stream responseStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders&amp;" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="msg">The message to process.</param>
        <param name="requestHeaders">The headers to add to the outgoing message heading to the server.</param>
        <param name="requestStream">The stream headed to the transport sink.</param>
        <param name="responseHeaders">When this method returns, contains a &lt;see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders"&gt; interface that holds the headers that the server returned. This parameter is passed uninitialized.</param>
        <param name="responseStream">When this method returns, contains a &lt;see cref="T:System.IO.Stream"&gt; coming back from the transport sink. This parameter is passed uninitialized.</param>
        <summary>Requests message processing from the current sink.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example illustrates an implementation of this method.  
  
 [!CODE [Remoting_Sinks#24](../CodeSnippet/VS_Snippets_Remoting/Remoting_Sinks#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>