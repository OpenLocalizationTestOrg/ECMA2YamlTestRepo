<Type Name="IdentityReferenceCollection" FullName="System.Security.Principal.IdentityReferenceCollection">
  <TypeSignature Language="C#" Value="public class IdentityReferenceCollection : System.Collections.Generic.ICollection&lt;System.Security.Principal.IdentityReference&gt;, System.Collections.Generic.IEnumerable&lt;System.Security.Principal.IdentityReference&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IdentityReferenceCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Security.Principal.IdentityReference&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Principal.IdentityReference&gt;, class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Security.Principal.IdentityReference&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Security.Principal.IdentityReference&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of &lt;see cref="T:System.Security.Principal.IdentityReference"&gt; objects and provides a means of converting sets of &lt;see cref="T:System.Security.Principal.IdentityReference"&gt;-derived objects to &lt;see cref="T:System.Security.Principal.IdentityReference"&gt;-derived types.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdentityReferenceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; class with zero items in the collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdentityReferenceCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">The initial number of items in the collection. The value of  is a hint only; it is not necessarily the maximum number of items created.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; class by using the specified initial size.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">The &lt;see cref="T:System.Security.Principal.IdentityReference"&gt; object to add to the collection.</param>
        <summary>Adds an &lt;see cref="T:System.Security.Principal.IdentityReference"&gt; object to the &lt;xref:System.Security.Principal.IdentityReferenceCollection&gt; collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears all &lt;see cref="T:System.Security.Principal.IdentityReference"&gt; objects from the &lt;xref:System.Security.Principal.IdentityReferenceCollection&gt; collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">The &lt;see cref="T:System.Security.Principal.IdentityReference"&gt; object to check for.</param>
        <summary>Indicates whether the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection contains the specified &lt;xref:System.Security.Principal.IdentityReference&gt; object.</summary>
        <returns>`true` if the collection contains the specified object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Security.Principal.IdentityReference[] array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Security.Principal.IdentityReference[] array, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Security.Principal.IdentityReference[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">An &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; array object to which the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection is to be copied.</param>
        <param name="offset">The zero-based index in  where the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection is to be copied.</param>
        <summary>Copies the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection to an &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; array, starting at the specified index.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of items in the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection.</summary>
        <value>The number of &lt;see cref="T:System.Security.Principal.IdentityReference"&gt; objects in the &lt;xref:System.Security.Principal.IdentityReferenceCollection&gt; collection.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Security.Principal.IdentityReference&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Security.Principal.IdentityReference&gt; GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Security.Principal.IdentityReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an enumerator that can be used to iterate through the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection.</summary>
        <returns>An enumerator for the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection is read-only.</summary>
        <value>Always returns `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReference this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IdentityReference Item(int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The zero-based index in the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection.</param>
        <summary>Sets or gets the node at the specified index of the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection.</summary>
        <value>The &lt;see cref="T:System.Security.Principal.IdentityReference"&gt; at the specified index in the collection. If  is greater than or equal to the number of nodes in the collection, the return value is `null`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">The &lt;see cref="T:System.Security.Principal.IdentityReference"&gt; object to remove.</param>
        <summary>Removes the specified &lt;see cref="T:System.Security.Principal.IdentityReference"&gt; object from the collection.</summary>
        <returns>`true` if the specified object was removed from the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an enumerator that can be used to iterate through the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection.</summary>
        <returns>An enumerator for the &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReferenceCollection Translate (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Principal.IdentityReferenceCollection Translate(class System.Type targetType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReferenceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType">The type to which items in the collection are being converted.</param>
        <summary>Converts the objects in the collection to the specified type. Calling this method is the same as calling &lt;xref:System.Security.Principal.IdentityReferenceCollection.Translate%28System.Type%2CSystem.Boolean%29&gt; with the second parameter set to `false`, which means that exceptions will not be thrown for items that fail conversion.</summary>
        <returns>A &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection that represents the converted contents of the original collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Order is preserved in the returned collection, That is, the first item in the returned collection corresponds to the first item in the source collection, and so on, for each item in the collection.  
  
 The items in the source collection are not required to be of the same type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IdentityReferenceCollection Translate (Type targetType, bool forceSuccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Principal.IdentityReferenceCollection Translate(class System.Type targetType, bool forceSuccess) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReferenceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="forceSuccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetType">The type to which items in the collection are being converted.</param>
        <param name="forceSuccess">A Boolean value that determines how conversion errors are handled.  
  
 If  is `true`, conversion errors due to a mapping not being found for the translation result in a failed conversion and exceptions being thrown.  
  
 If  is `false`, types that failed to convert due to a mapping not being found for the translation are copied without being converted into the collection being returned.</param>
        <summary>Converts the objects in the collection to the specified type and uses the specified fault tolerance to handle or ignore errors associated with a type not having a conversion mapping.</summary>
        <returns>A &lt;see cref="T:System.Security.Principal.IdentityReferenceCollection"&gt; collection that represents the converted contents of the original collection.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Order is preserved in the returned collection, That is, the first item in the returned collection corresponds to the first item in the source collection, and so on, for each item in the collection.  
  
 The items in the source collection are not required to be of the same type.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>