<Type Name="SecurityIdentifier" FullName="System.Security.Principal.SecurityIdentifier">
  <TypeSignature Language="C#" Value="public sealed class SecurityIdentifier : System.Security.Principal.IdentityReference, IComparable&lt;System.Security.Principal.SecurityIdentifier&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityIdentifier extends System.Security.Principal.IdentityReference implements class System.IComparable`1&lt;class System.Security.Principal.SecurityIdentifier&gt;" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Principal.IdentityReference</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Security.Principal.SecurityIdentifier&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a security identifier (SID) and provides marshaling and comparison operations for SIDs.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityIdentifier (IntPtr binaryForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int binaryForm) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="binaryForm">An integer that represents the binary form of a SID.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; class by using an integer that represents the binary form of a security identifier (SID).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityIdentifier (string sddlForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string sddlForm) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sddlForm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sddlForm">SDDL string for the SID used to create the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; class by using the specified security identifier (SID) in Security Descriptor Definition Language (SDDL) format.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityIdentifier (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="binaryForm">The byte array that represents the SID.</param>
        <param name="offset">The byte offset to use as the starting index in .</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; class by using a specified binary representation of a security identifier (SID).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityIdentifier (System.Security.Principal.WellKnownSidType sidType, System.Security.Principal.SecurityIdentifier domainSid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Principal.WellKnownSidType sidType, class System.Security.Principal.SecurityIdentifier domainSid) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sidType" Type="System.Security.Principal.WellKnownSidType" />
        <Parameter Name="domainSid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sidType">One of the enumeration values. This value must not be &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;.</param>
        <param name="domainSid">The domain SID. This value is required for the following &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt; values. This parameter is ignored for any other &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt; values.  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.WellKnownSidType"&gt;</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; class by using the specified well known security identifier (SID) type and domain SID.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccountDomainSid">
      <MemberSignature Language="C#" Value="public System.Security.Principal.SecurityIdentifier AccountDomainSid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.SecurityIdentifier AccountDomainSid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.SecurityIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the account domain security identifier (SID) portion from the SID represented by the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object if the SID represents a Windows account SID. If the SID does not represent a Windows account SID, this property returns &lt;xref:System.ArgumentNullException&gt;.</summary>
        <value>The account domain SID portion from the SID represented by the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object if the SID represents a Windows account SID; otherwise, it returns &lt;xref:System.ArgumentNullException&gt;.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryLength">
      <MemberSignature Language="C#" Value="public int BinaryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BinaryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the length, in bytes, of the security identifier (SID) represented by the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</summary>
        <value>The length, in bytes, of the SID represented by the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sid">The object to compare with the current object.</param>
        <summary>Compares the current &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object with the specified &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</summary>
        <returns>A signed number indicating the relative values of this instance and .  
  
|Return Value|Description|  
|------------------|-----------------|  
|Less than zero|This instance is less than .|  
|Zero|This instance is equal to .|  
|Greater than zero|This instance is greater than .|</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">An object to compare with this &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object, or `null`.</param>
        <summary>Returns a value that indicates whether this &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object is equal to a specified object.</summary>
        <returns>`true` if  is an object with the same underlying type and value as this &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sid">The object to compare with the current object.</param>
        <summary>Indicates whether the specified &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object is equal to the current &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</summary>
        <returns>`true` if the value of  is equal to the value of the current &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryForm">
      <MemberSignature Language="C#" Value="public void GetBinaryForm (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetBinaryForm(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="binaryForm">The byte array to receive the copied SID.</param>
        <param name="offset">The byte offset to use as the starting index in .</param>
        <summary>Copies the binary representation of the specified security identifier (SID) represented by the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; class to a byte array.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serves as a hash function for the current &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object. The GetHashCode method is suitable for hashing algorithms and data structures like a hash table.</summary>
        <returns>A hash value for the current &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAccountSid">
      <MemberSignature Language="C#" Value="public bool IsAccountSid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAccountSid() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a value that indicates whether the security identifier (SID) represented by this &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object is a valid Windows account SID.</summary>
        <returns>`true` if the SID represented by this &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object is a valid Windows account SID; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqualDomainSid">
      <MemberSignature Language="C#" Value="public bool IsEqualDomainSid (System.Security.Principal.SecurityIdentifier sid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEqualDomainSid(class System.Security.Principal.SecurityIdentifier sid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="sid">The SID to compare with this &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</param>
        <summary>Returns a value that indicates whether the security identifier (SID) represented by this &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object is from the same domain as the specified SID.</summary>
        <returns>`true` if the SID represented by this &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object is in the same domain as the  SID; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidTargetType">
      <MemberSignature Language="C#" Value="public override bool IsValidTargetType (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValidTargetType(class System.Type targetType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType">The type being queried for validity to serve as a conversion from &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt;. The following target types are valid:  
  
 \- &lt;xref:System.Security.Principal.NTAccount&gt;  
  
 \- &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt;</param>
        <summary>Returns a value that indicates whether the specified type is a valid translation type for the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; class.</summary>
        <returns>`true` if  is a valid translation type for the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; class; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWellKnown">
      <MemberSignature Language="C#" Value="public bool IsWellKnown (System.Security.Principal.WellKnownSidType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsWellKnown(valuetype System.Security.Principal.WellKnownSidType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Security.Principal.WellKnownSidType" />
      </Parameters>
      <Docs>
        <param name="type">A value to compare with the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</param>
        <summary>Returns a value that indicates whether the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object matches the specified well known security identifier (SID) type.</summary>
        <returns>`true` if  is the SID type for the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBinaryLength">
      <MemberSignature Language="C#" Value="public static readonly int MaxBinaryLength;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 MaxBinaryLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum size, in bytes, of the binary representation of the security identifier.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinBinaryLength">
      <MemberSignature Language="C#" Value="public static readonly int MinBinaryLength;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 MinBinaryLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum size, in bytes, of the binary representation of the security identifier.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Security.Principal.SecurityIdentifier left, class System.Security.Principal.SecurityIdentifier right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Principal.SecurityIdentifier" />
        <Parameter Name="right" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="left">The left operand to use for the equality comparison. This parameter can be `null`.</param>
        <param name="right">The right operand to use for the equality comparison. This parameter can be `null`.</param>
        <summary>Compares two &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; objects to determine whether they are equal. They are considered equal if they have the same canonical representation as the one returned by the &lt;xref:System.Security.Principal.SecurityIdentifier.Value%2A&gt; property or if they are both `null`.</summary>
        <returns>`true` if  and  are equal; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Security.Principal.SecurityIdentifier left, class System.Security.Principal.SecurityIdentifier right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Principal.SecurityIdentifier" />
        <Parameter Name="right" Type="System.Security.Principal.SecurityIdentifier" />
      </Parameters>
      <Docs>
        <param name="left">The left operand to use for the inequality comparison. This parameter can be `null`.</param>
        <param name="right">The right operand to use for the inequality comparison. This parameter can be `null`.</param>
        <summary>Compares two &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the &lt;xref:System.Security.Principal.SecurityIdentifier.Value%2A&gt; property or if one of the objects is `null` and the other is not.</summary>
        <returns>`true` if  and  are not equal; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the security identifier (SID), in Security Descriptor Definition Language (SDDL) format, for the account represented by the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object. An example of the SDDL format is S-1-5-9.</summary>
        <returns>The SID, in SDDL format, for the account represented by the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IdentityReference Translate (Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Principal.IdentityReference Translate(class System.Type targetType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IdentityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="targetType">The target type for the conversion from &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt;. The target type must be a type that is considered valid by the &lt;xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType%2A&gt; method.</param>
        <summary>Translates the account name represented by the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object into another &lt;xref:System.Security.Principal.IdentityReference&gt;-derived type.</summary>
        <returns>The converted identity.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an uppercase Security Descriptor Definition Language (SDDL) string for the security identifier (SID) represented by this &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</summary>
        <value>An uppercase SDDL string for the SID represented by the &lt;see cref="T:System.Security.Principal.SecurityIdentifier"&gt; object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>