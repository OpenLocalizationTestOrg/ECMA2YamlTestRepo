<Type Name="ConsoleCancelEventHandler" FullName="System.ConsoleCancelEventHandler">
  <TypeSignature Language="C#" Value="public delegate void ConsoleCancelEventHandler(object sender, ConsoleCancelEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConsoleCancelEventHandler extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ConsoleCancelEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The source of the event.</param>
    <param name="e">A &lt;xref:System.ConsoleCancelEventArgs?displayProperty=fullName&gt; object that contains the event data.</param>
    <summary>Represents the method that will handle the &lt;see cref="E:System.Console.CancelKeyPress"&gt; event of a &lt;xref:System.Console?displayProperty=fullName&gt;.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When you create a ConsoleCancelEventHandler delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [Events](../Topic/Handling%20and%20Raising%20Events.md).  
  
   
  
## Examples  
 The following code example demonstrates how to use the ConsoleCancelEventHandler class to handle an event.  
  
 [!CODE [console.cancelkeypress#1](../CodeSnippet/VS_Snippets_CLR/console.cancelkeypress#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>