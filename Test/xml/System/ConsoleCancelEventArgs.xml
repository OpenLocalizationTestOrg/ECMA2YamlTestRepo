<Type Name="ConsoleCancelEventArgs" FullName="System.ConsoleCancelEventArgs">
  <TypeSignature Language="C#" Value="public sealed class ConsoleCancelEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConsoleCancelEventArgs extends System.EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides data for the &lt;xref:System.Console.CancelKeyPress?displayProperty=fullName&gt; event. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A user can interrupt a console application process by simultaneously pressing the <xref:System.ConsoleModifiers> modifier key and the <xref:System.ConsoleKey> console key (Ctrl+C), or the <xref:System.ConsoleModifiers> modifier key and the Break console key (Ctrl+Break). The .NET Framework consequently provides a ConsoleCancelEventArgs object to the event handler for the <xref:System.Console.CancelKeyPress?displayProperty=fullName> event to specify whether the process should be cancelled.  
  
 If the <xref:System.ConsoleCancelEventArgs.Cancel%2A> property is set to `true` in the event handler, the process is resumed; otherwise, the process is terminated. By default, the value of the ConsoleCancelEventArgs property is `false`, and the process terminates.  
  
   
  
## Examples  
 The following example demonstrates how to use the ConsoleCancelEventArgs class to handle an event.  
  
 [!CODE [console.cancelkeypress#1](../CodeSnippet/VS_Snippets_CLR/console.cancelkeypress#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether simultaneously pressing the &lt;see cref="T:System.ConsoleModifiers"&gt; modifier key and the &lt;xref:System.ConsoleKey&gt; console key (Ctrl+C) or the Ctrl+Break keys terminates the current process. The default is `false`, which terminates the current process.</summary>
        <value>`true` if the current process should resume when the event handler concludes; `false` if the current process should terminate. The default value is `false`; the current process terminates when the event handler returns. If `true`, the current process continues.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Cancel property is automatically initialized to `false` when the handler for the <xref:System.Console.CancelKeyPress> event is invoked. The value of the Cancel property when the event handler finishes determines whether the current process resumes or terminates.  
  
 In a set operation after Ctrl+C is pressed, specify `true` to indicate that the current process should resume when the event handler concludes, or `false` to indicate that the current process should terminate.  
  
   
  
## Examples  
 The following example demonstrates how to use the Cancel property to handle an event.  
  
 [!CODE [console.cancelkeypress#1](../CodeSnippet/VS_Snippets_CLR/console.cancelkeypress#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecialKey">
      <MemberSignature Language="C#" Value="public ConsoleSpecialKey SpecialKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ConsoleSpecialKey SpecialKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleSpecialKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the combination of modifier and console keys that interrupted the current process.</summary>
        <value>One of the enumeration values that specifies the key combination that interrupted the current process. There is no default value.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to use the SpecialKey property to handle an event.  
  
 [!CODE [console.cancelkeypress#1](../CodeSnippet/VS_Snippets_CLR/console.cancelkeypress#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>