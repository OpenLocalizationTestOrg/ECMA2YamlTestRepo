<Type Name="ComponentCommands" FullName="System.Windows.Input.ComponentCommands">
  <TypeSignature Language="C#" Value="public static class ComponentCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ComponentCommands extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a standard set of component-related commands, which have predefined key input gestures and &lt;xref:System.Windows.Input.RoutedUICommand.Text%2A?displayProperty=fullName&gt; properties.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The commands in the ComponentCommands class and commands in the other command library classes, such as <xref:System.Windows.Input.ApplicationCommands> and <xref:System.Windows.Input.NavigationCommands>, are intended to represent a set of common commands that application programmers encounter frequently.  The commands only represent the instance of the <xref:System.Windows.Input.RoutedCommand> and not the implementation logic for the command. The implementation logic is bound to the command via a <xref:System.Windows.UIElement.CommandBindings%2A>. For example, if the <xref:System.Windows.Input.ComponentCommands.MoveLeft%2A> command is executed on a control (the command target), the logic that performs the <xref:System.Windows.Input.ComponentCommands.MoveLeft%2A> command may not be provided by the command target, so the application writer is responsible for writing the logic that determines how the command target handles the command.  
  
 Many controls do provide implementation logic, though, for many of the commands in the command library.  For example, the <xref:System.Windows.Controls.TextBox> class provides logic for the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command, <xref:System.Windows.Input.ApplicationCommands.Cut%2A> command, <xref:System.Windows.Input.ApplicationCommands.Copy%2A> command, <xref:System.Windows.Input.ApplicationCommands.Undo%2A> command, and <xref:System.Windows.Input.ApplicationCommands.Redo%2A> command. See the class documentation for particular control classes for more information.  
  
 For more information on commands and commanding, see [Commanding Overview](../Topic/Commanding%20Overview.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExtendSelectionDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ExtendSelectionDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ExtendSelectionDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Extend Selection Down command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Shift+Down|  
|UI Text|Extend Selection Down|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to extend the selection downward.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_ExtendSelectionDown"></a>   
## XAML Attribute Usage  
  
```  
<object property="ExtendSelectionDown"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendSelectionLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ExtendSelectionLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ExtendSelectionLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Extend Selection Left command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Shift+Left|  
|UI Text|Extend Selection Left|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to extend the selection to the left.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_ExtendSelectionLeft"></a>   
## XAML Attribute Usage  
  
```  
<object property="ExtendSelectionLeft"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendSelectionRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ExtendSelectionRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ExtendSelectionRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Extend Selection Right command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Shift+Right|  
|UI Text|Extend Selection Right|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to extend the selection to the right.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_ExtendSelectionRight"></a>   
## XAML Attribute Usage  
  
```  
<object property="ExtendSelectionRight"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendSelectionUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ExtendSelectionUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ExtendSelectionUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Extend Selection Up command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Shift+Up|  
|UI Text|Extend Selection Up|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to extend the selection upward.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_ExtendSelectionUp"></a>   
## XAML Attribute Usage  
  
```  
<object property="ExtendSelectionUp"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Down command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Down|  
|UI Text|Move Down|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to extend the selection down.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveDown"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveDown"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusBack">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Focus Back command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Ctrl+Left|  
|UI Text|Move Focus Back|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to extend the selection backward.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveFocusBack"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveFocusBack"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Focus Down command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Ctrl+Down|  
|UI Text|Move Focus Down|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to extend move the focus down.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveFocusDown"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveFocusDown"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Focus Forward command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Ctrl+Right|  
|UI Text|Move Focus Forward|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the focus forward.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveFocusForward"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveFocusForward"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusPageDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusPageDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusPageDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Focus Page Down command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Ctrl+PageDown|  
|UI Text|Move Focus Page Down|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the focus down one page.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveFocusPageDown"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveFocusPageDown"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusPageUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusPageUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusPageUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Focus Page Up command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Ctrl+PageUp|  
|UI Text|Move Focus Page Up|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the focus up one page.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveFocusPageUp"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveFocusPageUp"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveFocusUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveFocusUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Focus Up command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Ctrl+Up|  
|UI Text|Move Focus Up|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the focus up.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveFocusUp"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveFocusUp"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Left command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Left|  
|UI Text|Move Left|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the selection left.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveLeft"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveLeft"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Right command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Right|  
|UI Text|Move Right|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the selection right.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveRight"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveRight"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move To End command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|End|  
|UI Text|Move To End|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the selection to the last item.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveToEnd"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveToEnd"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToHome">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToHome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToHome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move To Home command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Home|  
|UI Text|Move To Home|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the selection to the first item.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveToHome"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveToHome"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToPageDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToPageDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToPageDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move To Page Down command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|PageDown|  
|UI Text|Move To Page Down|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the selection down one page.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveToPageDown"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveToPageDown"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToPageUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToPageUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToPageUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move To Page Up command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|PageUp|  
|UI Text|Move To Page Up|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the selection up one page.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveToPageUp"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveToPageUp"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Move Up command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Up|  
|UI Text|Move Up|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to move the selection up.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_MoveUp"></a>   
## XAML Attribute Usage  
  
```  
<object property="MoveUp"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Scroll By Line command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|No gesture defined|  
|UI Text|Scroll By Line|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to scroll vertically upward by a given number of lines.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_ScrollByLine"></a>   
## XAML Attribute Usage  
  
```  
<object property="ScrollByLine"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollPageDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollPageDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollPageDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Scroll Page Down command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|PageDown|  
|UI Text|Scroll Page Down|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to scroll vertically downward by a page.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_ScrollPageDown"></a>   
## XAML Attribute Usage  
  
```  
<object property="ScrollPageDown"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollPageLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollPageLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollPageLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Scroll Page Left command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|No gesture defined.|  
|UI Text|Scroll Page Left|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to scroll one page to the left.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_ScrollPageLeft"></a>   
## XAML Attribute Usage  
  
```  
<object property="ScrollPageLeft"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollPageRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollPageRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollPageRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Scroll Page Right command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|No gesture defined.|  
|UI Text|Scroll Page Right|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to scroll one page to the right.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_ScrollPageRight"></a>   
## XAML Attribute Usage  
  
```  
<object property="ScrollPageRight"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollPageUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ScrollPageUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ScrollPageUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Scroll Page Up command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|PageUp|  
|UI Text|Scroll Page Up|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to scroll vertically upward by a page.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_ScrollPageUp"></a>   
## XAML Attribute Usage  
  
```  
<object property="ScrollPageUp"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectToEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Select To End command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Shift+End|  
|UI Text|Select To End|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to select the items from the current item to the last item.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_SelectToEnd"></a>   
## XAML Attribute Usage  
  
```  
<object property="SelectToEnd"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectToHome">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToHome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToHome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Select To Home command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Shift+Home|  
|UI Text|Select To Home|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to extend select the items from the current item to the first item.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_SelectToHome"></a>   
## XAML Attribute Usage  
  
```  
<object property="SelectToHome"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectToPageDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToPageDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToPageDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Select To Page Down command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Shift+PageDown|  
|UI Text|Select To Page Down|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to select from the current item down one page.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_SelectToPageDown"></a>   
## XAML Attribute Usage  
  
```  
<object property="SelectToPageDown"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectToPageUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToPageUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToPageUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value that represents the Select To Page Up command.</summary>
        <value>The command.  
  
|Default Values||  
|--------------------|-|  
|Key Gesture|Shift+PageUp|  
|UI Text|Select To Page Up|</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This command indicates the intention to select from the current item up one page.  
  
 There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  
  
<a name="xamlAttributeUsage_SelectToPageUp"></a>   
## XAML Attribute Usage  
  
```  
<object property="SelectToPageUp"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>