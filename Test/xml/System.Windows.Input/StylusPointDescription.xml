<Type Name="StylusPointDescription" FullName="System.Windows.Input.StylusPointDescription">
  <TypeSignature Language="C#" Value="public class StylusPointDescription" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StylusPointDescription extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Specifies the properties that are in a &lt;see cref="T:System.Windows.Input.StylusPoint"&gt;.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A StylusPointDescription specifies which properties are associated with a <xref:System.Windows.Input.StylusPoint>. For each property in a <xref:System.Windows.Input.StylusPoint>, the StylusPointDescription contains a <xref:System.Windows.Input.StylusPointPropertyInfo> object which specifies constraints such as the minimum and maximum values of the property. Use the <xref:System.Windows.Input.StylusPointDescription.HasProperty%2A> and <xref:System.Windows.Input.StylusPointDescription.GetPropertyInfo%2A> methods to check for these properties in the StylusPointDescription.  
  
 All <xref:System.Windows.Input.StylusPoint> objects in a <xref:System.Windows.Input.StylusPointCollection> must share the same StylusPointDescription. If you try to add a <xref:System.Windows.Input.StylusPoint> to a <xref:System.Windows.Input.StylusPointCollection> that has a different StylusPointDescription, an exception will be thrown.  
  
   
  
## Examples  
 The following example gets the StylusPointDescription for a <xref:System.Windows.Input.StylusPointCollection> and gets the information for each <xref:System.Windows.Input.StylusPointPropertyInfo> in the StylusPointDescription.  
  
 [!code-cs[PacketSpy#2](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#2)]
 [!code-vb[PacketSpy#2](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#2)]  
[!code-cs[PacketSpy#4](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPointDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The default constructor creates a <xref:System.Windows.Input.StylusPointDescription> that contains information for the properties <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure>.  
  
   
  
## Examples  
 The following example creates a <xref:System.Windows.Input.StylusPointDescription> object and uses it to create a <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-cs[PacketSpy#5](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPointDescription (System.Collections.Generic.IEnumerable&lt;System.Windows.Input.StylusPointPropertyInfo&gt; stylusPointPropertyInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.StylusPointPropertyInfo&gt; stylusPointPropertyInfos) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stylusPointPropertyInfos" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Input.StylusPointPropertyInfo&gt;" />
      </Parameters>
      <Docs>
        <param name="stylusPointPropertyInfos">A generic IEnumerable of type &lt;see cref="T:System.Windows.Input.StylusPointPropertyInfo"&gt; that specifies the properties in the &lt;xref:System.Windows.Input.StylusPointDescription&gt;.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; class with the specified &lt;xref:System.Windows.Input.StylusPointPropertyInfo&gt; objects.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You must pass in <xref:System.Windows.Input.StylusPointPropertyInfo> objects for the properties, <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure>.  
  
   
  
## Examples  
 The following example creates an <xref:System.Windows.Input.StylusPointDescription> object and uses it to create a <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-cs[PacketSpy#5](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreCompatible">
      <MemberSignature Language="C#" Value="public static bool AreCompatible (System.Windows.Input.StylusPointDescription stylusPointDescription1, System.Windows.Input.StylusPointDescription stylusPointDescription2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreCompatible(class System.Windows.Input.StylusPointDescription stylusPointDescription1, class System.Windows.Input.StylusPointDescription stylusPointDescription2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointDescription1" Type="System.Windows.Input.StylusPointDescription" />
        <Parameter Name="stylusPointDescription2" Type="System.Windows.Input.StylusPointDescription" />
      </Parameters>
      <Docs>
        <param name="stylusPointDescription1">The first &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; to check.</param>
        <param name="stylusPointDescription2">The second &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; to check.</param>
        <summary>Returns a value that indicates whether the specified &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; objects are identical.</summary>
        <returns>`true` if the &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; objects are identical; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Two <xref:System.Windows.Input.StylusPointDescription> objects are compatible if they contain the same <xref:System.Windows.Input.StylusPointPropertyInfo> objects in the same order.  
  
   
  
## Examples  
 The following example checks whether two <xref:System.Windows.Input.StylusPointDescription> objects are compatible.  
  
 [!code-cs[PacketSpy#22](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#22)]
 [!code-vb[PacketSpy#22](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#22)]  
[!code-cs[PacketSpy#23](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#23)]
[!code-vb[PacketSpy#23](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommonDescription">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.StylusPointDescription GetCommonDescription (System.Windows.Input.StylusPointDescription stylusPointDescription, System.Windows.Input.StylusPointDescription stylusPointDescriptionPreserveInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.StylusPointDescription GetCommonDescription(class System.Windows.Input.StylusPointDescription stylusPointDescription, class System.Windows.Input.StylusPointDescription stylusPointDescriptionPreserveInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointDescription" Type="System.Windows.Input.StylusPointDescription" />
        <Parameter Name="stylusPointDescriptionPreserveInfo" Type="System.Windows.Input.StylusPointDescription" />
      </Parameters>
      <Docs>
        <param name="stylusPointDescription">The first &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; to intersect.</param>
        <param name="stylusPointDescriptionPreserveInfo">The second &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; to intersect.</param>
        <summary>Returns the intersection of the specified &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; objects.</summary>
        <returns>A &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; that contains the properties that are present if both of the specified &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; objects.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 and  may have a common property, yet the constraints specified in their respective <xref:System.Windows.Input.StylusPointPropertyInfo> objects differ. If the constraints differ, the GetCommonDescription method uses the <xref:System.Windows.Input.StylusPointPropertyInfo> from .  
  
   
  
## Examples  
 The following example demonstrates how to find the common <xref:System.Windows.Input.StylusPointDescription> from two different <xref:System.Windows.Input.StylusPointDescription> objects.  
  
 [!code-cs[PacketSpy#26](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#26)]
 [!code-vb[PacketSpy#26](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointPropertyInfo GetPropertyInfo (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.StylusPointPropertyInfo GetPropertyInfo(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointPropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">The &lt;see cref="T:System.Windows.Input.StylusPointProperty"&gt; that specifies the property of the desired &lt;xref:System.Windows.Input.StylusPointPropertyInfo&gt;.</param>
        <summary>Gets the &lt;see cref="T:System.Windows.Input.StylusPointPropertyInfo"&gt; for the specified property.</summary>
        <returns>The &lt;see cref="T:System.Windows.Input.StylusPointPropertyInfo"&gt; for the specified &lt;xref:System.Windows.Input.StylusPointProperty&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to get the information about a property from a <xref:System.Windows.Input.StylusPointDescription>. This example assumes that the <xref:System.Windows.UIElement.StylusMove> event has been connected to the event handler below.  
  
 [!code-cs[PacketSpy#21](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#21)]
 [!code-vb[PacketSpy#21](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStylusPointProperties">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Input.StylusPointPropertyInfo&gt; GetStylusPointProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Input.StylusPointPropertyInfo&gt; GetStylusPointProperties() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Input.StylusPointPropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets all the properties of the &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt;.</summary>
        <returns>A collection that contains all of the &lt;see cref="T:System.Windows.Input.StylusPointPropertyInfo"&gt; objects in the &lt;xref:System.Windows.Input.StylusPointDescription&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example gets the <xref:System.Windows.Input.StylusPointDescription> for a <xref:System.Windows.Input.StylusPointCollection> together with the information for each <xref:System.Windows.Input.StylusPointPropertyInfo> in the <xref:System.Windows.Input.StylusPointDescription>.  
  
 [!code-cs[PacketSpy#2](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#2)]
 [!code-vb[PacketSpy#2](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#2)]  
[!code-cs[PacketSpy#4](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProperty">
      <MemberSignature Language="C#" Value="public bool HasProperty (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasProperty(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">The &lt;see cref="T:System.Windows.Input.StylusPointProperty"&gt; to check for in the &lt;xref:System.Windows.Input.StylusPointDescription&gt;.</param>
        <summary>Returns a value that indicates whether the current &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; has the specified property.</summary>
        <returns>`true` if the &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; has the specified &lt;xref:System.Windows.Input.StylusPointProperty&gt;; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to get the information about a property from a <xref:System.Windows.Input.StylusPointDescription>. This example assumes that the <xref:System.Windows.UIElement.StylusMove> event has been connected to the event handler.  
  
 [!code-cs[PacketSpy#21](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#21)]
 [!code-vb[PacketSpy#21](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Windows.Input.StylusPointDescription stylusPointDescriptionSuperset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(class System.Windows.Input.StylusPointDescription stylusPointDescriptionSuperset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointDescriptionSuperset" Type="System.Windows.Input.StylusPointDescription" />
      </Parameters>
      <Docs>
        <param name="stylusPointDescriptionSuperset">The &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; against which to check whether the current &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; is a subset.</param>
        <summary>Returns a value that indicates whether the current &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; is a subset of the specified &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt;.</summary>
        <returns>`true` if the current &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt; is a subset of the specified &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt;; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example checks whether `description2` is a subset of `description1`.  
  
 [!code-cs[PacketSpy#22](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#22)]
 [!code-vb[PacketSpy#22](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#22)]  
[!code-cs[PacketSpy#24](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#24)]
[!code-vb[PacketSpy#24](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCount">
      <MemberSignature Language="C#" Value="public int PropertyCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PropertyCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of properties in the &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt;.</summary>
        <value>The number of properties in the &lt;see cref="T:System.Windows.Input.StylusPointDescription"&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to get the properties of each <xref:System.Windows.Input.StylusPoint> in a <xref:System.Windows.Input.StylusPointCollection>. This example assumes there is a <xref:System.Windows.Controls.TextBlock> called `packetOutput`.  
  
 [!code-cs[PacketSpy#3](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#3)]  
[!code-cs[PacketSpy#4](../../add/codesnippet/CSharp/PacketSpy/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](../../add/codesnippet/VisualBasic/PacketSpy/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>