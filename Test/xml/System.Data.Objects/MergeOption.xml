<Type Name="MergeOption" FullName="System.Data.Objects.MergeOption">
  <TypeSignature Language="C#" Value="public enum MergeOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MergeOption extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Specifies how objects being loaded into the object context are merged with objects already in the object context.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The [!INCLUDE[adonet_ef](../../add/includes/adonet-ef-md.md)] only maintains a single instance of an object with a specific entity key in the cache. The <xref:System.Data.EntityKey> objects are immutable objects that that represent object's identity. Entity keys are used to perform identity resolution in the object context. For more information, see [Working with Entity Keys](http://msdn.microsoft.com/en-us/fe3f4206-d277-43a1-a72f-4e86fdf12b9f). If an entity with the same identity is already being tracked, the data coming from the data source and the data already in the state manager are merged according to the MergeOption of the query.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendOnly">
      <MemberSignature Language="C#" Value="AppendOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption AppendOnly = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Objects that do not exist in the object context are attached to the context. If an object is already in the context, the current and original values of object's properties in the entry are not overwritten with data source values. The state of the object's entry and state of properties of the object in the entry do not change. F:System.Data.Objects.MergeOption.AppendOnly?qualifyHint=False&amp;autoUpgrade=True is the default merge option.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoTracking">
      <MemberSignature Language="C#" Value="NoTracking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption NoTracking = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Objects are maintained in a F:System.Data.EntityState.Detached?qualifyHint=False&amp;autoUpgrade=True state and are not tracked in the T:System.Data.Objects.ObjectStateManager?qualifyHint=False&amp;autoUpgrade=True. However, [!INCLUDE[adonet_ef](../../add/includes/adonet-ef-md.md)]-generated entities and POCO entities with proxies maintain a reference to the object context to facilitate loading of related objects.</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption OverwriteChanges = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Objects that do not exist in the object context are attached to the context. If an object is already in the context, the current and original values of object's properties in the entry are overwritten with data source values. The state of the object's entry is set to F:System.Data.EntityState.Unchanged?qualifyHint=False&amp;autoUpgrade=True, no properties are marked as modified.</summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveChanges">
      <MemberSignature Language="C#" Value="PreserveChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption PreserveChanges = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Objects that do not exist in the object context are attached to the context.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the state of the entity is F:System.Data.EntityState.Unchanged?qualifyHint=False&autoUpgrade=True, the current and original values in the entry are overwritten with data source values. The state of the entity remains F:System.Data.EntityState.Unchanged?qualifyHint=False&autoUpgrade=True and no properties are marked as modified.  
  
 If the state of the entity is F:System.Data.EntityState.Modified?qualifyHint=False&autoUpgrade=True, the current values of modified properties are not overwritten with data source values. The original values of unmodified properties are overwritten with the values from the data source.  
  
 In the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] version 4, the [!INCLUDE[adonet_ef](../../add/includes/adonet-ef-md.md)] compares the current values of unmodified properties with the values that were returned from the data source. If the values are not the same, the property is marked as modified.  
  
 In the [!INCLUDE[dnprdnshort](../../add/includes/dnprdnshort-md.md)] version 3.5 SP1, the [!INCLUDE[adonet_ef](../../add/includes/adonet-ef-md.md)] does not mark the property as modified, even if the value in the data source is different.  
  
 Only modified properties are persisted to the data source when you call M:System.Data.Objects.ObjectContext.SaveChanges?qualifyHint=False&autoUpgrade=True.  
  
 To preserve the 3.5 SP1 behavior, set P:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior?qualifyHint=False&autoUpgrade=True to `true`. The F:System.Data.Objects.MergeOption.PreserveChanges?qualifyHint=False&autoUpgrade=True option can be used to resolve optimistic concurrency exceptions while preserving changes in the local context. For more information, see [Saving Changes and Managing Concurrency](http://msdn.microsoft.com/en-us/b8378601-4f26-4a05-a24a-f50aeb68610e).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>