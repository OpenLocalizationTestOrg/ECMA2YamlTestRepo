<Type Name="ProxyDataContractResolver" FullName="System.Data.Objects.ProxyDataContractResolver">
  <TypeSignature Language="C#" Value="public class ProxyDataContractResolver : System.Runtime.Serialization.DataContractResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyDataContractResolver extends System.Runtime.Serialization.DataContractResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Serialization.DataContractResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This class helps resolve proxy types that were created for [persistence-ignorant](http://msdn.microsoft.com/en-us/5e0fb82a-b6d1-41a1-b37b-c12db61629d3) data classes to the actual types of persistence-ignorant objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The ProxyDataContractResolver class is used with the <xref:System.Runtime.Serialization.DataContractSerializer>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyDataContractResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.Objects.ProxyDataContractResolver"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveName">
      <MemberSignature Language="C#" Value="public override Type ResolveName (string typeName, string typeNamespace, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type ResolveName(string typeName, string typeNamespace, class System.Type declaredType, class System.Runtime.Serialization.DataContractResolver knownTypeResolver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeNamespace" Type="System.String" />
        <Parameter Name="declaredType" Type="System.Type" />
        <Parameter Name="knownTypeResolver" Type="System.Runtime.Serialization.DataContractResolver" />
      </Parameters>
      <Docs>
        <param name="typeName">The `xsi:type` information to map.</param>
        <param name="typeNamespace">The namespace of the `xsi:type`.</param>
        <param name="declaredType">The declared type.</param>
        <param name="knownTypeResolver">An instance of &lt;see cref="T:System.Data.Objects.ProxyDataContractResolver"&gt;.</param>
        <summary>During deserialization, maps any `xsi:type` information to the actual type of the [persistence-ignorant](http://msdn.microsoft.com/en-us/5e0fb82a-b6d1-41a1-b37b-c12db61629d3) object.</summary>
        <returns>Returns the type that the `xsi:type` is mapped to. Returns `null` if no known type was found that matches the `xsi:type`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see: [Working with POCO Entities](http://msdn.microsoft.com/en-us/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveType">
      <MemberSignature Language="C#" Value="public override bool TryResolveType (Type dataContractType, Type declaredType, System.Runtime.Serialization.DataContractResolver knownTypeResolver, out System.Xml.XmlDictionaryString typeName, out System.Xml.XmlDictionaryString typeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryResolveType(class System.Type dataContractType, class System.Type declaredType, class System.Runtime.Serialization.DataContractResolver knownTypeResolver, class System.Xml.XmlDictionaryString typeName, class System.Xml.XmlDictionaryString typeNamespace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataContractType" Type="System.Type" />
        <Parameter Name="declaredType" Type="System.Type" />
        <Parameter Name="knownTypeResolver" Type="System.Runtime.Serialization.DataContractResolver" />
        <Parameter Name="typeName" Type="System.Xml.XmlDictionaryString&amp;" RefType="out" />
        <Parameter Name="typeNamespace" Type="System.Xml.XmlDictionaryString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataContractType">The actual type of the persistence-ignorant object.</param>
        <param name="declaredType">The declared type.</param>
        <param name="knownTypeResolver">An instance of &lt;see cref="T:System.Data.Objects.ProxyDataContractResolver"&gt;.</param>
        <param name="typeName">When this method returns, contains a list of `xsi:type` declarations.</param>
        <param name="typeNamespace">When this method returns, contains a list of namespaces used.</param>
        <summary>During serialization, maps actual types to `xsi:type` information.</summary>
        <returns>`true` if the type was resolved; otherwise, `false`.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see: [Working with POCO Entities](http://msdn.microsoft.com/en-us/5e0fb82a-b6d1-41a1-b37b-c12db61629d3).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>