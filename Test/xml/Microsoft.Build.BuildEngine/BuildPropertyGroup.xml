<Type Name="BuildPropertyGroup" FullName="Microsoft.Build.BuildEngine.BuildPropertyGroup">
  <TypeSignature Language="C#" Value="public class BuildPropertyGroup : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BuildPropertyGroup extends System.Object implements class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Engine</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("BuildPropertyGroup (Count = { Count }, Condition = { Condition })")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a collection of &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt; objects.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A BuildPropertyGroup object can represent a  element in the project, or a virtual collection of properties, such as global properties or environment variable properties.  
  
   
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildProperty>, BuildPropertyGroup, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection> classes are used to add, remove, and change items in the project.  
  
 [!code-cs[msbuild_AddNewProperty#1](../../../../../../../add/codesnippet/CSharp/AddNewProperty/Program.cs#1)]
 [!code-vb[msbuild_AddNewProperty#1](../../../../../../../add/codesnippet/VisualBasic/AddNewProperty/Module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildPropertyGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildPropertyGroup (Microsoft.Build.BuildEngine.Project parentProject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.BuildEngine.Project parentProject) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProject" Type="Microsoft.Build.BuildEngine.Project" />
      </Parameters>
      <Docs>
        <param name="parentProject">The name of the Project in which to add the new PropertyGroup.</param>
        <summary>Initializes a new PropertyGroup element in the specified project.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 See [PropertyGroup Element (MSBuild)](../Topic/PropertyGroup%20Element%20\(MSBuild\).md) for more information on property groups.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNewProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildProperty AddNewProperty (string propertyName, string propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildProperty AddNewProperty(string propertyName, string propertyValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt; property value to assign the new &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt;.</param>
        <param name="propertyValue">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Value%2A&gt; property value to assign the new &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt;.</param>
        <summary>Adds a new &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt; with the specified &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt; and &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Value%2A&gt; to the &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup&gt;.</summary>
        <returns>The new &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildProperty>, <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection> classes are used to add, remove, and change items in the project.  
  
 [!code-cs[msbuild_AddNewProperty#1](../../../../../../../add/codesnippet/CSharp/AddNewProperty/Program.cs#1)]
 [!code-vb[msbuild_AddNewProperty#1](../../../../../../../add/codesnippet/VisualBasic/AddNewProperty/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNewProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildProperty AddNewProperty (string propertyName, string propertyValue, bool treatPropertyValueAsLiteral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildProperty AddNewProperty(string propertyName, string propertyValue, bool treatPropertyValueAsLiteral) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
        <Parameter Name="treatPropertyValueAsLiteral" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt; property value to assign the new &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt;.</param>
        <param name="propertyValue">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Value%2A&gt; property value to assign the new &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt;.</param>
        <param name="treatPropertyValueAsLiteral">`true` to treat the  parameter as a literal value; otherwise, `false`.</param>
        <summary>Adds a new &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt; with the specified &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt; and &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Value%2A&gt; to the &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup&gt;.</summary>
        <returns>The new &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt;.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup.Condition%2A&gt; property value and all &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt; objects from the &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildPropertyGroup Clone (bool deepClone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildPropertyGroup Clone(bool deepClone) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildPropertyGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deepClone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deepClone">`true` to create a deep copy of the &lt;see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"&gt;; otherwise, `false`.</param>
        <summary>Creates a deep or shallow copy of the &lt;see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"&gt;.</summary>
        <returns>A copy of the &lt;see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A shallow copy of a <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> references the same property group as the original. Modifications a shallow copy will be reflected in both copies.  
  
 A deep copy of a <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> creates a new XML element to reference so that both copies of the <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> can be independently modified.  
  
 If the <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> corresponds directly to a  element in the project (rather than corresponding to a collection of virtual properties, such as environment variable and global properties), only deep copies are allowed.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public string Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the `Condition` attribute value of the property group.</summary>
        <value>The `Condition` attribute value of the property group.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the number of &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt; objects in the &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup&gt;.</summary>
        <value>An integer value representing the number of &lt;see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"&gt; objects in the collection.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> object can represent a  element in the project, or a virtual collection of properties, such as global properties or environment variable properties.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an enumerator that iterates through the &lt;see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup"&gt;.</summary>
        <returns>An &lt;xref:System.Collections.IEnumerator&gt; for the entire &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method allows the caller to use the `foreach` statement of the C# language (`for each` in [!INCLUDE[vbprvb](../../../../../../../add/includes/vbprvb-md.md)]) to iterate through the individual <xref:Microsoft.Build.BuildEngine.BuildProperty> objects in the <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup>.  
  
   
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildProperty><xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> classes to list all the items and properties in the project.  
  
 [!code-vb[msbuild_ListItemsAndProperties#1](../../../../../../../add/codesnippet/VisualBasic/ListItemAndPropertiesVB/Module1.vb#1)]
 [!code-cs[msbuild_ListItemsAndProperties#1](../../../../../../../add/codesnippet/CSharp/ListItemAndPropertiesCS/Program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating whether the property group was imported into the project.</summary>
        <value>`true` if the property group was imported into the project; otherwise, `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildProperty this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.BuildProperty Item(string)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt; value of the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt; to get or set.</param>
        <summary>Gets or sets a &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt; object in this &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup&gt;.</summary>
        <value>A &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt; object in this &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup&gt;.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public void RemoveProperty (Microsoft.Build.BuildEngine.BuildProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveProperty(class Microsoft.Build.BuildEngine.BuildProperty property) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.BuildEngine.BuildProperty" />
      </Parameters>
      <Docs>
        <param name="property">The &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt; to remove.</param>
        <summary>Removes the specified &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt; from the &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildProperty>, <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection> classes are used to add, remove, and change items in the project.  
  
 [!code-cs[msbuild_AddNewProperty#1](../../../../../../../add/codesnippet/CSharp/AddNewProperty/Program.cs#1)]
 [!code-vb[msbuild_AddNewProperty#1](../../../../../../../add/codesnippet/VisualBasic/AddNewProperty/Module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public void RemoveProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveProperty(string propertyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt; value of the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt; to remove.</param>
        <summary>Removes the &lt;see cref="T:Microsoft.Build.BuildEngine.BuildProperty"&gt; with the specified &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt; from the &lt;xref:Microsoft.Build.BuildEngine.BuildPropertyGroup&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedPropertyGroupCondition">
      <MemberSignature Language="C#" Value="public void SetImportedPropertyGroupCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedPropertyGroupCondition(string condition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">The condition to add to the imported PropertyGroup.</param>
        <summary>Sets the condition for imported property groups. Changes are not persisted.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, string propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, string propertyValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt; property value of the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt; to set.</param>
        <param name="propertyValue">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Value%2A&gt; property value to assign the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt;.</param>
        <summary>Sets the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Value%2A&gt; of the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt; with the specified &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, string propertyValue, bool treatPropertyValueAsLiteral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, string propertyValue, bool treatPropertyValueAsLiteral) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
        <Parameter Name="treatPropertyValueAsLiteral" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt; property value of the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt; to set.</param>
        <param name="propertyValue">The &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Value%2A&gt; property value to assign the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt;.</param>
        <param name="treatPropertyValueAsLiteral">`true` to treat the  parameter as a literal value; otherwise, `false`.</param>
        <summary>Sets the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Value%2A&gt; of the &lt;xref:Microsoft.Build.BuildEngine.BuildProperty&gt; with the specified &lt;xref:Microsoft.Build.BuildEngine.BuildProperty.Name%2A&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>