<Type Name="Target" FullName="Microsoft.Build.BuildEngine.Target">
  <TypeSignature Language="C#" Value="public class Target : System.Collections.IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Target extends System.Object implements class System.Collections.IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Engine</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Target (Name = { Name }, Condition = { Condition })")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a single [Target](../Topic/Target%20Element%20\(MSBuild\).md) element in an [!INCLUDE[vstecmsbuild](../../add/includes/vstecmsbuild-md.md)] project.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNewTask">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildTask AddNewTask (string taskName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildTask AddNewTask(string taskName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskName">The &lt;see cref="T:Microsoft.Build.BuildEngine.BuildTask"&gt; object that represents the `Task` element to add to the `Target` element.</param>
        <summary>Adds the specified [Task](../Topic/Task%20Element%20\(MSBuild\).md) element to the [Target](../Topic/Target%20Element%20\(MSBuild\).md) element.</summary>
        <returns>A &lt;see cref="T:Microsoft.Build.BuildEngine.BuildTask"&gt; object represents a child `Task` element of the `Target` element.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public string Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the `Condition` attribute value of the [Target](../Topic/Target%20Element%20\(MSBuild\).md) element.</summary>
        <value>The `Condition` attribute value of the `Target` element.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOnTargets">
      <MemberSignature Language="C#" Value="public string DependsOnTargets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DependsOnTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the `DependsOnTargets` attribute value of the [Target](../Topic/Target%20Element%20\(MSBuild\).md) element, which is a semicolon-separated list.</summary>
        <value>The `DependsOnTargets` attribute value of the `Target` element.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets an enumerator that iterates through the &lt;see cref="T:Microsoft.Build.BuildEngine.BuildTask"&gt; objects in the &lt;xref:Microsoft.Build.BuildEngine.Target&gt;.</summary>
        <returns>An &lt;see cref="T:System.Collections.IEnumerator"&gt; for the &lt;xref:Microsoft.Build.BuildEngine.BuildTask&gt; objects in the &lt;xref:Microsoft.Build.BuildEngine.Target&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method allows the caller to use the `foreach` statement of the C# language (`for each` in [!INCLUDE[vbprvb](../../add/includes/vbprvb-md.md)]) to iterate through the individual <xref:Microsoft.Build.BuildEngine.BuildTask> objects in the <xref:Microsoft.Build.BuildEngine.Target>.  
  
 A <xref:Microsoft.Build.BuildEngine.BuildTask> object represents a child  element of the `Target` element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inputs">
      <MemberSignature Language="C#" Value="public string Inputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Inputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the items that are to be input into this target.</summary>
        <value>A string representing the items.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Items inside this target attribute are used as the inputs in the top level dependency analysis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the [Target](../Topic/Target%20Element%20\(MSBuild\).md) element was imported into the project.</summary>
        <value>`true` if the `Target` element was imported into the project; otherwise, `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the `Name` attribute value of the [Target](../Topic/Target%20Element%20\(MSBuild\).md) element.</summary>
        <value>The `Name` attribute value of the `Target` element.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Outputs">
      <MemberSignature Language="C#" Value="public string Outputs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Outputs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the expected outputs of this target.</summary>
        <value>A string representing the outputs.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can apply transforms to this target attribute to transform a set of input items into a set of output items. This attribute is used not only for top level dependency analysis but also for the purposes of defining this targets outputs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTask">
      <MemberSignature Language="C#" Value="public void RemoveTask (Microsoft.Build.BuildEngine.BuildTask taskElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveTask(class Microsoft.Build.BuildEngine.BuildTask taskElement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskElement" Type="Microsoft.Build.BuildEngine.BuildTask" />
      </Parameters>
      <Docs>
        <param name="taskElement">The &lt;see cref="T:Microsoft.Build.BuildEngine.BuildTask"&gt; object that represents the `Task` element to remove from the `Target` element.</param>
        <summary>Removes the specified [Task](../Topic/Task%20Element%20\(MSBuild\).md) element from the [Target](../Topic/Target%20Element%20\(MSBuild\).md) element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:Microsoft.Build.BuildEngine.BuildTask> object represents a child `Task` element of the `Target` element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>