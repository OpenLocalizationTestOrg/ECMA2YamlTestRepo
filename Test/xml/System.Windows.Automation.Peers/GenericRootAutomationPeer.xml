<Type Name="GenericRootAutomationPeer" FullName="System.Windows.Automation.Peers.GenericRootAutomationPeer">
  <TypeSignature Language="C#" Value="public class GenericRootAutomationPeer : System.Windows.Automation.Peers.UIElementAutomationPeer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericRootAutomationPeer extends System.Windows.Automation.Peers.UIElementAutomationPeer" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.Peers.UIElementAutomationPeer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Exposes &lt;see cref="T:System.Windows.Interop.HwndSource"&gt; types to [!INCLUDE[TLA2#tla_uiautomation](../../add/includes/tla2sharptla-uiautomation-md.md)].</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 GenericRootAutomationPeer is used as a peer for <xref:System.Windows.Interop.HwndSource> when it contains the following tree:  
  
 ![HwndSource&#45;&#62;Visual&#45;&#62;2 UIElement objects](../../add/media/apgenericroot.png "HwndSource->Visual->2 UIElement objects")  
  
 Because only <xref:System.Windows.UIElement> types have peers, and visuals are not <xref:System.Windows.UIElement> types, a common parent does not exist in the [!INCLUDE[TLA2#tla_uiautomation](../../add/includes/tla2sharptla-uiautomation-md.md)] tree for the <xref:System.Windows.UIElement> types. [!INCLUDE[TLA2#tla_uiautomation](../../add/includes/tla2sharptla-uiautomation-md.md)] expects a single root peer from the application; therefore, [!INCLUDE[TLA#tla_avalonwinfx](../../add/includes/tlasharptla-avalonwinfx-md.md)] creates a GenericRootAutomationPeer for the <xref:System.Windows.Interop.HwndSource> in order to serve as a single root peer to parent peers for the two <xref:System.Windows.UIElement> types.  
  
 Typically, the root peer is a <xref:System.Windows.Automation.Peers.WindowAutomationPeer>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenericRootAutomationPeer (System.Windows.UIElement owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.UIElement owner) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="owner">The &lt;see cref="T:System.Windows.UIElement"&gt; that is associated with this &lt;xref:System.Windows.Automation.Peers.GenericRootAutomationPeer&gt;.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Windows.Automation.Peers.GenericRootAutomationPeer"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutomationControlTypeCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Automation.Peers.AutomationControlType GetAutomationControlTypeCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationControlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the control type for the &lt;see cref="T:System.Windows.UIElement"&gt; that is associated with this &lt;xref:System.Windows.Automation.Peers.GenericRootAutomationPeer&gt;. This method is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType%2A&gt;.</summary>
        <returns>The &lt;see cref="T:System.Windows.Automation.Peers.AutomationControlType"&gt; enumeration value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangleCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Rect GetBoundingRectangleCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Rect GetBoundingRectangleCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the &lt;xref:System.Windows.Rect&gt; that represents the bounding rectangle of the &lt;xref:System.Windows.UIElement&gt; that is associated with this &lt;xref:System.Windows.Automation.Peers.GenericRootAutomationPeer&gt;. This method is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle%2A&gt;.</summary>
        <returns>The bounding rectangle.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassNameCore">
      <MemberSignature Language="C#" Value="protected override string GetClassNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetClassNameCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the name of the &lt;see cref="T:System.Windows.UIElement"&gt; that is associated with this &lt;xref:System.Windows.Automation.Peers.GenericRootAutomationPeer&gt;. This method is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetClassName%2A&gt;.</summary>
        <returns>A string that contains "Pane".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNameCore">
      <MemberSignature Language="C#" Value="protected override string GetNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetNameCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the text label of the &lt;see cref="T:System.Windows.UIElement"&gt; that is associated with this &lt;xref:System.Windows.Automation.Peers.GenericRootAutomationPeer&gt;. This method is called by &lt;xref:System.Windows.Automation.Peers.AutomationPeer.GetName%2A&gt;.</summary>
        <returns>The string that contains the label.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 You can think of the name property as if it were a string of text that users use to explain the control they are referring to. Make certain that you have a textual representation for all controls in the [!INCLUDE[TLA#tla_gui](../../add/includes/tlasharptla-gui-md.md)] so that you can programmatically refer to the control in a localized manner.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>