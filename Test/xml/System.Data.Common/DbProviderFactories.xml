<Type Name="DbProviderFactories" FullName="System.Data.Common.DbProviderFactories">
  <TypeSignature Language="C#" Value="public static class DbProviderFactories" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbProviderFactories extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a set of static methods for creating one or more instances of &lt;see cref="T:System.Data.Common.DbProviderFactory"&gt; classes.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetFactory">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderFactory GetFactory (System.Data.Common.DbConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderFactory GetFactory(class System.Data.Common.DbConnection connection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.Common.DbConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection used.</param>
        <summary>Returns an instance of a &lt;see cref="T:System.Data.Common.DbProviderFactory"&gt;.</summary>
        <returns>An instance of a &lt;see cref="T:System.Data.Common.DbProviderFactory"&gt; for a specified connection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFactory">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderFactory GetFactory (System.Data.DataRow providerRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderFactory GetFactory(class System.Data.DataRow providerRow) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="providerRow">&lt;see cref="T:System.Data.DataRow"&gt; containing the provider's configuration information.</param>
        <summary>Returns an instance of a &lt;see cref="T:System.Data.Common.DbProviderFactory"&gt;.</summary>
        <returns>An instance of a &lt;see cref="T:System.Data.Common.DbProviderFactory"&gt; for a specified &lt;xref:System.Data.DataRow&gt;.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The  parameter corresponds to the <xref:System.Data.DataRow> of a table returned by <xref:System.Data.Common.DbProviderFactories.GetFactoryClasses%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFactory">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbProviderFactory GetFactory (string providerInvariantName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbProviderFactory GetFactory(string providerInvariantName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerInvariantName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerInvariantName">Invariant name of a provider.</param>
        <summary>Returns an instance of a &lt;see cref="T:System.Data.Common.DbProviderFactory"&gt;.</summary>
        <returns>An instance of a &lt;see cref="T:System.Data.Common.DbProviderFactory"&gt; for a specified provider name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The  parameter corresponds to the **InvariantName** column of a table returned by <xref:System.Data.Common.DbProviderFactories.GetFactoryClasses%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFactoryClasses">
      <MemberSignature Language="C#" Value="public static System.Data.DataTable GetFactoryClasses ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataTable GetFactoryClasses() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a &lt;see cref="T:System.Data.DataTable"&gt; that contains information about all installed providers that implement &lt;xref:System.Data.Common.DbProviderFactory&gt;.</summary>
        <returns>Returns a &lt;see cref="T:System.Data.DataTable"&gt; containing &lt;xref:System.Data.DataRow&gt; objects that contain the following data.  
  
|Column ordinal|Column name|Description|  
|--------------------|-----------------|-----------------|  
|0|**Name**|Human-readable name for the data provider.|  
|1|**Description**|Human-readable description of the data provider.|  
|2|**InvariantName**|Name that can be used programmatically to refer to the data provider.|  
|3|**AssemblyQualifiedName**|Fully qualified name of the factory class, which contains enough information to instantiate the object.|</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>