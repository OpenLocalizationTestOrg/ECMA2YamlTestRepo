<Type Name="RuntimeCompatibilityAttribute" FullName="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
  <TypeSignature Language="C#" Value="public sealed class RuntimeCompatibilityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit RuntimeCompatibilityAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies whether to wrap exceptions that do not derive from the &lt;see cref="T:System.Exception"&gt; class with a &lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt; object. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Some languages, such as C++, allow you to throw exceptions of any type.  Other languages, such as Microsoft C# and Visual Basic, require that every thrown exception be derived from the <xref:System.Exception> class.  To maintain compatibility between languages, the common language runtime (CLR) wraps objects that do not derive from <xref:System.Exception> in a <xref:System.Runtime.CompilerServices.RuntimeWrappedException> object.  
  
 You can use the RuntimeCompatibilityAttribute class to specify whether exceptions should appear wrapped inside catch blocks and exception filters for an assembly.  Many language compilers, including the Microsoft C# and Visual Basic compilers, apply this attribute by default to specify the wrapping behavior.  
  
 Note that the runtime still wraps exceptions even if you use the RuntimeCompatibilityAttribute class to specify that you do not want them wrapped.  In this case, exceptions are unwrapped only inside catch blocks or exception filters.  
  
   
  
## Examples  
 The following code example demonstrates how to apply the RuntimeCompatibilityAttribute class to an assembly that throws a <xref:System.String> object as an exception in C++ and catches it using a <xref:System.Runtime.CompilerServices.RuntimeWrappedException> object.  
  
 [!CODE [System.Runtime.CompilerServices.RuntimeWrappedException#1](../CodeSnippet/VS_Snippets_CLR_System/system.Runtime.CompilerServices.RuntimeWrappedException#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuntimeCompatibilityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute"&gt; class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example applies the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> attribute to an assembly to disable exception wrapping.  
  
 [!CODE [System.Runtime.CompilerServices.RuntimeCompatibilityAttribute#1](../CodeSnippet/VS_Snippets_CLR_System/system.Runtime.CompilerServices.RuntimeCompatibilityAttribute#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapNonExceptionThrows">
      <MemberSignature Language="C#" Value="public bool WrapNonExceptionThrows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WrapNonExceptionThrows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether to wrap exceptions that do not derive from the &lt;see cref="T:System.Exception"&gt; class with a &lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt; object.</summary>
        <value>`true` if exceptions that do not derive from the &lt;see cref="T:System.Exception"&gt; class should appear wrapped with a &lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt; object; otherwise, `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example applies the <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute> attribute to an assembly to disable exception wrapping.  
  
 [!CODE [System.Runtime.CompilerServices.RuntimeCompatibilityAttribute#1](../CodeSnippet/VS_Snippets_CLR_System/system.Runtime.CompilerServices.RuntimeCompatibilityAttribute#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>