<Type Name="DependencyAttribute" FullName="System.Runtime.CompilerServices.DependencyAttribute">
  <TypeSignature Language="C#" Value="public sealed class DependencyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DependencyAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Indicates when a dependency is to be loaded by the referring assembly. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This attribute is used by the [Ngen.exe (Native Image Generator)](../Topic/Ngen.exe%20\(Native%20Image%20Generator\).md) to generate native assembly images.  
  
 Apply the DependencyAttribute attribute to a dependent assembly with a value of the <xref:System.Runtime.CompilerServices.LoadHint> enumeration to specify when a referring assembly is to load a dependency.  
  
 A dependency that is likely to be loaded (<xref:System.Runtime.CompilerServices.LoadHint>) will cause Ngen.exe to bind to that dependency.  Using this hint allows Ngen.exe to generate code that will result in a reduced working set and improved throughput  but at the cost of always loading the dependency when the parent assembly is loaded.  
  
   
  
## Examples  
 The following example specifies that the native image generation service always binds to `AssemblyA` and sometimes binds to `AssemblyB`.  
  
 [!CODE [Runtime.CompilerServices.DependencyAttribute#1](../CodeSnippet/VS_Snippets_CLR/Runtime.CompilerServices.DependencyAttribute#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyAttribute (string dependentAssemblyArgument, System.Runtime.CompilerServices.LoadHint loadHintArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string dependentAssemblyArgument, valuetype System.Runtime.CompilerServices.LoadHint loadHintArgument) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependentAssemblyArgument" Type="System.String" />
        <Parameter Name="loadHintArgument" Type="System.Runtime.CompilerServices.LoadHint" />
      </Parameters>
      <Docs>
        <param name="dependentAssemblyArgument">The dependent assembly to bind to.</param>
        <param name="loadHintArgument">One of the &lt;see cref="T:System.Runtime.CompilerServices.LoadHint"&gt; values.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Runtime.CompilerServices.DependencyAttribute"&gt; class with the specified &lt;xref:System.Runtime.CompilerServices.LoadHint&gt; value.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Runtime.CompilerServices.DependencyAttribute> attribute gives the common language runtime hints on how tightly to bind to the dependency. The runtime uses these hints to help settle tradeoffs between lazy dependency load and efficient binding to the dependency. For example, hard binding allows the runtime to encode pointers to dependent native images, which results in a reduced working set. This attribute guides the runtime in making these decisions.  
  
   
  
## Examples  
 The following example specifies that the native image generation service always binds to `AssemblyA` and sometimes binds to `AssemblyB`.  
  
 [!CODE [Runtime.CompilerServices.DependencyAttribute#1](../CodeSnippet/VS_Snippets_CLR/Runtime.CompilerServices.DependencyAttribute#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentAssembly">
      <MemberSignature Language="C#" Value="public string DependentAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DependentAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value of the dependent assembly.</summary>
        <value>The name of the dependent assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this property to return the name of the assembly that the native image generation service binds to.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadHint">
      <MemberSignature Language="C#" Value="public System.Runtime.CompilerServices.LoadHint LoadHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.CompilerServices.LoadHint LoadHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.CompilerServices.LoadHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;see cref="T:System.Runtime.CompilerServices.LoadHint"&gt; value that indicates when an assembly is to load a dependency.</summary>
        <value>One of the &lt;see cref="T:System.Runtime.CompilerServices.LoadHint"&gt; values.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use this property to return the value of the <xref:System.Runtime.CompilerServices.LoadHint> enumeration used by the <xref:System.Runtime.CompilerServices.DependencyAttribute> attribute.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>