<Type Name="MetaAssociation" FullName="System.Data.Linq.Mapping.MetaAssociation">
  <TypeSignature Language="C#" Value="public abstract class MetaAssociation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetaAssociation extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents an association relationship between two entity types.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetaAssociation ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Data.Linq.Mapping.MetaAssociation"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteOnNull">
      <MemberSignature Language="C#" Value="public abstract bool DeleteOnNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DeleteOnNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the object should be deleted when the association is set to null.</summary>
        <value>If `true`, the object is deleted when the association is set to null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRule">
      <MemberSignature Language="C#" Value="public abstract string DeleteRule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteRule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the behavior when the child is deleted.</summary>
        <value>The string representing the rule, or `null` if no action is specified on delete.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Examples of rules are "CASCADE", "SET NULL", and so forth.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsForeignKey">
      <MemberSignature Language="C#" Value="public abstract bool IsForeignKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the other type is the parent of this type.</summary>
        <value>Returns `true` is the other type is the parent of this type.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMany">
      <MemberSignature Language="C#" Value="public abstract bool IsMany { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMany" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the association represents a one-to-many relationship.</summary>
        <value>Returns `true` if the association represents a one-to-many relationship.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public abstract bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the association can be null.</summary>
        <value>Returns `true` if the association can be null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnique">
      <MemberSignature Language="C#" Value="public abstract bool IsUnique { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the association is unique.</summary>
        <value>Returns `true` if the association is unique.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property indicates a uniqueness constraint in the database.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherKey">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; OtherKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; OtherKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of members that represents the values on the other side of the association.</summary>
        <value>Returns a collection representing values on the other side of the association.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherKeyIsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool OtherKeyIsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OtherKeyIsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the &lt;xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey%2A&gt; forms the identity of the other type.</summary>
        <value>`true` if the &lt;xref:System.Data.Linq.Mapping.MetaAssociation.OtherKey%2A&gt; forms the identity (primary key) of the other type.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember OtherMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember OtherMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the member on the other side of this association that represents the reverse association.</summary>
        <value>The member on the other side.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This value can be null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherType">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaType OtherType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaType OtherType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type on the other side of the association.</summary>
        <value>The type.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisKey">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt; ThisKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Linq.Mapping.MetaDataMember&gt; ThisKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Linq.Mapping.MetaDataMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a list of members representing the values on this side of the association.</summary>
        <value>A collection.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisKeyIsPrimaryKey">
      <MemberSignature Language="C#" Value="public abstract bool ThisKeyIsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThisKeyIsPrimaryKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether &lt;xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey%2A&gt; forms the identity of this type.</summary>
        <value>`true` if &lt;xref:System.Data.Linq.Mapping.MetaAssociation.ThisKey%2A&gt; forms the identity (primary key) of the association.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisMember">
      <MemberSignature Language="C#" Value="public abstract System.Data.Linq.Mapping.MetaDataMember ThisMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Linq.Mapping.MetaDataMember ThisMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Linq.Mapping.MetaDataMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the member on this side that represents the association.</summary>
        <value>The member.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>