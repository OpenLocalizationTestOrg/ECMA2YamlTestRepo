<Type Name="EventToken" FullName="System.Reflection.Emit.EventToken">
  <TypeSignature Language="C#" Value="public struct EventToken" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit EventToken extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents the `Token` returned by the metadata to represent an event.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Reflection.Emit.EventToken Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Reflection.Emit.EventToken Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.EventToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default `EventToken` with &lt;xref:System.Reflection.Emit.EventToken.Token%2A&gt; value 0.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to be compared with this instance.</param>
        <summary>Checks if the given object is an instance of `EventToken` and is equal to this instance.</summary>
        <returns>Returns `true` if  is an instance of `EventToken` and equals the current instance; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Reflection.Emit.EventToken obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Reflection.Emit.EventToken obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Reflection.Emit.EventToken" />
      </Parameters>
      <Docs>
        <param name="obj">The &lt;see cref="T:System.Reflection.Emit.EventToken"&gt; to compare to the current instance.</param>
        <summary>Indicates whether the current instance is equal to the specified &lt;see cref="T:System.Reflection.Emit.EventToken"&gt;.</summary>
        <returns>`true` if the value of  is equal to the value of the current instance; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates the hash code for this event.</summary>
        <returns>Returns the hash code for this instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Reflection.Emit.EventToken a, System.Reflection.Emit.EventToken b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.Emit.EventToken a, valuetype System.Reflection.Emit.EventToken b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.EventToken" />
        <Parameter Name="b" Type="System.Reflection.Emit.EventToken" />
      </Parameters>
      <Docs>
        <param name="a">The &lt;see cref="T:System.Reflection.Emit.EventToken"&gt; to compare to .</param>
        <param name="b">The &lt;see cref="T:System.Reflection.Emit.EventToken"&gt; to compare to .</param>
        <summary>Indicates whether two &lt;see cref="T:System.Reflection.Emit.EventToken"&gt; structures are equal.</summary>
        <returns>`true` if  is equal to ; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Reflection.Emit.EventToken a, System.Reflection.Emit.EventToken b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.Emit.EventToken a, valuetype System.Reflection.Emit.EventToken b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.EventToken" />
        <Parameter Name="b" Type="System.Reflection.Emit.EventToken" />
      </Parameters>
      <Docs>
        <param name="a">The &lt;see cref="T:System.Reflection.Emit.EventToken"&gt; to compare to .</param>
        <param name="b">The &lt;see cref="T:System.Reflection.Emit.EventToken"&gt; to compare to .</param>
        <summary>Indicates whether two &lt;see cref="T:System.Reflection.Emit.EventToken"&gt; structures are not equal.</summary>
        <returns>`true` if  is not equal to ; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public int Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the metadata token for this event.</summary>
        <value>Read-only. Retrieves the metadata token for this event.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>