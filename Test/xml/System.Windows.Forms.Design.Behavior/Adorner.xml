<Type Name="Adorner" FullName="System.Windows.Forms.Design.Behavior.Adorner">
  <TypeSignature Language="C#" Value="public sealed class Adorner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Adorner extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages a collection of user-interface related &lt;see cref="T:System.Windows.Forms.Design.Behavior.Glyph"&gt; objects. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Each Adorner can be enabled and disabled. Only enabled Adorner objects will receive hit test and paint messages from the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>. An Adorner can be viewed as a proxy between user-interface related elements, which consist of all <xref:System.Windows.Forms.Design.Behavior.Glyph> objects, and the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.  
  
 For more information, see [Behavior Service Overview](../Topic/Behavior%20Service%20Overview.md).  
  
   
  
## Examples  
 The following code example demonstrates how the Adorner class interacts with the <xref:System.Windows.Forms.Design.Behavior.Glyph> and <xref:System.Windows.Forms.Design.Behavior.BehaviorService> classes. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.  
  
 [!CODE [System.Windows.Forms.Design.Behavior.BehaviorService#3](../CodeSnippet/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Adorner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Windows.Forms.Design.Behavior.Adorner"&gt; class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The Adorner constructor creates a new <xref:System.Windows.Forms.Design.Behavior.GlyphCollection> and is enabled, by default.  
  
   
  
## Examples  
 The following code example demonstrates how to initialize a new instance of the <xref:System.Windows.Forms.Design.Behavior.Adorner> class. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.  
  
 [!CODE [System.Windows.Forms.Design.Behavior.BehaviorService#3](../CodeSnippet/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BehaviorService">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.BehaviorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService"&gt; associated with the &lt;xref:System.Windows.Forms.Design.Behavior.Adorner&gt;.</summary>
        <value>The &lt;see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService"&gt; associated with the &lt;xref:System.Windows.Forms.Design.Behavior.Adorner&gt;.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 When an <xref:System.Windows.Forms.Design.Behavior.Adorner> is added to the <xref:System.Windows.Forms.Design.Behavior.BehaviorServiceAdornerCollection> of the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>, the collection sets this property so that the <xref:System.Windows.Forms.Design.Behavior.Adorner> can call back to the <xref:System.Windows.Forms.Design.Behavior.BehaviorService>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating if the &lt;see cref="T:System.Windows.Forms.Design.Behavior.Adorner"&gt; is enabled.</summary>
        <value>`true`, if the &lt;see cref="T:System.Windows.Forms.Design.Behavior.Adorner"&gt; is enabled; otherwise, `false`.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the Enabled property is `true`, the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class will send `HitTest` and `Paint` messages to the <xref:System.Windows.Forms.Design.Behavior.Adorner>.  
  
   
  
## Examples  
 The following code example demonstrates how to enable and disable an <xref:System.Windows.Forms.Design.Behavior.Adorner>. For a full code listing, see [How to: Extend the Appearance and Behavior of Controls in Design Mode](../Topic/How%20to:%20Extend%20the%20Appearance%20and%20Behavior%20of%20Controls%20in%20Design%20Mode.md).  
  
 [!CODE [System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#12](../CodeSnippet/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Design.Behavior.GlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.GlyphCollection Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.GlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the &lt;see cref="T:System.Windows.Forms.Design.Behavior.Glyph"&gt; collection.</summary>
        <value>A collection of &lt;see cref="T:System.Windows.Forms.Design.Behavior.Glyph"&gt; objects.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example demonstrates how to access the <xref:System.Windows.Forms.Design.Behavior.Glyph> collection. This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.Behavior.BehaviorService> class.  
  
 [!CODE [System.Windows.Forms.Design.Behavior.BehaviorService#4](../CodeSnippet/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.BehaviorService#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces the &lt;see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService"&gt; to refresh its adorner window.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following code example demonstrates how to force an <xref:System.Windows.Forms.Design.Behavior.Adorner> window to repaint. For a full code listing, see [How to: Extend the Appearance and Behavior of Controls in Design Mode](../Topic/How%20to:%20Extend%20the%20Appearance%20and%20Behavior%20of%20Controls%20in%20Design%20Mode.md).  
  
 [!CODE [System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#13](../CodeSnippet/VS_Snippets_Winforms/System.Windows.Forms.Design.Behavior.Glyph.MarginBorderAnchorGlyphs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">The area to invalidate.</param>
        <summary>Forces the &lt;see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService"&gt; to refresh its adorner window within the given &lt;xref:System.Drawing.Rectangle&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">The &lt;xref:System.Drawing.Region&gt; to invalidate.</param>
        <summary>Forces the &lt;see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService"&gt; to refresh its adorner window within the given &lt;xref:System.Drawing.Region&gt;.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>