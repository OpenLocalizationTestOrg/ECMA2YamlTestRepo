<Type Name="ContractClassAttribute" FullName="System.Diagnostics.Contracts.ContractClassAttribute">
  <TypeSignature Language="C#" Value="public sealed class ContractClassAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContractClassAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Delegate, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.Conditional("CONTRACTS_FULL")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies that a separate type contains the code contracts for this type.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Types that are marked with this attribute have code contracts that are included in a separate type. The type that contains the contracts is specified in the constructor.  
  
   
  
## Examples  
 The following example shows how to use the ContractClassAttribute attribute to specify that the contracts for the `IArray` interface are contained in the `IArrayContracts` class.  
  
 [!CODE [ContractExample#1](../CodeSnippet/VS_Snippets_CLR/contractexample#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractClassAttribute (Type typeContainingContracts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeContainingContracts) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeContainingContracts" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeContainingContracts">The type that contains the code contracts for this type.</param>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Diagnostics.Contracts.ContractClassAttribute"&gt; class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example shows how to use the ContractClassAttribute constructor to specify that the contracts for the `IArray` interface are contained in the `IArrayContracts` class.  
  
 [!CODE [ContractExample#1](../CodeSnippet/VS_Snippets_CLR/contractexample#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeContainingContracts">
      <MemberSignature Language="C#" Value="public Type TypeContainingContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeContainingContracts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type that contains the code contracts for this type.</summary>
        <value>The type that contains the code contracts for this type.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>