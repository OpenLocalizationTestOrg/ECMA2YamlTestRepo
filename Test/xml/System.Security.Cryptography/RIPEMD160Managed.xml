<Type Name="RIPEMD160Managed" FullName="System.Security.Cryptography.RIPEMD160Managed">
  <TypeSignature Language="C#" Value="public class RIPEMD160Managed : System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RIPEMD160Managed extends System.Security.Cryptography.RIPEMD160" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RIPEMD160</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Computes the &lt;see cref="T:System.Security.Cryptography.RIPEMD160"&gt; hash for the input data using the managed library.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RIPEMD-160 is a 160-bit cryptographic hash function. It is intended for use as a secure replacement for the 128-bit hash functions MD4, MD5, and RIPEMD. RIPEMD was developed in the framework of the EU project RIPE (RACE Integrity Primitives Evaluation, 1988-1992).  
  
> [!NOTE]
>  RIPEMD160Managed has been superseded by the Secure Hash Algorithms SHA-256 and SHA-512 and their derived classes. <xref:System.Security.Cryptography.SHA256Managed> and <xref:System.Security.Cryptography.SHA512Managed> offer better security and performance than RIPEMD160Managed. Use RIPEMD160Managed only for compatibility with legacy applications and data.  
  
   
  
## Examples  
 The following code example shows how to encode a file using the RIPEMD160Managed class and then how to decode the file.  
  
 [!CODE [RIPEMD160#1](../CodeSnippet/VS_Snippets_CLR/RIPEMD160#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RIPEMD160Managed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Security.Cryptography.RIPEMD160"&gt; class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  
  
 The hash size for the <xref:System.Security.Cryptography.RIPEMD160> algorithm is 160 bits.  
  
   
  
## Examples  
 The following code example computes the <xref:System.Security.Cryptography.RIPEMD160Managed> class hash for all files in a directory.  
  
 [!CODE [RIPEMD160#1](../CodeSnippet/VS_Snippets_CLR/RIPEMD160#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ibStart, int32 cbSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb">The input data.</param>
        <param name="ibStart">The offset into the byte array from which to begin using data.</param>
        <param name="cbSize">The number of bytes in the array to use as data.</param>
        <summary>When overridden in a derived class, routes data written to the object into the &lt;see cref="T:System.Security.Cryptography.RIPEMD160"&gt; hash algorithm for computing the hash.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is not called by application code.  
  
 This abstract method performs the hash computation. Every write to the cryptographic stream object passes the data through this method. For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</summary>
        <returns>The computed hash code in a byte array.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method is not called by application code. This method finalizes any partial computation and returns the correct hash value of the data stream.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes an instance of the &lt;see cref="T:System.Security.Cryptography.RIPEMD160Managed"&gt; class using the managed library.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RIPEMD-160 is a 160-bit cryptographic hash function. It is intended for use as a secure replacement for the 128-bit hash functions MD4, MD5, and RIPEMD. RIPEMD was developed in the framework of the EU project RIPE (RACE Integrity Primitives Evaluation, 1988-1992).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>