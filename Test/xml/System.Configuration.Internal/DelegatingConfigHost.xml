<Type Name="DelegatingConfigHost" FullName="System.Configuration.Internal.DelegatingConfigHost">
  <TypeSignature Language="C#" Value="public class DelegatingConfigHost : System.Configuration.Internal.IInternalConfigHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DelegatingConfigHost extends System.Object implements class System.Configuration.Internal.IInternalConfigHost" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.Internal.IInternalConfigHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Delegates all members of the &lt;see cref="T:System.Configuration.Internal.IInternalConfigHost"&gt; interface to another instance of a host.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DelegatingConfigHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the &lt;see cref="T:System.Configuration.Internal.DelegatingConfigHost"&gt; class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConfigurationContext">
      <MemberSignature Language="C#" Value="public virtual object CreateConfigurationContext (string configPath, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateConfigurationContext(string configPath, string locationSubPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <param name="locationSubPath">A string representing a location subpath.</param>
        <summary>Creates a new configuration context.</summary>
        <returns>A &lt;see cref="T:System.Object"&gt; representing a new configuration context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDeprecatedConfigContext">
      <MemberSignature Language="C#" Value="public virtual object CreateDeprecatedConfigContext (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateDeprecatedConfigContext(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <summary>Creates a deprecated configuration context.</summary>
        <returns>A &lt;see cref="T:System.Object"&gt; representing a deprecated configuration context.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptSection">
      <MemberSignature Language="C#" Value="public virtual string DecryptSection (string encryptedXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedConfigSection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DecryptSection(string encryptedXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedXml" Type="System.String" />
        <Parameter Name="protectionProvider" Type="System.Configuration.ProtectedConfigurationProvider" />
        <Parameter Name="protectedConfigSection" Type="System.Configuration.ProtectedConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="encryptedXml">An encrypted section of a configuration file.</param>
        <param name="protectionProvider">A &lt;see cref="T:System.Configuration.ProtectedConfigurationProvider"&gt; object.</param>
        <param name="protectedConfigSection">A &lt;see cref="T:System.Configuration.ProtectedConfigurationSection"&gt; object.</param>
        <summary>Decrypts an encrypted configuration section.</summary>
        <returns>A string representing a decrypted configuration section.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteStream">
      <MemberSignature Language="C#" Value="public virtual void DeleteStream (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteStream(string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <summary>Deletes the &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptSection">
      <MemberSignature Language="C#" Value="public virtual string EncryptSection (string clearTextXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedConfigSection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string EncryptSection(string clearTextXml, class System.Configuration.ProtectedConfigurationProvider protectionProvider, class System.Configuration.ProtectedConfigurationSection protectedConfigSection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearTextXml" Type="System.String" />
        <Parameter Name="protectionProvider" Type="System.Configuration.ProtectedConfigurationProvider" />
        <Parameter Name="protectedConfigSection" Type="System.Configuration.ProtectedConfigurationSection" />
      </Parameters>
      <Docs>
        <param name="clearTextXml">A section of the configuration that is not encrypted.</param>
        <param name="protectionProvider">A &lt;see cref="T:System.Configuration.ProtectedConfigurationProvider"&gt; object.</param>
        <param name="protectedConfigSection">A &lt;see cref="T:System.Configuration.ProtectedConfigurationSection"&gt; object.</param>
        <summary>Encrypts a section of a configuration object.</summary>
        <returns>A string representing an encrypted section of the configuration object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigPathFromLocationSubPath">
      <MemberSignature Language="C#" Value="public virtual string GetConfigPathFromLocationSubPath (string configPath, string locationSubPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetConfigPathFromLocationSubPath(string configPath, string locationSubPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="locationSubPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <param name="locationSubPath">A string representing a location subpath.</param>
        <summary>Returns a configuration path based on a location subpath.</summary>
        <returns>A string representing a configuration path.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigType">
      <MemberSignature Language="C#" Value="public virtual Type GetConfigType (string typeName, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetConfigType(string typeName, bool throwOnError) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName">A string representing the configuration type.</param>
        <param name="throwOnError">`true` if an exception should be thrown if an error is encountered; `false` if an exception should not be thrown if an error is encountered.</param>
        <summary>Returns a &lt;see cref="T:System.Type"&gt; representing the type of the configuration.</summary>
        <returns>A &lt;see cref="T:System.Type"&gt; representing the type of the configuration.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigTypeName">
      <MemberSignature Language="C#" Value="public virtual string GetConfigTypeName (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetConfigTypeName(class System.Type t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">A &lt;see cref="T:System.Type"&gt; object.</param>
        <summary>Returns a string representing the type name of the configuration object.</summary>
        <returns>A string representing the type name of the configuration object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRestrictedPermissions">
      <MemberSignature Language="C#" Value="public virtual void GetRestrictedPermissions (System.Configuration.Internal.IInternalConfigRecord configRecord, out System.Security.PermissionSet permissionSet, out bool isHostReady);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRestrictedPermissions(class System.Configuration.Internal.IInternalConfigRecord configRecord, class System.Security.PermissionSet permissionSet, bool isHostReady) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet&amp;" RefType="out" />
        <Parameter Name="isHostReady" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="configRecord">An &lt;see cref="T:System.Configuration.Internal.IInternalConfigRecord"&gt; object.</param>
        <param name="permissionSet">A &lt;see cref="T:System.Security.PermissionSet"&gt; object.</param>
        <param name="isHostReady">`true` if the host has finished initialization; otherwise, `false`.</param>
        <summary>Sets the specified permission set if available within the host object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamName">
      <MemberSignature Language="C#" Value="public virtual string GetStreamName (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetStreamName(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <summary>Returns the name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</summary>
        <returns>A string representing the name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamNameForConfigSource">
      <MemberSignature Language="C#" Value="public virtual string GetStreamNameForConfigSource (string streamName, string configSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetStreamNameForConfigSource(string streamName, string configSource) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="configSource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <param name="configSource">A string representing the configuration source.</param>
        <summary>Returns the name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration source.</summary>
        <returns>A string representing the name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration source.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamVersion">
      <MemberSignature Language="C#" Value="public virtual object GetStreamVersion (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetStreamVersion(string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <summary>Returns a &lt;xref:System.Diagnostics.FileVersionInfo.FileVersion%2A&gt; object representing the version of a &lt;xref:System.IO.Stream&gt; object performing I/O tasks on a configuration file.</summary>
        <returns>A &lt;xref:System.Diagnostics.FileVersionInfo.FileVersion%2A&gt; object representing the version of a &lt;xref:System.IO.Stream&gt; object performing I/O tasks on a configuration file.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="protected System.Configuration.Internal.IInternalConfigHost Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.Internal.IInternalConfigHost Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Internal.IInternalConfigHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the &lt;see cref="T:System.Configuration.Internal.IInternalConfigHost"&gt; object.</summary>
        <value>A &lt;see cref="T:System.Configuration.Internal.IInternalConfigHost"&gt; object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonate">
      <MemberSignature Language="C#" Value="public virtual IDisposable Impersonate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Impersonate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Instructs the host to impersonate and returns an &lt;see cref="T:System.IDisposable"&gt; object required internally by the .NET Framework.</summary>
        <returns>An &lt;see cref="T:System.IDisposable"&gt; value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public virtual void Init (System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitParams) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRoot" Type="System.Configuration.Internal.IInternalConfigRoot" />
        <Parameter Name="hostInitParams" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="configRoot">An &lt;see cref="T:System.Configuration.Internal.IInternalConfigRoot"&gt; object.</param>
        <param name="hostInitParams">A parameter object containing the values used for initializing the configuration host.</param>
        <summary>Initializes the configuration host.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitForConfiguration">
      <MemberSignature Language="C#" Value="public virtual void InitForConfiguration (ref string locationSubPath, out string configPath, out string locationConfigPath, System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitConfigurationParams);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitForConfiguration(string locationSubPath, string configPath, string locationConfigPath, class System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitConfigurationParams) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locationSubPath" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="configPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="locationConfigPath" Type="System.String&amp;" RefType="out" />
        <Parameter Name="configRoot" Type="System.Configuration.Internal.IInternalConfigRoot" />
        <Parameter Name="hostInitConfigurationParams" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="locationSubPath">A string representing a location subpath (passed by reference).</param>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <param name="locationConfigPath">The location configuration path.</param>
        <param name="configRoot">The configuration root element.</param>
        <param name="hostInitConfigurationParams">A parameter object representing the parameters used to initialize the host.</param>
        <summary>Initializes the host for configuration.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAboveApplication">
      <MemberSignature Language="C#" Value="public virtual bool IsAboveApplication (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAboveApplication(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <summary>Returns a value indicating whether the configuration is above the application configuration in the configuration hierarchy.</summary>
        <returns>`true` if the configuration is above the application configuration in the configuration hierarchy; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConfigRecordRequired">
      <MemberSignature Language="C#" Value="public virtual bool IsConfigRecordRequired (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsConfigRecordRequired(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <summary>Returns a value indicating whether a configuration record is required for the host configuration initialization.</summary>
        <returns>`true` if a configuration record is required for the host configuration initialization; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefinitionAllowed">
      <MemberSignature Language="C#" Value="public virtual bool IsDefinitionAllowed (string configPath, System.Configuration.ConfigurationAllowDefinition allowDefinition, System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="allowDefinition" Type="System.Configuration.ConfigurationAllowDefinition" />
        <Parameter Name="allowExeDefinition" Type="System.Configuration.ConfigurationAllowExeDefinition" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <param name="allowDefinition">The &lt;see cref="T:System.Configuration.ConfigurationAllowDefinition"&gt; object.</param>
        <param name="allowExeDefinition">The &lt;see cref="T:System.Configuration.ConfigurationAllowExeDefinition"&gt; object.</param>
        <summary>Restricts or allows definitions in the host configuration.</summary>
        <returns>`true` if the grant or restriction of definitions in the host configuration was successful; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFile">
      <MemberSignature Language="C#" Value="public virtual bool IsFile (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFile(string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <summary>Returns a value indicating whether the file path used by a &lt;see cref="T:System.IO.Stream"&gt; object to read a configuration file is a valid path.</summary>
        <returns>`true` if the path used by a &lt;see cref="T:System.IO.Stream"&gt; object to read a configuration file is a valid path; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullTrustSectionWithoutAptcaAllowed">
      <MemberSignature Language="C#" Value="public virtual bool IsFullTrustSectionWithoutAptcaAllowed (System.Configuration.Internal.IInternalConfigRecord configRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsFullTrustSectionWithoutAptcaAllowed(class System.Configuration.Internal.IInternalConfigRecord configRecord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
      </Parameters>
      <Docs>
        <param name="configRecord">The &lt;see cref="T:System.Configuration.Internal.IInternalConfigRecord"&gt; object.</param>
        <summary>Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the &lt;see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute"&gt; attribute to disable implicit link demands.</summary>
        <returns>`true` if the configuration section requires a fully trusted code access security level and does not allow the &lt;see cref="T:System.Security.AllowPartiallyTrustedCallersAttribute"&gt; attribute to disable implicit link demands; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitDelayed">
      <MemberSignature Language="C#" Value="public virtual bool IsInitDelayed (System.Configuration.Internal.IInternalConfigRecord configRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInitDelayed(class System.Configuration.Internal.IInternalConfigRecord configRecord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
      </Parameters>
      <Docs>
        <param name="configRecord">The &lt;see cref="T:System.Configuration.Internal.IInternalConfigRecord"&gt; object.</param>
        <summary>Returns a value indicating whether the initialization of a configuration object is considered delayed.</summary>
        <returns>`true` if the initialization of a configuration object is considered delayed; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocationApplicable">
      <MemberSignature Language="C#" Value="public virtual bool IsLocationApplicable (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLocationApplicable(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <summary>Returns a value indicating whether the configuration object supports a location tag.</summary>
        <returns>`true` if the configuration object supports a location tag; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRemote">
      <MemberSignature Language="C#" Value="public virtual bool IsRemote { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRemote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the configuration is remote.</summary>
        <value>`true` if the configuration is remote; otherwise, `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecondaryRoot">
      <MemberSignature Language="C#" Value="public virtual bool IsSecondaryRoot (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSecondaryRoot(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <summary>Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root.</summary>
        <returns>`true` if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrustedConfigPath">
      <MemberSignature Language="C#" Value="public virtual bool IsTrustedConfigPath (string configPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTrustedConfigPath(string configPath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <summary>Returns a value indicating whether the configuration path is trusted.</summary>
        <returns>`true` if the configuration path is trusted; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForRead">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenStreamForRead (string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForRead(string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <summary>Opens a &lt;see cref="T:System.IO.Stream"&gt; object to read a configuration file.</summary>
        <returns>Returns the &lt;see cref="T:System.IO.Stream"&gt; object specified by .</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForRead">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenStreamForRead (string streamName, bool assertPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForRead(string streamName, bool assertPermissions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="assertPermissions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <param name="assertPermissions">`true` to assert permissions; otherwise, `false`.</param>
        <summary>Opens a &lt;see cref="T:System.IO.Stream"&gt; object to read a configuration file.</summary>
        <returns>Returns the &lt;see cref="T:System.IO.Stream"&gt; object specified by .</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWrite">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenStreamForWrite (string streamName, string templateStreamName, ref object writeContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForWrite(string streamName, string templateStreamName, object writeContext) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="templateStreamName" Type="System.String" />
        <Parameter Name="writeContext" Type="System.Object&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <param name="templateStreamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object from which file attributes are to be copied as a template.</param>
        <param name="writeContext">The write context of the &lt;see cref="T:System.IO.Stream"&gt; object (passed by reference).</param>
        <summary>Opens a &lt;see cref="T:System.IO.Stream"&gt; object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a &lt;see cref="T:System.IO.Stream"&gt; object to be designated as a template for copying file attributes.</summary>
        <returns>A &lt;see cref="T:System.IO.Stream"&gt; object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenStreamForWrite">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream OpenStreamForWrite (string streamName, string templateStreamName, ref object writeContext, bool assertPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream OpenStreamForWrite(string streamName, string templateStreamName, object writeContext, bool assertPermissions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="templateStreamName" Type="System.String" />
        <Parameter Name="writeContext" Type="System.Object&amp;" RefType="ref" />
        <Parameter Name="assertPermissions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <param name="templateStreamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object from which file attributes are to be copied as a template.</param>
        <param name="writeContext">The write context of the &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on the configuration file (passed by reference).</param>
        <param name="assertPermissions">`true` to assert permissions; otherwise, `false`.</param>
        <summary>Opens a &lt;see cref="T:System.IO.Stream"&gt; object for writing to a configuration file. Allows a &lt;see cref="T:System.IO.Stream"&gt; object to be designated as a template for copying file attributes.</summary>
        <returns>Returns the &lt;see cref="T:System.IO.Stream"&gt; object specified by the  parameter.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchAll">
      <MemberSignature Language="C#" Value="public virtual bool PrefetchAll (string configPath, string streamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrefetchAll(string configPath, string streamName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="streamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <summary>Returns a value indicating whether the entire configuration file could be read by a designated &lt;see cref="T:System.IO.Stream"&gt; object.</summary>
        <returns>`true` if the entire configuration file could be read by the &lt;see cref="T:System.IO.Stream"&gt; object designated by ; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrefetchSection">
      <MemberSignature Language="C#" Value="public virtual bool PrefetchSection (string sectionGroupName, string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PrefetchSection(string sectionGroupName, string sectionName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionGroupName" Type="System.String" />
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionGroupName">A string representing the name of a section group in the configuration file.</param>
        <param name="sectionName">A string representing the name of a section in the configuration file.</param>
        <summary>Instructs the &lt;see cref="T:System.Configuration.Internal.IInternalConfigHost"&gt; object to read a designated section of its associated configuration file.</summary>
        <returns>`true` if a section of the configuration file designated by the  and  parameters can be read by a &lt;see cref="T:System.IO.Stream"&gt; object; otherwise, `false`.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireCompleteInit">
      <MemberSignature Language="C#" Value="public virtual void RequireCompleteInit (System.Configuration.Internal.IInternalConfigRecord configRecord);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequireCompleteInit(class System.Configuration.Internal.IInternalConfigRecord configRecord) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configRecord" Type="System.Configuration.Internal.IInternalConfigRecord" />
      </Parameters>
      <Docs>
        <param name="configRecord">An &lt;see cref="T:System.Configuration.Internal.IInternalConfigRecord"&gt; object.</param>
        <summary>Indicates that a new configuration record requires a complete initialization.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartMonitoringStreamForChanges">
      <MemberSignature Language="C#" Value="public virtual object StartMonitoringStreamForChanges (string streamName, System.Configuration.Internal.StreamChangeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object StartMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="callback" Type="System.Configuration.Internal.StreamChangeCallback" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <param name="callback">A &lt;see cref="T:System.Configuration.Internal.StreamChangeCallback"&gt; object to receive the returned data representing the changes in the configuration file.</param>
        <summary>Instructs the host to monitor an associated &lt;see cref="T:System.IO.Stream"&gt; object for changes in a configuration file.</summary>
        <returns>An &lt;see cref="T:System.Object"&gt; instance containing changed configuration settings.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopMonitoringStreamForChanges">
      <MemberSignature Language="C#" Value="public virtual void StopMonitoringStreamForChanges (string streamName, System.Configuration.Internal.StreamChangeCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopMonitoringStreamForChanges(string streamName, class System.Configuration.Internal.StreamChangeCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="callback" Type="System.Configuration.Internal.StreamChangeCallback" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <param name="callback">A &lt;see cref="T:System.Configuration.Internal.StreamChangeCallback"&gt; object.</param>
        <summary>Instructs the host object to stop monitoring an associated &lt;see cref="T:System.IO.Stream"&gt; object for changes in a configuration file.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeNotifications">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeNotifications { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeNotifications" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the host configuration supports change notifications.</summary>
        <value>`true` if the host supports change notifications; otherwise, `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsLocation">
      <MemberSignature Language="C#" Value="public virtual bool SupportsLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the host configuration supports location tags.</summary>
        <value>`true` if the host supports location tags; otherwise, `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsPath">
      <MemberSignature Language="C#" Value="public virtual bool SupportsPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the host configuration has path support.</summary>
        <value>`true` if the host configuration has path support; otherwise, `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRefresh">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRefresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRefresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the host configuration supports refresh.</summary>
        <value>`true` if the host configuration supports refresh; otherwise, `false`.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyDefinitionAllowed">
      <MemberSignature Language="C#" Value="public virtual void VerifyDefinitionAllowed (string configPath, System.Configuration.ConfigurationAllowDefinition allowDefinition, System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition, System.Configuration.Internal.IConfigErrorInfo errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VerifyDefinitionAllowed(string configPath, valuetype System.Configuration.ConfigurationAllowDefinition allowDefinition, valuetype System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition, class System.Configuration.Internal.IConfigErrorInfo errorInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configPath" Type="System.String" />
        <Parameter Name="allowDefinition" Type="System.Configuration.ConfigurationAllowDefinition" />
        <Parameter Name="allowExeDefinition" Type="System.Configuration.ConfigurationAllowExeDefinition" />
        <Parameter Name="errorInfo" Type="System.Configuration.Internal.IConfigErrorInfo" />
      </Parameters>
      <Docs>
        <param name="configPath">A string representing the path to a configuration file.</param>
        <param name="allowDefinition">An &lt;xref:System.Configuration.SectionInformation.AllowDefinition%2A&gt; object.</param>
        <param name="allowExeDefinition">A &lt;see cref="T:System.Configuration.ConfigurationAllowExeDefinition"&gt; object</param>
        <param name="errorInfo">An &lt;see cref="T:System.Configuration.Internal.IConfigErrorInfo"&gt; object.</param>
        <summary>Verifies that a configuration definition is allowed for a configuration record.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCompleted">
      <MemberSignature Language="C#" Value="public virtual void WriteCompleted (string streamName, bool success, object writeContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCompleted(string streamName, bool success, object writeContext) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="success" Type="System.Boolean" />
        <Parameter Name="writeContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <param name="success">`true` if writing to the configuration file completed successfully; otherwise, `false`.</param>
        <param name="writeContext">The write context of the &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on the configuration file.</param>
        <summary>Indicates that all writing to the configuration file has completed.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteCompleted">
      <MemberSignature Language="C#" Value="public virtual void WriteCompleted (string streamName, bool success, object writeContext, bool assertPermissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCompleted(string streamName, bool success, object writeContext, bool assertPermissions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamName" Type="System.String" />
        <Parameter Name="success" Type="System.Boolean" />
        <Parameter Name="writeContext" Type="System.Object" />
        <Parameter Name="assertPermissions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamName">The name of a &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on a configuration file.</param>
        <param name="success">`true` to indicate that writing was completed successfully; otherwise, `false`.</param>
        <param name="writeContext">The write context of the &lt;see cref="T:System.IO.Stream"&gt; object performing I/O tasks on the configuration file.</param>
        <param name="assertPermissions">`true` to assert permissions; otherwise, `false`.</param>
        <summary>Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>